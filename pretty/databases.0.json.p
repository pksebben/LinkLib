{
    "anchor": 0,
    "found_anchor": false,
    "found_newest": true,
    "found_oldest": true,
    "history_limited": false,
    "messages": [
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/ff393e078e14579bad5ec4182dc0263275387a30?x=x&version=1",
            "client": "website",
            "content": "<p>I use git to version control my code. How do people version control their databases? In particular I'm talking about a) the SQL queries that you ran and b) the actual database. I'm guessing the answer to b) involves making backups, although pretty soon making multiple backups will get messy/take up space. At the moment my database is on a server locally on my machine; can I just push it to github?</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 51719608,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "taylorxlin@gmail.com",
            "sender_full_name": "Lin Taylor (she) (W1'15)",
            "sender_id": 8857,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "Version control for databases",
            "submessages": [],
            "timestamp": 1451928335,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/28427e9335cecebc2d8cadc90c1bd46516bd589f?x=x&version=3",
            "client": "website",
            "content": "<p>It's not quite version control, but there's a pattern called MIgrations that you might want to look into</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 51719656,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "darthmincho@gmail.com",
            "sender_full_name": "Carlos Rey (SP2'15)",
            "sender_id": 7875,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "Version control for databases",
            "submessages": [],
            "timestamp": 1451928398,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/28427e9335cecebc2d8cadc90c1bd46516bd589f?x=x&version=3",
            "client": "website",
            "content": "<p>It basically abstracts away DB operations in code and also contains a way of reverting them</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 51719667,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "darthmincho@gmail.com",
            "sender_full_name": "Carlos Rey (SP2'15)",
            "sender_id": 7875,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "Version control for databases",
            "submessages": [],
            "timestamp": 1451928422,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/28427e9335cecebc2d8cadc90c1bd46516bd589f?x=x&version=3",
            "client": "website",
            "content": "<p>So you can go back and forth in your DB history essentially building layer upon layer of Migrations</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 51719671,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "darthmincho@gmail.com",
            "sender_full_name": "Carlos Rey (SP2'15)",
            "sender_id": 7875,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "Version control for databases",
            "submessages": [],
            "timestamp": 1451928438,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/28427e9335cecebc2d8cadc90c1bd46516bd589f?x=x&version=3",
            "client": "website",
            "content": "<p>Django and Ruby on Rails have migrations built right in, not sure if there are standalone DB migration engines out there</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 51719687,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "darthmincho@gmail.com",
            "sender_full_name": "Carlos Rey (SP2'15)",
            "sender_id": 7875,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "Version control for databases",
            "submessages": [],
            "timestamp": 1451928477,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/ff393e078e14579bad5ec4182dc0263275387a30?x=x&version=1",
            "client": "website",
            "content": "<p>neat, thanks <span class=\"user-mention\" data-user-email=\"darthmincho@gmail.com\">@Carlos Flores (SP2'15)</span> , I'll look into it</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 51719728,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "taylorxlin@gmail.com",
            "sender_full_name": "Lin Taylor (she) (W1'15)",
            "sender_id": 8857,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "Version control for databases",
            "submessages": [],
            "timestamp": 1451928515,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/ff393e078e14579bad5ec4182dc0263275387a30?x=x&version=1",
            "client": "website",
            "content": "<p>right now I'm using Postgres with postgis</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 51719731,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "taylorxlin@gmail.com",
            "sender_full_name": "Lin Taylor (she) (W1'15)",
            "sender_id": 8857,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "Version control for databases",
            "submessages": [],
            "timestamp": 1451928528,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/9e0096ad9f376eb9f609372bc87542e4?d=identicon&version=1",
            "client": "desktop app Mac 0.5.0",
            "content": "<p>yeah, migrations are good. as for backing up the data, well, it depends on a lot of things. I'd be happy to talk about this next time I'm in the space (likely tonight).</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 51806597,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "tehgeekmeister@gmail.com",
            "sender_full_name": "Sophie Ren\u00e9e Smithburg (she) (F2'15)",
            "sender_id": 8690,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "Version control for databases",
            "submessages": [],
            "timestamp": 1452098552,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/9e0096ad9f376eb9f609372bc87542e4?d=identicon&version=1",
            "client": "desktop app Mac 0.5.0",
            "content": "<p>in general the rule of thumb I work from is that you want to have your data flow be a directed acyclic graph.</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 51806665,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "tehgeekmeister@gmail.com",
            "sender_full_name": "Sophie Ren\u00e9e Smithburg (she) (F2'15)",
            "sender_id": 8690,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "Version control for databases",
            "submessages": [],
            "timestamp": 1452098649,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/9e0096ad9f376eb9f609372bc87542e4?d=identicon&version=1",
            "client": "desktop app Mac 0.5.0",
            "content": "<p>also, you generally *don't* version control data, unless it is small and pretty static.</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 51806685,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "tehgeekmeister@gmail.com",
            "sender_full_name": "Sophie Ren\u00e9e Smithburg (she) (F2'15)",
            "sender_id": 8690,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "Version control for databases",
            "submessages": [],
            "timestamp": 1452098686,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/ff393e078e14579bad5ec4182dc0263275387a30?x=x&version=1",
            "client": "website",
            "content": "<p><span class=\"user-mention\" data-user-email=\"tehgeekmeister@gmail.com\">@Ezekiel Benjamin Smithburg (F2'15)</span> yeah, would be good to chat about this if you're around tonight!</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 51806850,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "taylorxlin@gmail.com",
            "sender_full_name": "Lin Taylor (she) (W1'15)",
            "sender_id": 8857,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "Version control for databases",
            "submessages": [],
            "timestamp": 1452098946,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/3970ddf2027b9b83969a233e2b389a84?d=identicon&version=1",
            "client": "desktop app Mac 0.5.1",
            "content": "<p><span class=\"user-mention\" data-user-email=\"taylorxlin@gmail.com\">@Lin Taylor (W1'15)</span> <span class=\"user-mention\" data-user-email=\"tehgeekmeister@gmail.com\">@Ezekiel Benjamin Smithburg (F2'15)</span>  I've spent way too much time upgrading Oracle-based enterprise applications.  The database schema and static application data were maintained as pl-sql scripts.  Version migration was managed via 'migration scripts' which add/modify/remove indexes, stored procedures, reference data, tables, columns, etc.  Sometimes user data would be modified.  For example, an exchange rate was replaced with its inverse because the application changed the way it handled them.</p>\n<p>These migration scripts were hand coded and version controlled.  That's the only database version control I've experienced.</p>\n<p>I've also seen how Ruby on Rails migrations work.  Once you're upgrading an existing installation, rather than developing a greenfield new app, the framework generated migration scripts start to need hand-coding as well.  See this bug I encountered in a migration: <a href=\"https://code.google.com/p/redmine-dmsf/issues/detail?id=194\" target=\"_blank\" title=\"https://code.google.com/p/redmine-dmsf/issues/detail?id=194\">https://code.google.com/p/redmine-dmsf/issues/detail?id=194</a> </p>\n<p>I've spent some time thinking about how to make WordPress support migrations - see: <a href=\"http://wordpress.stackexchange.com/questions/24314/wordpress-database-synch-between-dev-and-prod/24982#24982\" target=\"_blank\" title=\"http://wordpress.stackexchange.com/questions/24314/wordpress-database-synch-between-dev-and-prod/24982#24982\">http://wordpress.stackexchange.com/questions/24314/wordpress-database-synch-between-dev-and-prod/24982#24982</a> -- something that proved intractable at the time -- as tools didn't exist and conventions couldn't be enforced.  Perhaps that's changed in the interim.</p>\n<p>I'm happy to discuss this topic any time.  Especially if discussing new approaches, like <a href=\"http://www.liquibase.org\" target=\"_blank\" title=\"http://www.liquibase.org\">http://www.liquibase.org</a> - \"Source Control for your Database\"</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 51808636,
            "is_me_message": false,
            "last_edit_timestamp": 1452101944,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "pauli.price@gmail.com",
            "sender_full_name": "Pauli Price (W1'15)",
            "sender_id": 8860,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "Version control for databases",
            "submessages": [],
            "timestamp": 1452101876,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/ff393e078e14579bad5ec4182dc0263275387a30?x=x&version=1",
            "client": "website",
            "content": "<p>Thanks for the info, Pauli!</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 51822644,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "taylorxlin@gmail.com",
            "sender_full_name": "Lin Taylor (she) (W1'15)",
            "sender_id": 8857,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "Version control for databases",
            "submessages": [],
            "timestamp": 1452124526,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/9e0096ad9f376eb9f609372bc87542e4?d=identicon&version=1",
            "client": "desktop app Mac 0.5.0",
            "content": "<p><span class=\"user-mention\" data-user-email=\"taylorxlin@gmail.com\">@Lin Taylor (W1'15)</span> around again today if you want to chat. probably once on the weekend as well, but no clue when.</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 51857030,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "tehgeekmeister@gmail.com",
            "sender_full_name": "Sophie Ren\u00e9e Smithburg (she) (F2'15)",
            "sender_id": 8690,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "Version control for databases",
            "submessages": [],
            "timestamp": 1452188746,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/ff393e078e14579bad5ec4182dc0263275387a30?x=x&version=1",
            "client": "website",
            "content": "<p>That would be great. I'm also having some trouble with my postgis db that I could do with your help on. When is good for you?</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 51857288,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "taylorxlin@gmail.com",
            "sender_full_name": "Lin Taylor (she) (W1'15)",
            "sender_id": 8857,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "Version control for databases",
            "submessages": [],
            "timestamp": 1452189303,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/9e0096ad9f376eb9f609372bc87542e4?d=identicon&version=1",
            "client": "desktop app Mac 0.5.0",
            "content": "<p>any time!</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 51857430,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "tehgeekmeister@gmail.com",
            "sender_full_name": "Sophie Ren\u00e9e Smithburg (she) (F2'15)",
            "sender_id": 8690,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "Version control for databases",
            "submessages": [],
            "timestamp": 1452189598,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/9e0096ad9f376eb9f609372bc87542e4?d=identicon&version=1",
            "client": "desktop app Mac 0.5.0",
            "content": "<p>literally even right now!</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 51857438,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "tehgeekmeister@gmail.com",
            "sender_full_name": "Sophie Ren\u00e9e Smithburg (she) (F2'15)",
            "sender_id": 8690,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "Version control for databases",
            "submessages": [],
            "timestamp": 1452189604,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/ff393e078e14579bad5ec4182dc0263275387a30?x=x&version=1",
            "client": "website",
            "content": "<p>I'm having trouble interpreting some data I've loaded into a PostGIS database. I scraped rasters from <a href=\"http://neo.sci.gsfc.nasa.gov/view.php?datasetId=TRMM_3B43D&amp;date=2015-09-01\" target=\"_blank\" title=\"http://neo.sci.gsfc.nasa.gov/view.php?datasetId=TRMM_3B43D&amp;date=2015-09-01\">here</a> and converted to sql files using raster2pgsql. I'm now using PostGIS's special functions to query the database, to return rainfall data from a particular point. However, it seems to be that whatever I get returned is in the range 0 to 255. Some of the points only have values of 255, for any day. I am guessing that this is something to do with 8-bit colour graphics having a range from 0-255. Does anyone have any idea of how to convert what I have to the actual rainfall value? I can't find any kind of value to rainfall mapping system on the site itself, but maybe I'm missing something. </p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 52160266,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "taylorxlin@gmail.com",
            "sender_full_name": "Lin Taylor (she) (W1'15)",
            "sender_id": 8857,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "querying GIS raster data",
            "submessages": [],
            "timestamp": 1452807375,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/ff393e078e14579bad5ec4182dc0263275387a30?x=x&version=1",
            "client": "website",
            "content": "<p><span class=\"user-mention\" data-user-email=\"harry@asdfjkltech.com\">@Harry Truong (F2'15)</span> apparently you know about this stuff?</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 52168661,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "taylorxlin@gmail.com",
            "sender_full_name": "Lin Taylor (she) (W1'15)",
            "sender_id": 8857,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "querying GIS raster data",
            "submessages": [],
            "timestamp": 1452821329,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/ff393e078e14579bad5ec4182dc0263275387a30?x=x&version=1",
            "client": "website",
            "content": "<p>nm, I found the <a href=\"http://gis.stackexchange.com/questions/176923/why-is-raster-data-in-range-0-255-in-postgis\" target=\"_blank\" title=\"http://gis.stackexchange.com/questions/176923/why-is-raster-data-in-range-0-255-in-postgis\">answer</a></p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 52171259,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "taylorxlin@gmail.com",
            "sender_full_name": "Lin Taylor (she) (W1'15)",
            "sender_id": 8857,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "querying GIS raster data",
            "submessages": [],
            "timestamp": 1452826786,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/70e552e4774d597c7fa29c57263af42d?d=identicon&version=1",
            "client": "desktop app Mac 0.5.0",
            "content": "<p>Looking for some favorite Postgres learning resources - especially anything related to administration/maintenance/query optimization. Cheers </p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 52205675,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "liamgriffiths+hackerschool@gmail.com",
            "sender_full_name": "Liam Griffiths (F'13)",
            "sender_id": 2873,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "Postgres",
            "submessages": [],
            "timestamp": 1452892587,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/5aac52dfb927229e729a553ff79edd8bf8cb9466?x=x&version=1",
            "client": "website",
            "content": "<p><span class=\"user-mention\" data-user-email=\"liamgriffiths+hackerschool@gmail.com\">@Liam Griffiths (F'13)</span> When setting Postgres up for personal stuff I found these useful<br>\n<a href=\"https://www.digitalocean.com/community/tutorials/how-to-install-and-use-postgresql-on-ubuntu-14-04\" target=\"_blank\" title=\"https://www.digitalocean.com/community/tutorials/how-to-install-and-use-postgresql-on-ubuntu-14-04\">https://www.digitalocean.com/community/tutorials/how-to-install-and-use-postgresql-on-ubuntu-14-04</a><br>\n<a href=\"https://www.digitalocean.com/community/tutorials/how-to-secure-postgresql-on-an-ubuntu-vps\" target=\"_blank\" title=\"https://www.digitalocean.com/community/tutorials/how-to-secure-postgresql-on-an-ubuntu-vps\">https://www.digitalocean.com/community/tutorials/how-to-secure-postgresql-on-an-ubuntu-vps</a><br>\n<a href=\"https://www.digitalocean.com/community/tutorials/how-to-use-roles-and-manage-grant-permissions-in-postgresql-on-a-vps--2\" target=\"_blank\" title=\"https://www.digitalocean.com/community/tutorials/how-to-use-roles-and-manage-grant-permissions-in-postgresql-on-a-vps--2\">https://www.digitalocean.com/community/tutorials/how-to-use-roles-and-manage-grant-permissions-in-postgresql-on-a-vps--2</a></p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 52276970,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "qqrsmith@gmail.com",
            "sender_full_name": "Russell Smith (W'13)",
            "sender_id": 854,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "Postgres",
            "submessages": [],
            "timestamp": 1453070941,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/5aac52dfb927229e729a553ff79edd8bf8cb9466?x=x&version=1",
            "client": "website",
            "content": "<p>When doing query optimizations at work, I've found the database-agnostic and MySQL sections of <a href=\"http://use-the-index-luke.com/\" target=\"_blank\" title=\"http://use-the-index-luke.com/\">http://use-the-index-luke.com/</a> to be very helpful. Haven't read the Postgres sections but they're probably good too.</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 52277020,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "qqrsmith@gmail.com",
            "sender_full_name": "Russell Smith (W'13)",
            "sender_id": 854,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "Postgres",
            "submessages": [],
            "timestamp": 1453071037,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/5aac52dfb927229e729a553ff79edd8bf8cb9466?x=x&version=1",
            "client": "website",
            "content": "<p>I'm also curious about this if anyone else has input on good Postgres resources</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 52277071,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "qqrsmith@gmail.com",
            "sender_full_name": "Russell Smith (W'13)",
            "sender_id": 854,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "Postgres",
            "submessages": [],
            "timestamp": 1453071217,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/70e552e4774d597c7fa29c57263af42d?d=identicon&version=1",
            "client": "desktop app Mac 0.5.0",
            "content": "<p><span class=\"user-mention\" data-user-email=\"qqrsmith@gmail.com\">@Russell Smith (W'13)</span> thanks!</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 52316678,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "liamgriffiths+hackerschool@gmail.com",
            "sender_full_name": "Liam Griffiths (F'13)",
            "sender_id": 2873,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "Postgres",
            "submessages": [],
            "timestamp": 1453161510,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/ff393e078e14579bad5ec4182dc0263275387a30?x=x&version=1",
            "client": "website",
            "content": "<p>I want to add a histogram to my <a href=\"http://rainfall-data.com:5000/\" target=\"_blank\" title=\"http://rainfall-data.com:5000/\">rainfall app</a> that gives you the distribution of rainfall for all 17 years worth of data at that particular spot like this: <a href=\"/user_uploads/13/WhfqJgISQ55cGt_mujmOCwaT/pasted_image.png\" target=\"_blank\" title=\"pasted_image.png\">pasted image</a> </p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/13/WhfqJgISQ55cGt_mujmOCwaT/pasted_image.png\" target=\"_blank\" title=\"pasted_image.png\"><img src=\"/user_uploads/13/WhfqJgISQ55cGt_mujmOCwaT/pasted_image.png\"></a></div>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 53544683,
            "is_me_message": false,
            "last_edit_timestamp": 1455823191,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "taylorxlin@gmail.com",
            "sender_full_name": "Lin Taylor (she) (W1'15)",
            "sender_id": 8857,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "speeding up a big 'ole query",
            "submessages": [],
            "timestamp": 1455823080,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/ff393e078e14579bad5ec4182dc0263275387a30?x=x&version=1",
            "client": "website",
            "content": "<p>The thing is pulling a big query like this is sometimes really slow</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 53544739,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "taylorxlin@gmail.com",
            "sender_full_name": "Lin Taylor (she) (W1'15)",
            "sender_id": 8857,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "speeding up a big 'ole query",
            "submessages": [],
            "timestamp": 1455823123,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/ff393e078e14579bad5ec4182dc0263275387a30?x=x&version=1",
            "client": "website",
            "content": "<p>I'm already using an index. Does anyone have any suggestions on how to speed things up?</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 53544746,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "taylorxlin@gmail.com",
            "sender_full_name": "Lin Taylor (she) (W1'15)",
            "sender_id": 8857,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "speeding up a big 'ole query",
            "submessages": [],
            "timestamp": 1455823150,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/ff393e078e14579bad5ec4182dc0263275387a30?x=x&version=1",
            "client": "website",
            "content": "<p>Here's how my query looks at the moment (I'm using postGIS): </p>\n<p><code>SELECT forecast_date, ST_nearestvalue(rast,ST_geomfromtext('Point(%s %s)',4326)) \n   FROM rainfall.rasters \n   WHERE forecast_date &gt;= %s\n   AND forecast_date &lt;= %s \n   AND ST_intersects(rast, ST_geomfromtext('Point(%s %s)',4326)) \n   ORDER BY forecast_date</code></p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 53544821,
            "is_me_message": false,
            "last_edit_timestamp": 1455823328,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "taylorxlin@gmail.com",
            "sender_full_name": "Lin Taylor (she) (W1'15)",
            "sender_id": 8857,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "speeding up a big 'ole query",
            "submessages": [],
            "timestamp": 1455823266,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/3ca604eb0c0cfa22b4a10fc739c056c8?d=identicon&version=1",
            "client": "website",
            "content": "<p>Dumb question: is the index on the particular spots?</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 53544874,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "lukeadba@gmail.com",
            "sender_full_name": "Luke Barone-Adesi (he) (F'13)",
            "sender_id": 2903,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "speeding up a big 'ole query",
            "submessages": [],
            "timestamp": 1455823331,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/ff393e078e14579bad5ec4182dc0263275387a30?x=x&version=1",
            "client": "website",
            "content": "<p>what do you mean by particular spots? It is a GiST index, I think it only applies to my raster column (GIS data)</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 53544879,
            "is_me_message": false,
            "last_edit_timestamp": 1455823384,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "taylorxlin@gmail.com",
            "sender_full_name": "Lin Taylor (she) (W1'15)",
            "sender_id": 8857,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "speeding up a big 'ole query",
            "submessages": [],
            "timestamp": 1455823348,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/3ca604eb0c0cfa22b4a10fc739c056c8?d=identicon&version=1",
            "client": "website",
            "content": "<p>Well, you said that you're getting the distribution of rainfall for particular spots.</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 53544900,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "lukeadba@gmail.com",
            "sender_full_name": "Luke Barone-Adesi (he) (F'13)",
            "sender_id": 2903,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "speeding up a big 'ole query",
            "submessages": [],
            "timestamp": 1455823392,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/3ca604eb0c0cfa22b4a10fc739c056c8?d=identicon&version=1",
            "client": "website",
            "content": "<p>Hmm. I'd think that the ST_intersects might kinda defeat the point of having an index, but I could be entirely wrong.</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 53544905,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "lukeadba@gmail.com",
            "sender_full_name": "Luke Barone-Adesi (he) (F'13)",
            "sender_id": 2903,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "speeding up a big 'ole query",
            "submessages": [],
            "timestamp": 1455823413,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/1c860d00a4cedc01147fbb2e0533c37b?d=identicon&version=1",
            "client": "desktop app Mac 0.5.1",
            "content": "<p><span class=\"user-mention\" data-user-email=\"taylorxlin@gmail.com\">@Lin Taylor (W1'15)</span> Can you show me an explain of your query?</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 53544906,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "corydominguez@gmail.com",
            "sender_full_name": "Cory Michael Dominguez (he) (SP1'15)",
            "sender_id": 7625,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "speeding up a big 'ole query",
            "submessages": [],
            "timestamp": 1455823428,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/ff393e078e14579bad5ec4182dc0263275387a30?x=x&version=1",
            "client": "website",
            "content": "<p>Oh I see. At the moment I am querying just for one spot</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 53544911,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "taylorxlin@gmail.com",
            "sender_full_name": "Lin Taylor (she) (W1'15)",
            "sender_id": 8857,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "speeding up a big 'ole query",
            "submessages": [],
            "timestamp": 1455823431,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/ff393e078e14579bad5ec4182dc0263275387a30?x=x&version=1",
            "client": "website",
            "content": "<p><span class=\"user-mention\" data-user-email=\"corydominguez@gmail.com\">@Cory Dominguez (SP1'15)</span> you mean a walkthrough?</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 53544956,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "taylorxlin@gmail.com",
            "sender_full_name": "Lin Taylor (she) (W1'15)",
            "sender_id": 8857,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "speeding up a big 'ole query",
            "submessages": [],
            "timestamp": 1455823484,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/ff393e078e14579bad5ec4182dc0263275387a30?x=x&version=1",
            "client": "website",
            "content": "<p><code>SELECT forecast_date, ST_nearestvalue(rast,ST_geomfromtext('Point(%s %s)',4326))</code></p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 53544969,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "taylorxlin@gmail.com",
            "sender_full_name": "Lin Taylor (she) (W1'15)",
            "sender_id": 8857,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "speeding up a big 'ole query",
            "submessages": [],
            "timestamp": 1455823506,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/1c860d00a4cedc01147fbb2e0533c37b?d=identicon&version=1",
            "client": "desktop app Mac 0.5.1",
            "content": "<p>No literally run EXPLAIN {Your Query} and see what it returns</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 53544972,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "corydominguez@gmail.com",
            "sender_full_name": "Cory Michael Dominguez (he) (SP1'15)",
            "sender_id": 7625,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "speeding up a big 'ole query",
            "submessages": [],
            "timestamp": 1455823518,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/ff393e078e14579bad5ec4182dc0263275387a30?x=x&version=1",
            "client": "website",
            "content": "<p>Oh I see</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 53544980,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "taylorxlin@gmail.com",
            "sender_full_name": "Lin Taylor (she) (W1'15)",
            "sender_id": 8857,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "speeding up a big 'ole query",
            "submessages": [],
            "timestamp": 1455823534,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/1c860d00a4cedc01147fbb2e0533c37b?d=identicon&version=1",
            "client": "desktop app Mac 0.5.1",
            "content": "<p>it will tell you where you are having problems</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 53544989,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "corydominguez@gmail.com",
            "sender_full_name": "Cory Michael Dominguez (he) (SP1'15)",
            "sender_id": 7625,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "speeding up a big 'ole query",
            "submessages": [],
            "timestamp": 1455823555,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/ff393e078e14579bad5ec4182dc0263275387a30?x=x&version=1",
            "client": "website",
            "content": "<p>For more explanation - the query I showed is copy pasted from my Python code, hence the <code>%s</code></p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 53545029,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "taylorxlin@gmail.com",
            "sender_full_name": "Lin Taylor (she) (W1'15)",
            "sender_id": 8857,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "speeding up a big 'ole query",
            "submessages": [],
            "timestamp": 1455823572,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/ff393e078e14579bad5ec4182dc0263275387a30?x=x&version=1",
            "client": "website",
            "content": "<p>(I have stupidly decided to post this question just before I have to go out, so I might  have to get back to you on the EXPLAIN <span class=\"user-mention\" data-user-email=\"corydominguez@gmail.com\">@Cory Dominguez (SP1'15)</span> ) </p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 53545100,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "taylorxlin@gmail.com",
            "sender_full_name": "Lin Taylor (she) (W1'15)",
            "sender_id": 8857,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "speeding up a big 'ole query",
            "submessages": [],
            "timestamp": 1455823701,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/1c860d00a4cedc01147fbb2e0533c37b?d=identicon&version=1",
            "client": "desktop app Mac 0.5.1",
            "content": "<p>Capture the sql from one of your big queries then run it in the database client with the EXPLAIN prefix, it will return fast with its plan on how to run the query, what tables and indicies it will use and how many rows it has to look at.</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 53545101,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "corydominguez@gmail.com",
            "sender_full_name": "Cory Michael Dominguez (he) (SP1'15)",
            "sender_id": 7625,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "speeding up a big 'ole query",
            "submessages": [],
            "timestamp": 1455823707,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/1c860d00a4cedc01147fbb2e0533c37b?d=identicon&version=1",
            "client": "desktop app Mac 0.5.1",
            "content": "<p>Sure np, I get alerts on the Databases stream just hit me back anytime. Or PM me and I'll get an email. :)</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 53545118,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "corydominguez@gmail.com",
            "sender_full_name": "Cory Michael Dominguez (he) (SP1'15)",
            "sender_id": 7625,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "speeding up a big 'ole query",
            "submessages": [],
            "timestamp": 1455823761,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/ff393e078e14579bad5ec4182dc0263275387a30?x=x&version=1",
            "client": "website",
            "content": "<p>Thanks <span class=\"user-mention\" data-user-email=\"corydominguez@gmail.com\">@Cory Dominguez (SP1'15)</span> I didn't know about EXPLAIN, I'll run that when I get back and let you know :)</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 53545166,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "taylorxlin@gmail.com",
            "sender_full_name": "Lin Taylor (she) (W1'15)",
            "sender_id": 8857,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "speeding up a big 'ole query",
            "submessages": [],
            "timestamp": 1455823810,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/1c860d00a4cedc01147fbb2e0533c37b?d=identicon&version=1",
            "client": "desktop app Mac 0.5.1",
            "content": "<p>Sure!</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 53545196,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "corydominguez@gmail.com",
            "sender_full_name": "Cory Michael Dominguez (he) (SP1'15)",
            "sender_id": 7625,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "speeding up a big 'ole query",
            "submessages": [],
            "timestamp": 1455823853,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/9e0096ad9f376eb9f609372bc87542e4?d=identicon&version=1",
            "client": "desktop app Mac 0.5.0",
            "content": "<p><img alt=\":thumbsup:\" class=\"emoji\" src=\"static/third/gemoji/images/emoji/thumbsup.png\" title=\":thumbsup:\"> <img alt=\":thumbsup:\" class=\"emoji\" src=\"static/third/gemoji/images/emoji/thumbsup.png\" title=\":thumbsup:\"> <img alt=\":thumbsup:\" class=\"emoji\" src=\"static/third/gemoji/images/emoji/thumbsup.png\" title=\":thumbsup:\"> <img alt=\":thumbsup:\" class=\"emoji\" src=\"static/third/gemoji/images/emoji/thumbsup.png\" title=\":thumbsup:\">  on explain, it's definitely the way to go. I'm very curious to see the output of it on your query, because I honestly am entirely unsure how that query could even be executed, and that is not a normal thing for me anymore!</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 53649916,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "tehgeekmeister@gmail.com",
            "sender_full_name": "Sophie Ren\u00e9e Smithburg (she) (F2'15)",
            "sender_id": 8690,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "speeding up a big 'ole query",
            "submessages": [],
            "timestamp": 1456073618,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/9e0096ad9f376eb9f609372bc87542e4?d=identicon&version=1",
            "client": "desktop app Mac 0.5.0",
            "content": "<p>LEARNING THINGS IS FUN</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 53649917,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "tehgeekmeister@gmail.com",
            "sender_full_name": "Sophie Ren\u00e9e Smithburg (she) (F2'15)",
            "sender_id": 8690,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "speeding up a big 'ole query",
            "submessages": [],
            "timestamp": 1456073624,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/ff393e078e14579bad5ec4182dc0263275387a30?x=x&version=1",
            "client": "website",
            "content": "<p>Here's the explain query:<br>\n<a href=\"/user_uploads/13/seEmLT5uLQr0-1iH66xlMDQw/screen-shot-2016-02-21-at-125615.png\" target=\"_blank\" title=\"screen-shot-2016-02-21-at-125615.png\">screen-shot-2016-02-21-at-125615.png</a> </p>\n<p>and the output:<br>\n<a href=\"/user_uploads/13/76MOlMvTgaMX3jL0OvVLZ1rv/screen-shot-2016-02-21-at-125502.png\" target=\"_blank\" title=\"screen-shot-2016-02-21-at-125502.png\">screen-shot-2016-02-21-at-125502.png</a> </p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/13/76MOlMvTgaMX3jL0OvVLZ1rv/screen-shot-2016-02-21-at-125502.png\" target=\"_blank\" title=\"screen-shot-2016-02-21-at-125502.png\"><img src=\"/user_uploads/13/76MOlMvTgaMX3jL0OvVLZ1rv/screen-shot-2016-02-21-at-125502.png\"></a></div><div class=\"message_inline_image\"><a href=\"/user_uploads/13/seEmLT5uLQr0-1iH66xlMDQw/screen-shot-2016-02-21-at-125615.png\" target=\"_blank\" title=\"screen-shot-2016-02-21-at-125615.png\"><img src=\"/user_uploads/13/seEmLT5uLQr0-1iH66xlMDQw/screen-shot-2016-02-21-at-125615.png\"></a></div>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 53653594,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "taylorxlin@gmail.com",
            "sender_full_name": "Lin Taylor (she) (W1'15)",
            "sender_id": 8857,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "speeding up a big 'ole query",
            "submessages": [],
            "timestamp": 1456083241,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/1c860d00a4cedc01147fbb2e0533c37b?d=identicon&version=1",
            "client": "desktop app Mac 0.5.1",
            "content": "<p>OK this is really interesting because I am not familiar with Explains on postgres. Looks like there is a further command that you should try: </p>\n<div class=\"codehilite\"><pre>EXPLAIN ANALYZE {Query}\n</pre></div>\n\n\n<p>This will explain, then actually run your query and return a bunch more useful information. I have been learning a lot from this pdf <a href=\"http://www.dalibo.org/_media/understanding_explain.pdf\" target=\"_blank\" title=\"http://www.dalibo.org/_media/understanding_explain.pdf\">http://www.dalibo.org/_media/understanding_explain.pdf</a></p>\n<p>So I am still trying to grok total cost but I can tell yours is really high.</p>\n<p>I have some further questions:</p>\n<ul>\n<li>Can you show me the ddl for the table, using the command <code>\\d+ rainfall.rasters</code></li>\n<li>Do you have an index on the forecast_date?</li>\n<li>Is gist_index something you made?</li>\n</ul>\n<p>Actually the second and third questions will be answered by the first.</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 53691506,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "corydominguez@gmail.com",
            "sender_full_name": "Cory Michael Dominguez (he) (SP1'15)",
            "sender_id": 7625,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "speeding up a big 'ole query",
            "submessages": [],
            "timestamp": 1456169217,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/1c860d00a4cedc01147fbb2e0533c37b?d=identicon&version=1",
            "client": "desktop app Mac 0.5.1",
            "content": "<p>Oh and FYI you can past these outputs surrounded by three back tics on each side and it will format it nicely </p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 53691543,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "corydominguez@gmail.com",
            "sender_full_name": "Cory Michael Dominguez (he) (SP1'15)",
            "sender_id": 7625,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "speeding up a big 'ole query",
            "submessages": [],
            "timestamp": 1456169285,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/ff393e078e14579bad5ec4182dc0263275387a30?x=x&version=1",
            "client": "website",
            "content": "<p>Alrighty, here's the output of EXPLAIN ANALYZE:</p>\n<div class=\"codehilite\"><pre>+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n| QUERY PLAN\n|------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n| Sort  (cost=2110367.41..2110834.19 rows=186710 width=389) (actual time=1159.315..1159.759 rows=6452 loops=1)\n|   Sort Key: forecast_date\n|   Sort Method: quicksort  Memory: 697kB\n|   -&gt;  Index Scan using gist_index on rasters  (cost=1.16..2060833.54 rows=186710 width=389) (actual time=18.416..1077.549 rows=6452 loops=1)\n|         Index Cond: ((rast)::geometry &amp;&amp; &#39;0101000020E61000006666666666E662408FC2F5285CEF40C0&#39;::geometry)\n|         Filter: ((forecast_date &gt;= &#39;1998-01-01&#39;::text) AND (forecast_date &lt;= &#39;2015-09-01&#39;::text) AND _st_intersects(&#39;0101000020E61000006666666666E662408FC2F5285CEF40C0&#39;::geometry,, rast, NULL::integer))\n|         Rows Removed by Filter: 122\n| Planning time: 6.497 ms\n| Execution time: 1160.446 ms\n+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n</pre></div>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 53693140,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "taylorxlin@gmail.com",
            "sender_full_name": "Lin Taylor (she) (W1'15)",
            "sender_id": 8857,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "speeding up a big 'ole query",
            "submessages": [],
            "timestamp": 1456171650,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/ff393e078e14579bad5ec4182dc0263275387a30?x=x&version=1",
            "client": "website",
            "content": "<p>this is super cool. I can see what sort method was used!</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 53693144,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "taylorxlin@gmail.com",
            "sender_full_name": "Lin Taylor (she) (W1'15)",
            "sender_id": 8857,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "speeding up a big 'ole query",
            "submessages": [],
            "timestamp": 1456171681,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/ff393e078e14579bad5ec4182dc0263275387a30?x=x&version=1",
            "client": "website",
            "content": "<p>and the ddl:</p>\n<div class=\"codehilite\"><pre>+---------------+---------+-----------------------------------------------------------------+-----------+----------------+---------------+\n| Column        | Type    | Modifiers                                                       | Storage   |   Stats target |   Description |\n|---------------+---------+-----------------------------------------------------------------+-----------+----------------+---------------|\n| rid           | integer |  not null default nextval(&#39;rainfall.rasters_rid_seq&#39;::regclass) | plain     |         &lt;null&gt; |        &lt;null&gt; |\n| rast          | raster  |                                                                 | extended  |         &lt;null&gt; |        &lt;null&gt; |\n| forecast_date | text    |                                                                 | extended  |         &lt;null&gt; |        &lt;null&gt; |\n+---------------+---------+-----------------------------------------------------------------+-----------+----------------+---------------+\nIndexes:\n    &quot;rasters_pkey&quot; PRIMARY KEY, btree (rid)\n    &quot;gist_index&quot; gist (st_convexhull(rast))\nCheck constraints:\n    &quot;enforce_height_rast&quot; CHECK (st_height(rast) = ANY (ARRAY[50, 20]))    &quot;enforce_max_extent_rast&quot; CHECK (st_coveredby(st_convexhull(rast), &#39;0100000000000000000000D03F000000000000D0BF00000000008066C0000000000080564000000000000000000000000000000000E610000001000100&#39;::raster)) &quot;enforce_scalex_rast&quot; CHECK (st_scalex(rast)::numeric(25,10) = 0.25::numeric(25,10))    &quot;enforce_scaley_rast&quot; CHECK (st_scaley(rast)::numeric(25,10) = (-0.25)::numeric(25,10))  &quot;enforce_srid_rast&quot; CHECK (st_srid(rast) = 4326)    &quot;enforce_width_rast&quot; CHECK (st_width(rast) = ANY (ARRAY[50, 40]))\nHas OIDs: no\n</pre></div>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 53693307,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "taylorxlin@gmail.com",
            "sender_full_name": "Lin Taylor (she) (W1'15)",
            "sender_id": 8857,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "speeding up a big 'ole query",
            "submessages": [],
            "timestamp": 1456171926,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/ff393e078e14579bad5ec4182dc0263275387a30?x=x&version=1",
            "client": "website",
            "content": "<p>so, forecast_date does not have an index, it seems</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 53693330,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "taylorxlin@gmail.com",
            "sender_full_name": "Lin Taylor (she) (W1'15)",
            "sender_id": 8857,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "speeding up a big 'ole query",
            "submessages": [],
            "timestamp": 1456171967,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/1c860d00a4cedc01147fbb2e0533c37b?d=identicon&version=1",
            "client": "desktop app Mac 0.5.1",
            "content": "<p>OK, so I am not familiar with these postgis functions you are using, but a good first step would be to put on index on forecast_date. This is going to help the sorting and it might also cut down on the Index Scan on rasters.</p>\n<p>Now your forecast_date is type text instead of type datetime. I assume these are just text of ISO formated dates with no hours,m minutes or seconds. like your where clause shows. So I am not sure how much of a performance boost you will get by using a proper datetime type for the column.</p>\n<p>So here are my recommendations:</p>\n<ul>\n<li>If the forecast dates do not include hours, minutes and seconds. You just run something like <code>CREATE INDEX forecast_date_index ON rainfall.rasters (forecast_date);</code></li>\n<li>Alternatively you could alter the table like this stack overflow mentions <a href=\"http://stackoverflow.com/questions/2592412/how-to-convert-column-type-from-varchar-to-date-in-postgresql\" target=\"_blank\" title=\"http://stackoverflow.com/questions/2592412/how-to-convert-column-type-from-varchar-to-date-in-postgresql\">http://stackoverflow.com/questions/2592412/how-to-convert-column-type-from-varchar-to-date-in-postgresql</a> to make it a datetime and then apply the same index as above. If you do this you may want to back up your data somehow incase you make a mistake. Google CREATE TABLE AS for some examples.</li>\n</ul>\n<p>Try this and run the EXPLAIN ANALYZE again, I'd be interested to see how it impoves.</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 53698055,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "corydominguez@gmail.com",
            "sender_full_name": "Cory Michael Dominguez (he) (SP1'15)",
            "sender_id": 7625,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "speeding up a big 'ole query",
            "submessages": [],
            "timestamp": 1456179654,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/9e0096ad9f376eb9f609372bc87542e4?d=identicon&version=1",
            "client": "desktop app Mac 0.5.0",
            "content": "<p>whoa yea you don't want sorts in performance sensitive bits of queries. almost ever. there are maybe some exceptions, but they seem pretty weird (small table with extremely frequent inserts?).</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 53707134,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "tehgeekmeister@gmail.com",
            "sender_full_name": "Sophie Ren\u00e9e Smithburg (she) (F2'15)",
            "sender_id": 8690,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "speeding up a big 'ole query",
            "submessages": [],
            "timestamp": 1456199346,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/9e0096ad9f376eb9f609372bc87542e4?d=identicon&version=1",
            "client": "desktop app Mac 0.5.0",
            "content": "<p>I will try to take a look at this again, but I should REALLY sleep right now. want to help when I can, though!</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 53707137,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "tehgeekmeister@gmail.com",
            "sender_full_name": "Sophie Ren\u00e9e Smithburg (she) (F2'15)",
            "sender_id": 8690,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "speeding up a big 'ole query",
            "submessages": [],
            "timestamp": 1456199369,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/ff393e078e14579bad5ec4182dc0263275387a30?x=x&version=1",
            "client": "website",
            "content": "<p>Ok, I went ahead and created an index on <code>forecast_date</code>. Now when I run <code>EXPLAIN ANALYZE</code>:</p>\n<div class=\"codehilite\"><pre>+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n| QUERY PLAN\n|------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n| Sort  (cost=2110372.66..2110839.48 rows=186728 width=389) (actual time=1042.446..1042.890 rows=6452 loops=1)\n|   Sort Key: forecast_date\n|   Sort Method: quicksort  Memory: 697kB\n|   -&gt;  Index Scan using gist_index on rasters  (cost=1.16..2060833.59 rows=186728 width=389) (actual time=0.348..954.529 rows=6452 loops=1)\n|         Index Cond: ((rast)::geometry &amp;&amp; &#39;0101000020E61000006666666666E662408FC2F5285CEF40C0&#39;::geometry)\n|         Filter: ((forecast_date &gt;= &#39;1998-01-01&#39;::text) AND (forecast_date &lt;= &#39;2015-09-01&#39;::text) AND _st_intersects(&#39;0101000020E61000006666666666E662408FC2F5285CEF40C0&#39;::geometry, rast, NULL::integer))\n|         Rows Removed by Filter: 122\n| Planning time: 0.481 ms\n| Execution time: 1043.302 ms\n+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n</pre></div>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 53998203,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "taylorxlin@gmail.com",
            "sender_full_name": "Lin Taylor (she) (W1'15)",
            "sender_id": 8857,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "speeding up a big 'ole query",
            "submessages": [],
            "timestamp": 1456848993,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/ff393e078e14579bad5ec4182dc0263275387a30?x=x&version=1",
            "client": "website",
            "content": "<p>seems that planning time has speeded up considerably, but execution time not so much</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 53998219,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "taylorxlin@gmail.com",
            "sender_full_name": "Lin Taylor (she) (W1'15)",
            "sender_id": 8857,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "speeding up a big 'ole query",
            "submessages": [],
            "timestamp": 1456849050,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/9e0096ad9f376eb9f609372bc87542e4?d=identicon&version=1",
            "client": "desktop app Mac 0.5.0",
            "content": "<p>you don't care about plan time too much (or don't need to, because you can plan the query once and reuse that plan)</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 53998470,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "tehgeekmeister@gmail.com",
            "sender_full_name": "Sophie Ren\u00e9e Smithburg (she) (F2'15)",
            "sender_id": 8690,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "speeding up a big 'ole query",
            "submessages": [],
            "timestamp": 1456849423,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/9e0096ad9f376eb9f609372bc87542e4?d=identicon&version=1",
            "client": "desktop app Mac 0.5.0",
            "content": "<p>i still need to take a look at this, but keep forgetting to. maybe when we pair?</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 53998479,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "tehgeekmeister@gmail.com",
            "sender_full_name": "Sophie Ren\u00e9e Smithburg (she) (F2'15)",
            "sender_id": 8690,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "speeding up a big 'ole query",
            "submessages": [],
            "timestamp": 1456849442,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/ff393e078e14579bad5ec4182dc0263275387a30?x=x&version=1",
            "client": "website",
            "content": "<p>sure :)</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 53998554,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "taylorxlin@gmail.com",
            "sender_full_name": "Lin Taylor (she) (W1'15)",
            "sender_id": 8857,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "speeding up a big 'ole query",
            "submessages": [],
            "timestamp": 1456849534,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/511375a155b5cea066b4dcd46fcf29812a847e83?x=x&version=1",
            "client": "desktop app Mac 0.5.1",
            "content": "<p>I'm trying to query a table for the top X of one collumn(score) for each of another field(year)  I'm pretty sure an index table is a good idea here.  Is anyone familiar with sequelize who could give me some advice?  (Sequelize has a bunch of dift index types, can/should I make a composite index...?)</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 54567772,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "chandra.galbiati@gmail.com",
            "sender_full_name": "Chandra Galbiati Thomas (SP1'16)",
            "sender_id": 9090,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "index tables in sequelize",
            "submessages": [],
            "timestamp": 1458143456,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/511375a155b5cea066b4dcd46fcf29812a847e83?x=x&version=1",
            "client": "desktop app Mac 0.5.1",
            "content": "<p>fyi I'm using postgres, but I'm not sure that matters</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 54567784,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "chandra.galbiati@gmail.com",
            "sender_full_name": "Chandra Galbiati Thomas (SP1'16)",
            "sender_id": 9090,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "index tables in sequelize",
            "submessages": [],
            "timestamp": 1458143507,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/ff22292433214ccd87cf6ff9ae34e54ac477eab8?x=x&version=1",
            "client": "website",
            "content": "<p>As some of you may know, I spent NGW learning about relational databases--  in particular, SQLite. So far, I've read parts of texts from Owens (<a href=\"http://www.amazon.com/Definitive-Guide-SQLite-Mike-Owens/dp/1590596730/ref=sr_1_2?ie=UTF8&amp;qid=1463199071&amp;sr=8-2&amp;keywords=owens+sqlite\" target=\"_blank\" title=\"http://www.amazon.com/Definitive-Guide-SQLite-Mike-Owens/dp/1590596730/ref=sr_1_2?ie=UTF8&amp;qid=1463199071&amp;sr=8-2&amp;keywords=owens+sqlite\">http://www.amazon.com/Definitive-Guide-SQLite-Mike-Owens/dp/1590596730/ref=sr_1_2?ie=UTF8&amp;qid=1463199071&amp;sr=8-2&amp;keywords=owens+sqlite</a>) and Kreibich (<a href=\"http://www.amazon.com/Using-SQLite-Jay-A-Kreibich/dp/0596521189/ref=wl_mb_wl_huc_clickstream_1_dp\" target=\"_blank\" title=\"http://www.amazon.com/Using-SQLite-Jay-A-Kreibich/dp/0596521189/ref=wl_mb_wl_huc_clickstream_1_dp\">http://www.amazon.com/Using-SQLite-Jay-A-Kreibich/dp/0596521189/ref=wl_mb_wl_huc_clickstream_1_dp</a>). </p>\n<p>Although I initially prioritized understanding theory behind relational databases, I think I'm best served at this point studying more superficial details of SQL (e.g., how relational databases are structured). Does anyone have any resources they recommend?</p>\n<p>Additionally, any suggestions for afternoon projects would be appreciated.</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 57355063,
            "is_me_message": false,
            "last_edit_timestamp": 1463199505,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "ds2643@columbia.edu",
            "sender_full_name": "David Shaked (W2'16)",
            "sender_id": 8995,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "learning sql(ite)",
            "submessages": [],
            "timestamp": 1463199397,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/5aac52dfb927229e729a553ff79edd8bf8cb9466?x=x&version=1",
            "client": "website",
            "content": "<p><span class=\"user-mention\" data-user-email=\"ds2643@columbia.edu\">@David Shaked (W2'16)</span> Don't know if any of these would be what you're looking for, but here are some resources I've found useful at various points.<br>\nonline class: <a href=\"https://lagunita.stanford.edu/courses/DB/2014/SelfPaced/about\" target=\"_blank\" title=\"https://lagunita.stanford.edu/courses/DB/2014/SelfPaced/about\">https://lagunita.stanford.edu/courses/DB/2014/SelfPaced/about</a><br>\nSQL exercises: <a href=\"http://sqlzoo.net/\" target=\"_blank\" title=\"http://sqlzoo.net/\">http://sqlzoo.net/</a><br>\nquery optimization: <a href=\"http://use-the-index-luke.com/\" target=\"_blank\" title=\"http://use-the-index-luke.com/\">http://use-the-index-luke.com/</a><br>\ndatabase docs tend to be written pretty well too, e.g.,<br>\n<a href=\"http://www.postgresql.org/docs/9.1/static/transaction-iso.html\" target=\"_blank\" title=\"http://www.postgresql.org/docs/9.1/static/transaction-iso.html\">http://www.postgresql.org/docs/9.1/static/transaction-iso.html</a><br>\nand <a href=\"https://wiki.postgresql.org/wiki/UPSERT#UPSERT_as_implemented_in_practice\" target=\"_blank\" title=\"https://wiki.postgresql.org/wiki/UPSERT#UPSERT_as_implemented_in_practice\">https://wiki.postgresql.org/wiki/UPSERT#UPSERT_as_implemented_in_practice</a></p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 57646710,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "qqrsmith@gmail.com",
            "sender_full_name": "Russell Smith (W'13)",
            "sender_id": 854,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "learning sql(ite)",
            "submessages": [],
            "timestamp": 1463455614,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/ff22292433214ccd87cf6ff9ae34e54ac477eab8?x=x&version=1",
            "client": "website",
            "content": "<p><span class=\"user-mention\" data-user-email=\"qqrsmith@gmail.com\">@Russell Smith (W'13)</span> Thanks for your help. These all look great!</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 57689740,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "ds2643@columbia.edu",
            "sender_full_name": "David Shaked (W2'16)",
            "sender_id": 8995,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "learning sql(ite)",
            "submessages": [],
            "timestamp": 1463492905,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/bba5211c009e1d330144303f544e3b16af6438eb?x=x&version=4",
            "client": "desktop app Mac 0.5.1",
            "content": "<p>There's a free database conference at the UN on June 10th!<br>\n<a href=\"http://www.database.camp/\" target=\"_blank\" title=\"http://www.database.camp/\">http://www.database.camp/</a></p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 58724025,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "jbham184@gmail.com",
            "sender_full_name": "Justin Birmingham (he) (W1'19)",
            "sender_id": 9325,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "database camp conference June 10th!",
            "submessages": [],
            "timestamp": 1464372670,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/ff22292433214ccd87cf6ff9ae34e54ac477eab8?x=x&version=1",
            "client": "website",
            "content": "<p>looks great. registered. let's meet at rc and roll out as a group. <span class=\"user-mention\" data-user-email=\"recurse@mjec.net\">@Michael Cordover (SP2'16)</span> </p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 59938631,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "ds2643@columbia.edu",
            "sender_full_name": "David Shaked (W2'16)",
            "sender_id": 8995,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "database camp conference June 10th!",
            "submessages": [],
            "timestamp": 1465416611,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/ff22292433214ccd87cf6ff9ae34e54ac477eab8?x=x&version=1",
            "client": "website",
            "content": "<p>Does anyone suggest any particular moocs or projects for learning about databases?</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 60644761,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "ds2643@columbia.edu",
            "sender_full_name": "David Shaked (W2'16)",
            "sender_id": 8995,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "courses, projects",
            "submessages": [],
            "timestamp": 1466016493,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/4c062449003eb6630b6d5c576c59c6714a1dbca0?x=x&version=1",
            "client": "website",
            "content": "<p>I have been trying to find out the differences between nosql and relational databases and in many places I am finding \"nosql databases are easier to scale than the relational databases\". Can someone please explain why or point me to a beginner friendly resource.</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 103711327,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "satabdidas@gmail.com",
            "sender_full_name": "Satabdi Das (F1'16)",
            "sender_id": 100028,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "nosql vs relational databases",
            "submessages": [],
            "timestamp": 1479745373,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/8e94b6f934d3ba2cca228d3b6bfde76e?d=identicon&version=1",
            "client": "website",
            "content": "<p>Could be because most relational databases try to satisfy the ACID principles and that's easy when you only have one big server or a master-slave architecture. But, turns out that it is very difficult to satisfy the ACID principles when you have a distributed database. NoSQL databases don't strictly satisfy all the ACID principles and this let's them work in distributed systems and thus, scale better. Each NoSQL database follows different principles and depending on the type of data, accessibility or avaibility, can be good or bad for you.  There are many NoSQL database and each one is good for a specific need. For this reason, companies work with different databases. This is my opinion, correct if I'm wrong.</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 103716656,
            "is_me_message": false,
            "last_edit_timestamp": 1479754396,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "marianotrebino@gmail.com",
            "sender_full_name": "Mariano Trebino (F2'16)",
            "sender_id": 100204,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "nosql vs relational databases",
            "submessages": [],
            "timestamp": 1479754329,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/9e0096ad9f376eb9f609372bc87542e4?d=identicon&version=1",
            "client": "website",
            "content": "<p>that's basically right. sql/relational vs nosql is not what matters, I think, but extreme coordination vs asynchronous data sharing.</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 103728899,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "tehgeekmeister@gmail.com",
            "sender_full_name": "Sophie Ren\u00e9e Smithburg (she) (F2'15)",
            "sender_id": 8690,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "nosql vs relational databases",
            "submessages": [],
            "timestamp": 1479774738,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/9e0096ad9f376eb9f609372bc87542e4?d=identicon&version=1",
            "client": "website",
            "content": "<p>it just seems to be the case that very few people think that the relational model is good but acid is worth sacrificing in extreme ways, so we end up seeing two dimensions of the design space be highly correlated when they don't, as far as i can tell, intrinsically need to be.</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 103728905,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "tehgeekmeister@gmail.com",
            "sender_full_name": "Sophie Ren\u00e9e Smithburg (she) (F2'15)",
            "sender_id": 8690,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "nosql vs relational databases",
            "submessages": [],
            "timestamp": 1479774796,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/9e0096ad9f376eb9f609372bc87542e4?d=identicon&version=1",
            "client": "website",
            "content": "<p>also most nosql datastores, interestingly, have what I'll call an atomzied view of data: that data is a collection of pieces of information (which could be a small bundle of information). each of these pieces can be considered together, but are meaningful and semantically valid on their own.</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 103729001,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "tehgeekmeister@gmail.com",
            "sender_full_name": "Sophie Ren\u00e9e Smithburg (she) (F2'15)",
            "sender_id": 8690,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "nosql vs relational databases",
            "submessages": [],
            "timestamp": 1479775003,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/9e0096ad9f376eb9f609372bc87542e4?d=identicon&version=1",
            "client": "website",
            "content": "<p>the relational model may make it harder for data to be sensible in any way on its own, given typical use cases. because much data is a reference to other data.</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 103729011,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "tehgeekmeister@gmail.com",
            "sender_full_name": "Sophie Ren\u00e9e Smithburg (she) (F2'15)",
            "sender_id": 8690,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "nosql vs relational databases",
            "submessages": [],
            "timestamp": 1479775056,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/9e0096ad9f376eb9f609372bc87542e4?d=identicon&version=1",
            "client": "website",
            "content": "<p>so nosql tends toward key value or document stores</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 103729013,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "tehgeekmeister@gmail.com",
            "sender_full_name": "Sophie Ren\u00e9e Smithburg (she) (F2'15)",
            "sender_id": 8690,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "nosql vs relational databases",
            "submessages": [],
            "timestamp": 1479775071,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/9e0096ad9f376eb9f609372bc87542e4?d=identicon&version=1",
            "client": "website",
            "content": "<p>and where there are graph stores, i think most of them are kind of off in a separate camp entirely from the higher scale \"we can serve all the load all the time\" sort of nosql stores</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 103729054,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "tehgeekmeister@gmail.com",
            "sender_full_name": "Sophie Ren\u00e9e Smithburg (she) (F2'15)",
            "sender_id": 8690,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "nosql vs relational databases",
            "submessages": [],
            "timestamp": 1479775117,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/9e0096ad9f376eb9f609372bc87542e4?d=identicon&version=1",
            "client": "website",
            "content": "<p>so, maybe what I said earlier is wrong, maybe it's the <a href=\"https://en.wikipedia.org/wiki/Intertwingularity\" target=\"_blank\" title=\"https://en.wikipedia.org/wiki/Intertwingularity\">intertwingliness</a> of the data model that makes this happen. maybe sql is a bit fundamentally harder to scale. i'm not convinced of this, but it seems kind of plausible. </p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 103729062,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "tehgeekmeister@gmail.com",
            "sender_full_name": "Sophie Ren\u00e9e Smithburg (she) (F2'15)",
            "sender_id": 8690,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "nosql vs relational databases",
            "submessages": [],
            "timestamp": 1479775195,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/9e0096ad9f376eb9f609372bc87542e4?d=identicon&version=1",
            "client": "website",
            "content": "<p>as for resources, I'd recommend <a href=\"http://book.mixu.net/distsys/single-page.html\" target=\"_blank\" title=\"http://book.mixu.net/distsys/single-page.html\">Distributed Systems for Fun and Profit</a> and reading up on/watching talks about spanner. A talk is probably the best place to start, the one from Papers We Love SF is the one I have seen personally.</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 103729110,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "tehgeekmeister@gmail.com",
            "sender_full_name": "Sophie Ren\u00e9e Smithburg (she) (F2'15)",
            "sender_id": 8690,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "nosql vs relational databases",
            "submessages": [],
            "timestamp": 1479775260,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/9e0096ad9f376eb9f609372bc87542e4?d=identicon&version=1",
            "client": "website",
            "content": "<p>the distributed systems book will give a bit of a feel for why this is hard and the spanner talks will give an idea of how this can be done with pretty high performance at scale (well, at least one way).</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 103729117,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "tehgeekmeister@gmail.com",
            "sender_full_name": "Sophie Ren\u00e9e Smithburg (she) (F2'15)",
            "sender_id": 8690,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "nosql vs relational databases",
            "submessages": [],
            "timestamp": 1479775299,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/57f94408b42b82a5e20157003baa2071?d=identicon&version=1",
            "client": "website",
            "content": "<p>Hey,</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 103911885,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "harialexandre@gmail.com",
            "sender_full_name": "Harry Alexander (he) (SP2'20)",
            "sender_id": 100341,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "structuring postgres database",
            "submessages": [],
            "timestamp": 1480187238,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/f2793e7c0de9bb00c6c88c585bc865c5?d=identicon&version=1",
            "client": "website",
            "content": "<p>Hey</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 103911923,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "me@kracekumar.com",
            "sender_full_name": "Kracekumar R (F2'16)",
            "sender_id": 100188,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "structuring postgres database",
            "submessages": [],
            "timestamp": 1480187295,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/57f94408b42b82a5e20157003baa2071?d=identicon&version=1",
            "client": "website",
            "content": "<p>Hey,</p>\n<p>Sorry, pressed enter too early lol</p>\n<p>I'm working on a project and I currently have a database set up to persist user information. I've also just gotten a dump of a nutrition database which I've marshaled into a *.sql file. I'm wondering in my setup.sql file for setting up the database for my app, should I call the other .sql file and have it set up both the nutrition tables and the user info tables in the same db or is it better to have a separate db for user info and a separate db for nutrition info</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 103911975,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "harialexandre@gmail.com",
            "sender_full_name": "Harry Alexander (he) (SP2'20)",
            "sender_id": 100341,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "structuring postgres database",
            "submessages": [],
            "timestamp": 1480187451,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/9e0096ad9f376eb9f609372bc87542e4?d=identicon&version=1",
            "client": "website",
            "content": "<p>generally one db per app is a decent rule of thumb.</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 103911986,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "tehgeekmeister@gmail.com",
            "sender_full_name": "Sophie Ren\u00e9e Smithburg (she) (F2'15)",
            "sender_id": 8690,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "structuring postgres database",
            "submessages": [],
            "timestamp": 1480187493,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/9e0096ad9f376eb9f609372bc87542e4?d=identicon&version=1",
            "client": "website",
            "content": "<p>it will probably make your life easier.</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 103911987,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "tehgeekmeister@gmail.com",
            "sender_full_name": "Sophie Ren\u00e9e Smithburg (she) (F2'15)",
            "sender_id": 8690,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "structuring postgres database",
            "submessages": [],
            "timestamp": 1480187514,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/57f94408b42b82a5e20157003baa2071?d=identicon&version=1",
            "client": "website",
            "content": "<p>Seen - thanks!</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 103912027,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "harialexandre@gmail.com",
            "sender_full_name": "Harry Alexander (he) (SP2'20)",
            "sender_id": 100341,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "structuring postgres database",
            "submessages": [],
            "timestamp": 1480187538,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/57f94408b42b82a5e20157003baa2071?d=identicon&version=1",
            "client": "website",
            "content": "<p>hey,</p>\n<p>i've got an access 2007 database that i'd like to convert to postgres. i've tried all kinds of open source solutions but none of them seems to be panning out. if anyone has a copy of access and can convert this db to a csv or an actual postgres db i'd greatly appreciate it!</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 103959237,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "harialexandre@gmail.com",
            "sender_full_name": "Harry Alexander (he) (SP2'20)",
            "sender_id": 100341,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "converting an access db to postgres",
            "submessages": [],
            "timestamp": 1480293764,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/799a43673071f234d4cbe95fb84089dc365b67ae?x=x&version=1",
            "client": "website",
            "content": "<p>Hey, anyone got a few to help me understand the best way to design this database I'm working on? </p>\n<p>thanks in advance.</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 103982722,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "aaron.poser@gmail.com",
            "sender_full_name": "Aaron Poser (W1'16)",
            "sender_id": 100317,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "DB design",
            "submessages": [],
            "timestamp": 1480350721,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/9e0096ad9f376eb9f609372bc87542e4?d=identicon&version=1",
            "client": "website",
            "content": "<p>don't have time but I can recommend a few books/papers if you want. I should really just write a post about this, I keep answering this same question too often.</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 103987785,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "tehgeekmeister@gmail.com",
            "sender_full_name": "Sophie Ren\u00e9e Smithburg (she) (F2'15)",
            "sender_id": 8690,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "DB design",
            "submessages": [],
            "timestamp": 1480358984,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/9e0096ad9f376eb9f609372bc87542e4?d=identicon&version=1",
            "client": "website",
            "content": "<p>as in, i don't have time to do much 1:1, but I do have enough to share resources.</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 103987792,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "tehgeekmeister@gmail.com",
            "sender_full_name": "Sophie Ren\u00e9e Smithburg (she) (F2'15)",
            "sender_id": 8690,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "DB design",
            "submessages": [],
            "timestamp": 1480358999,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/f2793e7c0de9bb00c6c88c585bc865c5?d=identicon&version=1",
            "client": "website",
            "content": "<p>I am happy to answer if the  design is still unclear. </p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 103989865,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "me@kracekumar.com",
            "sender_full_name": "Kracekumar R (F2'16)",
            "sender_id": 100188,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "DB design",
            "submessages": [],
            "timestamp": 1480362180,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/9e0096ad9f376eb9f609372bc87542e4?d=identicon&version=1",
            "client": "website",
            "content": "<p>oh wait, i think you meant a different thing than I thought. do you mean designing a schema, or a database engine itself?</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 103994038,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "tehgeekmeister@gmail.com",
            "sender_full_name": "Sophie Ren\u00e9e Smithburg (she) (F2'15)",
            "sender_id": 8690,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "DB design",
            "submessages": [],
            "timestamp": 1480368479,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/799a43673071f234d4cbe95fb84089dc365b67ae?x=x&version=1",
            "client": "website",
            "content": "<p><span class=\"user-mention\" data-user-email=\"tehgeekmeister@gmail.com\">@Ezekiel Benjamin Smithburg (F2'15)</span> <span class=\"user-mention\" data-user-email=\"me@kracekumar.com\">@Kracekumar R (F2'16)</span> I think I got it under control for now thank you for the offer. I'm sure I'll be back with more questions.  <img alt=\":relaxed:\" class=\"emoji\" src=\"/static/third/gemoji/images/emoji/relaxed.png\" title=\":relaxed:\"></p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 104020654,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "aaron.poser@gmail.com",
            "sender_full_name": "Aaron Poser (W1'16)",
            "sender_id": 100317,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "DB design",
            "submessages": [],
            "timestamp": 1480429502,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/799a43673071f234d4cbe95fb84089dc365b67ae?x=x&version=1",
            "client": "website",
            "content": "<p>Hey all, <br>\nI've got another DB question, I'm using flask SQLAlchemy for my ORM, for what that's worth. I believe the issue revolves around that. If anyone has time for my questions. </p>\n<p>thanks!</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 104263367,
            "is_me_message": false,
            "last_edit_timestamp": 1480959656,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "aaron.poser@gmail.com",
            "sender_full_name": "Aaron Poser (W1'16)",
            "sender_id": 100317,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "DB design",
            "submessages": [],
            "timestamp": 1480959603,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/9e0096ad9f376eb9f609372bc87542e4?d=identicon&version=1",
            "client": "website",
            "content": "<p>Generally it's considered good practice, assuming you're comfortable with this, to just state your question directly. If you want 1:1 help specifically, rather than an answer to your question, making that more explicit may help.</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 104264436,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "tehgeekmeister@gmail.com",
            "sender_full_name": "Sophie Ren\u00e9e Smithburg (she) (F2'15)",
            "sender_id": 8690,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "DB design",
            "submessages": [],
            "timestamp": 1480961783,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/9e0096ad9f376eb9f609372bc87542e4?d=identicon&version=1",
            "client": "website",
            "content": "<p>A person is much more likely to comment on a question if they see it than to respond saying they are willing to comment. Additionally, even if they do respond, it's now taken you much longer to get a response, because they may be away from their computer when you originally ask to ask, and when you actually ask.</p>\n<p>Of course, as stated previously, it's totally okay to want 1:1 help, whether in person or remote. <img alt=\":smiley:\" class=\"emoji\" src=\"/static/third/gemoji/images/emoji/smiley.png\" title=\":smiley:\"> </p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 104264484,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "tehgeekmeister@gmail.com",
            "sender_full_name": "Sophie Ren\u00e9e Smithburg (she) (F2'15)",
            "sender_id": 8690,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "DB design",
            "submessages": [],
            "timestamp": 1480961902,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/799a43673071f234d4cbe95fb84089dc365b67ae?x=x&version=1",
            "client": "website",
            "content": "<p><span class=\"user-mention\" data-user-email=\"tehgeekmeister@gmail.com\">@Ezekiel Benjamin Smithburg (F2'15)</span> thanks for the advice!</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 104266660,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "aaron.poser@gmail.com",
            "sender_full_name": "Aaron Poser (W1'16)",
            "sender_id": 100317,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "DB design",
            "submessages": [],
            "timestamp": 1480965675,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/f2793e7c0de9bb00c6c88c585bc865c5?d=identicon&version=1",
            "client": "website",
            "content": "<p><span class=\"user-mention\" data-user-email=\"aaron.poser@gmail.com\">@Aaron Poser (W1'16)</span> In case you need help, I can assist in sewing missing parts.</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 104269186,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "me@kracekumar.com",
            "sender_full_name": "Kracekumar R (F2'16)",
            "sender_id": 100188,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "DB design",
            "submessages": [],
            "timestamp": 1480970076,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/799a43673071f234d4cbe95fb84089dc365b67ae?x=x&version=1",
            "client": "website",
            "content": "<p><span class=\"user-mention\" data-user-email=\"me@kracekumar.com\">@Kracekumar R (F2'16)</span> much appreciated. I'll definitely ask you questions in the near future! Thanks.</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 104269275,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "aaron.poser@gmail.com",
            "sender_full_name": "Aaron Poser (W1'16)",
            "sender_id": 100317,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "DB design",
            "submessages": [],
            "timestamp": 1480970225,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/27f18c8e071b5fb513029f36abf4d92d?d=identicon&version=1",
            "client": "website",
            "content": "<p>Anyone around the space tomorrow that can help me setup postgres?</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 107769691,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "benschac@gmail.com",
            "sender_full_name": "Benjamin Schachter (he/they) (W1'16)",
            "sender_id": 100320,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "Postgres",
            "submessages": [],
            "timestamp": 1488400427,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/8756446588cfc2014859f5f1fa68c850?d=identicon&version=1",
            "client": "website",
            "content": "<p><span class=\"user-mention\" data-user-email=\"benschac@gmail.com\" data-user-id=\"100320\">@Benjamin Schachter (W1'16)</span> o/</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 107769753,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "jason.a.owen@gmail.com",
            "sender_full_name": "Jason Owen (SP2'19)",
            "sender_id": 100450,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "Postgres",
            "submessages": [],
            "timestamp": 1488400502,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/f2793e7c0de9bb00c6c88c585bc865c5?d=identicon&version=1",
            "client": "website",
            "content": "<p>If you're on Mac, just try <a href=\"http://postgresapp.com/\" target=\"_blank\" title=\"http://postgresapp.com/\">postgres.app</a>. Not sure, you've already tried that though. It <em>should</em> work like a charm.</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 107769763,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "me@kracekumar.com",
            "sender_full_name": "Kracekumar R (F2'16)",
            "sender_id": 100188,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "Postgres",
            "submessages": [],
            "timestamp": 1488400529,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/f2793e7c0de9bb00c6c88c585bc865c5?d=identicon&version=1",
            "client": "website",
            "content": "<p>Yes, in-person help is best though.</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 107769812,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "me@kracekumar.com",
            "sender_full_name": "Kracekumar R (F2'16)",
            "sender_id": 100188,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "Postgres",
            "submessages": [],
            "timestamp": 1488400564,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/f050b80594d5d59676e0620842eb0316?d=identicon&version=1",
            "client": "website",
            "content": "<p>I also find <code>pgAdmin</code> pretty awesome for interacting with postgres. <img alt=\":thumbs_up:\" class=\"emoji\" src=\"/static/generated/emoji/images/emoji/thumbs_up.png\" title=\":thumbs_up:\"></p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 107769987,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "haroldtreen@gmail.com",
            "sender_full_name": "Harold Willis Treen (F2'16)",
            "sender_id": 100193,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "Postgres",
            "submessages": [],
            "timestamp": 1488400917,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/f2793e7c0de9bb00c6c88c585bc865c5?d=identicon&version=1",
            "client": "website",
            "content": "<p>I like <a href=\"http://pgcli.com/\" target=\"_blank\" title=\"http://pgcli.com/\">pgcli</a> though but UI has some advantages.</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 107770112,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "me@kracekumar.com",
            "sender_full_name": "Kracekumar R (F2'16)",
            "sender_id": 100188,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "Postgres",
            "submessages": [],
            "timestamp": 1488401104,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/f050b80594d5d59676e0620842eb0316?d=identicon&version=1",
            "client": "website",
            "content": "<p>Never heard of that. Good to know!</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 107770235,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "haroldtreen@gmail.com",
            "sender_full_name": "Harold Willis Treen (F2'16)",
            "sender_id": 100193,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "Postgres",
            "submessages": [],
            "timestamp": 1488401284,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/8f076e5e03c30a36d598445308926598?d=identicon&version=1",
            "client": "website",
            "content": "<p>on Linux and macOS w/ Homebrew installing Postgres is usually pretty easy</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 108094942,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "alex@strugee.net",
            "sender_full_name": "AJ Jordan (he/they) (SP2'17)",
            "sender_id": 100461,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "Postgres",
            "submessages": [],
            "timestamp": 1489085252,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/8f076e5e03c30a36d598445308926598?d=identicon&version=1",
            "client": "website",
            "content": "<p>well, Debian at least</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 108094950,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "alex@strugee.net",
            "sender_full_name": "AJ Jordan (he/they) (SP2'17)",
            "sender_id": 100461,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "Postgres",
            "submessages": [],
            "timestamp": 1489085263,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/8f076e5e03c30a36d598445308926598?d=identicon&version=1",
            "client": "website",
            "content": "<p>/me only just now realized this conversation was a week old lol</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 108094954,
            "is_me_message": true,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "alex@strugee.net",
            "sender_full_name": "AJ Jordan (he/they) (SP2'17)",
            "sender_id": 100461,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "Postgres",
            "submessages": [],
            "timestamp": 1489085279,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/8d9ed5f596714f4f3946f0896c9247b7686db1f6?x=x&version=4",
            "client": "website",
            "content": "<p>These two databases seem to be neck-and-neck right now.  Both are hoping to bring spanner-style distributed SQL dbs to the masses.<br>\nWhat's interesting though, is that neither company acknowledges the other, even though they're doing <strong>exactly</strong> the same thing.</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 111160013,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "recurse@sweeting.me",
            "sender_full_name": "Nick Sweeting (he) (S1'14)",
            "sender_id": 5883,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "TiDB & CockroachDB",
            "submessages": [],
            "timestamp": 1495465209,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/8d9ed5f596714f4f3946f0896c9247b7686db1f6?x=x&version=4",
            "client": "website",
            "content": "<p><a href=\"https://github.com/cockroachdb/docs/issues/1412\" target=\"_blank\" title=\"https://github.com/cockroachdb/docs/issues/1412\">https://github.com/cockroachdb/docs/issues/1412</a></p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 111160018,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "recurse@sweeting.me",
            "sender_full_name": "Nick Sweeting (he) (S1'14)",
            "sender_id": 5883,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "TiDB & CockroachDB",
            "submessages": [],
            "timestamp": 1495465221,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/2de9901913d2f414b7b174d2c2c69a88?d=identicon&version=1",
            "client": "website",
            "content": "<p>Interesting!</p>\n<p>I see that CockroachDB's raised $50M.  I'd guess that's much more than PingCAP/TiDB, though it looks like there's not much data available.</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 111160370,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "chris@printf.net",
            "sender_full_name": "Chris Ball (SP2'15)",
            "sender_id": 7857,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "TiDB & CockroachDB",
            "submessages": [],
            "timestamp": 1495465921,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/8d9ed5f596714f4f3946f0896c9247b7686db1f6?x=x&version=4",
            "client": "website",
            "content": "<p>Yeah, generally I see PingCAP in the news a lot less</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 111160438,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "recurse@sweeting.me",
            "sender_full_name": "Nick Sweeting (he) (S1'14)",
            "sender_id": 5883,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "TiDB & CockroachDB",
            "submessages": [],
            "timestamp": 1495466003,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/8d9ed5f596714f4f3946f0896c9247b7686db1f6?x=x&version=4",
            "client": "website",
            "content": "<p>although their tech seems to be quite strong already</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 111160443,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "recurse@sweeting.me",
            "sender_full_name": "Nick Sweeting (he) (S1'14)",
            "sender_id": 5883,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "TiDB & CockroachDB",
            "submessages": [],
            "timestamp": 1495466013,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/8d9ed5f596714f4f3946f0896c9247b7686db1f6?x=x&version=4",
            "client": "website",
            "content": "<p>it's possible CDB isn't worried until PingCAP starts stealing real customers ;)</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 111160485,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "recurse@sweeting.me",
            "sender_full_name": "Nick Sweeting (he) (S1'14)",
            "sender_id": 5883,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "TiDB & CockroachDB",
            "submessages": [],
            "timestamp": 1495466043,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/8d9ed5f596714f4f3946f0896c9247b7686db1f6?x=x&version=4",
            "client": "website",
            "content": "<p>I'm trying to <a href=\"https://twitter.com/thesquashSH/status/864156311516217345\" target=\"_blank\" title=\"https://twitter.com/thesquashSH/status/864156311516217345\">convince</a> PingCAP to beat CDB to having Django support though</p>\n<div class=\"inline-preview-twitter\"><div class=\"twitter-tweet\"><a href=\"https://twitter.com/thesquashSH/status/864156311516217345\" target=\"_blank\"><img class=\"twitter-avatar\" src=\"https://uploads.zulipusercontent.net/a440edaab461c496ef74d9e2052e9727844ab4fa/687474703a2f2f7062732e7477696d672e636f6d2f70726f66696c655f696d616765732f323232303138323639332f7371756173685f6e6f726d616c2e706e67\"></a><p>Hey <a href=\"https://twitter.com/PingCAP\" target=\"_blank\" title=\"https://twitter.com/PingCAP\">@PingCAP</a>, any chance you could add <a href=\"https://twitter.com/djangoproject\" target=\"_blank\" title=\"https://twitter.com/djangoproject\">@djangoproject</a> to your list of planned applications to support? ;)</p><span>- Nick Sweeting \ud83d\udeb2 (@thesquashSH)</span></div></div>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 111160493,
            "is_me_message": false,
            "last_edit_timestamp": 1495466268,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "recurse@sweeting.me",
            "sender_full_name": "Nick Sweeting (he) (S1'14)",
            "sender_id": 5883,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "TiDB & CockroachDB",
            "submessages": [],
            "timestamp": 1495466058,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/8d9ed5f596714f4f3946f0896c9247b7686db1f6?x=x&version=4",
            "client": "website",
            "content": "<p>they already support wordpress iirc</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 111160494,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "recurse@sweeting.me",
            "sender_full_name": "Nick Sweeting (he) (S1'14)",
            "sender_id": 5883,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "TiDB & CockroachDB",
            "submessages": [],
            "timestamp": 1495466065,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/8d9ed5f596714f4f3946f0896c9247b7686db1f6?x=x&version=4",
            "client": "website",
            "content": "<p>CDB still has a ton of blocking issues for true postgres wire protocol compatibility <a href=\"https://gist.github.com/pirate/f2931acd97d52242756d85d52b42e8bd\" target=\"_blank\" title=\"https://gist.github.com/pirate/f2931acd97d52242756d85d52b42e8bd\">https://gist.github.com/pirate/f2931acd97d52242756d85d52b42e8bd</a></p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 111160505,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "recurse@sweeting.me",
            "sender_full_name": "Nick Sweeting (he) (S1'14)",
            "sender_id": 5883,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "TiDB & CockroachDB",
            "submessages": [],
            "timestamp": 1495466103,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/2de9901913d2f414b7b174d2c2c69a88?d=identicon&version=1",
            "client": "website",
            "content": "<p>Why does CDB need special Django support, if it speaks SQL? Oh I guess you just answered that.</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 111160633,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "chris@printf.net",
            "sender_full_name": "Chris Ball (SP2'15)",
            "sender_id": 7857,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "TiDB & CockroachDB",
            "submessages": [],
            "timestamp": 1495466296,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/8d9ed5f596714f4f3946f0896c9247b7686db1f6?x=x&version=4",
            "client": "website",
            "content": "<p>They're trying to go for 1:1 compatibility with postgres, which seems quite difficult</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 111160638,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "recurse@sweeting.me",
            "sender_full_name": "Nick Sweeting (he) (S1'14)",
            "sender_id": 5883,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "TiDB & CockroachDB",
            "submessages": [],
            "timestamp": 1495466319,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/8d9ed5f596714f4f3946f0896c9247b7686db1f6?x=x&version=4",
            "client": "website",
            "content": "<p>Although I think they gave up on Rails and ended up writing  a custom adapter</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 111160644,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "recurse@sweeting.me",
            "sender_full_name": "Nick Sweeting (he) (S1'14)",
            "sender_id": 5883,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "TiDB & CockroachDB",
            "submessages": [],
            "timestamp": 1495466340,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/8d9ed5f596714f4f3946f0896c9247b7686db1f6?x=x&version=4",
            "client": "website",
            "content": "<p>might have to do the same for django</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 111160649,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "recurse@sweeting.me",
            "sender_full_name": "Nick Sweeting (he) (S1'14)",
            "sender_id": 5883,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "TiDB & CockroachDB",
            "submessages": [],
            "timestamp": 1495466344,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/2de9901913d2f414b7b174d2c2c69a88?d=identicon&version=1",
            "client": "website",
            "content": "<p>yeah, I remember asking them in person what kind of test harness they had to test their SQL engine's compatibility and they didn't have any answer, it was a long time ago though</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 111160654,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "chris@printf.net",
            "sender_full_name": "Chris Ball (SP2'15)",
            "sender_id": 7857,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "TiDB & CockroachDB",
            "submessages": [],
            "timestamp": 1495466358,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/2de9901913d2f414b7b174d2c2c69a88?d=identicon&version=1",
            "client": "website",
            "content": "<p>It felt like the riskiest part of the whole system to me.</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 111160660,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "chris@printf.net",
            "sender_full_name": "Chris Ball (SP2'15)",
            "sender_id": 7857,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "TiDB & CockroachDB",
            "submessages": [],
            "timestamp": 1495466380,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/8d9ed5f596714f4f3946f0896c9247b7686db1f6?x=x&version=4",
            "client": "website",
            "content": "<p>According to friend who interviewed there, they generally have a really reckless attitude towards testing</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 111160661,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "recurse@sweeting.me",
            "sender_full_name": "Nick Sweeting (he) (S1'14)",
            "sender_id": 5883,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "TiDB & CockroachDB",
            "submessages": [],
            "timestamp": 1495466383,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/8d9ed5f596714f4f3946f0896c9247b7686db1f6?x=x&version=4",
            "client": "website",
            "content": "<p>They're taking the google approach of release first, find bugs later once users use it</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 111160667,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "recurse@sweeting.me",
            "sender_full_name": "Nick Sweeting (he) (S1'14)",
            "sender_id": 5883,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "TiDB & CockroachDB",
            "submessages": [],
            "timestamp": 1495466398,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/8d9ed5f596714f4f3946f0896c9247b7686db1f6?x=x&version=4",
            "client": "website",
            "content": "<p>(according to him)</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 111160720,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "recurse@sweeting.me",
            "sender_full_name": "Nick Sweeting (he) (S1'14)",
            "sender_id": 5883,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "TiDB & CockroachDB",
            "submessages": [],
            "timestamp": 1495466420,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/2de9901913d2f414b7b174d2c2c69a88?d=identicon&version=1",
            "client": "website",
            "content": "<p>yep, that matches the vibe I got too</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 111160722,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "chris@printf.net",
            "sender_full_name": "Chris Ball (SP2'15)",
            "sender_id": 7857,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "TiDB & CockroachDB",
            "submessages": [],
            "timestamp": 1495466432,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/8d9ed5f596714f4f3946f0896c9247b7686db1f6?x=x&version=4",
            "client": "website",
            "content": "<p>The same friend is now working for PingCAP doing jepsen-style destructive testing, so I'm sure he's biased</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 111160733,
            "is_me_message": false,
            "last_edit_timestamp": 1495466512,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "recurse@sweeting.me",
            "sender_full_name": "Nick Sweeting (he) (S1'14)",
            "sender_id": 5883,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "TiDB & CockroachDB",
            "submessages": [],
            "timestamp": 1495466470,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/8d9ed5f596714f4f3946f0896c9247b7686db1f6?x=x&version=4",
            "client": "website",
            "content": "<p>but CDB doesn't even have people dedicated to destructive testing</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 111160738,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "recurse@sweeting.me",
            "sender_full_name": "Nick Sweeting (he) (S1'14)",
            "sender_id": 5883,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "TiDB & CockroachDB",
            "submessages": [],
            "timestamp": 1495466478,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/8d9ed5f596714f4f3946f0896c9247b7686db1f6?x=x&version=4",
            "client": "website",
            "content": "<p>so I suppose that's telling</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 111160741,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "recurse@sweeting.me",
            "sender_full_name": "Nick Sweeting (he) (S1'14)",
            "sender_id": 5883,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "TiDB & CockroachDB",
            "submessages": [],
            "timestamp": 1495466485,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/2de9901913d2f414b7b174d2c2c69a88?d=identicon&version=1",
            "client": "website",
            "content": "<p>they funded Aphyr to do a Jepsen test, it went pretty well: <a href=\"https://jepsen.io/analyses/cockroachdb-beta-20160829\" target=\"_blank\" title=\"https://jepsen.io/analyses/cockroachdb-beta-20160829\">https://jepsen.io/analyses/cockroachdb-beta-20160829</a></p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 111160806,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "chris@printf.net",
            "sender_full_name": "Chris Ball (SP2'15)",
            "sender_id": 7857,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "TiDB & CockroachDB",
            "submessages": [],
            "timestamp": 1495466585,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/8d9ed5f596714f4f3946f0896c9247b7686db1f6?x=x&version=4",
            "client": "website",
            "content": "<p>Ah that's good to see, they mentioned the Bank test at their NYC meetup but I didn't realize aphyr himself did the tests</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 111160933,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "recurse@sweeting.me",
            "sender_full_name": "Nick Sweeting (he) (S1'14)",
            "sender_id": 5883,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "TiDB & CockroachDB",
            "submessages": [],
            "timestamp": 1495466772,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/4c1c5789a9ec48818bbc90f3fdc324560d9a2021?x=x&version=2",
            "client": "website",
            "content": "<p>I'm interested in database architecture/internals and am planning to spend my time at RC on some sort of simplified version of a database inspired by Datomic. If anyone is interested in chatting about db implementations or Datomic, or has done work like this, let me know!</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 111206389,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "logan.buckley@gmail.com",
            "sender_full_name": "Logan Buckley (S1'17)",
            "sender_id": 101096,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "Datomic",
            "submessages": [],
            "timestamp": 1495558866,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/8e5ec3688f4754904884727ff18c7ebd?d=identicon&version=1",
            "client": "website",
            "content": "<p>Hey <span class=\"user-mention\" data-user-email=\"logan.buckley@gmail.com\" data-user-id=\"101096\">@Logan Buckley (S1'17)</span> ! I'm interested in databases, although I'd say my knowledge about them is a little limited. I'd be really interested in just chatting a bit and picking your brain though, if that's something you wouldn't mind :)</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 111209622,
            "is_me_message": false,
            "last_edit_timestamp": 1495565488,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "abylaw@gmail.com",
            "sender_full_name": "Andrea Law (SP2'17)",
            "sender_id": 100830,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "Datomic",
            "submessages": [],
            "timestamp": 1495563797,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/4c1c5789a9ec48818bbc90f3fdc324560d9a2021?x=x&version=2",
            "client": "website",
            "content": "<p>Yeah absolutely, that'd be great!</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 111210078,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "logan.buckley@gmail.com",
            "sender_full_name": "Logan Buckley (S1'17)",
            "sender_id": 101096,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "Datomic",
            "submessages": [],
            "timestamp": 1495564507,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/4e0e55d0dc86c5e9d5390f80a23a6f8f?d=identicon&version=1",
            "client": "website",
            "content": "<p>I'm also interested in databases and I'm considering implementing one after I finish my current project. Let me know if you guys chat!</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 111210524,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "ethan.o.raymond@vanderbilt.edu",
            "sender_full_name": "Ethan Raymond (S1'17)",
            "sender_id": 101112,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "Datomic",
            "submessages": [],
            "timestamp": 1495565302,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/44f6805e3acf97b91651aa78ab1a8afaf53e08ac?x=x&version=4",
            "client": "website",
            "content": "<p>Would definitely be interested in this, too. Don't know much [read: anything] about Datomic. Don't know much more about databases generally either, but have been playing around with databases a bit. Just sqlite for basic Flask app and midway through implementing a postgres with AWS. Would be great to bounce ideas and info.</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 111210767,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "haugenlee@gmail.com",
            "sender_full_name": "Lee Haugen (he) (S1'17)",
            "sender_id": 101106,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "Datomic",
            "submessages": [],
            "timestamp": 1495565644,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/0e74dfe9b92822b1371cae0f22538b2e?d=identicon&version=1",
            "client": "website",
            "content": "<p>I'm interested in databases but probably won't have enough time to work on one at the same time. I'd love to follow progress on your projects. Blog posts or updates somewhere would be great!</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 111210942,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "indradhanush.gupta@gmail.com",
            "sender_full_name": "Indradhanush Gupta (he) (S1'17)",
            "sender_id": 101105,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "Datomic",
            "submessages": [],
            "timestamp": 1495565951,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/4c1c5789a9ec48818bbc90f3fdc324560d9a2021?x=x&version=2",
            "client": "website",
            "content": "<p><span class=\"user-mention\" data-user-email=\"indradhanush.gupta@gmail.com\" data-user-id=\"101105\">@Indradhanush Gupta (S1'17)</span> I'll definitely blog and link things in Zulip when I post them!</p>\n<p><span class=\"user-mention\" data-user-email=\"abylaw@gmail.com\" data-user-id=\"100830\">@Andrea Law (SP2'17)</span>, <span class=\"user-mention\" data-user-email=\"ethan.o.raymond@vanderbilt.edu\" data-user-id=\"101112\">@Ethan Raymond (S1'17)</span>, <span class=\"user-mention\" data-user-email=\"haugenlee@gmail.com\" data-user-id=\"101106\">@Lee Haugen (S1'17)</span> -- if any of you want to chat this afternoon let me know, I'd be happy to take a break from programming at some point.</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 111212375,
            "is_me_message": false,
            "reactions": [
                {
                    "emoji_code": "1f44d",
                    "emoji_name": "+1",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "indradhanush.gupta@gmail.com",
                        "full_name": "Indradhanush Gupta (he) (S1'17)",
                        "id": 101105
                    },
                    "user_id": 101105
                }
            ],
            "recipient_id": 41342,
            "sender_email": "logan.buckley@gmail.com",
            "sender_full_name": "Logan Buckley (S1'17)",
            "sender_id": 101096,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "Datomic",
            "submessages": [],
            "timestamp": 1495568481,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/8e5ec3688f4754904884727ff18c7ebd?d=identicon&version=1",
            "client": "website",
            "content": "<p>Sure! How about 4:30? <span class=\"user-mention\" data-user-email=\"logan.buckley@gmail.com\" data-user-id=\"101096\">@Logan Buckley (S1'17)</span> <span class=\"user-mention\" data-user-email=\"ethan.o.raymond@vanderbilt.edu\" data-user-id=\"101112\">@Ethan Raymond (S1'17)</span> <span class=\"user-mention\" data-user-email=\"haugenlee@gmail.com\" data-user-id=\"101106\">@Lee Haugen (S1'17)</span></p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 111213023,
            "is_me_message": false,
            "reactions": [
                {
                    "emoji_code": "1f44d",
                    "emoji_name": "+1",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "haugenlee@gmail.com",
                        "full_name": "Lee Haugen (he) (S1'17)",
                        "id": 101106
                    },
                    "user_id": 101106
                },
                {
                    "emoji_code": "1f44d",
                    "emoji_name": "+1",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "logan.buckley@gmail.com",
                        "full_name": "Logan Buckley (S1'17)",
                        "id": 101096
                    },
                    "user_id": 101096
                },
                {
                    "emoji_code": "1f44d",
                    "emoji_name": "+1",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "ethan.o.raymond@vanderbilt.edu",
                        "full_name": "Ethan Raymond (S1'17)",
                        "id": 101112
                    },
                    "user_id": 101112
                }
            ],
            "recipient_id": 41342,
            "sender_email": "abylaw@gmail.com",
            "sender_full_name": "Andrea Law (SP2'17)",
            "sender_id": 100830,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "Datomic",
            "submessages": [],
            "timestamp": 1495569533,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/4c1c5789a9ec48818bbc90f3fdc324560d9a2021?x=x&version=2",
            "client": "website",
            "content": "<p>It looks like Church is empty, we could chat in there.</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 111214597,
            "is_me_message": false,
            "reactions": [
                {
                    "emoji_code": "1f44d",
                    "emoji_name": "+1",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "ethan.o.raymond@vanderbilt.edu",
                        "full_name": "Ethan Raymond (S1'17)",
                        "id": 101112
                    },
                    "user_id": 101112
                }
            ],
            "recipient_id": 41342,
            "sender_email": "logan.buckley@gmail.com",
            "sender_full_name": "Logan Buckley (S1'17)",
            "sender_id": 101096,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "Datomic",
            "submessages": [],
            "timestamp": 1495571816,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/8e5ec3688f4754904884727ff18c7ebd?d=identicon&version=1",
            "client": "website",
            "content": "<p><a href=\"http://15721.courses.cs.cmu.edu/spring2017/project1.html\" target=\"_blank\" title=\"http://15721.courses.cs.cmu.edu/spring2017/project1.html\">http://15721.courses.cs.cmu.edu/spring2017/project1.html</a></p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 111215992,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "abylaw@gmail.com",
            "sender_full_name": "Andrea Law (SP2'17)",
            "sender_id": 100830,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "Datomic",
            "submessages": [],
            "timestamp": 1495574112,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/9e0096ad9f376eb9f609372bc87542e4?d=identicon&version=1",
            "client": "website",
            "content": "<p>oh wow, that's cool, <span class=\"user-mention\" data-user-email=\"abylaw@gmail.com\" data-user-id=\"100830\">@Andrea Law (SP2'17)</span> ! didn't know there were any courses using peloton as a base.</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 111300960,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "tehgeekmeister@gmail.com",
            "sender_full_name": "Sophie Ren\u00e9e Smithburg (she) (F2'15)",
            "sender_id": 8690,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "Datomic",
            "submessages": [],
            "timestamp": 1495748391,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/36e38f07213a4459a526a3334d690aa09a75b04d?x=x&version=3",
            "client": "website",
            "content": "<p>S1 2017 batch voted to have both a 'big data'/data engineering beginners club workshop in preference to a databases workshop :(   However, <span class=\"user-mention\" data-user-email=\"seth+recurse@schori.org\" data-user-id=\"100786\">@Seth Schori (SP2'17)</span>  <a href=\"https://recurse.zulipchat.com/#narrow/stream/455.20Broadway/topic/Beginners.20Club.20(4.2E0)\" target=\"_blank\" title=\"https://recurse.zulipchat.com/#narrow/stream/455.20Broadway/topic/Beginners.20Club.20(4.2E0)\">posted</a> looking for alums/speakers in nyc. Maybe someone on this stream feels qualified? (spark?  more? )Hopper would be more than filled</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 111568424,
            "is_me_message": false,
            "last_edit_timestamp": 1496343937,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "dclau04@gmail.com",
            "sender_full_name": "Daniel Lau (he) (SP2'17)",
            "sender_id": 100522,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "beginners club cross-posting",
            "submessages": [],
            "timestamp": 1496343755,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/36e38f07213a4459a526a3334d690aa09a75b04d?x=x&version=3",
            "client": "website",
            "content": "<p>Hi <span class=\"user-mention\" data-user-email=\"maxim@ontoillogical.com\" data-user-id=\"5875\">@Max Veytsman (S'14)</span> , referring to your <a href=\"https://recurse.zulipchat.com/#narrow/stream/programming/topic/How.20do.20databases.20work.3F\" target=\"_blank\" title=\"https://recurse.zulipchat.com/#narrow/stream/programming/topic/How.20do.20databases.20work.3F\">post</a>  wld u be interested in trying a weekly discussion on postgres-biased db learnings?</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 111653649,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "dclau04@gmail.com",
            "sender_full_name": "Daniel Lau (he) (SP2'17)",
            "sender_id": 100522,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "how do dbs work",
            "submessages": [],
            "timestamp": 1496533432,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/8f076e5e03c30a36d598445308926598?d=identicon&version=1",
            "client": "website",
            "content": "<p>/cc <span class=\"user-mention\" data-user-email=\"ryan.riddle7@gmail.com\" data-user-id=\"100526\">@Ryan Riddle (SP1'17)</span></p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 111690944,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "alex@strugee.net",
            "sender_full_name": "AJ Jordan (he/they) (SP2'17)",
            "sender_id": 100461,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "how do dbs work",
            "submessages": [],
            "timestamp": 1496625430,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/ee5ef8c4705125cfdc43e7d1569c684c58cb518b?x=x&version=2",
            "client": "website",
            "content": "<p>I would <span class=\"user-mention\" data-user-email=\"dclau04@gmail.com\" data-user-id=\"100522\">@Daniel Lau (SP2'17)</span> !</p>\n<p>Is it okay that I'm not in NYC?</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 111711876,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "maxim@ontoillogical.com",
            "sender_full_name": "Max Veytsman (he) (S1'20)",
            "sender_id": 5875,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "how do dbs work",
            "submessages": [],
            "timestamp": 1496674308,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/36e38f07213a4459a526a3334d690aa09a75b04d?x=x&version=3",
            "client": "website",
            "content": "<p>ofcourse! Three remote discussion/reading groups i've been in during batch have worked fine. want to have an initial chat this week? (pref'bly avoiding event times, when Lovelace may be <a href=\"https://www.recurse.com/calendar\" target=\"_blank\" title=\"https://www.recurse.com/calendar\">booked on the calendar</a>)</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 111712292,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "dclau04@gmail.com",
            "sender_full_name": "Daniel Lau (he) (SP2'17)",
            "sender_id": 100522,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "how do dbs work",
            "submessages": [],
            "timestamp": 1496675026,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/36e38f07213a4459a526a3334d690aa09a75b04d?x=x&version=3",
            "client": "website",
            "content": "<p>I learn much about the content and my learning-style in the process of presenting at Thurs' 5-min presentations . I just  wish they were lower stress. And that there were a more opportunities to present somewhat informally. Would anyone here be interested in trialling a (potentially remote) version of Thurs presentations, that's also weekly?  Basically, \"present on a db thing u learned about over the last cpl of weeks\" The time length should be tweaked to make it <em>easier</em> to prepare for;  as usual, u can take as little time as u want; and no interruptions during presentations. First session will be 5pm this Thursday. We also have pretty good setup for remote attendees, as long as u r willing! And don't be shy!</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 112026118,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "dclau04@gmail.com",
            "sender_full_name": "Daniel Lau (he) (SP2'17)",
            "sender_id": 100522,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "7min presentations",
            "submessages": [],
            "timestamp": 1497325789,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/919b4af386b43c5ca84d8e664790a7d906336c0d?x=x&version=1",
            "client": "website",
            "content": "<p>I'd be interested in this but 5pm on Thursday means I'm at work. I'd give this a try at a different time/day</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 112060663,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "botwhytho@gmail.com",
            "sender_full_name": "Alberto Torres (SP1'17)",
            "sender_id": 100545,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "7min presentations",
            "submessages": [],
            "timestamp": 1497395112,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/919b4af386b43c5ca84d8e664790a7d906336c0d?x=x&version=1",
            "client": "website",
            "content": "<p>Oh, saw this is specific to databases...</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 112060669,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "botwhytho@gmail.com",
            "sender_full_name": "Alberto Torres (SP1'17)",
            "sender_id": 100545,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "7min presentations",
            "submessages": [],
            "timestamp": 1497395134,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/4c1c5789a9ec48818bbc90f3fdc324560d9a2021?x=x&version=2",
            "client": "website",
            "content": "<p><span class=\"user-mention\" data-user-email=\"dclau04@gmail.com\" data-user-id=\"100522\">@Daniel Lau (SP2'17)</span> Still planning to do this today?</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 112139486,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "logan.buckley@gmail.com",
            "sender_full_name": "Logan Buckley (S1'17)",
            "sender_id": 101096,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "7min presentations",
            "submessages": [],
            "timestamp": 1497548350,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/ac848f10b247c86de777f1ddd97851a1?d=identicon&version=1",
            "client": "website",
            "content": "<p>I love the idea of doing remote low stress weekly presentations (maybe about anything, not just databases?) - did this happen?</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 112506425,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "nabuhunaina@protonmail.com",
            "sender_full_name": "Nasreen Abu-Hunaina (they) (SP1'17)",
            "sender_id": 100533,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "7min presentations",
            "submessages": [],
            "timestamp": 1498251642,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/7a48902c9379b61bebcc7d4ddf51078ad881b09c?x=x&version=2",
            "client": "website",
            "content": "<p>Does anyone know much about data lakes? I've been pitched <a href=\"https://www.treasuredata.com/\" target=\"_blank\" title=\"https://www.treasuredata.com/\">Treasure data</a> to build one and it seems like a good solution, but I don't have experience with this stuff and am trying to figure out how to evaluate it compared to other possible solutions</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 112696725,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "serena.peruzzo@gmail.com",
            "sender_full_name": "Serena Peruzzo (she) (SP2'20)",
            "sender_id": 7642,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "data lakes",
            "submessages": [],
            "timestamp": 1498664354,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/7dc1374e8307c45a20af92a81bd15fc1?d=identicon&version=1",
            "client": "website",
            "content": "<p>Hi Serena. I had not heard this term before. Is this the beginning of a new buzzword? Also, could you clarify the subject-object in the pitch: are they building a data lake for you or are you building a data lake for them?</p>\n<p>I'm no expert in the field, so cannot give any recommendations, but there are hundreds of \"data solutions\" out there with many specialized for different use cases: ETL, data integrations, warehousing, analytics, etc.</p>\n<p>What exactly is needed? How big is the data? How fast is new data coming in? What analytics will be performed on the data? You have to watch out because most of the vendors will be peddling buzzwords and selling snake oil. Sometimes some thing as simple as MySQL/Postgres could do the job of storing, and you can use read-only replicas to perform heavy analytics.</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 112722429,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "ivan.savov@gmail.com",
            "sender_full_name": "Ivan Savov (SP2'17)",
            "sender_id": 100772,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "data lakes",
            "submessages": [],
            "timestamp": 1498710759,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/d5518741e12b2070f0063a21cd60c939?d=identicon&version=4",
            "client": "ZulipMobile",
            "content": "<p>People used to use the term \"data warehouse\" I remember sometime a few years ago people who often talked about data warehouses started using the term data lake. I thought they were joking because lake was implying lack of structure! <img alt=\"\ud83d\ude00\" class=\"emoji\" src=\"/static/generated/emoji/images/emoji/unicode/1f600.png\" title=\"\ud83d\ude00\"></p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 112722949,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "carl.douglas@gmail.com",
            "sender_full_name": "Carl Douglas (S1'17)",
            "sender_id": 101092,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "data lakes",
            "submessages": [],
            "timestamp": 1498711875,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/7a48902c9379b61bebcc7d4ddf51078ad881b09c?x=x&version=2",
            "client": "website",
            "content": "<p>correct, it's a new buzzword :) The idea is to store all your different data sources in raw format and apply a schema-on-read. You can then use it for analysis ad hoc or push into a more structured form of storage. I've just joined a startup as DS and they've been talking with this vendor that offers a platform with a bunch of connectors so you can easily ingest data from different sources, query, and push to some other data application.</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 112728530,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "serena.peruzzo@gmail.com",
            "sender_full_name": "Serena Peruzzo (she) (SP2'20)",
            "sender_id": 7642,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "data lakes",
            "submessages": [],
            "timestamp": 1498725629,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/7a48902c9379b61bebcc7d4ddf51078ad881b09c?x=x&version=2",
            "client": "website",
            "content": "<p>I'm not really questioning the data lake choice, I think it's a cool idea, but I'm trying to figure out if this vendor is a good choice of it I should push more for hiring a data engineer to build a data lake on some other platform, e.g. aws</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 112728554,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "serena.peruzzo@gmail.com",
            "sender_full_name": "Serena Peruzzo (she) (SP2'20)",
            "sender_id": 7642,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "data lakes",
            "submessages": [],
            "timestamp": 1498725721,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/7dc1374e8307c45a20af92a81bd15fc1?d=identicon&version=1",
            "client": "website",
            "content": "<p>I would recommend building the data lake in house. This way someone on the team will actually know what's in the lake. The \"connectors\" for different sources sound like marketing speak. How is a connector better than a custom ETL script that your write yourself?</p>\n<p>Amazon S3 is pretty good for files, their hosted Postgres/MySQL (RDS) is OK, and I can't vouch for any of the other pieces (I've heard they're expensive). Also, I have a friend who really likes mongo for time series data in a IoT setup where one data point sent every few seconds.</p>\n<p>Finally, since you asked for other vendoes, Iguazio is working on something like data lakes. I don't know them or use their products, I heard from them at an event.</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 112737141,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "ivan.savov@gmail.com",
            "sender_full_name": "Ivan Savov (SP2'17)",
            "sender_id": 100772,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "data lakes",
            "submessages": [],
            "timestamp": 1498744711,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/7a48902c9379b61bebcc7d4ddf51078ad881b09c?x=x&version=2",
            "client": "website",
            "content": "<p>thanks <span class=\"user-mention\" data-user-email=\"ivan.savov@gmail.com\" data-user-id=\"100772\">@Ivan Savov (SP2'17)</span></p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 112740276,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "serena.peruzzo@gmail.com",
            "sender_full_name": "Serena Peruzzo (she) (SP2'20)",
            "sender_id": 7642,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "data lakes",
            "submessages": [],
            "timestamp": 1498750143,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/7a48902c9379b61bebcc7d4ddf51078ad881b09c?x=x&version=2",
            "client": "website",
            "content": "<p>I honestly wouldn't know where to start to build one in house, and the company is pretty small so I don't have someone that can look after it. So I agree with you on inhouse but I have more constraints than what I'd like.</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 112740356,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "serena.peruzzo@gmail.com",
            "sender_full_name": "Serena Peruzzo (she) (SP2'20)",
            "sender_id": 7642,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "data lakes",
            "submessages": [],
            "timestamp": 1498750247,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/7a48902c9379b61bebcc7d4ddf51078ad881b09c?x=x&version=2",
            "client": "website",
            "content": "<p>I'll look into Iguazio tho</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 112740508,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "serena.peruzzo@gmail.com",
            "sender_full_name": "Serena Peruzzo (she) (SP2'20)",
            "sender_id": 7642,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "data lakes",
            "submessages": [],
            "timestamp": 1498750484,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/8ef0cc9607b07f392f70560a43dbbb2d0efd6328?x=x&version=1",
            "client": "website",
            "content": "<p>my personal opinion is that data lakes are as doomed to fail as EHR interoperability. EHRs are a mess, with like a hundred major vendor, because the emphasis was on \"make things electronic\" rather than \"integrate systems\". So now, all cross-EHR communications essentially execute the equivalent of an export/import step, and it works about as well as you'd expect it to.</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 112761884,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "brian.kihoon.lee@gmail.com",
            "sender_full_name": "Brian Lee (F1'16)",
            "sender_id": 100043,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "data lakes",
            "submessages": [],
            "timestamp": 1498781155,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/8ef0cc9607b07f392f70560a43dbbb2d0efd6328?x=x&version=1",
            "client": "website",
            "content": "<p>EHRs should have figured out a standard information storage format first, then built up their systems</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 112761926,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "brian.kihoon.lee@gmail.com",
            "sender_full_name": "Brian Lee (F1'16)",
            "sender_id": 100043,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "data lakes",
            "submessages": [],
            "timestamp": 1498781181,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/8ef0cc9607b07f392f70560a43dbbb2d0efd6328?x=x&version=1",
            "client": "website",
            "content": "<p>so in that same vein, \"data lakes\" should figure out a common schema / format, then do the work of converting the disparate systems</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 112761931,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "brian.kihoon.lee@gmail.com",
            "sender_full_name": "Brian Lee (F1'16)",
            "sender_id": 100043,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "data lakes",
            "submessages": [],
            "timestamp": 1498781212,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/7dc1374e8307c45a20af92a81bd15fc1?d=identicon&version=1",
            "client": "website",
            "content": "<p><span class=\"user-mention\" data-user-email=\"serena.peruzzo@gmail.com\" data-user-id=\"7642\">@Serena Peruzzo (SP1'15)</span>  This is worth looking into <a href=\"https://apacheignite.readme.io/docs/sql-grid\" target=\"_blank\" title=\"https://apacheignite.readme.io/docs/sql-grid\">https://apacheignite.readme.io/docs/sql-grid</a>  Using this you could build an in-house \"data lake\"  by leaving the different data sources in their own \"native\" database format \u2014 you clone each data source to a local DB server (e.g. from a backup restore, or through replication). You can then access all of them from a single SQL-like interface. Apache Ignite is commercially supported by GridGain <a href=\"https://www.gridgain.com/solutions/database-performance/distributed-postgresql\" target=\"_blank\" title=\"https://www.gridgain.com/solutions/database-performance/distributed-postgresql\">https://www.gridgain.com/solutions/database-performance/distributed-postgresql</a></p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 112829333,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "ivan.savov@gmail.com",
            "sender_full_name": "Ivan Savov (SP2'17)",
            "sender_id": 100772,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "data lakes",
            "submessages": [],
            "timestamp": 1498927412,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/7a48902c9379b61bebcc7d4ddf51078ad881b09c?x=x&version=2",
            "client": "website",
            "content": "<p>thanks <span class=\"user-mention\" data-user-email=\"ivan.savov@gmail.com\" data-user-id=\"100772\">@Ivan Savov (SP2'17)</span>  very conveniently the morning paper has a post on Azure data lakes this morning :)</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 112926808,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "serena.peruzzo@gmail.com",
            "sender_full_name": "Serena Peruzzo (she) (SP2'20)",
            "sender_id": 7642,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "data lakes",
            "submessages": [],
            "timestamp": 1499158709,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/36e38f07213a4459a526a3334d690aa09a75b04d?x=x&version=3",
            "client": "website",
            "content": "<p>recommending 2  videos that relate to conversations/pairing i had in batch : <br>\n<span class=\"user-mention\" data-user-email=\"clample@crimson.ua.edu\" data-user-id=\"100452\">@Chris Lample (W2'17)</span> <span class=\"user-mention\" data-user-email=\"ark.email@gmail.com\" data-user-id=\"100532\">@Adam Kaye (SP1'17)</span> structure for querying <a href=\"https://www.youtube.com/watch?v=NSaYAPiJc-M\" target=\"_blank\" title=\"https://www.youtube.com/watch?v=NSaYAPiJc-M\">bitcoin transactions</a> <br>\n<span class=\"user-mention\" data-user-email=\"dpb@brannerchinese.com\" data-user-id=\"850\">@David P Branner (W'13)</span> <span class=\"user-mention\" data-user-email=\"darthmincho@gmail.com\" data-user-id=\"7875\">@Carlos Rey (SP2'15)</span> learning <a href=\"https://www.youtube.com/watch?v=ATkB-LQR0eY\" target=\"_blank\" title=\"https://www.youtube.com/watch?v=ATkB-LQR0eY\">chinese</a> . <br>\n(couldn't think of another stream to post this sorry, cos they're domain-specific. still, speakers on this neo4j youtube channel seem variable,but typically good communicators of their domain)</p>\n<div class=\"youtube-video message_inline_image\"><a data-id=\"NSaYAPiJc-M\" href=\"https://www.youtube.com/watch?v=NSaYAPiJc-M\" target=\"_blank\" title=\"https://www.youtube.com/watch?v=NSaYAPiJc-M\"><img src=\"https://i.ytimg.com/vi/NSaYAPiJc-M/default.jpg\"></a></div><div class=\"youtube-video message_inline_image\"><a data-id=\"ATkB-LQR0eY\" href=\"https://www.youtube.com/watch?v=ATkB-LQR0eY\" target=\"_blank\" title=\"https://www.youtube.com/watch?v=ATkB-LQR0eY\"><img src=\"https://i.ytimg.com/vi/ATkB-LQR0eY/default.jpg\"></a></div>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 113023784,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "dclau04@gmail.com",
            "sender_full_name": "Daniel Lau (he) (SP2'17)",
            "sender_id": 100522,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "neo4j videos/talks (graph db)",
            "submessages": [],
            "timestamp": 1499364968,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/919b4af386b43c5ca84d8e664790a7d906336c0d?x=x&version=1",
            "client": "website",
            "content": "<p>The coin stuff might be of interest to me. Thanks.</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 113076177,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "botwhytho@gmail.com",
            "sender_full_name": "Alberto Torres (SP1'17)",
            "sender_id": 100545,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "neo4j videos/talks (graph db)",
            "submessages": [],
            "timestamp": 1499466624,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/d4485aebc6def42f2368e8ca3f867fcb?d=identicon&version=1",
            "client": "website",
            "content": "<p>Hey databasers. I want to create some documentation around the fields in this one db we have at work, because it was created and maintained by one person over the last few years and as a result they are the only one to understand it! I expect it will have fields like: name of field(string), is an index (boolean), probably something to show its relationship to other tables as appropriate(format unknown - maybe a list of strings?), and description (string), at least.</p>\n<p>This is all well and good, and feasible, but I would like it to auto-update in some way, because otherwise it will super fast go out of date. I think the most basic version of this would look like auto-deleting fields when they are removed from the db and auto-adding them when new ones are added. A next level of awesomeness would perhaps send an email or maybe log somewhere that a new field was added and that a description needs to be manually entered for it.</p>\n<p>Do things like this exist? What could this even look like in terms of product lifecycle - like what would be the hook for it to run? Any advice appreciated! :)</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 115156013,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "heather.booker@hotmail.com",
            "sender_full_name": "Heather Booker (she/they) (W1'16)",
            "sender_id": 100339,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "Documentation",
            "submessages": [],
            "timestamp": 1503927845,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/8756446588cfc2014859f5f1fa68c850?d=identicon&version=1",
            "client": "website",
            "content": "<p>A lot of this is (or should be) in the database already! If you <code>\\d tablename</code> in <code>psql</code>, or <code>describe tablename</code> in <code>mysql</code>, it should show you all the fields, their types, any indexes on the table, and any foreign keys (relationships to other tables).</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 115158225,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "jason.a.owen@gmail.com",
            "sender_full_name": "Jason Owen (SP2'19)",
            "sender_id": 100450,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "Documentation",
            "submessages": [],
            "timestamp": 1503932196,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/8756446588cfc2014859f5f1fa68c850?d=identicon&version=1",
            "client": "website",
            "content": "<p>PostgreSQL can also have comments on tables and columns, among other things: <a href=\"https://www.postgresql.org/docs/current/static/sql-comment.html\" target=\"_blank\" title=\"https://www.postgresql.org/docs/current/static/sql-comment.html\">https://www.postgresql.org/docs/current/static/sql-comment.html</a></p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 115158229,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "jason.a.owen@gmail.com",
            "sender_full_name": "Jason Owen (SP2'19)",
            "sender_id": 100450,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "Documentation",
            "submessages": [],
            "timestamp": 1503932211,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/8756446588cfc2014859f5f1fa68c850?d=identicon&version=1",
            "client": "website",
            "content": "<p>Continuous Integration / Continuous Deployment is an awesome thought! How are you managing migrations (changes to the database) currently?</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 115158240,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "jason.a.owen@gmail.com",
            "sender_full_name": "Jason Owen (SP2'19)",
            "sender_id": 100450,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "Documentation",
            "submessages": [],
            "timestamp": 1503932278,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/8756446588cfc2014859f5f1fa68c850?d=identicon&version=1",
            "client": "website",
            "content": "<p>If you're using something like Active Record or Liquibase, you can do something like email (or whatever) the output of the migration command</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 115158369,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "jason.a.owen@gmail.com",
            "sender_full_name": "Jason Owen (SP2'19)",
            "sender_id": 100450,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "Documentation",
            "submessages": [],
            "timestamp": 1503932522,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/d4485aebc6def42f2368e8ca3f867fcb?d=identicon&version=1",
            "client": "website",
            "content": "<p><span class=\"user-mention\" data-user-email=\"jason.a.owen@gmail.com\" data-user-id=\"100450\">@Jason Owen (W2'17)</span> ooh, cool! good questions that I need to answer before going any further (like how we handle migrations &gt;&lt;). i didn't know you could just throw comments in there! super cool. thank you! :)</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 115200855,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "heather.booker@hotmail.com",
            "sender_full_name": "Heather Booker (she/they) (W1'16)",
            "sender_id": 100339,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "Documentation",
            "submessages": [],
            "timestamp": 1504019162,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/81c6c8040fc0263607edd05c09dacf6b?d=identicon&version=1",
            "client": "website",
            "content": "<p>Was talking with <span class=\"user-mention\" data-user-email=\"jacquin.mininger@gmail.com\" data-user-id=\"102005\">@Jacquin Mininger (F2'17)</span> this morning about DBMSes and wanted to spam a bunch of great links (or rather two links to a whole bunch of links): <a href=\"http://www.redbook.io/\" target=\"_blank\" title=\"http://www.redbook.io/\">Readings in Database Systems</a> and <a href=\"https://github.com/rxin/db-readings\" target=\"_blank\" title=\"https://github.com/rxin/db-readings\">Reynold Xin's collection of database readings</a>.  BTW if this is interesting to you, consider joining our <a href=\"https://www.recurse.com/calendar/955\" target=\"_blank\" title=\"https://www.recurse.com/calendar/955\">DBMS source reading group</a>.</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 116383290,
            "is_me_message": false,
            "reactions": [
                {
                    "emoji_code": "1f44d",
                    "emoji_name": "thumbs_up",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "phoebe@slub.co",
                        "full_name": "phoebe beatrice jenkins (she) (m4'18)",
                        "id": 101991
                    },
                    "user_id": 101991
                },
                {
                    "emoji_code": "1f44d",
                    "emoji_name": "thumbs_up",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "jacquin.mininger@gmail.com",
                        "full_name": "Jacquin Mininger (F2'17)",
                        "id": 102005
                    },
                    "user_id": 102005
                },
                {
                    "emoji_code": "1f44d",
                    "emoji_name": "thumbs_up",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "jason.a.owen@gmail.com",
                        "full_name": "Jason Owen (SP2'19)",
                        "id": 100450
                    },
                    "user_id": 100450
                }
            ],
            "recipient_id": 41342,
            "sender_email": "julian@cipht.net",
            "sender_full_name": "Julian Squires (he) (F2'17)",
            "sender_id": 101992,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "readings in database systems",
            "submessages": [],
            "timestamp": 1506514166,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/8756446588cfc2014859f5f1fa68c850?d=identicon&version=1",
            "client": "website",
            "content": "<p>That looks really interesting, <span class=\"user-mention\" data-user-email=\"julian@cipht.net\" data-user-id=\"101992\">@Julian Squires (F2'17)</span> ! I hadn't seen the Red Book before. I'd also suggest (as mentioned in your second link) <a href=\"http://www.cs.berkeley.edu/%7Erxin/db-papers/Relational-Model-Codd.pdf\" target=\"_blank\" title=\"http://www.cs.berkeley.edu/%7Erxin/db-papers/Relational-Model-Codd.pdf\">the original Codd paper</a> - I found it to be really approachable; the hardest part for me was imagining a world without databases so as to understand the way he described the problem databases solved</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 116384705,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "jason.a.owen@gmail.com",
            "sender_full_name": "Jason Owen (SP2'19)",
            "sender_id": 100450,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "readings in database systems",
            "submessages": [],
            "timestamp": 1506517242,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/793f1e51574a325430b2afc5d6e929fbda98f32e?x=x&version=6",
            "client": "website",
            "content": "<p><span class=\"user-mention\" data-user-email=\"julian@cipht.net\" data-user-id=\"101992\">@Julian Squires (F2'17)</span> We were talking yesterday about specific database algorithm resources. What were they?</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 116387090,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "l.whiteavian@gmail.com",
            "sender_full_name": "Laura White-Avian (she) (F2'17)",
            "sender_id": 102012,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "Comparison (?) algorithm resources",
            "submessages": [],
            "timestamp": 1506521654,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/81c6c8040fc0263607edd05c09dacf6b?d=identicon&version=1",
            "client": "website",
            "content": "<p>Oh yeah!</p>\n<p>I had done a talk on <a href=\"http://www.grantjenks.com/wiki/_media/ideas%3Asimple_fast_algorithms_for_the_editing_distance_between_tree_and_related_problems.pdf\" target=\"_blank\" title=\"http://www.grantjenks.com/wiki/_media/ideas%3Asimple_fast_algorithms_for_the_editing_distance_between_tree_and_related_problems.pdf\">Zhang and Shasha's tree edit distance algorithm</a> and while searching the literature had found a lot of related stuff about database schema comparison.  (If you're interested in tree diff'ing in general, I posted a bunch of links related to the work that came after Zhang-Shasha <a href=\"https://www.meetup.com/Papers-We-Love-Montreal/events/243307433/\" target=\"_blank\" title=\"https://www.meetup.com/Papers-We-Love-Montreal/events/243307433/\">on the meetup page for that talk</a>)</p>\n<p>A few examples: (note I haven't read any of these papers, just the abstracts; they all came up as related to tree diff papers I was reading)<br>\n - <a href=\"http://www.cs.ubc.ca/~rap/teaching/534a/readings/VLDBJ-Dec2001.pdf\" target=\"_blank\" title=\"http://www.cs.ubc.ca/~rap/teaching/534a/readings/VLDBJ-Dec2001.pdf\">A survey of approaches to automatic schema matching</a><br>\n - <a href=\"http://eprints.biblio.unitn.it/701/1/087.pdf\" target=\"_blank\" title=\"http://eprints.biblio.unitn.it/701/1/087.pdf\">A survey of schema -basedmatching approaches</a><br>\n - <a href=\"http://osm.cs.byu.edu/CS652s02/miller00schema.pdf\" target=\"_blank\" title=\"http://osm.cs.byu.edu/CS652s02/miller00schema.pdf\">Schema mapping as query discovery</a><br>\n - <a href=\"http://s1.downloadmienphi.net/file/downloadfile2/169/1398632.pdf\" target=\"_blank\" title=\"http://s1.downloadmienphi.net/file/downloadfile2/169/1398632.pdf\">Graceful Database Schema Evolution</a></p>\n<p>I think there might be some resources there to implement a \"structurally aware\" ETL or migration tool that can deal with schema evolution.  If it turns out something like Zhang-Shasha is useful for that, let me know, because I'd love to make a prototype with some of the tree diff code I've already written.</p>\n<p>I think there was some other aspect of database algorithms we talked about but I have forgotten now.  Anyway, that's hopefully a start and if you turn up other stuff (most of that seems to end in the mid-2000s; would be nice to know what happened since then... (inb4 nosql)) definitely let me know.</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 116388234,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "julian@cipht.net",
            "sender_full_name": "Julian Squires (he) (F2'17)",
            "sender_id": 101992,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "Comparison (?) algorithm resources",
            "submessages": [],
            "timestamp": 1506523544,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/793f1e51574a325430b2afc5d6e929fbda98f32e?x=x&version=6",
            "client": "website",
            "content": "<p>Awesome, thanks! I'll probably get to looking at some of this before the end of the week.</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 116389687,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "l.whiteavian@gmail.com",
            "sender_full_name": "Laura White-Avian (she) (F2'17)",
            "sender_id": 102012,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "Comparison (?) algorithm resources",
            "submessages": [],
            "timestamp": 1506525923,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/793f1e51574a325430b2afc5d6e929fbda98f32e?x=x&version=6",
            "client": "website",
            "content": "<p>Who has experience with SQL Server on Linux? I'm trying to figure out how to run statements from the shell command line. I do this with pipe for Postgres and MySQL, but am struggling with getting it to work for MSSQL.</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 116439371,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "l.whiteavian@gmail.com",
            "sender_full_name": "Laura White-Avian (she) (F2'17)",
            "sender_id": 102012,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "MSSQL on Linux",
            "submessages": [],
            "timestamp": 1506622117,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/4401c7ea9c62aa8e62f7c8907b1db771?d=identicon&version=1",
            "client": "website",
            "content": "<p>I'm working on this as we speak! I'm using the <code>pyodbc</code> python package but haven't tried pipe before so I may not be much help.</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 116439857,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "katz.stephenj@gmail.com",
            "sender_full_name": "Steve Katz (he) (F'13)",
            "sender_id": 2872,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "MSSQL on Linux",
            "submessages": [],
            "timestamp": 1506622849,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/793f1e51574a325430b2afc5d6e929fbda98f32e?x=x&version=6",
            "client": "website",
            "content": "<p>I just solved my problem with this sql-cli package: <a href=\"https://www.npmjs.com/package/sql-cli\" target=\"_blank\" title=\"https://www.npmjs.com/package/sql-cli\">https://www.npmjs.com/package/sql-cli</a>. It allows for a query parameter.</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 116439963,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "l.whiteavian@gmail.com",
            "sender_full_name": "Laura White-Avian (she) (F2'17)",
            "sender_id": 102012,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "MSSQL on Linux",
            "submessages": [],
            "timestamp": 1506623040,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/793f1e51574a325430b2afc5d6e929fbda98f32e?x=x&version=6",
            "client": "website",
            "content": "<p>So you're doing everything from within Python? What all are you doing?</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 116440104,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "l.whiteavian@gmail.com",
            "sender_full_name": "Laura White-Avian (she) (F2'17)",
            "sender_id": 102012,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "MSSQL on Linux",
            "submessages": [],
            "timestamp": 1506623177,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/4401c7ea9c62aa8e62f7c8907b1db771?d=identicon&version=1",
            "client": "website",
            "content": "<p>nice! We're just reading a list of all of our company's non-decommissioned servers and comparing it to the servers we have deployed Salt to to track our progress. Nothing complicated at all, just an inner join via pyodbc and a set difference via python.</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 116441022,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "katz.stephenj@gmail.com",
            "sender_full_name": "Steve Katz (he) (F'13)",
            "sender_id": 2872,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "MSSQL on Linux",
            "submessages": [],
            "timestamp": 1506624596,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/793f1e51574a325430b2afc5d6e929fbda98f32e?x=x&version=6",
            "client": "website",
            "content": "<p>Hey, neat, trying out Salt was going to be one of my next steps. Are you a person who can give pointers and answer questions about it? (this is getting sort of off the topic of databases at this point)</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 116441245,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "l.whiteavian@gmail.com",
            "sender_full_name": "Laura White-Avian (she) (F2'17)",
            "sender_id": 102012,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "MSSQL on Linux",
            "submessages": [],
            "timestamp": 1506624954,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/4401c7ea9c62aa8e62f7c8907b1db771?d=identicon&version=1",
            "client": "website",
            "content": "<p>For sure! I think <span class=\"user-mention\" data-user-email=\"james@hackerschool.com\" data-user-id=\"2113\">@James J. Porter (S'13)</span> also has experience with Salt. <a class=\"stream\" data-stream-id=\"25432\" href=\"/#narrow/stream/devops\">#devops</a> might be a good place for those q's. Salt is great - it does have a slight learning curve but the docs and community are quite helpful.</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 116441781,
            "is_me_message": false,
            "reactions": [
                {
                    "emoji_code": "1f44d",
                    "emoji_name": "thumbs_up",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "l.whiteavian@gmail.com",
                        "full_name": "Laura White-Avian (she) (F2'17)",
                        "id": 102012
                    },
                    "user_id": 102012
                }
            ],
            "recipient_id": 41342,
            "sender_email": "katz.stephenj@gmail.com",
            "sender_full_name": "Steve Katz (he) (F'13)",
            "sender_id": 2872,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "MSSQL on Linux",
            "submessages": [],
            "timestamp": 1506625762,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/68c07aa24ae39681409794daff1a921b08e5e324?x=x&version=2",
            "client": "website",
            "content": "<p>I do have experience with Salt and I loooooove it! It's been a long time since I've used it so I probably can't answer specific questions, but I feel very strongly that it's the best configuration management system and would be happy to bend your ear about it anytime <img alt=\":grin:\" class=\"emoji\" src=\"/static/generated/emoji/images/emoji/unicode/1f601.png\" title=\"grin\"></p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 116443212,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "james@recurse.com",
            "sender_full_name": "James J. Porter (he) (S'13)",
            "sender_id": 2113,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "MSSQL on Linux",
            "submessages": [],
            "timestamp": 1506628161,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/0031ae6808e421803a47dd48c189e6a205070b92?x=x&version=5",
            "client": "website",
            "content": "<p><a href=\"/user_uploads/13/vPlgEJeRIPy8cUJer6gMPHTw/Database_Architecture.pdf\" target=\"_blank\" title=\"Database_Architecture.pdf\">Database_Architecture.pdf</a></p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 116446050,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "jacquin.mininger@gmail.com",
            "sender_full_name": "Jacquin Mininger (F2'17)",
            "sender_id": 102005,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "Database Internals Reading group",
            "submessages": [],
            "timestamp": 1506632880,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/81c6c8040fc0263607edd05c09dacf6b?d=identicon&version=1",
            "client": "website",
            "content": "<p>Berkeley DB article and source:<br>\n - <a href=\"http://aosabook.org/en/bdb.html\" target=\"_blank\" title=\"http://aosabook.org/en/bdb.html\">http://aosabook.org/en/bdb.html</a><br>\n - <a href=\"https://github.com/berkeleydb/libdb\" target=\"_blank\" title=\"https://github.com/berkeleydb/libdb\">https://github.com/berkeleydb/libdb</a><br>\n - <a href=\"https://github.com/pfalcon/berkeley-db-1.xx\" target=\"_blank\" title=\"https://github.com/pfalcon/berkeley-db-1.xx\">https://github.com/pfalcon/berkeley-db-1.xx</a> (older, simpler)</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 116446398,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "julian@cipht.net",
            "sender_full_name": "Julian Squires (he) (F2'17)",
            "sender_id": 101992,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "Database Internals Reading group",
            "submessages": [],
            "timestamp": 1506633408,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/81c6c8040fc0263607edd05c09dacf6b?d=identicon&version=1",
            "client": "website",
            "content": "<p>Other interesting early reading:<br>\n - <a href=\"https://github.com/antirez/redis\" target=\"_blank\" title=\"https://github.com/antirez/redis\">https://github.com/antirez/redis</a><br>\n - <a href=\"https://github.com/memcached/memcached\" target=\"_blank\" title=\"https://github.com/memcached/memcached\">https://github.com/memcached/memcached</a><br>\nFeel free to talk in this thread or elsewhere about how to get started, what looks interesting, post silly things in comments, etc<br>\nI will post some advice for reading C programs later</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 116446469,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "julian@cipht.net",
            "sender_full_name": "Julian Squires (he) (F2'17)",
            "sender_id": 101992,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "Database Internals Reading group",
            "submessages": [],
            "timestamp": 1506633555,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/40e1eb4186c76edfecca264f74e088ed0e62af25?x=x&version=2",
            "client": "website",
            "content": "<p>Where can I read about how people manage really large datasets? For example how does Twitter or Pinterest etc scale? </p>\n<p>I got the \"design twitter\" problem during a recent interview and I thought about it a lot afterwards without much good insights.</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 116467456,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "jaseemabid@gmail.com",
            "sender_full_name": "Jaseem Abid (he) (S1'17)",
            "sender_id": 101128,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "Large scale database patterns",
            "submessages": [],
            "timestamp": 1506680024,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/4c1c5789a9ec48818bbc90f3fdc324560d9a2021?x=x&version=2",
            "client": "website",
            "content": "<p><span class=\"user-mention\" data-user-email=\"jaseemabid@gmail.com\" data-user-id=\"101128\">@Jaseem Abid (S1'17)</span> I liked the book \"Designing Data-Intensive Applications\" for learning about this kind of thing. The title is a bit of an undersell -- it goes into quite a bit of detail about how different types of databases work, not just how to use them.</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 116470009,
            "is_me_message": false,
            "reactions": [
                {
                    "emoji_code": "1f44d",
                    "emoji_name": "thumbs_up",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "jaseemabid@gmail.com",
                        "full_name": "Jaseem Abid (he) (S1'17)",
                        "id": 101128
                    },
                    "user_id": 101128
                },
                {
                    "emoji_code": "1f44d",
                    "emoji_name": "thumbs_up",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "Dwaynekj@gmail.com",
                        "full_name": "Dwayne Khallique Jones (F'12)",
                        "id": 915
                    },
                    "user_id": 915
                }
            ],
            "recipient_id": 41342,
            "sender_email": "logan.buckley@gmail.com",
            "sender_full_name": "Logan Buckley (S1'17)",
            "sender_id": 101096,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "Large scale database patterns",
            "submessages": [],
            "timestamp": 1506685725,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/81c6c8040fc0263607edd05c09dacf6b?d=identicon&version=1",
            "client": "website",
            "content": "<p>I think I will write a blog post or two about some specific code reading techniques I find useful, but in the mean time I should (partially) recommend this book: <a href=\"https://www.spinellis.gr/codereading/\" target=\"_blank\" title=\"https://www.spinellis.gr/codereading/\">Code Reading by Spinellis</a>.  I thought it would be nice to write a book about reading code, and then wasted my time, and sure enough a year or two later this book came out, proving that procrastination solves all problems.  I think there are some missed opportunities in it but it's not bad at all IIRC.</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 116635364,
            "is_me_message": false,
            "reactions": [
                {
                    "emoji_code": "1f44d",
                    "emoji_name": "thumbs_up",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "justyna.janczyszyn@gmail.com",
                        "full_name": "Justyna Lidia Janczyszyn (she) (F2'17)",
                        "id": 101996
                    },
                    "user_id": 101996
                },
                {
                    "emoji_code": "1f44d",
                    "emoji_name": "thumbs_up",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "davitf@gmail.com",
                        "full_name": "Davi Tassinari de Figueiredo (F2'17)",
                        "id": 102000
                    },
                    "user_id": 102000
                },
                {
                    "emoji_code": "1f44d",
                    "emoji_name": "thumbs_up",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "laura.peskin@gmail.com",
                        "full_name": "Laura Peskin (F2'17)",
                        "id": 102045
                    },
                    "user_id": 102045
                },
                {
                    "emoji_code": "1f44d",
                    "emoji_name": "thumbs_up",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "jacquin.mininger@gmail.com",
                        "full_name": "Jacquin Mininger (F2'17)",
                        "id": 102005
                    },
                    "user_id": 102005
                }
            ],
            "recipient_id": 41342,
            "sender_email": "julian@cipht.net",
            "sender_full_name": "Julian Squires (he) (F2'17)",
            "sender_id": 101992,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "Database Internals Reading group",
            "submessages": [],
            "timestamp": 1507053669,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/6646d75a6aaec762c95821b761049e6d?d=identicon&version=1",
            "client": "website",
            "content": "<p>I'm using Firebase (a JSON database) for an app that I'm making, and something I don't understand is how to best access the key of an object when I convert its parent object to an array. I think an example will make this clearer. </p>\n<p>Let's say I have a \"posts\" object which contains let's say 10 post key-value pairs.</p>\n<div class=\"codehilite\"><pre><span></span>{\n  post1: {},\n  post2: {},\n  ...\n}\n</pre></div>\n\n\n<p>I often want to convert the posts object in my code to an array, so that I can do things like filter or sort the posts. The problem is, when I transform the object into an array of the posts' values, I lose the keys of each post (post1, post2, etc.). I often need those keys when I map the posts to an array of React components (for example).</p>\n<p>I can fix this by saving the key of each post in the post object itself in the database, like this:</p>\n<div class=\"codehilite\"><pre><span></span>{\n  post1: {\n    key: &#39;post1&#39;\n  },\n  post2: {\n    key: &#39;post2&#39;\n  },\n  ...\n}\n</pre></div>\n\n\n<p>But then I'm duplicating the post key string, which seems not ideal. Alternatively, I could add the key into the object at runtime, when I convert the object to an array - but that seems even worse, since it has to happen every time I run the code.</p>\n<p>Anyone know if there's a standard approach here that I'm missing?</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 116676799,
            "is_me_message": false,
            "last_edit_timestamp": 1507135744,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "nathanwshane@gmail.com",
            "sender_full_name": "Nathan Weeks Shane (F1'17)",
            "sender_id": 101725,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "JSON database key question",
            "submessages": [],
            "timestamp": 1507135697,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/6646d75a6aaec762c95821b761049e6d?d=identicon&version=1",
            "client": "website",
            "content": "<p><span class=\"user-mention\" data-user-email=\"dabbagh.awsen@gmail.com\" data-user-id=\"101320\">@Aos Dabbagh (S2'17)</span> I know you've done a bunch of work with Mongo, maybe you have an idea about this?</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 116676828,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "nathanwshane@gmail.com",
            "sender_full_name": "Nathan Weeks Shane (F1'17)",
            "sender_id": 101725,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "JSON database key question",
            "submessages": [],
            "timestamp": 1507135785,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/b3969612f0d6f4b398a1eec04087aafc0a38475e?x=x&version=2",
            "client": "ZulipElectron",
            "content": "<p><span class=\"user-mention\" data-user-email=\"nathanwshane@gmail.com\" data-user-id=\"101725\">@Nathan Weeks Shane (F1'17)</span> I've found lodash pretty useful in situations like this (sorting/filtering/iterating over objects). For example: <a href=\"https://lodash.com/docs/4.17.4#filter\" target=\"_blank\" title=\"https://lodash.com/docs/4.17.4#filter\">https://lodash.com/docs/4.17.4#filter</a> -- I haven't used it in conjunction with a database, though</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 116677675,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "joebeach@gmail.com",
            "sender_full_name": "Joe Beach (F2'17)",
            "sender_id": 102026,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "JSON database key question",
            "submessages": [],
            "timestamp": 1507137088,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/1bb84c08158220b49298959f911ba7f4f7300245?x=x&version=2",
            "client": "website",
            "content": "<p>I've run into a similar issue with document structure. <br>\nMany JSON datastores don't like nested data. Some documents become unruly without nesting. You can try both and profile for performance.<br>\nYour data could also be an array of objects:<br>\n[ {key: 'post1},  {key:'post2'} ]</p>\n<p>In a project that I work on, <a href=\"https://remix.epiccry.com/json/201710030010\" target=\"_blank\" title=\"https://remix.epiccry.com/json/201710030010\">https://remix.epiccry.com/json/201710030010</a>, I include the key as an attribute inside the object. I must retain this information. It seems redundant, but for key/value post1: {}, the key happens to be descriptive, but that key could be arbitrary. It just needs to be unique. The internal name should be meaningful to the object and provide information.<br>\nMy application calls the array and retrieves all of its objects for display. If you are calling individual key/value pairs, you might want to move them to be top level.</p>\n<p>I haven't worked on my project much recently, but these are examples of the data. It's more complicated than most, but works for now.</p>\n<p>I transform a PDF into JSON:<br>\n<a href=\"https://remix.epiccry.com/json/201710030010\" target=\"_blank\" title=\"https://remix.epiccry.com/json/201710030010\">https://remix.epiccry.com/json/201710030010</a><br>\nI style the JSON as html:<br>\n<a href=\"https://remix.epiccry.com/inspection/201710030010\" target=\"_blank\" title=\"https://remix.epiccry.com/inspection/201710030010\">https://remix.epiccry.com/inspection/201710030010</a><br>\nThis is the original document:<br>\n<a href=\"http://appsrv.achd.net/reports/rwservlet?food_rep_insp&amp;P_ENCOUNTER=201710030010\" target=\"_blank\" title=\"http://appsrv.achd.net/reports/rwservlet?food_rep_insp&amp;P_ENCOUNTER=201710030010\">http://appsrv.achd.net/reports/rwservlet?food_rep_insp&amp;P_ENCOUNTER=201710030010</a></p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 116681718,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "kdurril@gmail.com",
            "sender_full_name": "Kenneth Alexander Durril (he) (S2'17)",
            "sender_id": 101321,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "JSON database key question",
            "submessages": [],
            "timestamp": 1507143980,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/32721626292fa2708ee74d852696e44f426cd631?x=x&version=2",
            "client": "website",
            "content": "<p><span class=\"user-mention\" data-user-email=\"nathanwshane@gmail.com\" data-user-id=\"101725\">@Nathan Weeks Shane (F1'17)</span> Mongo's API allowed for more advanced parsing methods on objects that were not possible with vanilla JS (<a href=\"https://docs.mongodb.com/manual/reference/operator/query/eq/#op._S_eq\" target=\"_blank\" title=\"https://docs.mongodb.com/manual/reference/operator/query/eq/#op._S_eq\">a simple example</a>). I wouldn't be surprised if Firebase had this same functionality (but perhaps implemented differently). I don't know exactly how you're querying your data from Firebase, but maybe instead of getting the entirety of the collection you could query the db based on what you need at the time.</p>\n<p>I would be more than happy to pair with you on this and we can dig into Firebase's docs!</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 116683104,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "dabbagh.aos@gmail.com",
            "sender_full_name": "Aos Dabbagh (S2'17)",
            "sender_id": 101320,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "JSON database key question",
            "submessages": [],
            "timestamp": 1507146194,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/81c6c8040fc0263607edd05c09dacf6b?d=identicon&version=1",
            "client": "website",
            "content": "<p>I moved the DBMS source reading group booking on the calendar from Babbage to Hopper because I think it makes sense to project lots of code during the discussion.</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 116725236,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "julian@cipht.net",
            "sender_full_name": "Julian Squires (he) (F2'17)",
            "sender_id": 101992,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "Database Internals Reading group",
            "submessages": [],
            "timestamp": 1507227165,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/f6bd929465d6d225def8062d5a9d3f3f?d=identicon&version=1",
            "client": "website",
            "content": "<p>I enjoy this comment:</p>\n<div class=\"codehilite\"><pre><span></span>45b2af2025 src/txn/txn.c (Oracle Corporation 2010-08-27 08:44:00 -0700  242)    /*\n45b2af2025 src/txn/txn.c (Oracle Corporation 2010-08-27 08:44:00 -0700  243)     * We set TXN_BULK only for the outermost transaction.  This\n45b2af2025 src/txn/txn.c (Oracle Corporation 2010-08-27 08:44:00 -0700  244)     * is a temporary limitation; in the future we will allow it\n45b2af2025 src/txn/txn.c (Oracle Corporation 2010-08-27 08:44:00 -0700  245)     * for nested transactions as well.  See #17669 for details.\n45b2af2025 src/txn/txn.c (Oracle Corporation 2010-08-27 08:44:00 -0700  246)     *\n45b2af2025 src/txn/txn.c (Oracle Corporation 2010-08-27 08:44:00 -0700  247)     * Also, ignore requests for DB_TXN_BULK if replication is enabled.\n45b2af2025 src/txn/txn.c (Oracle Corporation 2010-08-27 08:44:00 -0700  248)     */\n</pre></div>\n\n\n<p>If I'm reading the right version of the API docs, this \"temporary limitation\" still exists. Unfortunately, I wasn't able to find <code>#17669</code>.</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 116730613,
            "is_me_message": false,
            "last_edit_timestamp": 1507235713,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "danluu@gmail.com",
            "sender_full_name": "Dan Luu (W'13)",
            "sender_id": 820,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "Database Internals Reading group",
            "submessages": [],
            "timestamp": 1507234907,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/f6bd929465d6d225def8062d5a9d3f3f?d=identicon&version=1",
            "client": "website",
            "content": "<p>I also like this comment in <code>hash.c</code></p>\n<div class=\"codehilite\"><pre><span></span>                                                /* XXX\n                                                 * It&#39;s not clear that this is\n                                                 * the right way to fix this,\n                                                 * but here goes.\n                                                 * If we are backing up onto a\n                                                 * duplicate, then we need to\n                                                 * position ourselves at the\n                                                 * end of the duplicate set.\n                                                 * We probably need to make\n                                                 * this work for H_OFFDUP too.\n                                                 * It might be worth making a\n                                                 * dummy cursor and calling\n                                                 * __ham_item_prev.\n                                                 */\n</pre></div>\n\n\n<p>also</p>\n<div class=\"codehilite\"><pre><span></span>                                space -= (is_key ? 4 : 2) * sizeof(*offp);\n                                size += (is_key ? 4 : 2) * sizeof(*offp);\n                                /*\n                                 * Since space is an unsigned, if we happen\n                                 * to wrap, then this comparison will turn out\n                                 * to be true.  XXX Wouldn&#39;t it be better to\n                                 * simply check above that space is greater than\n                                 * the value we&#39;re about to subtract???\n                                 */\n                                if (space &gt; data-&gt;ulen) {\n                                        if (!is_dup || dup_off == 0)\n                                                goto back_up;\n                                        dup_off -= (db_indx_t)\n                                            DUP_SIZE((u_int32_t)offp[1]);\n                                        goto get_space;\n                                }\n</pre></div>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 116731418,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "danluu@gmail.com",
            "sender_full_name": "Dan Luu (W'13)",
            "sender_id": 820,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "Database Internals Reading group",
            "submessages": [],
            "timestamp": 1507235961,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/1d52035dd955895981db2493a8fdbf0da83a69e3?x=x&version=2",
            "client": "website",
            "content": "<p><a href=\"https://github.com/tramwaj29/berkeley-db-1.xx\" target=\"_blank\" title=\"https://github.com/tramwaj29/berkeley-db-1.xx\">https://github.com/tramwaj29/berkeley-db-1.xx</a></p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 116733120,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "justyna.janczyszyn@gmail.com",
            "sender_full_name": "Justyna Lidia Janczyszyn (she) (F2'17)",
            "sender_id": 101996,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "Database Internals Reading group",
            "submessages": [],
            "timestamp": 1507238689,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/81c6c8040fc0263607edd05c09dacf6b?d=identicon&version=1",
            "client": "website",
            "content": "<p>plz add <code>tokenrove</code> thx</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 116733208,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "julian@cipht.net",
            "sender_full_name": "Julian Squires (he) (F2'17)",
            "sender_id": 101992,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "Database Internals Reading group",
            "submessages": [],
            "timestamp": 1507238839,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/81c6c8040fc0263607edd05c09dacf6b?d=identicon&version=1",
            "client": "website",
            "content": "<p>So I can comment on the commit, but unfortunately since it's one giant import commit, it's pretty hard to use.  I wonder if we broke each subsystem into a separate PR, that might be helpful.</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 116761337,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "julian@cipht.net",
            "sender_full_name": "Julian Squires (he) (F2'17)",
            "sender_id": 101992,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "Database Internals Reading group",
            "submessages": [],
            "timestamp": 1507298136,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/81c6c8040fc0263607edd05c09dacf6b?d=identicon&version=1",
            "client": "website",
            "content": "<p>(we could do that with libdb 2.0 and then we'd get the txn stuff, too)</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 116761385,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "julian@cipht.net",
            "sender_full_name": "Julian Squires (he) (F2'17)",
            "sender_id": 101992,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "Database Internals Reading group",
            "submessages": [],
            "timestamp": 1507298202,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/6646d75a6aaec762c95821b761049e6d?d=identicon&version=1",
            "client": "website",
            "content": "<p>Sorry for the slow response guys!</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 116780092,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "nathanwshane@gmail.com",
            "sender_full_name": "Nathan Weeks Shane (F1'17)",
            "sender_id": 101725,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "JSON database key question",
            "submessages": [],
            "timestamp": 1507330393,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/6646d75a6aaec762c95821b761049e6d?d=identicon&version=1",
            "client": "website",
            "content": "<p><span class=\"user-mention\" data-user-email=\"dabbagh.awsen@gmail.com\" data-user-id=\"101320\">@Aos Dabbagh (S2'17)</span> Pairing sounds cool! I think Firebase probably doesn't have what you're describing, because it's a fairly simple database without much complex functionality. I'd love to look at how Mongo does this, though, as a comparison (and to see what I'm missing out on).</p>\n<p>Let's pair next week on Thursday or Friday if you'll be around!</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 116780141,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "nathanwshane@gmail.com",
            "sender_full_name": "Nathan Weeks Shane (F1'17)",
            "sender_id": 101725,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "JSON database key question",
            "submessages": [],
            "timestamp": 1507330489,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/6646d75a6aaec762c95821b761049e6d?d=identicon&version=1",
            "client": "website",
            "content": "<p><span class=\"user-mention\" data-user-email=\"kdurril@gmail.com\" data-user-id=\"101321\">@Kenneth Alexander Durril (S2'17)</span> Interesting to see that data from your project. What I'm starting to understand is that JSON databases seem to take a much more flexible approach to data standardization than SQL databases, with which I have more experience.</p>\n<p>One thing about firebase is that it doesn't actually allow arrays, so I guess that's one way in which it's not true JSON. In my application, I'm using meaningful keys for my objects because I want it to be easy to fetch those objects by those keys. The web URL is essentially /posts/post1, and so I can then go fetch the key based on that URL quite easily. But then I want to have the keys in the objects as well, so I've put them in both places. I guess that's probably just fine :)</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 116780344,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "nathanwshane@gmail.com",
            "sender_full_name": "Nathan Weeks Shane (F1'17)",
            "sender_id": 101725,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "JSON database key question",
            "submessages": [],
            "timestamp": 1507330830,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/3f6bef626649c46b4cc3fd9f67c151a19170da5e?x=x&version=21",
            "client": "website",
            "content": "<p><span class=\"user-mention\" data-user-email=\"jaseemabid@gmail.com\" data-user-id=\"101128\">@Jaseem Abid (S1'17)</span> Regarding system design more generally, and the \"design twitter\" problem specifically, I've found <a href=\"https://www.hiredintech.com/classrooms/system-design/lesson/52\" target=\"_blank\" title=\"https://www.hiredintech.com/classrooms/system-design/lesson/52\">https://www.hiredintech.com/classrooms/system-design/lesson/52</a> to be a good resource.</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 116810154,
            "is_me_message": false,
            "reactions": [
                {
                    "emoji_code": "1f642",
                    "emoji_name": "simple_smile",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "jaseemabid@gmail.com",
                        "full_name": "Jaseem Abid (he) (S1'17)",
                        "id": 101128
                    },
                    "user_id": 101128
                },
                {
                    "emoji_code": "1f642",
                    "emoji_name": "simple_smile",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "danluu@gmail.com",
                        "full_name": "Dan Luu (W'13)",
                        "id": 820
                    },
                    "user_id": 820
                }
            ],
            "recipient_id": 41342,
            "sender_email": "jkozak@fmail.co.uk",
            "sender_full_name": "Jake \u26e4 Prozvyshe (they) (W1'17)",
            "sender_id": 8478,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "Large scale database patterns",
            "submessages": [],
            "timestamp": 1507404048,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/3f6bef626649c46b4cc3fd9f67c151a19170da5e?x=x&version=21",
            "client": "website",
            "content": "<p>also <span class=\"user-mention\" data-user-email=\"logan.buckley@gmail.com\" data-user-id=\"101096\">@Logan Buckley (S1'17)</span> I think <span class=\"user-mention\" data-user-email=\"martin@kleppmann.com\" data-user-id=\"8654\">@Martin Kleppmann</span> was a resident here once.</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 116810199,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "jkozak@fmail.co.uk",
            "sender_full_name": "Jake \u26e4 Prozvyshe (they) (W1'17)",
            "sender_id": 8478,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "Large scale database patterns",
            "submessages": [],
            "timestamp": 1507404143,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/4c1c5789a9ec48818bbc90f3fdc324560d9a2021?x=x&version=2",
            "client": "website",
            "content": "<p>Oh neat! I didn\u2019t know that.</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 116811103,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "logan.buckley@gmail.com",
            "sender_full_name": "Logan Buckley (S1'17)",
            "sender_id": 101096,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "Large scale database patterns",
            "submessages": [],
            "timestamp": 1507406427,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/4e3ad19c8c76fd5ffa14d009874e410f724244e5?x=x&version=2",
            "client": "website",
            "content": "<p>I quite like <a href=\"http://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.206.830&amp;rep=rep1&amp;type=pdf\" target=\"_blank\" title=\"http://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.206.830&amp;rep=rep1&amp;type=pdf\">http://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.206.830&amp;rep=rep1&amp;type=pdf</a> for thinking about fan-in+fan-out problems at scale (from Yahoo).</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 116816098,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "holtchesley+rc@gmail.com",
            "sender_full_name": "Brennan Holt Chesley (S2'17)",
            "sender_id": 101377,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "Large scale database patterns",
            "submessages": [],
            "timestamp": 1507418946,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/81c6c8040fc0263607edd05c09dacf6b?d=identicon&version=1",
            "client": "website",
            "content": "<p>Ok, I've spent like three days trying to track down earlier versions of Berkeley DB.  I had the idea to dig through early Linux distribution archives, but it's been hard since a lot of the old FTP sites, like sunsite, have been shut down (for sunsite there's a torrent but I didn't really want to torrent this huge thing from RC).  Although I did find the first version of Slackware I ever used (1.1.2!) and had some serious nostalgia.</p>\n<p>So far I've found BDB 2.3.16.  If we can't find anything earlier, I'll put that in on that repo as PRs (per subdirectory) against an empty branch.</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 116873754,
            "is_me_message": false,
            "reactions": [
                {
                    "emoji_code": "1f389",
                    "emoji_name": "tada",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "jacquin.mininger@gmail.com",
                        "full_name": "Jacquin Mininger (F2'17)",
                        "id": 102005
                    },
                    "user_id": 102005
                },
                {
                    "emoji_code": "1f389",
                    "emoji_name": "tada",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "ahmad19526@gmail.com",
                        "full_name": "Ahmed Abdalla (SP2'16)",
                        "id": 7874
                    },
                    "user_id": 7874
                }
            ],
            "recipient_id": 41342,
            "sender_email": "julian@cipht.net",
            "sender_full_name": "Julian Squires (he) (F2'17)",
            "sender_id": 101992,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "Database Internals Reading group",
            "submessages": [],
            "timestamp": 1507559354,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/e23e4097f1453792021311e52aa09bde?d=identicon&version=1",
            "client": "ZulipElectron",
            "content": "<p><span class=\"user-mention\" data-user-email=\"julian@cipht.net\" data-user-id=\"101992\">@Julian Squires (F2'17)</span> which repo are you referring to?</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 116873846,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "ahmad19526@gmail.com",
            "sender_full_name": "Ahmed Abdalla (SP2'16)",
            "sender_id": 7874,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "Database Internals Reading group",
            "submessages": [],
            "timestamp": 1507559478,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/81c6c8040fc0263607edd05c09dacf6b?d=identicon&version=1",
            "client": "website",
            "content": "<p>JJ's repo for commenting, above</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 116873902,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "julian@cipht.net",
            "sender_full_name": "Julian Squires (he) (F2'17)",
            "sender_id": 101992,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "Database Internals Reading group",
            "submessages": [],
            "timestamp": 1507559555,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/81c6c8040fc0263607edd05c09dacf6b?d=identicon&version=1",
            "client": "website",
            "content": "<p>I tried commenting on the big single commit there but it was awful.  (Hopefully you got notified if you got added as a contributor).</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 116873911,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "julian@cipht.net",
            "sender_full_name": "Julian Squires (he) (F2'17)",
            "sender_id": 101992,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "Database Internals Reading group",
            "submessages": [],
            "timestamp": 1507559584,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/81c6c8040fc0263607edd05c09dacf6b?d=identicon&version=1",
            "client": "website",
            "content": "<p>I was hoping to add some commentary on the b-tree implementation and the mempool, but I got distracted by trying to find the earliest snapshot of db 2.x so we could also look at txn.</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 116873969,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "julian@cipht.net",
            "sender_full_name": "Julian Squires (he) (F2'17)",
            "sender_id": 101992,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "Database Internals Reading group",
            "submessages": [],
            "timestamp": 1507559668,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/e23e4097f1453792021311e52aa09bde?d=identicon&version=1",
            "client": "ZulipElectron",
            "content": "<p>Are you referring to this repo: <a href=\"https://github.com/tramwaj29/berkeley-db-1.xx\" target=\"_blank\" title=\"https://github.com/tramwaj29/berkeley-db-1.xx\">https://github.com/tramwaj29/berkeley-db-1.xx</a></p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 116874041,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "ahmad19526@gmail.com",
            "sender_full_name": "Ahmed Abdalla (SP2'16)",
            "sender_id": 7874,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "Database Internals Reading group",
            "submessages": [],
            "timestamp": 1507559770,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/e23e4097f1453792021311e52aa09bde?d=identicon&version=1",
            "client": "ZulipElectron",
            "content": "<p>There seems to be only one contributor, <code>pfalcon</code></p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 116874044,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "ahmad19526@gmail.com",
            "sender_full_name": "Ahmed Abdalla (SP2'16)",
            "sender_id": 7874,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "Database Internals Reading group",
            "submessages": [],
            "timestamp": 1507559785,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/81c6c8040fc0263607edd05c09dacf6b?d=identicon&version=1",
            "client": "website",
            "content": "<p>This was discussed at the last meeting, but JJ created that repo and added (at least) me so I could comment on it.  (However, commenting on commits directly in github is fairly awful, especially when they're as huge as this one.  You can't even see my one comment attempt unless you go to the commit itself.)  I understood that the idea is that we'd all get added to the repo, and comment our findings as we read the code.  I later proposed making each subsystem a PR against an empty branch instead of the current arrangement.</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 116875124,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "julian@cipht.net",
            "sender_full_name": "Julian Squires (he) (F2'17)",
            "sender_id": 101992,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "Database Internals Reading group",
            "submessages": [],
            "timestamp": 1507561822,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/e23e4097f1453792021311e52aa09bde?d=identicon&version=1",
            "client": "ZulipElectron",
            "content": "<p>Thanks. There was also mention of a google doc for everyone to keep their notes together, is that still happening?</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 116875203,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "ahmad19526@gmail.com",
            "sender_full_name": "Ahmed Abdalla (SP2'16)",
            "sender_id": 7874,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "Database Internals Reading group",
            "submessages": [],
            "timestamp": 1507562028,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/f6bd929465d6d225def8062d5a9d3f3f?d=identicon&version=1",
            "client": "website",
            "content": "<p>I have no idea if there are other comments on that repo (I can't find them) and I don't know if the shared google doc was ever created so I'm going to drop a few comments in this thread. Here's some stuff that was interesting/weird/scary:</p>\n<p>bt_compare.c</p>\n<div class=\"codehilite\"><pre><span></span>        /*\n         * Overflow.\n         *\n         * XXX\n         * We ignore __db_moff() errors, because we have no way of returning\n         * them.\n         */\n        (void) __db_moff(dbp,\n            dbt, bo-&gt;pgno, bo-&gt;tlen, func == __bam_defcmp ? NULL : func, &amp;ret);\n        return (ret);\n</pre></div>\n\n\n<p>__bam_defcmp(a, b)</p>\n<div class=\"codehilite\"><pre><span></span>...\n         * If a size_t doesn&#39;t fit into a long, or if the difference between\n         * any two characters doesn&#39;t fit into an int, this routine can lose.\n         * What we need is a signed integral type that&#39;s guaranteed to be at\n         * least as large as a size_t, and there is no such thing.\n</pre></div>\n\n\n<p>We now have ptrdiff_t but I guess that's a \"recent\" invention? It exists for sure in <a href=\"http://www.dii.uchile.cl/~daespino/files/Iso_C_1999_definition.pdf\" target=\"_blank\" title=\"http://www.dii.uchile.cl/~daespino/files/Iso_C_1999_definition.pdf\">C99</a>. Not if it was in use earlier. I believe C99 existed as of the date of this source code, but they have all kinds of gross hacks for old weirdness, so maybe they didn't feel comfortable using it? I don't think it was standard, but the standard had been published.</p>\n<p>bt_recno.c</p>\n<p>__ram_source</p>\n<div class=\"codehilite\"><pre><span></span>         * We&#39;d like to test to see if the file is too big to mmap.  Since we\n         * don&#39;t know what size or type off_t&#39;s or size_t&#39;s are, or the largest\n         * unsigned integral type is, or what random insanity the local C\n         * compiler will perpetrate, doing the comparison in a portable way is\n         * flatly impossible.  Hope that mmap fails if the file is too large.\n</pre></div>\n\n\n<p>build_vms/db.h</p>\n<p>There's a fair amount of mac and windows specific hackery in build_vms. That seems kinda weird, but I guess it makes a kind of sense. The db.h files seem to be identical except for the definitions of some types.</p>\n<div class=\"codehilite\"><pre><span></span>$ diff build_vms/db.h include/db.h\n1d0\n&lt; /* DO NOT EDIT: automatically built by dist/distrib. */\n62,66c61,65\n&lt; typedef unsigned char u_int8_t;\n&lt; typedef short int16_t;\n&lt; typedef unsigned short u_int16_t;\n&lt; typedef int int32_t;\n&lt; typedef unsigned int u_int32_t;\n---\n&gt; @u_int8_decl@\n&gt; @int16_decl@\n&gt; @u_int16_decl@\n&gt; @int32_decl@\n&gt; @u_int32_decl@\n68a68,71\n&gt; @u_char_decl@\n&gt; @u_short_decl@\n&gt; @u_int_decl@\n&gt; @u_long_decl@\n</pre></div>\n\n\n<p>common/db_appinit.c</p>\n<div class=\"codehilite\"><pre><span></span>        /* Loop, trying to open a file. */\n        for (;;) {\n                if ((ret = __db_open(path, flags, flags, mode, fdp)) == 0)\n                        return (0);\n\n                /*\n                 * XXX:\n                 * If we don&#39;t get an EEXIST error, then there&#39;s something\n                 * seriously wrong.  Unfortunately, if the implementation\n                 * doesn&#39;t return EEXIST for O_CREAT and O_EXCL regardless\n                 * of other possible errors, we&#39;ve lost.\n                 */\n                if (ret != EEXIST) {\n                        __db_err(dbenv,\n                            &quot;tmp_open: %s: %s&quot;, path, strerror(ret));\n                        return (ret);\n                }\n</pre></div>\n\n\n<p>common/db_region.c</p>\n<div class=\"codehilite\"><pre><span></span>#ifndef HAVE_SPINLOCKS\n        /*\n         * XXX\n         * Lacking spinlocks, we must have a file descriptor for fcntl(2)\n         * locking, which implies using mmap(2) to map in a regular file.\n         * (Theoretically, we could probably get a file descriptor to lock\n         * other types of shared regions, but I don&#39;t see any reason to\n         * bother.)\n         *\n         * Since we may be using shared memory regions, e.g., shmget(2),\n         * and not mmap of regular files, the backing file may be only a\n         * few tens of bytes in length.  So, this depends on the ability\n         * to fcntl lock file offsets much larger than the physical file.\n         */\n        malloc_possible = 0;\n#endif\n\n#ifdef __hppa\n        /*\n         * XXX\n         * HP-UX won&#39;t permit mutexes to live in anything but shared memory.\n         * Instantiate a shared region file on that architecture, regardless.\n         */\n        malloc_possible = 0;\n#endif\n...\n        /*\n         * If a region is truly private, malloc the memory.  That&#39;s faster\n         * than either anonymous memory or a shared file.\n         */\n        if (malloc_possible &amp;&amp; F_ISSET(infop, REGION_PRIVATE)) {\n                if ((ret = __os_malloc(infop-&gt;size, NULL, &amp;infop-&gt;addr)) != 0)\n                        return (ret);\n</pre></div>\n\n\n<p>__os_malloc appears to be a wrapper for malloc with some portability fixes:</p>\n<div class=\"codehilite\"><pre><span></span>int\n__os_malloc(size, db_malloc, storep)\n        size_t size;\n        void *(*db_malloc) __P((size_t)), *storep;\n{\n        void *p;\n\n        *(void **)storep = NULL;\n\n        /* Never allocate 0 bytes -- some C libraries don&#39;t like it. */\n        if (size == 0)\n                ++size;\n\n        /* Some C libraries don&#39;t correctly set errno when malloc(3) fails. */\n        errno = 0;\n        if (db_malloc != NULL)\n                p = db_malloc(size);\n        else if (__db_jump.j_malloc != NULL)\n                p = __db_jump.j_malloc(size);\n        else\n                p = malloc(size);\n        if (p == NULL) {\n                if (errno == 0)\n                        errno = ENOMEM;\n                return (errno);\n        }\n\n#ifdef DIAGNOSTIC\n        memset(p, 0xdb, size);\n#endif\n        *(void **)storep = p;\n\n        return (0);\n}\n</pre></div>\n\n\n<p>Anyway, back to common/db_region.c, which looks like it must have been very annoying to debug:</p>\n<div class=\"codehilite\"><pre><span></span>                /*\n                 * If we&#39;re joining a region, figure out what it looks like.\n                 *\n                 * XXX\n                 * We have to figure out if the file is a regular file backing\n                 * a region that we want to map into our address space, or a\n                 * file with the information we need to find a shared anonymous\n                 * region that we want to map into our address space.\n                 *\n                 * All this noise is because some systems don&#39;t have a coherent\n                 * VM and buffer cache, and worse, if you mix operations on the\n                 * VM and buffer cache, half the time you hang the system.\n                 *\n                 * There are two possibilities.  If the file is the size of an\n                 * RLAYOUT structure, then we know that the real region is in\n                 * shared memory, because otherwise it would be bigger.  (As\n                 * the RLAYOUT structure size is smaller than a disk sector,\n                 * the only way it can be this size is if deliberately written\n                 * that way.)  In which case, retrieve the information we need\n                 * from the RLAYOUT structure and use it to acquire the shared\n                 * memory.\n                 *\n                 * If the structure is larger than an RLAYOUT structure, then\n                 * the file is backing the shared memory region, and we use\n                 * the current size of the file without reading any information\n                 * from the file itself so that we don&#39;t confuse the VM.\n                 *\n                 * And yes, this makes me want to take somebody and kill them,\n                 * but I can&#39;t think of any other solution.\n                 */\n</pre></div>\n\n\n<div class=\"codehilite\"><pre><span></span>                /*\n                 * If the region is anonymous, write the RLAYOUT information\n                 * into the backing file so that future region join and unlink\n                 * calls can find it.\n                 *\n                 * XXX\n                 * We MUST do the seek before we do the write.  On Win95, while\n                 * closing the last reference to an anonymous shared region\n                 * doesn&#39;t discard the region, it does zero it out.  So, the\n                 * REGION_CREATED may be set, but the file may have already\n                 * been written and the file descriptor may be at the end of\n                 * the file.\n                 */\n</pre></div>\n\n\n<div class=\"codehilite\"><pre><span></span>                /*\n                 * We now own the region.  There are a couple of things that\n                 * may have gone wrong, however.\n                 *\n                 * Problem #1: while we were waiting for the lock, the region\n                 * was deleted.  Detected by re-checking the valid flag, since\n                 * it&#39;s cleared by the delete region routines.\n                 */\n                if (rlp-&gt;valid != DB_REGIONMAGIC) {\n                        (void)__db_mutex_unlock(&amp;rlp-&gt;lock, infop-&gt;fd);\n                        goto retry;\n                }\n\n                /*\n                 * Problem #3: when we checked the size of the file, it was\n                 * still growing as part of creation.  Detected by the fact\n                 * that infop-&gt;size isn&#39;t the same size as the region.\n                 */\n                if (infop-&gt;size != rlp-&gt;size) {\n                        (void)__db_mutex_unlock(&amp;rlp-&gt;lock, infop-&gt;fd);\n                        goto retry;\n                }\n</pre></div>\n\n\n<p>What happened to problem #2? The first comment says \"a couple problems\", so maybe this is a joke and there are only two problems?</p>\n<div class=\"codehilite\"><pre><span></span>        /*\n         * XXX\n         * HP-UX won&#39;t permit mutexes to live in anything but shared memory.\n         * Instantiate a shared region file on that architecture, regardless.\n         *\n         * XXX\n         * There&#39;s a problem in cleaning this up on application exit, or on\n         * application failure.  If an application opens a database without\n         * an environment, we create a temporary backing mpool region for it.\n         * That region is marked REGION_PRIVATE, but as HP-UX won&#39;t permit\n         * mutexes to live in anything but shared memory, we instantiate a\n         * real file plus a memory region of some form.  If the application\n         * crashes, the necessary information to delete the backing file and\n         * any system region (e.g., the shmget(2) segment ID) is no longer\n         * availab...\n</pre></div>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 117010446,
            "is_me_message": false,
            "last_edit_timestamp": 1507833918,
            "reactions": [
                {
                    "emoji_code": "1f44d",
                    "emoji_name": "thumbs_up",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "ahmad19526@gmail.com",
                        "full_name": "Ahmed Abdalla (SP2'16)",
                        "id": 7874
                    },
                    "user_id": 7874
                },
                {
                    "emoji_code": "1f44d",
                    "emoji_name": "thumbs_up",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "jacquin.mininger@gmail.com",
                        "full_name": "Jacquin Mininger (F2'17)",
                        "id": 102005
                    },
                    "user_id": 102005
                },
                {
                    "emoji_code": "1f44d",
                    "emoji_name": "thumbs_up",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "me@wesleyac.com",
                        "full_name": "Wesley Aptekar-Cassels (they) (m8'20)",
                        "id": 101330
                    },
                    "user_id": 101330
                }
            ],
            "recipient_id": 41342,
            "sender_email": "danluu@gmail.com",
            "sender_full_name": "Dan Luu (W'13)",
            "sender_id": 820,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "Database Internals Reading group",
            "submessages": [],
            "timestamp": 1507832901,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/40e1eb4186c76edfecca264f74e088ed0e62af25?x=x&version=2",
            "client": "website",
            "content": "<p>Thanks <span class=\"user-mention\" data-user-email=\"logan.buckley@gmail.com\" data-user-id=\"101096\">@Logan Buckley (S1'17)</span> <span class=\"user-mention\" data-user-email=\"holtchesley+rc@gmail.com\" data-user-id=\"101377\">@Brennan Holt Chesley (S2'17)</span>  and <span class=\"user-mention\" data-user-email=\"jake@library.style\" data-user-id=\"8478\">@Jake Hickey (S1'17)</span></p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 117010482,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "jaseemabid@gmail.com",
            "sender_full_name": "Jaseem Abid (he) (S1'17)",
            "sender_id": 101128,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "Large scale database patterns",
            "submessages": [],
            "timestamp": 1507832998,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/81c6c8040fc0263607edd05c09dacf6b?d=identicon&version=1",
            "client": "website",
            "content": "<p>Yeah, I meant to put db-2.x in as several PRs but I've been completely consumed by getting my shell workshop up to a point where I can open it up, sorry</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 117011601,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "julian@cipht.net",
            "sender_full_name": "Julian Squires (he) (F2'17)",
            "sender_id": 101992,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "Database Internals Reading group",
            "submessages": [],
            "timestamp": 1507834510,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/81c6c8040fc0263607edd05c09dacf6b?d=identicon&version=1",
            "client": "website",
            "content": "<p>Opened a bunch of PRs in <a href=\"https://github.com/tramwaj29/berkeley-db-1.xx/pulls\" target=\"_blank\" title=\"https://github.com/tramwaj29/berkeley-db-1.xx/pulls\">https://github.com/tramwaj29/berkeley-db-1.xx/pulls</a></p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 117015887,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "julian@cipht.net",
            "sender_full_name": "Julian Squires (he) (F2'17)",
            "sender_id": 101992,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "Database Internals Reading group",
            "submessages": [],
            "timestamp": 1507840992,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/f6bd929465d6d225def8062d5a9d3f3f?d=identicon&version=1",
            "client": "website",
            "content": "<p>Link to the thing Julian mentioned: <a href=\"https://groups.google.com/forum/#!msg/nix-devel/KV9eomIdxWE/W8WMYrSlAQAJ\" target=\"_blank\" title=\"https://groups.google.com/forum/#!msg/nix-devel/KV9eomIdxWE/W8WMYrSlAQAJ\">https://groups.google.com/forum/#!msg/nix-devel/KV9eomIdxWE/W8WMYrSlAQAJ</a></p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 117016008,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "danluu@gmail.com",
            "sender_full_name": "Dan Luu (W'13)",
            "sender_id": 820,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "Database Internals Reading group",
            "submessages": [],
            "timestamp": 1507841178,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/f6bd929465d6d225def8062d5a9d3f3f?d=identicon&version=1",
            "client": "website",
            "content": "<p>I think I exceeded some kind of message length limit? Here's the rest of the previous message</p>\n<div class=\"codehilite\"><pre><span></span>        * available.  We can&#39;t completely fix the problem, but we try.\n         *\n         * The underlying UNIX __db_mapregion() code preferentially uses the\n         * mmap(2) interface with the MAP_ANON/MAP_ANONYMOUS flags for regions\n         * that are marked REGION_PRIVATE.  This means that we normally aren&#39;t\n         * holding any system resources when we get here, in which case we can\n         * delete the backing file.  This results in a short race, from the\n         * __db_open() call above to here.\n         *\n         * If, for some reason, we are holding system resources when we get\n         * here, we don&#39;t have any choice -- we can&#39;t delete the backing file\n         * because we may need it to detach from the resources.  Set the\n         * REGION_LASTDETACH flag, so that we do all necessary cleanup when\n         * the application closes the region.\n         */\n</pre></div>\n\n\n<p>db_checkpoint/db_checkpoint.c</p>\n<div class=\"codehilite\"><pre><span></span>        /*\n         * XXX\n         * Don&#39;t allow a fully unsigned 32-bit number, some compilers get\n         * upset and require it to be specified in hexadecimal and so on.\n         */\n#define MAX_UINT32_T    2147483647\n</pre></div>\n\n\n<p>What compilers!? Don't leave us hanging like that :-(</p>\n<p>log/log.c</p>\n<div class=\"codehilite\"><pre><span></span>         * Assumes that atoi(3) returns a 32-bit number.\n         */\n</pre></div>\n\n\n<p>log/log_get.c</p>\n<div class=\"codehilite\"><pre><span></span>         * We&#39;re calling malloc(3) with a region locked.  This isn&#39;t\n         * a good idea.\n         */\n        if ((ret = __os_malloc(len, NULL, &amp;tbuf)) != 0)\n                goto err1;\n</pre></div>\n\n\n<p>os/os_map.c</p>\n<div class=\"codehilite\"><pre><span></span> * Work around a bug in the VMS V7.1 mmap() implementation.  To map a file\n * into memory on VMS it needs to be opened in a certain way, originally.\n * To get the file opened in that certain way, the VMS mmap() closes the\n * file and re-opens it.  When it does this, it doesn&#39;t flush any caches\n * out to disk before closing.  The problem this causes us is that when the\n * memory cache doesn&#39;t get written out, the file isn&#39;t big enough to match\n * the memory chunk and the mmap() call fails.  This call to fsync() fixes\n * the problem.  DEC thinks this isn&#39;t a bug because of language in XPG5\n * discussing user responsibility for on-disk and in-memory synchronization.\n */\n#ifdef VMS\n        if (__os_fsync(fd) == -1)\n                return(errno);\n#endif\n</pre></div>\n\n\n<p>os/os_oflags.c</p>\n<div class=\"codehilite\"><pre><span></span>__db_oflags(oflags)\n        int oflags;\n{\n        u_int32_t dbflags;\n\n        /*\n         * XXX\n         * Convert POSIX 1003.1 open(2) flags to DB flags.  Not an exact\n         * science as most POSIX implementations don&#39;t have a flag value\n         * for O_RDONLY, it&#39;s simply the lack of a write flag.\n         */\n        dbflags = 0;\n        if (oflags &amp; O_CREAT)\n                dbflags |= DB_CREATE;\n        if (!(oflags &amp; (O_RDWR | O_WRONLY)) || oflags &amp; O_RDONLY)\n                dbflags |= DB_RDONLY;\n        if (oflags &amp; O_TRUNC)\n                dbflags |= DB_TRUNCATE;\n        return (dbflags);\n}\n</pre></div>\n\n\n<p>os_win32/os_map.c</p>\n<div class=\"codehilite\"><pre><span></span>int\n__db_mapinit()\n{\n        /*\n         * XXX\n         * Windows/95 leaves file contents uninitialized, bless its heart.\n         *\n         * Windows/NT initializes them.\n         */\n        return (!IS_WNT);\n}\n</pre></div>\n\n\n<p>BTW, win16 returns 0 for this.</p>\n<div class=\"codehilite\"><pre><span></span>         * It turns out that the kernel object underlying the named section\n         * is reference counted, but that the call to MapViewOfFile() above\n         * does NOT increment the reference count! So, if we close the handle\n         * here, the kernel deletes the object from the kernel namespace.\n         * When a second process comes along to join the region, the kernel\n         * happily creates a new object with the same name, but completely\n         * different identity. The two processes then have distinct isolated\n         * mapped sections, not at all what was wanted. Not closing the handle\n         * here fixes this problem.  We carry the handle around in the region\n         * structure so we can close it when unmap is called.  Ignore malloc\n         * errors, it just means we leak the memory.\n</pre></div>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 117016139,
            "is_me_message": false,
            "last_edit_timestamp": 1507841474,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "danluu@gmail.com",
            "sender_full_name": "Dan Luu (W'13)",
            "sender_id": 820,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "Database Internals Reading group",
            "submessages": [],
            "timestamp": 1507841392,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/f6bd929465d6d225def8062d5a9d3f3f?d=identicon&version=1",
            "client": "website",
            "content": "<p><span class=\"user-mention\" data-user-email=\"jacquin.mininger@gmail.com\" data-user-id=\"102005\">@Jacquin Mininger (F2'17)</span> Re: c++, someone passed this my way recently...</p>\n<p><a href=\"https://godbolt.org/#z:OYLghAFBqd5QCxAYwPYBMCmBRdBLAF1QCcAaPECAKxAEZSBnVAV2OUxAHIBSAJgGY8AO2QAbZlgDU3fgGFMADwAOmYngC2mIQQCGogPRpiLAsMwzs3AAwBBPoJHipM2QDNmBVuf6Xb94WISmNJyyAwE%2BKgW1nYCAU7BLh54ooQAntF%2BtgSY6kqiOjkuBGkqQjqakgBqmTbhxMzIBJIAYtIA7ABCMZK9kgBGqKiikjoA7jqEAPrEmDroaRAAlJJoQuEdnZKznsRCkngMUwyYBDJb3O0AIj19AG6oeOijE9MMzAxl6BDh6CAgihUak02j0/yMJjMUwQOiE6FE3lkFkkrhWl26tj6WNWCBCV0kv3%2B6lQd0wEFR51uvUuN0xfSqL0mBBmmHemmWq1Q62a6Kp2J2rH2d0pdOp1xifIeTwJpymdz0zDJNV4ADY%2BCrJHc0V0%2BViCAhDgBaCx3PEEiJEklkrUimzYvqHY6nM0EBreDF2%2B0HVySCDIBArf3LW1YmkS0WtDkyfFYVw6ZiiM78D18hnC5N8wbDA5HE48/j4uOiE62vmEgHKVQaLS6UTgkiQoSYaGw%2BGI5H%2B0vijNZGw5PIFIpyEplCrBAAqtXqjWaACVNmXXTPJEpjOpDs2R%2B6%2BR9hMBJDC4QizeXAVWQbX68Zkk2W0fEavUOuTlMt9Ee57Fw0miu1xvX6UiRdKGEZYvOwCygKexTKg/RUJgTRRsBUH7LOECHm2/yuGuUyPs%2BZIAFT6ocSxLOcHS0p69rxkQBxCIQeB6McHxfByawbOi2ynIK5p/BWQLVqCdYgO8nxaOgUxNqSxC8t2FziqBfQ0agKLCExomsYGXIcch3F7Lx/xnsCNZgiJLHiVMegTGkDCyTcyYUbq9yPM8zBCBhCISYo7BKKYXJsdpPI6gpVHYlKzwoXKCpkuOkgENqFyKfajp5i6bohl6WKmtGBkgMSpIQPFGX2mGvaZVmIwpc6OVFiWH6ZbF2UFpI47BvVfRhh%2BfKAqkyCEJIaEecEAaSCAB7oQlpWhWh7FzuqaLNVgCJDh6YEQLO6rqpIqD6qoCW5QwExKOhpDbbtxAAHQBuRU1YgAfmh%2B14D6E0HhdWD1KgixkQ5U18kNB5dvZKa2MIqRNgNLjCEm2AtayBAQC0UPaBYBErpNEbQ3FZpoJZrzNARSjFZyLK7PsSYpiFMRY%2BokxCEhq19EjcjQ8irjE7NkMsyjPjbGa47wxA6oUu1vSuBdeZReIZL8D9jO9Ch2xXRdeEbssF3ppTVycEspB1pwACsnCkEIXBWMbqBcEivDdDbBIsGwiQCLQxsEGbOu6wgcxYMQlC6wA1iABv8Bdqq0LQvC8O0BvtAAnO0AAc4d61wAAsxvqHQVhWCb7ukJbnDGwwIA527nDm7rcCwDAiAoE%2BSgpKo5CUGgeSN77YiwsAr4NEI/ukK4KQ5MQxcQP0ef9GpxBpFwLukK3F4APJCKIM/l8bWC00IwAInn%2BCzE0eCksX6%2BkIoCEeBwnBz9DmD6%2BbpCuhos863reD9MXkC66gvl4NpXCGlcEIVAhpvKYF/tpSQhpF68Cgb8aMyA%2BC206LQAAXlA1wEIbyskNAQBgcCIipH6NGIhiCbZIKLg7dgdBdb6yNrnU%2BBcFAJxVIaFUqdVgFG3r6JcfcVgQFwIQEg0hnanVkPXduIj%2BC0CWK7d2pFSBe3mKoP2pBA6p14BdFUKpeCp3aPwOOqcDap1jlHFOnB06kEzgbHOptGFcCLiXR%2B8jSBV1riYJQHhm5%2BgkQiX29BMD4CIP42hXB6F2IfgXewtBJBjEILiZhrD2GcK7jw3u/tZHOPXgopRPtVH60sdY2xecC6ONLvIgOIBU4qguvohOCd2jtF0bwKwvBaCx3MfwY2ESLYOKyRXUJnBeDdJKX0suAzSDSQYH/U2qcgA\" target=\"_blank\" title=\"https://godbolt.org/#z:OYLghAFBqd5QCxAYwPYBMCmBRdBLAF1QCcAaPECAKxAEZSBnVAV2OUxAHIBSAJgGY8AO2QAbZlgDU3fgGFMADwAOmYngC2mIQQCGogPRpiLAsMwzs3AAwBBPoJHipM2QDNmBVuf6Xb94WISmNJyyAwE%2BKgW1nYCAU7BLh54ooQAntF%2BtgSY6kqiOjkuBGkqQjqakgBqmTbhxMzIBJIAYtIA7ABCMZK9kgBGqKiikjoA7jqEAPrEmDroaRAAlJJoQuEdnZKznsRCkngMUwyYBDJb3O0AIj19AG6oeOijE9MMzAxl6BDh6CAgihUak02j0/yMJjMUwQOiE6FE3lkFkkrhWl26tj6WNWCBCV0kv3%2B6lQd0wEFR51uvUuN0xfSqL0mBBmmHemmWq1Q62a6Kp2J2rH2d0pdOp1xifIeTwJpymdz0zDJNV4ADY%2BCrJHc0V0%2BViCAhDgBaCx3PEEiJEklkrUimzYvqHY6nM0EBreDF2%2B0HVySCDIBArf3LW1YmkS0WtDkyfFYVw6ZiiM78D18hnC5N8wbDA5HE48/j4uOiE62vmEgHKVQaLS6UTgkiQoSYaGw%2BGI5H%2B0vijNZGw5PIFIpyEplCrBAAqtXqjWaACVNmXXTPJEpjOpDs2R%2B6%2BR9hMBJDC4QizeXAVWQbX68Zkk2W0fEavUOuTlMt9Ee57Fw0miu1xvX6UiRdKGEZYvOwCygKexTKg/RUJgTRRsBUH7LOECHm2/yuGuUyPs%2BZIAFT6ocSxLOcHS0p69rxkQBxCIQeB6McHxfByawbOi2ynIK5p/BWQLVqCdYgO8nxaOgUxNqSxC8t2FziqBfQ0agKLCExomsYGXIcch3F7Lx/xnsCNZgiJLHiVMegTGkDCyTcyYUbq9yPM8zBCBhCISYo7BKKYXJsdpPI6gpVHYlKzwoXKCpkuOkgENqFyKfajp5i6bohl6WKmtGBkgMSpIQPFGX2mGvaZVmIwpc6OVFiWH6ZbF2UFpI47BvVfRhh%2BfKAqkyCEJIaEecEAaSCAB7oQlpWhWh7FzuqaLNVgCJDh6YEQLO6rqpIqD6qoCW5QwExKOhpDbbtxAAHQBuRU1YgAfmh%2B14D6E0HhdWD1KgixkQ5U18kNB5dvZKa2MIqRNgNLjCEm2AtayBAQC0UPaBYBErpNEbQ3FZpoJZrzNARSjFZyLK7PsSYpiFMRY%2BokxCEhq19EjcjQ8irjE7NkMsyjPjbGa47wxA6oUu1vSuBdeZReIZL8D9jO9Ch2xXRdeEbssF3ppTVycEspB1pwACsnCkEIXBWMbqBcEivDdDbBIsGwiQCLQxsEGbOu6wgcxYMQlC6wA1iABv8Bdqq0LQvC8O0BvtAAnO0AAc4d61wAAsxvqHQVhWCb7ukJbnDGwwIA527nDm7rcCwDAiAoE%2BSgpKo5CUGgeSN77YiwsAr4NEI/ukK4KQ5MQxcQP0ef9GpxBpFwLukK3F4APJCKIM/l8bWC00IwAInn%2BCzE0eCksX6%2BkIoCEeBwnBz9DmD6%2BbpCuhos863reD9MXkC66gvl4NpXCGlcEIVAhpvKYF/tpSQhpF68Cgb8aMyA%2BC206LQAAXlA1wEIbyskNAQBgcCIipH6NGIhiCbZIKLg7dgdBdb6yNrnU%2BBcFAJxVIaFUqdVgFG3r6JcfcVgQFwIQEg0hnanVkPXduIj%2BC0CWK7d2pFSBe3mKoP2pBA6p14BdFUKpeCp3aPwOOqcDap1jlHFOnB06kEzgbHOptGFcCLiXR%2B8jSBV1riYJQHhm5%2BgkQiX29BMD4CIP42hXB6F2IfgXewtBJBjEILiZhrD2GcK7jw3u/tZHOPXgopRPtVH60sdY2xecC6ONLvIgOIBU4qguvohOCd2jtF0bwKwvBaCx3MfwY2ESLYOKyRXUJnBeDdJKX0suAzSDSQYH/U2qcgA\">https://godbolt.org/#z:OYLghAFBqd5QCxAYwPYBMCmBRdBLAF1QCcAaPECAKxAEZSBnVAV2OUxAHIBSAJgGY8AO2QAbZlgDU3fgGFMADwAOmYngC2mIQQCGogPRpiLAsMwzs3AAwBBPoJHipM2QDNmBVuf6Xb94WISmNJyyAwE%2BKgW1nYCAU7BLh54ooQAntF%2BtgSY6kqiOjkuBGkqQjqakgBqmTbhxMzIBJIAYtIA7ABCMZK9kgBGqKiikjoA7jqEAPrEmDroaRAAlJJoQuEdnZKznsRCkngMUwyYBDJb3O0AIj19AG6oeOijE9MMzAxl6BDh6CAgihUak02j0/yMJjMUwQOiE6FE3lkFkkrhWl26tj6WNWCBCV0kv3%2B6lQd0wEFR51uvUuN0xfSqL0mBBmmHemmWq1Q62a6Kp2J2rH2d0pdOp1xifIeTwJpymdz0zDJNV4ADY%2BCrJHc0V0%2BViCAhDgBaCx3PEEiJEklkrUimzYvqHY6nM0EBreDF2%2B0HVySCDIBArf3LW1YmkS0WtDkyfFYVw6ZiiM78D18hnC5N8wbDA5HE48/j4uOiE62vmEgHKVQaLS6UTgkiQoSYaGw%2BGI5H%2B0vijNZGw5PIFIpyEplCrBAAqtXqjWaACVNmXXTPJEpjOpDs2R%2B6%2BR9hMBJDC4QizeXAVWQbX68Zkk2W0fEavUOuTlMt9Ee57Fw0miu1xvX6UiRdKGEZYvOwCygKexTKg/RUJgTRRsBUH7LOECHm2/yuGuUyPs%2BZIAFT6ocSxLOcHS0p69rxkQBxCIQeB6McHxfByawbOi2ynIK5p/BWQLVqCdYgO8nxaOgUxNqSxC8t2FziqBfQ0agKLCExomsYGXIcch3F7Lx/xnsCNZgiJLHiVMegTGkDCyTcyYUbq9yPM8zBCBhCISYo7BKKYXJsdpPI6gpVHYlKzwoXKCpkuOkgENqFyKfajp5i6bohl6WKmtGBkgMSpIQPFGX2mGvaZVmIwpc6OVFiWH6ZbF2UFpI47BvVfRhh%2BfKAqkyCEJIaEecEAaSCAB7oQlpWhWh7FzuqaLNVgCJDh6YEQLO6rqpIqD6qoCW5QwExKOhpDbbtxAAHQBuRU1YgAfmh%2B14D6E0HhdWD1KgixkQ5U18kNB5dvZKa2MIqRNgNLjCEm2AtayBAQC0UPaBYBErpNEbQ3FZpoJZrzNARSjFZyLK7PsSYpiFMRY%2BokxCEhq19EjcjQ8irjE7NkMsyjPjbGa47wxA6oUu1vSuBdeZReIZL8D9jO9Ch2xXRdeEbssF3ppTVycEspB1pwACsnCkEIXBWMbqBcEivDdDbBIsGwiQCLQxsEGbOu6wgcxYMQlC6wA1iABv8Bdqq0LQvC8O0BvtAAnO0AAc4d61wAAsxvqHQVhWCb7ukJbnDGwwIA527nDm7rcCwDAiAoE%2BSgpKo5CUGgeSN77YiwsAr4NEI/ukK4KQ5MQxcQP0ef9GpxBpFwLukK3F4APJCKIM/l8bWC00IwAInn%2BCzE0eCksX6%2BkIoCEeBwnBz9DmD6%2BbpCuhos863reD9MXkC66gvl4NpXCGlcEIVAhpvKYF/tpSQhpF68Cgb8aMyA%2BC206LQAAXlA1wEIbyskNAQBgcCIipH6NGIhiCbZIKLg7dgdBdb6yNrnU%2BBcFAJxVIaFUqdVgFG3r6JcfcVgQFwIQEg0hnanVkPXduIj%2BC0CWK7d2pFSBe3mKoP2pBA6p14BdFUKpeCp3aPwOOqcDap1jlHFOnB06kEzgbHOptGFcCLiXR%2B8jSBV1riYJQHhm5%2BgkQiX29BMD4CIP42hXB6F2IfgXewtBJBjEILiZhrD2GcK7jw3u/tZHOPXgopRPtVH60sdY2xecC6ONLvIgOIBU4qguvohOCd2jtF0bwKwvBaCx3MfwY2ESLYOKyRXUJnBeDdJKX0suAzSDSQYH/U2qcgA</a></p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 117016605,
            "is_me_message": false,
            "last_edit_timestamp": 1507842109,
            "reactions": [
                {
                    "emoji_code": "1f44d",
                    "emoji_name": "thumbs_up",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "jacquin.mininger@gmail.com",
                        "full_name": "Jacquin Mininger (F2'17)",
                        "id": 102005
                    },
                    "user_id": 102005
                }
            ],
            "recipient_id": 41342,
            "sender_email": "danluu@gmail.com",
            "sender_full_name": "Dan Luu (W'13)",
            "sender_id": 820,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "Database Internals Reading group",
            "submessages": [],
            "timestamp": 1507842088,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/f6bd929465d6d225def8062d5a9d3f3f?d=identicon&version=1",
            "client": "website",
            "content": "<p>Organizational stuff for next time!</p>\n<p>Ext4 can be found inside <a href=\"https://github.com/torvalds/linux\" target=\"_blank\" title=\"https://github.com/torvalds/linux\">https://github.com/torvalds/linux</a>. Let's arbitrarily pick the 4.13 release</p>\n<p>You can browse stuff in a somewhat user friendly format at<br>\n<a href=\"https://elixir.free-electrons.com/linux/v4.13/source\" target=\"_blank\" title=\"https://elixir.free-electrons.com/linux/v4.13/source\">https://elixir.free-electrons.com/linux/v4.13/source</a></p>\n<p>To get 4.13 from the github repo, you can</p>\n<div class=\"codehilite\"><pre><span></span>git checkout tags/v4.13\n</pre></div>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 117017799,
            "is_me_message": false,
            "last_edit_timestamp": 1507905300,
            "reactions": [
                {
                    "emoji_code": "1f44d",
                    "emoji_name": "thumbs_up",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "me@wesleyac.com",
                        "full_name": "Wesley Aptekar-Cassels (they) (m8'20)",
                        "id": 101330
                    },
                    "user_id": 101330
                }
            ],
            "recipient_id": 41342,
            "sender_email": "danluu@gmail.com",
            "sender_full_name": "Dan Luu (W'13)",
            "sender_id": 820,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "Database Internals Reading group",
            "submessages": [],
            "timestamp": 1507844109,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/81c6c8040fc0263607edd05c09dacf6b?d=identicon&version=1",
            "client": "website",
            "content": "<p>Starting points:<br>\n - <a href=\"http://elixir.free-electrons.com/linux/v4.13.6/source/fs/ext4\" target=\"_blank\" title=\"http://elixir.free-electrons.com/linux/v4.13.6/source/fs/ext4\">http://elixir.free-electrons.com/linux/v4.13.6/source/fs/ext4</a><br>\n   - particularly ext4.h to see the structure of the superblock<br>\n   - I found the choices of hashes in hash.c really questionable: there are hashes that are faster or more unpredictable; I see btrfs seems to use crc32c (good choice since it's implemented in hardware on modern x86-64 processors)<br>\n   - namei.c is one of the more relevant parts of the code; dir.c seems to have the corresponding on-disk stuff;<br>\n   - compare with the painfully simple <a href=\"https://github.com/kalamangga-net/linux-1.0/blob/master/fs/ext/namei.c#L87\" target=\"_blank\" title=\"https://github.com/kalamangga-net/linux-1.0/blob/master/fs/ext/namei.c#L87\">https://github.com/kalamangga-net/linux-1.0/blob/master/fs/ext/namei.c#L87</a><br>\nWith namei and a few other files like that, I find it helpful to skip to the bottom to see the <code>struct inode_operations</code> definitions and then trace through the functions exposed there.</p>\n<p>I'd point out more specific stuff, but I got sidetracked in the directory hashing code by things like this:</p>\n<div class=\"codehilite\"><pre><span></span>/* Combsort until bubble sort doesn&#39;t suck */\n</pre></div>\n\n\n<p>Also, there are a lot of interesting \"rare\" cases; it would be interesting to construct hash collisions to provoke these cases and see what happens (maybe <span class=\"user-mention\" data-user-email=\"w.aptekar@gmail.com\" data-user-id=\"101330\">@Wesley Aptekar-Cassels (F2'17)</span> you've already been doing this).</p>\n<p>Contrasts:<br>\n - <a href=\"http://gitweb.dragonflybsd.org/dragonfly.git/tree/HEAD:/sys/vfs/hammer\" target=\"_blank\" title=\"http://gitweb.dragonflybsd.org/dragonfly.git/tree/HEAD:/sys/vfs/hammer\">http://gitweb.dragonflybsd.org/dragonfly.git/tree/HEAD:/sys/vfs/hammer</a><br>\n - <a href=\"http://elixir.free-electrons.com/linux/v4.13.6/source/fs/btrfs\" target=\"_blank\" title=\"http://elixir.free-electrons.com/linux/v4.13.6/source/fs/btrfs\">http://elixir.free-electrons.com/linux/v4.13.6/source/fs/btrfs</a></p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 117048496,
            "is_me_message": false,
            "reactions": [
                {
                    "emoji_code": "1f44d",
                    "emoji_name": "thumbs_up",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "danluu@gmail.com",
                        "full_name": "Dan Luu (W'13)",
                        "id": 820
                    },
                    "user_id": 820
                },
                {
                    "emoji_code": "1f44d",
                    "emoji_name": "thumbs_up",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "jacquin.mininger@gmail.com",
                        "full_name": "Jacquin Mininger (F2'17)",
                        "id": 102005
                    },
                    "user_id": 102005
                }
            ],
            "recipient_id": 41342,
            "sender_email": "julian@cipht.net",
            "sender_full_name": "Julian Squires (he) (F2'17)",
            "sender_id": 101992,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "Database Internals Reading group",
            "submessages": [],
            "timestamp": 1507910447,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/f6bd929465d6d225def8062d5a9d3f3f?d=identicon&version=1",
            "client": "website",
            "content": "<p>If anyone wants some background reading, chapters 40 to 43 of OSTEP has some explanations of how precursors to ext4 work, witha bit of explanation of ext4 concepts: <a href=\"http://pages.cs.wisc.edu/~remzi/OSTEP/\" target=\"_blank\" title=\"http://pages.cs.wisc.edu/~remzi/OSTEP/\">http://pages.cs.wisc.edu/~remzi/OSTEP/</a>.</p>\n<p>The ext4 wiki has more ext4 specific information but is less well organized: <a href=\"https://ext4.wiki.kernel.org/index.php/Main_Page\" target=\"_blank\" title=\"https://ext4.wiki.kernel.org/index.php/Main_Page\">https://ext4.wiki.kernel.org/index.php/Main_Page</a>.</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 117048649,
            "is_me_message": false,
            "reactions": [
                {
                    "emoji_code": "1f44d",
                    "emoji_name": "thumbs_up",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "julian@cipht.net",
                        "full_name": "Julian Squires (he) (F2'17)",
                        "id": 101992
                    },
                    "user_id": 101992
                },
                {
                    "emoji_code": "1f44d",
                    "emoji_name": "thumbs_up",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "jacquin.mininger@gmail.com",
                        "full_name": "Jacquin Mininger (F2'17)",
                        "id": 102005
                    },
                    "user_id": 102005
                }
            ],
            "recipient_id": 41342,
            "sender_email": "danluu@gmail.com",
            "sender_full_name": "Dan Luu (W'13)",
            "sender_id": 820,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "Database Internals Reading group",
            "submessages": [],
            "timestamp": 1507910668,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/81c6c8040fc0263607edd05c09dacf6b?d=identicon&version=1",
            "client": "website",
            "content": "<p>I had forgotten about this but these lectures are mostly _great_: <a href=\"https://www.youtube.com/playlist?list=PLSE8ODhjZXjakeQR57ZdN5slUu2oPUr1Y\" target=\"_blank\" title=\"https://www.youtube.com/playlist?list=PLSE8ODhjZXjakeQR57ZdN5slUu2oPUr1Y\">https://www.youtube.com/playlist?list=PLSE8ODhjZXjakeQR57ZdN5slUu2oPUr1Y</a><br>\nIt's a bunch of database implementors talking about their databases!</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 117184243,
            "is_me_message": false,
            "reactions": [
                {
                    "emoji_code": "1f44d",
                    "emoji_name": "thumbs_up",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "l.whiteavian@gmail.com",
                        "full_name": "Laura White-Avian (she) (F2'17)",
                        "id": 102012
                    },
                    "user_id": 102012
                }
            ],
            "recipient_id": 41342,
            "sender_email": "julian@cipht.net",
            "sender_full_name": "Julian Squires (he) (F2'17)",
            "sender_id": 101992,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "Database Internals Reading group",
            "submessages": [],
            "timestamp": 1508186920,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/0031ae6808e421803a47dd48c189e6a205070b92?x=x&version=5",
            "client": "website",
            "content": "<p>So the channel that offers those videos above also offers a Database Systems Class and an Advanced Database System class(in memory dbs only) that is currently in session, with links to papers, and even to the hw assignments and solutions. <a href=\"http://15445.courses.cs.cmu.edu/fall2017/index.html\" target=\"_blank\" title=\"http://15445.courses.cs.cmu.edu/fall2017/index.html\">http://15445.courses.cs.cmu.edu/fall2017/index.html</a><br>\nI plan on doing the buffer pool and btree assignments this coming week (for the \"non-advanced\" class) and am open to pairing if anyone would like to do so as well</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 117214561,
            "is_me_message": false,
            "reactions": [
                {
                    "emoji_code": "1f44d",
                    "emoji_name": "thumbs_up",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "julian@cipht.net",
                        "full_name": "Julian Squires (he) (F2'17)",
                        "id": 101992
                    },
                    "user_id": 101992
                }
            ],
            "recipient_id": 41342,
            "sender_email": "jacquin.mininger@gmail.com",
            "sender_full_name": "Jacquin Mininger (F2'17)",
            "sender_id": 102005,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "Database Internals Reading group",
            "submessages": [],
            "timestamp": 1508251581,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/5d6a7a4735c43e9dae0e3f9ef82919706728452a?x=x&version=3",
            "client": "website",
            "content": "<p>Not super relavant, but I'm enjoying this talk from aphyr about how distributed DBs can fail: <a href=\"https://youtu.be/eSaFVX4izsQ\" target=\"_blank\" title=\"https://youtu.be/eSaFVX4izsQ\">https://youtu.be/eSaFVX4izsQ</a></p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 117361370,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "me@wesleyac.com",
            "sender_full_name": "Wesley Aptekar-Cassels (they) (m8'20)",
            "sender_id": 101330,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "Database Internals Reading group",
            "submessages": [],
            "timestamp": 1508382203,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/f6bd929465d6d225def8062d5a9d3f3f?d=identicon&version=1",
            "client": "website",
            "content": "<p>Hopefully I'll managed to write up some more stuff, but my day has a psuedo-interview interrupting in the morning, so let me write this down before I go to bed in case job stuff derails the rest of my day.</p>\n<p>I learned about <code>__must_check</code> from reading FS code. Apparently you can add an annotation that's understood by gcc, clang, and icc, that will cause a compiler warning if you don't check a return code for an error. One important looking function that that uses this annotation is <code>submit_one_bio</code>:</p>\n<p>This is in the btrfs code, so it's technically not on the reading list, but this still seemed interesting. <code>__must_check</code> is only used by <code>btrfs</code> and <code>reiserfs</code>, both of which seem more serious about error checking and handling than ext*, jfs, xfs, etc. Anyway, here's the code:</p>\n<div class=\"codehilite\"><pre><span></span>static int __must_check submit_one_bio(struct bio *bio, int mirror_num,\n                                       unsigned long bio_flags)\n{\n        blk_status_t ret = 0;\n        struct bio_vec *bvec = bio-&gt;bi_io_vec + bio-&gt;bi_vcnt - 1;\n        struct page *page = bvec-&gt;bv_page;\n        struct extent_io_tree *tree = bio-&gt;bi_private;\n        u64 start;\n\n        start = page_offset(page) + bvec-&gt;bv_offset;\n\n        bio-&gt;bi_private = NULL;\n        bio_get(bio);\n\n        if (tree-&gt;ops)\n                ret = tree-&gt;ops-&gt;submit_bio_hook(tree-&gt;private_data, bio,\n                                           mirror_num, bio_flags, start);\n        else\n                btrfsic_submit_bio(bio);\n\n        bio_put(bio);\n        return blk_status_to_errno(ret);\n}\n</pre></div>\n\n\n<p>It appears that this function can return an error that a block device might return. So it might say that the operation timed out, or that it needs to be retried, or that it didn't work for some other reason like being out of space or being otherwise impossible. This seems important to propagate it, so it makes sense that they'd annotate this code.</p>\n<p>If you then look at what calls this code, and what calls that, etc., one possible path of error propagation looks like:</p>\n<div class=\"codehilite\"><pre><span></span>submit_one_bio\nsubmit_extent_page\n__extent_writepage\nextent_write_full_page\nwrite_cache_pages\ngeneric_writepages\ndo_writepages\n__filemap_fdatawrite_range\n__filemap_fdatawrite\nfilemap_fdatawrite\n</pre></div>\n\n\n<p>By the time we get to the bottom (top) of this, we're outside of btrfs code and into generic filesystem code that gets called any time you do some operations. If you then look at calls to <code>filemap_fdatawrite</code>, it appears that only 13 out of the 22 calls to it do anything with the error code. This is a significant improvement over the situation in 2008, described in this paper: <a href=\"https://www.usenix.org/legacy/event/fast08/tech/full_papers/gunawi/gunawi_html/index.html\" target=\"_blank\" title=\"https://www.usenix.org/legacy/event/fast08/tech/full_papers/gunawi/gunawi_html/index.html\">https://www.usenix.org/legacy/event/fast08/tech/full_papers/gunawi/gunawi_html/index.html</a>, but it still seems bad to ignore a block device error.</p>\n<p>But... this is somewhere in <code>mm</code>, so maybe this makes sense? Does a write to an <code>mmap</code>ed file have any mechanism to return an error? If you <code>fdatasync</code> or something, that can return an error, but if you write, are you just silently hosed if an error occurs?</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 117363307,
            "is_me_message": false,
            "last_edit_timestamp": 1508387415,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "danluu@gmail.com",
            "sender_full_name": "Dan Luu (W'13)",
            "sender_id": 820,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "Database Internals Reading group",
            "submessages": [],
            "timestamp": 1508386814,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/81c6c8040fc0263607edd05c09dacf6b?d=identicon&version=1",
            "client": "website",
            "content": "<p>Only vaguely related but probably of interest to at least Dan and Wesley: <a href=\"https://lwn.net/Articles/736678/\" target=\"_blank\" title=\"https://lwn.net/Articles/736678/\">https://lwn.net/Articles/736678/</a></p>\n<blockquote>\n<p>Fix the error handling code in debugfs, fuse2fs and tune2fs so errors trying to replay the journal won't accidentally result in a seg fault if reopening the file system after the journal replay fails for some reason.</p>\n<p>Fix e2fsck and debugfs so that maliciously corrupted file systems will not cause buffer overflows.  (Addresses Debian Bugs: #873757, #878104)</p>\n</blockquote>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 117375909,
            "is_me_message": false,
            "reactions": [
                {
                    "emoji_code": "1f44d",
                    "emoji_name": "thumbs_up",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "me@wesleyac.com",
                        "full_name": "Wesley Aptekar-Cassels (they) (m8'20)",
                        "id": 101330
                    },
                    "user_id": 101330
                },
                {
                    "emoji_code": "1f44d",
                    "emoji_name": "thumbs_up",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "danluu@gmail.com",
                        "full_name": "Dan Luu (W'13)",
                        "id": 820
                    },
                    "user_id": 820
                }
            ],
            "recipient_id": 41342,
            "sender_email": "julian@cipht.net",
            "sender_full_name": "Julian Squires (he) (F2'17)",
            "sender_id": 101992,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "Database Internals Reading group",
            "submessages": [],
            "timestamp": 1508417059,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/81c6c8040fc0263607edd05c09dacf6b?d=identicon&version=1",
            "client": "website",
            "content": "<p>BTW, a lot of C techniques for static assertion, particularly the many GCC <code>__attribute__</code>s and so on are sadly not too widespread.  Might be interesting to talk about this or maybe I should write a blog post about it.</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 117376025,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "julian@cipht.net",
            "sender_full_name": "Julian Squires (he) (F2'17)",
            "sender_id": 101992,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "Database Internals Reading group",
            "submessages": [],
            "timestamp": 1508417328,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/81c6c8040fc0263607edd05c09dacf6b?d=identicon&version=1",
            "client": "website",
            "content": "<p><span class=\"user-mention\" data-user-email=\"danluu@gmail.com\" data-user-id=\"820\">@Dan Luu (W'13)</span> related to error handling, it might be even worse than not getting errors until fsync: <a href=\"https://lwn.net/Articles/720736/\" target=\"_blank\" title=\"https://lwn.net/Articles/720736/\">https://lwn.net/Articles/720736/</a> <a href=\"https://lwn.net/Articles/718734/\" target=\"_blank\" title=\"https://lwn.net/Articles/718734/\">https://lwn.net/Articles/718734/</a><br>\nI remember a bunch of discussion around this as important for new, NVMe-oriented file systems but I don't remember the details.</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 117376362,
            "is_me_message": false,
            "reactions": [
                {
                    "emoji_code": "1f44d",
                    "emoji_name": "thumbs_up",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "danluu@gmail.com",
                        "full_name": "Dan Luu (W'13)",
                        "id": 820
                    },
                    "user_id": 820
                }
            ],
            "recipient_id": 41342,
            "sender_email": "julian@cipht.net",
            "sender_full_name": "Julian Squires (he) (F2'17)",
            "sender_id": 101992,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "Database Internals Reading group",
            "submessages": [],
            "timestamp": 1508418063,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/81c6c8040fc0263607edd05c09dacf6b?d=identicon&version=1",
            "client": "website",
            "content": "<p>I only learned about <a href=\"http://man7.org/linux/man-pages/man2/ioctl_getfsmap.2.html\" target=\"_blank\" title=\"http://man7.org/linux/man-pages/man2/ioctl_getfsmap.2.html\">http://man7.org/linux/man-pages/man2/ioctl_getfsmap.2.html</a> by reading the ext4 code.  I find there are a lot of obscure corners of the Linux API I only learn this way.</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 117377927,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "julian@cipht.net",
            "sender_full_name": "Julian Squires (he) (F2'17)",
            "sender_id": 101992,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "Database Internals Reading group",
            "submessages": [],
            "timestamp": 1508421141,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/81c6c8040fc0263607edd05c09dacf6b?d=identicon&version=1",
            "client": "website",
            "content": "<p>The extents code (which also reminds me a little of the last mock Google interview problem) is inspiring me to demo \"persistent pipes\" which use some Linux file system APIs I think too few people have heard of.  Will see if I can get it done before we meet today.</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 117378949,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "julian@cipht.net",
            "sender_full_name": "Julian Squires (he) (F2'17)",
            "sender_id": 101992,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "Database Internals Reading group",
            "submessages": [],
            "timestamp": 1508423173,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/81c6c8040fc0263607edd05c09dacf6b?d=identicon&version=1",
            "client": "website",
            "content": "<p>Demo of hole punching (persistent pipes next, perhaps): <a href=\"https://github.com/tokenrove/punchy-the-log\" target=\"_blank\" title=\"https://github.com/tokenrove/punchy-the-log\">https://github.com/tokenrove/punchy-the-log</a></p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 117388847,
            "is_me_message": false,
            "reactions": [
                {
                    "emoji_code": "1f44d",
                    "emoji_name": "thumbs_up",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "danluu@gmail.com",
                        "full_name": "Dan Luu (W'13)",
                        "id": 820
                    },
                    "user_id": 820
                }
            ],
            "recipient_id": 41342,
            "sender_email": "julian@cipht.net",
            "sender_full_name": "Julian Squires (he) (F2'17)",
            "sender_id": 101992,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "Database Internals Reading group",
            "submessages": [],
            "timestamp": 1508439506,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/f6bd929465d6d225def8062d5a9d3f3f?d=identicon&version=1",
            "client": "website",
            "content": "<p>Here are a few more comments before we convene the reading group, no real theme to the comments unlike the berkeleydb comments on weird things:</p>\n<p><code>fs/ext4/inline.c</code></p>\n<p><code>ext4_add_dirent_to_inline</code> appears to incorrectly update directory change times if the operation fails?</p>\n<div class=\"codehilite\"><pre><span></span>/*\n * Add a new entry into a inline dir.\n * It will return -ENOSPC if no space is available, and -EIO\n * and -EEXIST if directory entry already exists.\n */\nstatic int ext4_add_dirent_to_inline(handle_t *handle,\n                     struct ext4_filename *fname,\n                     struct inode *dir,\n                     struct inode *inode,\n                     struct ext4_iloc *iloc,\n                     void *inline_start, int inline_size)\n{\n    int     err;\n    struct ext4_dir_entry_2 *de;\n\n    err = ext4_find_dest_de(dir, inode, iloc-&gt;bh, inline_start,\n                inline_size, fname, &amp;de);\n    if (err)\n        return err;\n\n    BUFFER_TRACE(iloc-&gt;bh, &quot;get_write_access&quot;);\n    err = ext4_journal_get_write_access(handle, iloc-&gt;bh);\n    if (err)\n        return err;\n    ext4_insert_dentry(inode, de, inline_size, fname);\n\n    ext4_show_inline_dir(dir, iloc-&gt;bh, inline_start, inline_size);\n\n    /*\n     * XXX shouldn&#39;t update any times until successful\n     * completion of syscall, but too many callers depend\n     * on this.\n     *\n     * XXX similarly, too many callers depend on\n     * ext4_new_inode() setting the times, but error\n     * recovery deletes the inode, so the worst that can\n     * happen is that the times are slightly out of date\n     * and/or different from the directory change time.\n     */\n    dir-&gt;i_mtime = dir-&gt;i_ctime = current_time(dir);\n    ext4_update_dx_flag(dir);\n    dir-&gt;i_version++;\n    return 1;\n}\n</pre></div>\n\n\n<p><code>add_dirent_to_buf</code> in <code>fs/ext4/namei.c</code> appears to have the same bug.</p>\n<p>There's this curious file, <code>fs/ext/move_extent.c</code> which contains this function:</p>\n<div class=\"codehilite\"><pre><span></span>/**\n * ext4_move_extents - Exchange the specified range of a file\n *\n * @o_filp:             file structure of the original file\n * @d_filp:             file structure of the donor file\n * @orig_blk:           start offset in block for orig\n * @donor_blk:          start offset in block for donor\n * @len:                the number of blocks to be moved\n * @moved_len:          moved block length\n *\n * This function returns 0 and moved block length is set in moved_len\n * if succeed, otherwise returns error value.\n *\n */\nint\next4_move_extents(struct file *o_filp, struct file *d_filp, __u64 orig_blk,\n                  __u64 donor_blk, __u64 len, __u64 *moved_len)\n{\n    ...\n</pre></div>\n\n\n<p>This appears to swap two files? You can do this via an <code>ioctl</code>:</p>\n<p><code>fs/ext4/ioctl.c</code></p>\n<div class=\"codehilite\"><pre><span></span>long ext4_ioctl(struct file *filp, unsigned int cmd, unsigned long arg)\n{\n    ...\n        case EXT4_IOC_MOVE_EXT: {\n                struct move_extent me;\n                struct fd donor;\n                int err;\n\n                if (!(filp-&gt;f_mode &amp; FMODE_READ) ||\n                    !(filp-&gt;f_mode &amp; FMODE_WRITE))\n                        return -EBADF;\n\n                if (copy_from_user(&amp;me,\n                        (struct move_extent __user *)arg, sizeof(me)))\n                        return -EFAULT;\n                me.moved_len = 0;\n\n                donor = fdget(me.donor_fd);\n                if (!donor.file)\n                        return -EBADF;\n\n                if (!(donor.file-&gt;f_mode &amp; FMODE_WRITE)) {\n                        err = -EBADF;\n                        goto mext_out;\n                }\n\n                if (ext4_has_feature_bigalloc(sb)) {\n                        ext4_msg(sb, KERN_ERR,\n                                 &quot;Online defrag not supported with bigalloc&quot;);\n                        err = -EOPNOTSUPP;\n                        goto mext_out;\n                } else if (IS_DAX(inode)) {\n                        ext4_msg(sb, KERN_ERR,\n                                 &quot;Online defrag not supported with DAX&quot;);\n                        err = -EOPNOTSUPP;\n                        goto mext_out;\n                }\n\n                err = mnt_want_write_file(filp);\n                if (err)\n                        goto mext_out;\n\n                err = ext4_move_extents(filp, donor.file, me.orig_start,\n                                        me.donor_start, me.len, &amp;me.moved_len);\n                mnt_drop_write_file(filp);\n\n                if (copy_to_user((struct move_extent __user *)arg,\n                                 &amp;me, sizeof(me)))\n                        err = -EFAULT;\nmext_out:\n                fdput(donor);\n                return err;\n        }\n    ...\n</pre></div>\n\n\n<p>But when would you want to do this? Is this only for defragging on rotational disks? There appears to be no code in the kernel that does this, but I guess you can de-frag with an external program if you want?</p>\n<p><code>fs/ext4/super.c</code></p>\n<p>This appears to be a decade old TODO that would be easy to fix? If anyone wants to pair on getting a patch into the linux kernel, this might be an easy starting point?</p>\n<div class=\"codehilite\"><pre><span></span>0b8e58a140cae (Andreas Dilger                2009-06-03 17:59:28 -0400 1452)    /* TODO: use simple_strtoll with &gt;32bit ext4 */\nac27a0ec112a0 (Dave Kleikamp                 2006-10-11 01:20:50 -0700 1453)    sb_block = simple_strtoul(options, &amp;options, 0);\nac27a0ec112a0 (Dave Kleikamp                 2006-10-11 01:20:50 -0700 1454)    if (*options &amp;&amp; *options != &#39;,&#39;) {\n4776004f54e41 (Theodore Ts&#39;o                 2008-09-08 23:00:52 -0400 1455)            printk(KERN_ERR &quot;EXT4-fs: Invalid sb specification: %s\\n&quot;,\nac27a0ec112a0 (Dave Kleikamp                 2006-10-11 01:20:50 -0700 1456)                   (char *) *data);\nac27a0ec112a0 (Dave Kleikamp                 2006-10-11 01:20:50 -0700 1457)            return 1;\nac27a0ec112a0 (Dave Kleikamp                 2006-10-11 01:20:50 -0700 1458)    }\n</pre></div>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 117390205,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "danluu@gmail.com",
            "sender_full_name": "Dan Luu (W'13)",
            "sender_id": 820,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "Database Internals Reading group",
            "submessages": [],
            "timestamp": 1508441685,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/81c6c8040fc0263607edd05c09dacf6b?d=identicon&version=1",
            "client": "website",
            "content": "<p>Another thing to look at in the meeting: after I posted punchy-the-log, a friend of mine mentioned that mmap'ing a punched file used to segfault when you accessed the punched region; grepping the code for mmap reveals a lot of interesting stuff related.  (It doesn't segfault now on my 4.12 machine)</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 117390395,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "julian@cipht.net",
            "sender_full_name": "Julian Squires (he) (F2'17)",
            "sender_id": 101992,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "Database Internals Reading group",
            "submessages": [],
            "timestamp": 1508442056,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/81c6c8040fc0263607edd05c09dacf6b?d=identicon&version=1",
            "client": "website",
            "content": "<p>related: <a href=\"https://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git/commit/?id=ea3d7209ca01da209cda6f0dea8be9cc4b7a933b\" target=\"_blank\" title=\"https://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git/commit/?id=ea3d7209ca01da209cda6f0dea8be9cc4b7a933b\">https://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git/commit/?id=ea3d7209ca01da209cda6f0dea8be9cc4b7a933b</a></p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 117390518,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "julian@cipht.net",
            "sender_full_name": "Julian Squires (he) (F2'17)",
            "sender_id": 101992,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "Database Internals Reading group",
            "submessages": [],
            "timestamp": 1508442302,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/f6bd929465d6d225def8062d5a9d3f3f?d=identicon&version=1",
            "client": "website",
            "content": "<p>Sort of related: log-based file system on SSDs, which themselves are basically log-based: <a href=\"https://www.usenix.org/system/files/conference/inflow14/inflow14-yang.pdf\" target=\"_blank\" title=\"https://www.usenix.org/system/files/conference/inflow14/inflow14-yang.pdf\">https://www.usenix.org/system/files/conference/inflow14/inflow14-yang.pdf</a></p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 117392532,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "danluu@gmail.com",
            "sender_full_name": "Dan Luu (W'13)",
            "sender_id": 820,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "Database Internals Reading group",
            "submessages": [],
            "timestamp": 1508445793,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/81c6c8040fc0263607edd05c09dacf6b?d=identicon&version=1",
            "client": "website",
            "content": "<p>Ok, next week let's start on Postgres.  <a href=\"http://malisper.me/table-of-contents/\" target=\"_blank\" title=\"http://malisper.me/table-of-contents/\">Michael Malis's blog posts</a> are an excellent way to get some insight into how many things are implemented.  Source is at &lt;<a href=\"https://git.postgresql.org/gitweb/?p=postgresql.git;a=summary\" target=\"_blank\" title=\"https://git.postgresql.org/gitweb/?p=postgresql.git;a=summary\">https://git.postgresql.org/gitweb/?p=postgresql.git;a=summary</a>&gt;.<br>\nAreas we talked about focusing on: comparing bits with Berkeley DB; looking at the ACID guarantees, how MVCC is implemented, et cetera.</p>\n<p>Of interest for bdb comparison; storage: <a href=\"https://git.postgresql.org/gitweb/?p=postgresql.git;a=tree;f=src/backend/storage;h=38db7d1de051975a715b86150381818af7afd375;hb=HEAD\" target=\"_blank\" title=\"https://git.postgresql.org/gitweb/?p=postgresql.git;a=tree;f=src/backend/storage;h=38db7d1de051975a715b86150381818af7afd375;hb=HEAD\">https://git.postgresql.org/gitweb/?p=postgresql.git;a=tree;f=src/backend/storage;h=38db7d1de051975a715b86150381818af7afd375;hb=HEAD</a><br>\nand access: <a href=\"https://git.postgresql.org/gitweb/?p=postgresql.git;a=tree;f=src/backend/access;h=4e009f96604d79fb4c80ae52b5fe32eb5157bb35;hb=HEAD\" target=\"_blank\" title=\"https://git.postgresql.org/gitweb/?p=postgresql.git;a=tree;f=src/backend/access;h=4e009f96604d79fb4c80ae52b5fe32eb5157bb35;hb=HEAD\">https://git.postgresql.org/gitweb/?p=postgresql.git;a=tree;f=src/backend/access;h=4e009f96604d79fb4c80ae52b5fe32eb5157bb35;hb=HEAD</a><br>\nIn which you'll find equivalents to mpool, btree, and hash.</p>\n<p>The lib stuff is interesting to read because it's not deeply tied to anything else: <a href=\"https://git.postgresql.org/gitweb/?p=postgresql.git;a=tree;f=src/backend/lib;h=c84fcfb1bbeab46f87cf87e77ad575aac1e03cd3;hb=HEAD\" target=\"_blank\" title=\"https://git.postgresql.org/gitweb/?p=postgresql.git;a=tree;f=src/backend/lib;h=c84fcfb1bbeab46f87cf87e77ad575aac1e03cd3;hb=HEAD\">https://git.postgresql.org/gitweb/?p=postgresql.git;a=tree;f=src/backend/lib;h=c84fcfb1bbeab46f87cf87e77ad575aac1e03cd3;hb=HEAD</a></p>\n<p>The query executor is a big thing to tackle but should provide a lot of insight: <a href=\"https://git.postgresql.org/gitweb/?p=postgresql.git;a=tree;f=src/backend/executor;h=6e1a1393141599e9192af0f36f0ea16f364fe550;hb=HEAD\" target=\"_blank\" title=\"https://git.postgresql.org/gitweb/?p=postgresql.git;a=tree;f=src/backend/executor;h=6e1a1393141599e9192af0f36f0ea16f364fe550;hb=HEAD\">https://git.postgresql.org/gitweb/?p=postgresql.git;a=tree;f=src/backend/executor;h=6e1a1393141599e9192af0f36f0ea16f364fe550;hb=HEAD</a></p>\n<p>I'm hoping to get some time to read parts of the query optimizer (and draw some connections with compilers) but we'll see how it goes.  Post links and videos and snide comments here!</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 117394021,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "julian@cipht.net",
            "sender_full_name": "Julian Squires (he) (F2'17)",
            "sender_id": 101992,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "Database Internals Reading group",
            "submessages": [],
            "timestamp": 1508447757,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/81c6c8040fc0263607edd05c09dacf6b?d=identicon&version=1",
            "client": "website",
            "content": "<p>Hah, from the README in <code>src/backend/access/hash</code>:</p>\n<div class=\"codehilite\"><pre><span></span>This directory contains an implementation of hash indexing for Postgres.\nMost of the core ideas are taken from Margo Seltzer and Ozan Yigit,\nA New Hashing Package for UNIX, Proceedings of the Winter USENIX Conference,\nJanuary 1991.  (Our in-memory hashtable implementation,\nsrc/backend/utils/hash/dynahash.c, also relies on some of the same concepts;\nit is derived from code written by Esmond Pitt and later improved by Margo\namong others.)\n</pre></div>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 117428301,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "julian@cipht.net",
            "sender_full_name": "Julian Squires (he) (F2'17)",
            "sender_id": 101992,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "Database Internals Reading group",
            "submessages": [],
            "timestamp": 1508520624,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/81c6c8040fc0263607edd05c09dacf6b?d=identicon&version=1",
            "client": "website",
            "content": "<p>Building Postgres with debug symbols:</p>\n<div class=\"codehilite\"><pre><span></span>./configure --enable-debug --prefix=$(pwd)\nmake all install\ngdb ./src/backend/postgres\n</pre></div>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 117558941,
            "is_me_message": false,
            "reactions": [
                {
                    "emoji_code": "1f44d",
                    "emoji_name": "thumbs_up",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "jacquin.mininger@gmail.com",
                        "full_name": "Jacquin Mininger (F2'17)",
                        "id": 102005
                    },
                    "user_id": 102005
                },
                {
                    "emoji_code": "1f44d",
                    "emoji_name": "thumbs_up",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "ahmad19526@gmail.com",
                        "full_name": "Ahmed Abdalla (SP2'16)",
                        "id": 7874
                    },
                    "user_id": 7874
                },
                {
                    "emoji_code": "1f44d",
                    "emoji_name": "thumbs_up",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "jkozak@fmail.co.uk",
                        "full_name": "Jake \u26e4 Prozvyshe (they) (W1'17)",
                        "id": 8478
                    },
                    "user_id": 8478
                },
                {
                    "emoji_code": "1f44d",
                    "emoji_name": "thumbs_up",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "me@wesleyac.com",
                        "full_name": "Wesley Aptekar-Cassels (they) (m8'20)",
                        "id": 101330
                    },
                    "user_id": 101330
                }
            ],
            "recipient_id": 41342,
            "sender_email": "julian@cipht.net",
            "sender_full_name": "Julian Squires (he) (F2'17)",
            "sender_id": 101992,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "Database Internals Reading group",
            "submessages": [],
            "timestamp": 1508810660,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/81c6c8040fc0263607edd05c09dacf6b?d=identicon&version=1",
            "client": "website",
            "content": "<p>Don't forget the tabs in the Postgres codebase are 4 space, so you can for example invoke less with <code>less -x4</code> to see the code formatted correctly, or set the tabs in your editor.  (There's a dir-locals for emacs, at least, in the root)</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 117680097,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "julian@cipht.net",
            "sender_full_name": "Julian Squires (he) (F2'17)",
            "sender_id": 101992,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "Database Internals Reading group",
            "submessages": [],
            "timestamp": 1509046900,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/f6bd929465d6d225def8062d5a9d3f3f?d=identicon&version=1",
            "client": "website",
            "content": "<p>I'm going to miss most or all of today's meeting (have a physical therapy appointment at 5pm and it's probably a 15 walk to get there) :-(.</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 117680779,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "danluu@gmail.com",
            "sender_full_name": "Dan Luu (W'13)",
            "sender_id": 820,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "Database Internals Reading group",
            "submessages": [],
            "timestamp": 1509047947,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/81c6c8040fc0263607edd05c09dacf6b?d=identicon&version=1",
            "client": "website",
            "content": "<p>I'm on a call so I'll be a few minutes late</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 117682135,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "julian@cipht.net",
            "sender_full_name": "Julian Squires (he) (F2'17)",
            "sender_id": 101992,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "Database Internals Reading group",
            "submessages": [],
            "timestamp": 1509049963,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/81c6c8040fc0263607edd05c09dacf6b?d=identicon&version=1",
            "client": "website",
            "content": "<p><a href=\"https://www.sqlite.org/testing.html\" target=\"_blank\" title=\"https://www.sqlite.org/testing.html\">https://www.sqlite.org/testing.html</a><br>\n<a href=\"http://mr.gy/blog/snabb-ci.html\" target=\"_blank\" title=\"http://mr.gy/blog/snabb-ci.html\">http://mr.gy/blog/snabb-ci.html</a><br>\n<a href=\"https://pdfs.semanticscholar.org/3459/fa3493ec2b400a4230ad6b0d73329be8fea0.pdf\" target=\"_blank\" title=\"https://pdfs.semanticscholar.org/3459/fa3493ec2b400a4230ad6b0d73329be8fea0.pdf\">https://pdfs.semanticscholar.org/3459/fa3493ec2b400a4230ad6b0d73329be8fea0.pdf</a><br>\n<a href=\"http://www.2qpgconf.com\" target=\"_blank\" title=\"http://www.2qpgconf.com\">http://www.2qpgconf.com</a><br>\n<a href=\"http://ranger.uta.edu/~fegaras/cse6331/spring97/p25.html\" target=\"_blank\" title=\"http://ranger.uta.edu/~fegaras/cse6331/spring97/p25.html\">http://ranger.uta.edu/~fegaras/cse6331/spring97/p25.html</a></p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 117683820,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "julian@cipht.net",
            "sender_full_name": "Julian Squires (he) (F2'17)",
            "sender_id": 101992,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "Database Internals Reading group",
            "submessages": [],
            "timestamp": 1509052920,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/81c6c8040fc0263607edd05c09dacf6b?d=identicon&version=1",
            "client": "website",
            "content": "<p>Timeseries databases lecture series!  Talk on kdb!  <a href=\"https://www.youtube.com/watch?v=AiGdfmxEP68&amp;list=PLSE8ODhjZXjY0GMWN4X8FIkYNfiu8_Wl9&amp;index=4\" target=\"_blank\" title=\"https://www.youtube.com/watch?v=AiGdfmxEP68&amp;list=PLSE8ODhjZXjY0GMWN4X8FIkYNfiu8_Wl9&amp;index=4\">https://www.youtube.com/watch?v=AiGdfmxEP68&amp;list=PLSE8ODhjZXjY0GMWN4X8FIkYNfiu8_Wl9&amp;index=4</a></p>\n<div class=\"youtube-video message_inline_image\"><a data-id=\"AiGdfmxEP68\" href=\"https://www.youtube.com/watch?v=AiGdfmxEP68&amp;list=PLSE8ODhjZXjY0GMWN4X8FIkYNfiu8_Wl9&amp;index=4\" target=\"_blank\" title=\"https://www.youtube.com/watch?v=AiGdfmxEP68&amp;list=PLSE8ODhjZXjY0GMWN4X8FIkYNfiu8_Wl9&amp;index=4\"><img src=\"https://i.ytimg.com/vi/AiGdfmxEP68/default.jpg\"></a></div>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 117712296,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "julian@cipht.net",
            "sender_full_name": "Julian Squires (he) (F2'17)",
            "sender_id": 101992,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "Database Internals Reading group",
            "submessages": [],
            "timestamp": 1509114545,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/b3969612f0d6f4b398a1eec04087aafc0a38475e?x=x&version=2",
            "client": "ZulipElectron",
            "content": "<p>I have a very limited exposure to databases -- I've made very simple projects with SQL and NoSQL databases, but basically just adding and removing data. I want to get some more practice under my belt, doing complex joins and whatnot. Anybody have good suggestions for types of projects to work on that will help me learn more? Maybe <span class=\"user-mention\" data-user-email=\"karen.dudzinski@gmail.com\" data-user-id=\"101693\">@Karen Ellenberger (F1'17)</span>?</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 117885098,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "joebeach@gmail.com",
            "sender_full_name": "Joe Beach (F2'17)",
            "sender_id": 102026,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "getting more familiar with databases",
            "submessages": [],
            "timestamp": 1509480166,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/1c860d00a4cedc01147fbb2e0533c37b?d=identicon&version=1",
            "client": "website",
            "content": "<p>Hi, <span class=\"user-mention\" data-user-email=\"joebeach@gmail.com\" data-user-id=\"102026\">@Joe Beach (F2'17)</span> </p>\n<p>I spent a lot of my time at RC getting more familiar with databases. It all started when I stumbled upon this project <a href=\"https://github.com/begriffs/postgrest\" target=\"_blank\" title=\"https://github.com/begriffs/postgrest\">https://github.com/begriffs/postgrest</a> which is a web api that is auto-configures to a postgresql database. While playing with that project, begriffs recommends a tool called <a href=\"http://sqitch.org/\" target=\"_blank\" title=\"http://sqitch.org/\">http://sqitch.org/</a>  it is a database organization and versioning tool. I love sqitch and use it in all my projects. It allows you to organize, test and version control the schema of your database. I use it extensively in my side project <a href=\"https://github.com/comicgator/comicgator/tree/master/cdb\" target=\"_blank\" title=\"https://github.com/comicgator/comicgator/tree/master/cdb\">https://github.com/comicgator/comicgator/tree/master/cdb</a>.</p>\n<p>So to answer your question. If you want to learn more about databases then I recommend learning to use sqitch, identify some problem that you want to solve with a database model. And then use sqitch to iterate that model until it does everything you need. I also recommend using docker in conjunction with sqitch because it will let you rebuild your databases really fast and keep them out of your main system.</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 117896634,
            "is_me_message": false,
            "reactions": [
                {
                    "emoji_code": "1f44d",
                    "emoji_name": "thumbs_up",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "jaseemabid@gmail.com",
                        "full_name": "Jaseem Abid (he) (S1'17)",
                        "id": 101128
                    },
                    "user_id": 101128
                },
                {
                    "emoji_code": "1f44d",
                    "emoji_name": "thumbs_up",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "joebeach@gmail.com",
                        "full_name": "Joe Beach (F2'17)",
                        "id": 102026
                    },
                    "user_id": 102026
                },
                {
                    "emoji_code": "1f44d",
                    "emoji_name": "thumbs_up",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "pete@peterlyons.com",
                        "full_name": "Peter Lyons (he) (W1'17)",
                        "id": 103052
                    },
                    "user_id": 103052
                }
            ],
            "recipient_id": 41342,
            "sender_email": "corydominguez@gmail.com",
            "sender_full_name": "Cory Michael Dominguez (he) (SP1'15)",
            "sender_id": 7625,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "getting more familiar with databases",
            "submessages": [],
            "timestamp": 1509500490,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/81c6c8040fc0263607edd05c09dacf6b?d=identicon&version=1",
            "client": "website",
            "content": "<p>Sorry, I got distracted by several things but I'm going to go into Hopper and look at Postgres source shortly</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 117974886,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "julian@cipht.net",
            "sender_full_name": "Julian Squires (he) (F2'17)",
            "sender_id": 101992,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "Database Internals Reading group",
            "submessages": [],
            "timestamp": 1509655299,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/81c6c8040fc0263607edd05c09dacf6b?d=identicon&version=1",
            "client": "website",
            "content": "<p>I've been looking at how I would implement some of <a href=\"https://blog.jooq.org/2017/09/28/10-cool-sql-optimisations-that-do-not-depend-on-the-cost-model/\" target=\"_blank\" title=\"https://blog.jooq.org/2017/09/28/10-cool-sql-optimisations-that-do-not-depend-on-the-cost-model/\">these optimizations</a> in Postgres that are currently missing; poking around in <code>src/backend/optimizer</code>.  Still need to figure out a lot though.</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 117975242,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "julian@cipht.net",
            "sender_full_name": "Julian Squires (he) (F2'17)",
            "sender_id": 101992,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "Database Internals Reading group",
            "submessages": [],
            "timestamp": 1509655814,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/81c6c8040fc0263607edd05c09dacf6b?d=identicon&version=1",
            "client": "website",
            "content": "<p>I think I'm bailing on this today as I feel sick, and antisocial; and am trying to prepare to present something.  Read more Postgres?  Maybe I'll post some of the stuff I found interesting in the optimizer, over the next few days.</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 118273999,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "julian@cipht.net",
            "sender_full_name": "Julian Squires (he) (F2'17)",
            "sender_id": 101992,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "Database Internals Reading group",
            "submessages": [],
            "timestamp": 1510264156,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/81c6c8040fc0263607edd05c09dacf6b?d=identicon&version=1",
            "client": "website",
            "content": "<p>Putting these here to remember to read them:<br>\n<a href=\"https://github.com/wangziqi2013/BwTree\" target=\"_blank\" title=\"https://github.com/wangziqi2013/BwTree\">https://github.com/wangziqi2013/BwTree</a><br>\n<a href=\"https://github.com/runshenzhu/palmtree\" target=\"_blank\" title=\"https://github.com/runshenzhu/palmtree\">https://github.com/runshenzhu/palmtree</a><br>\nDefinitely related to the group</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 118542106,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "julian@cipht.net",
            "sender_full_name": "Julian Squires (he) (F2'17)",
            "sender_id": 101992,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "Database Internals Reading group",
            "submessages": [],
            "timestamp": 1510790360,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/3f6bef626649c46b4cc3fd9f67c151a19170da5e?x=x&version=21",
            "client": "website",
            "content": "<p>+1 to palmtree</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 118732250,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "jkozak@fmail.co.uk",
            "sender_full_name": "Jake \u26e4 Prozvyshe (they) (W1'17)",
            "sender_id": 8478,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "Database Internals Reading group",
            "submessages": [],
            "timestamp": 1511191764,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/3f6bef626649c46b4cc3fd9f67c151a19170da5e?x=x&version=21",
            "client": "website",
            "content": "<p><code>SIMD accelearation for key lookup.</code> is interesting section</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 118732252,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "jkozak@fmail.co.uk",
            "sender_full_name": "Jake \u26e4 Prozvyshe (they) (W1'17)",
            "sender_id": 8478,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "Database Internals Reading group",
            "submessages": [],
            "timestamp": 1511191773,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/e30b9e7d531d60960da4c58b24cf7e7c5aff03f0?x=x&version=5",
            "client": "ZulipElectron",
            "content": "<p><span class=\"user-mention\" data-user-email=\"joebeach@gmail.com\" data-user-id=\"102026\">@Joe Beach (F2'17)</span> Here's some stuff I started to bookmark: <a href=\"https://pgexercises.com/\" target=\"_blank\" title=\"https://pgexercises.com/\">https://pgexercises.com/</a> <a href=\"https://brandur.org/postgres-atomicity\" target=\"_blank\" title=\"https://brandur.org/postgres-atomicity\">https://brandur.org/postgres-atomicity</a> <a href=\"https://www.khanacademy.org/computing/computer-programming/sql/relational-queries-in-sql/p/joining-related-tables-with-left-outer-joins\" target=\"_blank\" title=\"https://www.khanacademy.org/computing/computer-programming/sql/relational-queries-in-sql/p/joining-related-tables-with-left-outer-joins\">https://www.khanacademy.org/computing/computer-programming/sql/relational-queries-in-sql/p/joining-related-tables-with-left-outer-joins</a></p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 119020675,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "pete@peterlyons.com",
            "sender_full_name": "Peter Lyons (he) (W1'17)",
            "sender_id": 103052,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "SQL and DB basics study group",
            "submessages": [],
            "timestamp": 1511807357,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/b3969612f0d6f4b398a1eec04087aafc0a38475e?x=x&version=2",
            "client": "ZulipElectron",
            "content": "<p>Oh cool. I just dmed you but I'll put my list here as well<br>\n<a href=\"https://pgexercises.com/\" target=\"_blank\" title=\"https://pgexercises.com/\">https://pgexercises.com/</a><br>\n<a href=\"https://launchschool.com/books/sql\" target=\"_blank\" title=\"https://launchschool.com/books/sql\">https://launchschool.com/books/sql</a><br>\n<a href=\"https://www.sqlteaching.com/\" target=\"_blank\" title=\"https://www.sqlteaching.com/\">https://www.sqlteaching.com/</a><br>\n<a href=\"https://sqlbolt.com/\" target=\"_blank\" title=\"https://sqlbolt.com/\">https://sqlbolt.com/</a><br>\n<a href=\"http://www.sqlcourse.com\" target=\"_blank\" title=\"http://www.sqlcourse.com\">www.sqlcourse.com</a></p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 119020765,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "joebeach@gmail.com",
            "sender_full_name": "Joe Beach (F2'17)",
            "sender_id": 102026,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "SQL and DB basics study group",
            "submessages": [],
            "timestamp": 1511807470,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/b3969612f0d6f4b398a1eec04087aafc0a38475e?x=x&version=2",
            "client": "ZulipElectron",
            "content": "<p>Let's try to set a time to meet for a SQL study group. It looks like Tues/Weds around 4pm are free on the calendar, as well as Thursdays around 3. <span class=\"user-mention\" data-user-email=\"pete@peterlyons.com\" data-user-id=\"103052\">@Peter Lyons (W1'17)</span> <span class=\"user-mention\" data-user-email=\"genny.hoffman@gmail.com\" data-user-id=\"103122\">@Genevieve Hoffman (W1'17)</span> <span class=\"user-mention\" data-user-email=\"tyler.tape@gmail.com\" data-user-id=\"103045\">@Tyler Tape (W1'17)</span> -- anyone I'm forgetting?</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 119020833,
            "is_me_message": false,
            "reactions": [
                {
                    "emoji_code": "1f44d",
                    "emoji_name": "thumbs_up",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "pete@peterlyons.com",
                        "full_name": "Peter Lyons (he) (W1'17)",
                        "id": 103052
                    },
                    "user_id": 103052
                }
            ],
            "recipient_id": 41342,
            "sender_email": "joebeach@gmail.com",
            "sender_full_name": "Joe Beach (F2'17)",
            "sender_id": 102026,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "SQL and DB basics study group",
            "submessages": [],
            "timestamp": 1511807602,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/a3e610d8bcbd1089a39b1a8caf972ab6?d=identicon&version=1",
            "client": "ZulipElectron",
            "content": "<p>I am in! Do we have ideas for what to use for a curriculum?</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 119021555,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "tyler.tape@gmail.com",
            "sender_full_name": "Tyler Tape (he) (W1'17)",
            "sender_id": 103045,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "SQL and DB basics study group",
            "submessages": [],
            "timestamp": 1511808811,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/a3e610d8bcbd1089a39b1a8caf972ab6?d=identicon&version=1",
            "client": "ZulipElectron",
            "content": "<p>Ugh, I really have to remember to look at the main thread and not just my mentions. <span class=\"emoji emoji-1f605\" title=\"sweat smile\">:sweat_smile:</span></p>\n<p>Wow, so many things!</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 119021696,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "tyler.tape@gmail.com",
            "sender_full_name": "Tyler Tape (he) (W1'17)",
            "sender_id": 103045,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "SQL and DB basics study group",
            "submessages": [],
            "timestamp": 1511809051,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/64b2edb83576c1475274f82ff5c4d504?d=identicon&version=1",
            "client": "website",
            "content": "<blockquote>\n<p>Let's try to set a time to meet for a SQL study group. It looks like Tues/Weds around 4pm are free on the calendar, as well as Thursdays around 3. </p>\n</blockquote>\n<p>This week I'm out on Wednesday at 4pm but Tuesday and Thursday times work for me. Thanks!</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 119021861,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "genny.hoffman@gmail.com",
            "sender_full_name": "Genevieve Hoffman (W1'17)",
            "sender_id": 103122,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "SQL and DB basics study group",
            "submessages": [],
            "timestamp": 1511809302,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/b3969612f0d6f4b398a1eec04087aafc0a38475e?x=x&version=2",
            "client": "ZulipElectron",
            "content": "<p>Cool. I made an event for this Thursday 3-430 <a href=\"https://www.recurse.com/calendar/1416\" target=\"_blank\" title=\"https://www.recurse.com/calendar/1416\">https://www.recurse.com/calendar/1416</a></p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 119022343,
            "is_me_message": false,
            "reactions": [
                {
                    "emoji_code": "2764",
                    "emoji_name": "heart",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "pete@peterlyons.com",
                        "full_name": "Peter Lyons (he) (W1'17)",
                        "id": 103052
                    },
                    "user_id": 103052
                },
                {
                    "emoji_code": "2764",
                    "emoji_name": "heart",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "tyler.tape@gmail.com",
                        "full_name": "Tyler Tape (he) (W1'17)",
                        "id": 103045
                    },
                    "user_id": 103045
                }
            ],
            "recipient_id": 41342,
            "sender_email": "joebeach@gmail.com",
            "sender_full_name": "Joe Beach (F2'17)",
            "sender_id": 102026,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "SQL and DB basics study group",
            "submessages": [],
            "timestamp": 1511810156,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/9d14ecfbfce9dea2c4f4b482d09344bea0fcd20e?x=x&version=4",
            "client": "ZulipElectron",
            "content": "<p>hi i also would like to attend! i have rsvped!</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 119025658,
            "is_me_message": false,
            "reactions": [
                {
                    "emoji_code": "1f389",
                    "emoji_name": "tada",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "joebeach@gmail.com",
                        "full_name": "Joe Beach (F2'17)",
                        "id": 102026
                    },
                    "user_id": 102026
                },
                {
                    "emoji_code": "1f389",
                    "emoji_name": "tada",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "pete@peterlyons.com",
                        "full_name": "Peter Lyons (he) (W1'17)",
                        "id": 103052
                    },
                    "user_id": 103052
                }
            ],
            "recipient_id": 41342,
            "sender_email": "nicole.leffel@gmail.com",
            "sender_full_name": "nicole leffel (they) (SP1'18)",
            "sender_id": 103187,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "SQL and DB basics study group",
            "submessages": [],
            "timestamp": 1511815782,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/81c6c8040fc0263607edd05c09dacf6b?d=identicon&version=1",
            "client": "website",
            "content": "<p>Relevant: <a href=\"https://www.viva64.com/en/b/0542/\" target=\"_blank\" title=\"https://www.viva64.com/en/b/0542/\">Code Quality Comparison of Firebird, MySQL, and PostgreSQL</a></p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 119119637,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "julian@cipht.net",
            "sender_full_name": "Julian Squires (he) (F2'17)",
            "sender_id": 101992,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "Database Internals Reading group",
            "submessages": [],
            "timestamp": 1511996251,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/b3969612f0d6f4b398a1eec04087aafc0a38475e?x=x&version=2",
            "client": "ZulipElectron",
            "content": "<p><a href=\"http://sqitch.org/\" target=\"_blank\" title=\"http://sqitch.org/\">http://sqitch.org/</a><br>\n<a href=\"https://github.com/begriffs/postgrest\" target=\"_blank\" title=\"https://github.com/begriffs/postgrest\">https://github.com/begriffs/postgrest</a></p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 119159361,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "joebeach@gmail.com",
            "sender_full_name": "Joe Beach (F2'17)",
            "sender_id": 102026,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "SQL and DB basics study group",
            "submessages": [],
            "timestamp": 1512072928,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/e30b9e7d531d60960da4c58b24cf7e7c5aff03f0?x=x&version=5",
            "client": "ZulipElectron",
            "content": "<p><a href=\"https://launchschool.com/books/sql/read/joins#joinsyntax\" target=\"_blank\" title=\"https://launchschool.com/books/sql/read/joins#joinsyntax\">https://launchschool.com/books/sql/read/joins#joinsyntax</a></p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 119159412,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "pete@peterlyons.com",
            "sender_full_name": "Peter Lyons (he) (W1'17)",
            "sender_id": 103052,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "SQL and DB basics study group",
            "submessages": [],
            "timestamp": 1512072972,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/e30b9e7d531d60960da4c58b24cf7e7c5aff03f0?x=x&version=5",
            "client": "ZulipElectron",
            "content": "<p>Docker stuff: <a href=\"https://github.com/focusaurus/mjournal/tree/develop/deploy\" target=\"_blank\" title=\"https://github.com/focusaurus/mjournal/tree/develop/deploy\">https://github.com/focusaurus/mjournal/tree/develop/deploy</a></p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 119159422,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "pete@peterlyons.com",
            "sender_full_name": "Peter Lyons (he) (W1'17)",
            "sender_id": 103052,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "SQL and DB basics study group",
            "submessages": [],
            "timestamp": 1512073003,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/b3969612f0d6f4b398a1eec04087aafc0a38475e?x=x&version=2",
            "client": "ZulipElectron",
            "content": "<p><a href=\"https://public.enigma.com\" target=\"_blank\" title=\"https://public.enigma.com\">https://public.enigma.com</a></p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 119159440,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "joebeach@gmail.com",
            "sender_full_name": "Joe Beach (F2'17)",
            "sender_id": 102026,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "SQL and DB basics study group",
            "submessages": [],
            "timestamp": 1512073055,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/b3969612f0d6f4b398a1eec04087aafc0a38475e?x=x&version=2",
            "client": "ZulipElectron",
            "content": "<p><a href=\"https://eggerapps.at/postico/\" target=\"_blank\" title=\"https://eggerapps.at/postico/\">https://eggerapps.at/postico/</a></p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 119161827,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "joebeach@gmail.com",
            "sender_full_name": "Joe Beach (F2'17)",
            "sender_id": 102026,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "SQL and DB basics study group",
            "submessages": [],
            "timestamp": 1512077020,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/b3969612f0d6f4b398a1eec04087aafc0a38475e?x=x&version=2",
            "client": "ZulipElectron",
            "content": "<p>docker tutorial: <a href=\"https://docker-curriculum.com/\" target=\"_blank\" title=\"https://docker-curriculum.com/\">https://docker-curriculum.com/</a></p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 119161875,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "joebeach@gmail.com",
            "sender_full_name": "Joe Beach (F2'17)",
            "sender_id": 102026,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "SQL and DB basics study group",
            "submessages": [],
            "timestamp": 1512077050,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/b3969612f0d6f4b398a1eec04087aafc0a38475e?x=x&version=2",
            "client": "ZulipElectron",
            "content": "<p>next event: <a href=\"https://www.recurse.com/calendar/1433?date=2017-12-3\" target=\"_blank\" title=\"https://www.recurse.com/calendar/1433?date=2017-12-3\">https://www.recurse.com/calendar/1433?date=2017-12-3</a></p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 119162224,
            "is_me_message": false,
            "reactions": [
                {
                    "emoji_code": "2764",
                    "emoji_name": "heart",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "tyler.tape@gmail.com",
                        "full_name": "Tyler Tape (he) (W1'17)",
                        "id": 103045
                    },
                    "user_id": 103045
                }
            ],
            "recipient_id": 41342,
            "sender_email": "joebeach@gmail.com",
            "sender_full_name": "Joe Beach (F2'17)",
            "sender_id": 102026,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "SQL and DB basics study group",
            "submessages": [],
            "timestamp": 1512077541,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/e30b9e7d531d60960da4c58b24cf7e7c5aff03f0?x=x&version=5",
            "client": "ZulipElectron",
            "content": "<p>Anyone else seeing issues with this excercise? <a href=\"https://pgexercises.com/questions/basic/unique.html\" target=\"_blank\" title=\"https://pgexercises.com/questions/basic/unique.html\">https://pgexercises.com/questions/basic/unique.html</a> It looks like for me the expected answer is doing an ASCIIbetical sort and my results are coming back case-insensitive sorted.</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 119359404,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "pete@peterlyons.com",
            "sender_full_name": "Peter Lyons (he) (W1'17)",
            "sender_id": 103052,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "SQL and DB basics study group",
            "submessages": [],
            "timestamp": 1512485202,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/e30b9e7d531d60960da4c58b24cf7e7c5aff03f0?x=x&version=5",
            "client": "ZulipElectron",
            "content": "<p>Already learning some new stuff!</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 119359725,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "pete@peterlyons.com",
            "sender_full_name": "Peter Lyons (he) (W1'17)",
            "sender_id": 103052,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "SQL and DB basics study group",
            "submessages": [],
            "timestamp": 1512485812,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/b3969612f0d6f4b398a1eec04087aafc0a38475e?x=x&version=2",
            "client": "ZulipElectron",
            "content": "<p>Oh that's weird. I don't remember for sure, because I did it last week, but I'm pretty sure my output matched the 'expected results' when I did it...</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 119361197,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "joebeach@gmail.com",
            "sender_full_name": "Joe Beach (F2'17)",
            "sender_id": 102026,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "SQL and DB basics study group",
            "submessages": [],
            "timestamp": 1512488042,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/b3969612f0d6f4b398a1eec04087aafc0a38475e?x=x&version=2",
            "client": "ZulipElectron",
            "content": "<p>But now they're not matching up</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 119361247,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "joebeach@gmail.com",
            "sender_full_name": "Joe Beach (F2'17)",
            "sender_id": 102026,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "SQL and DB basics study group",
            "submessages": [],
            "timestamp": 1512488072,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/e30b9e7d531d60960da4c58b24cf7e7c5aff03f0?x=x&version=5",
            "client": "ZulipElectron",
            "content": "<p>Gah this order/collation thing is definitely breaking the pass/fail criterion.</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 119365927,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "pete@peterlyons.com",
            "sender_full_name": "Peter Lyons (he) (W1'17)",
            "sender_id": 103052,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "SQL and DB basics study group",
            "submessages": [],
            "timestamp": 1512494573,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/e30b9e7d531d60960da4c58b24cf7e7c5aff03f0?x=x&version=5",
            "client": "ZulipElectron",
            "content": "<p>It's \"Genting\" vs \"GUEST\" that's doing it</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 119366092,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "pete@peterlyons.com",
            "sender_full_name": "Peter Lyons (he) (W1'17)",
            "sender_id": 103052,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "SQL and DB basics study group",
            "submessages": [],
            "timestamp": 1512494834,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/e30b9e7d531d60960da4c58b24cf7e7c5aff03f0?x=x&version=5",
            "client": "ZulipElectron",
            "content": "<p>even copy/pasting the reference answer doesn't pass. :-(</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 119366156,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "pete@peterlyons.com",
            "sender_full_name": "Peter Lyons (he) (W1'17)",
            "sender_id": 103052,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "SQL and DB basics study group",
            "submessages": [],
            "timestamp": 1512494977,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/b3969612f0d6f4b398a1eec04087aafc0a38475e?x=x&version=2",
            "client": "ZulipElectron",
            "content": "<p>That's so strange that it changed.</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 119366227,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "joebeach@gmail.com",
            "sender_full_name": "Joe Beach (F2'17)",
            "sender_id": 102026,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "SQL and DB basics study group",
            "submessages": [],
            "timestamp": 1512495032,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/81c6c8040fc0263607edd05c09dacf6b?d=identicon&version=1",
            "client": "website",
            "content": "<p>The source is on github; I wondered if there's something browser-specific about the implementation of <code>sortJSONResults</code> that gets called here: <a href=\"https://github.com/AlisdairO/pgexercises/blob/91e5042fb0b0bbaf3396af73b6811db84c7d505d/site/website/js/site.js#L374\" target=\"_blank\" title=\"https://github.com/AlisdairO/pgexercises/blob/91e5042fb0b0bbaf3396af73b6811db84c7d505d/site/website/js/site.js#L374\">site/website/js/site.js:374</a></p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 119366375,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "julian@cipht.net",
            "sender_full_name": "Julian Squires (he) (F2'17)",
            "sender_id": 101992,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "SQL and DB basics study group",
            "submessages": [],
            "timestamp": 1512495270,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/81c6c8040fc0263607edd05c09dacf6b?d=identicon&version=1",
            "client": "website",
            "content": "<p>(there's also a massive change that has a commit date in April, but which github says was actually pushed 22 hours ago; that certainly could have done it)</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 119366403,
            "is_me_message": false,
            "reactions": [
                {
                    "emoji_code": "1f44d",
                    "emoji_name": "thumbs_up",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "pete@peterlyons.com",
                        "full_name": "Peter Lyons (he) (W1'17)",
                        "id": 103052
                    },
                    "user_id": 103052
                }
            ],
            "recipient_id": 41342,
            "sender_email": "julian@cipht.net",
            "sender_full_name": "Julian Squires (he) (F2'17)",
            "sender_id": 101992,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "SQL and DB basics study group",
            "submessages": [],
            "timestamp": 1512495354,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/e30b9e7d531d60960da4c58b24cf7e7c5aff03f0?x=x&version=5",
            "client": "ZulipElectron",
            "content": "<p>Going to email the author.</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 119366445,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "pete@peterlyons.com",
            "sender_full_name": "Peter Lyons (he) (W1'17)",
            "sender_id": 103052,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "SQL and DB basics study group",
            "submessages": [],
            "timestamp": 1512495371,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/e30b9e7d531d60960da4c58b24cf7e7c5aff03f0?x=x&version=5",
            "client": "ZulipElectron",
            "content": "<p>I probably should've opened a github issue but the about page lists email first and I didn't read down to the link to github. :-/</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 119366661,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "pete@peterlyons.com",
            "sender_full_name": "Peter Lyons (he) (W1'17)",
            "sender_id": 103052,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "SQL and DB basics study group",
            "submessages": [],
            "timestamp": 1512495701,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/e30b9e7d531d60960da4c58b24cf7e7c5aff03f0?x=x&version=5",
            "client": "ZulipElectron",
            "content": "<p>Yeah so I'm thinking the results in SQL are correct but his expected results are all ASCIIbetical.</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 119366783,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "pete@peterlyons.com",
            "sender_full_name": "Peter Lyons (he) (W1'17)",
            "sender_id": 103052,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "SQL and DB basics study group",
            "submessages": [],
            "timestamp": 1512495847,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/b3969612f0d6f4b398a1eec04087aafc0a38475e?x=x&version=2",
            "client": "ZulipElectron",
            "content": "<p><a href=\"https://ryaneschinger.com/blog/dockerized-postgresql-development-environment/\" target=\"_blank\" title=\"https://ryaneschinger.com/blog/dockerized-postgresql-development-environment/\">https://ryaneschinger.com/blog/dockerized-postgresql-development-environment/</a></p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 119374100,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "joebeach@gmail.com",
            "sender_full_name": "Joe Beach (F2'17)",
            "sender_id": 102026,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "SQL and DB basics study group",
            "submessages": [],
            "timestamp": 1512507713,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/e30b9e7d531d60960da4c58b24cf7e7c5aff03f0?x=x&version=5",
            "client": "ZulipElectron",
            "content": "<div class=\"codehilite\"><pre><span></span>version: &#39;2&#39;\nservices:\n  postgres:\n    container_name: &#39;postgres&#39;\n    ports: [&#39;127.0.0.1:5432:5432&#39;]\n    volumes: [&#39;~/docker-volume/postgres:/host&#39;]\n    image: &#39;postgres&#39;\n    environment:\n      POSTGRES_PASSWORD: &#39;password&#39;\n</pre></div>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 119374342,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "pete@peterlyons.com",
            "sender_full_name": "Peter Lyons (he) (W1'17)",
            "sender_id": 103052,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "SQL and DB basics study group",
            "submessages": [],
            "timestamp": 1512508066,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/e30b9e7d531d60960da4c58b24cf7e7c5aff03f0?x=x&version=5",
            "client": "ZulipElectron",
            "content": "<p>Generally I have stuff I want to expose into the docker containers in ~/docker-volume/blah. I mount this always as <code>/host</code> in the container for file transfer in/out.</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 119374399,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "pete@peterlyons.com",
            "sender_full_name": "Peter Lyons (he) (W1'17)",
            "sender_id": 103052,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "SQL and DB basics study group",
            "submessages": [],
            "timestamp": 1512508104,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/e30b9e7d531d60960da4c58b24cf7e7c5aff03f0?x=x&version=5",
            "client": "ZulipElectron",
            "content": "<div class=\"codehilite\"><pre><span></span><span class=\"k\">select</span>\n\n<span class=\"n\">mem</span><span class=\"p\">.</span><span class=\"n\">firstname</span> <span class=\"o\">||</span> <span class=\"s1\">&#39; &#39;</span> <span class=\"o\">||</span> <span class=\"n\">mem</span><span class=\"p\">.</span><span class=\"n\">surname</span> <span class=\"k\">as</span> <span class=\"n\">member</span><span class=\"p\">,</span>\n<span class=\"n\">fac</span><span class=\"p\">.</span><span class=\"n\">name</span> <span class=\"k\">as</span> <span class=\"n\">facility</span><span class=\"p\">,</span>\n<span class=\"k\">case</span> <span class=\"n\">mem</span><span class=\"p\">.</span><span class=\"n\">memid</span> <span class=\"k\">when</span> <span class=\"mi\">0</span> <span class=\"k\">then</span> <span class=\"n\">fac</span><span class=\"p\">.</span><span class=\"n\">guestcost</span> <span class=\"o\">*</span> <span class=\"n\">book</span><span class=\"p\">.</span><span class=\"n\">slots</span> <span class=\"k\">else</span> <span class=\"n\">fac</span><span class=\"p\">.</span><span class=\"n\">membercost</span> <span class=\"o\">*</span> <span class=\"n\">book</span><span class=\"p\">.</span><span class=\"n\">slots</span> <span class=\"k\">end</span> <span class=\"k\">as</span> <span class=\"n\">cost</span>\n\n<span class=\"k\">from</span> <span class=\"n\">cd</span><span class=\"p\">.</span><span class=\"n\">bookings</span> <span class=\"n\">book</span>\n\n  <span class=\"k\">join</span> <span class=\"n\">cd</span><span class=\"p\">.</span><span class=\"n\">facilities</span> <span class=\"n\">fac</span> <span class=\"k\">on</span> <span class=\"n\">fac</span><span class=\"p\">.</span><span class=\"n\">facid</span> <span class=\"o\">=</span> <span class=\"n\">book</span><span class=\"p\">.</span><span class=\"n\">facid</span>\n  <span class=\"k\">join</span> <span class=\"n\">cd</span><span class=\"p\">.</span><span class=\"n\">members</span> <span class=\"n\">mem</span> <span class=\"k\">on</span> <span class=\"n\">book</span><span class=\"p\">.</span><span class=\"n\">memid</span> <span class=\"o\">=</span> <span class=\"n\">mem</span><span class=\"p\">.</span><span class=\"n\">memid</span>\n\n<span class=\"k\">where</span>\n  <span class=\"n\">book</span><span class=\"p\">.</span><span class=\"n\">starttime</span> <span class=\"o\">&gt;=</span> <span class=\"s1\">&#39;2012-09-14&#39;</span> <span class=\"k\">and</span> <span class=\"n\">book</span><span class=\"p\">.</span><span class=\"n\">starttime</span> <span class=\"o\">&lt;</span> <span class=\"s1\">&#39;2012-09-15&#39;</span>\n  <span class=\"k\">and</span>\n    <span class=\"c1\">-- Why can&#39;t I just do cost &gt; 30 here?</span>\n    <span class=\"p\">(</span>\n      <span class=\"p\">(</span><span class=\"n\">mem</span><span class=\"p\">.</span><span class=\"n\">memid</span> <span class=\"o\">=</span> <span class=\"mi\">0</span> <span class=\"k\">and</span> <span class=\"p\">(</span><span class=\"n\">fac</span><span class=\"p\">.</span><span class=\"n\">guestcost</span> <span class=\"o\">*</span> <span class=\"n\">book</span><span class=\"p\">.</span><span class=\"n\">slots</span><span class=\"p\">)</span> <span class=\"o\">&gt;</span> <span class=\"mi\">30</span><span class=\"p\">)</span>\n      <span class=\"k\">or</span>\n      <span class=\"p\">(</span><span class=\"n\">mem</span><span class=\"p\">.</span><span class=\"n\">memid</span> <span class=\"o\">&lt;&gt;</span> <span class=\"mi\">0</span> <span class=\"k\">and</span> <span class=\"p\">(</span><span class=\"n\">fac</span><span class=\"p\">.</span><span class=\"n\">membercost</span> <span class=\"o\">*</span> <span class=\"n\">book</span><span class=\"p\">.</span><span class=\"n\">slots</span><span class=\"p\">)</span> <span class=\"o\">&gt;</span> <span class=\"mi\">30</span><span class=\"p\">)</span>\n    <span class=\"p\">)</span>\n\n<span class=\"k\">order</span> <span class=\"k\">by</span> <span class=\"n\">cost</span> <span class=\"k\">desc</span>\n</pre></div>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 119374679,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "pete@peterlyons.com",
            "sender_full_name": "Peter Lyons (he) (W1'17)",
            "sender_id": 103052,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "SQL and DB basics study group",
            "submessages": [],
            "timestamp": 1512508553,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/e30b9e7d531d60960da4c58b24cf7e7c5aff03f0?x=x&version=5",
            "client": "ZulipElectron",
            "content": "<p>select * from (select surname as last from cd.members) as last where last like 'B%';</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 119375308,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "pete@peterlyons.com",
            "sender_full_name": "Peter Lyons (he) (W1'17)",
            "sender_id": 103052,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "SQL and DB basics study group",
            "submessages": [],
            "timestamp": 1512509673,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/e30b9e7d531d60960da4c58b24cf7e7c5aff03f0?x=x&version=5",
            "client": "ZulipElectron",
            "content": "<p>select * from (select surname as last1 from cd.members) as last2 where last1 like 'B%';</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 119375387,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "pete@peterlyons.com",
            "sender_full_name": "Peter Lyons (he) (W1'17)",
            "sender_id": 103052,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "SQL and DB basics study group",
            "submessages": [],
            "timestamp": 1512509802,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/b3969612f0d6f4b398a1eec04087aafc0a38475e?x=x&version=2",
            "client": "ZulipElectron",
            "content": "<p>next event: <a href=\"https://www.recurse.com/calendar/1455\" target=\"_blank\" title=\"https://www.recurse.com/calendar/1455\">https://www.recurse.com/calendar/1455</a></p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 119376523,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "joebeach@gmail.com",
            "sender_full_name": "Joe Beach (F2'17)",
            "sender_id": 102026,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "SQL and DB basics study group",
            "submessages": [],
            "timestamp": 1512511792,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/e30b9e7d531d60960da4c58b24cf7e7c5aff03f0?x=x&version=5",
            "client": "ZulipElectron",
            "content": "<p>pgexercises should be fixed</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 119435028,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "pete@peterlyons.com",
            "sender_full_name": "Peter Lyons (he) (W1'17)",
            "sender_id": 103052,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "SQL and DB basics study group",
            "submessages": [],
            "timestamp": 1512624185,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/e30b9e7d531d60960da4c58b24cf7e7c5aff03f0?x=x&version=5",
            "client": "ZulipElectron",
            "content": "<p>Here's an article on the N+1 query antipattern I mentioned on Tuesday. The rails solution looks still suboptimal. Pretty sure you could get the data in 1 query with a join: <a href=\"https://www.sitepoint.com/silver-bullet-n1-problem/\" target=\"_blank\" title=\"https://www.sitepoint.com/silver-bullet-n1-problem/\">https://www.sitepoint.com/silver-bullet-n1-problem/</a></p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 119474989,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "pete@peterlyons.com",
            "sender_full_name": "Peter Lyons (he) (W1'17)",
            "sender_id": 103052,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "SQL and DB basics study group",
            "submessages": [],
            "timestamp": 1512699044,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/e30b9e7d531d60960da4c58b24cf7e7c5aff03f0?x=x&version=5",
            "client": "ZulipElectron",
            "content": "<p><a href=\"https://masteringpostgresql.com/\" target=\"_blank\" title=\"https://masteringpostgresql.com/\">https://masteringpostgresql.com/</a></p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 119475508,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "pete@peterlyons.com",
            "sender_full_name": "Peter Lyons (he) (W1'17)",
            "sender_id": 103052,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "SQL and DB basics study group",
            "submessages": [],
            "timestamp": 1512700189,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/e30b9e7d531d60960da4c58b24cf7e7c5aff03f0?x=x&version=5",
            "client": "ZulipElectron",
            "content": "<p>dang I completed one of these by reading the docs and  didn't have to give up in frustration.</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 119665703,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "pete@peterlyons.com",
            "sender_full_name": "Peter Lyons (he) (W1'17)",
            "sender_id": 103052,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "SQL and DB basics study group",
            "submessages": [],
            "timestamp": 1513090483,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/e30b9e7d531d60960da4c58b24cf7e7c5aff03f0?x=x&version=5",
            "client": "ZulipElectron",
            "content": "<p>Anyone know why this is a syntax error?</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"k\">select</span>\n  <span class=\"n\">facid</span><span class=\"p\">,</span>\n  <span class=\"n\">date_trunc</span><span class=\"p\">(</span><span class=\"ss\">&quot;month&quot;</span> <span class=\"k\">from</span> <span class=\"n\">starttime</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"k\">month</span><span class=\"p\">,</span>\n  <span class=\"k\">sum</span><span class=\"p\">(</span><span class=\"n\">slots</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"ss\">&quot;Total Slots&quot;</span>\n\n<span class=\"k\">from</span> <span class=\"n\">cd</span><span class=\"p\">.</span><span class=\"n\">bookings</span>\n\n<span class=\"k\">group</span> <span class=\"k\">by</span> <span class=\"n\">facid</span><span class=\"p\">,</span> <span class=\"k\">month</span>\n\n<span class=\"k\">order</span> <span class=\"k\">by</span> <span class=\"n\">facid</span><span class=\"p\">,</span> <span class=\"k\">month</span><span class=\"p\">;</span>\n</pre></div>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 119665934,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "pete@peterlyons.com",
            "sender_full_name": "Peter Lyons (he) (W1'17)",
            "sender_id": 103052,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "SQL and DB basics study group",
            "submessages": [],
            "timestamp": 1513090825,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/e30b9e7d531d60960da4c58b24cf7e7c5aff03f0?x=x&version=5",
            "client": "ZulipElectron",
            "content": "<p>Ah missing a comma separating the <code>date_trunc</code> arguments</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 119666098,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "pete@peterlyons.com",
            "sender_full_name": "Peter Lyons (he) (W1'17)",
            "sender_id": 103052,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "SQL and DB basics study group",
            "submessages": [],
            "timestamp": 1513091043,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/e30b9e7d531d60960da4c58b24cf7e7c5aff03f0?x=x&version=5",
            "client": "ZulipElectron",
            "content": "<p>OK here's a valide slots per month per facility report</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"k\">select</span>\n  <span class=\"n\">facid</span><span class=\"p\">,</span>\n  <span class=\"n\">date_trunc</span><span class=\"p\">(</span><span class=\"s1\">&#39;month&#39;</span><span class=\"p\">,</span> <span class=\"n\">starttime</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"k\">month</span><span class=\"p\">,</span>\n  <span class=\"k\">sum</span><span class=\"p\">(</span><span class=\"n\">slots</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"ss\">&quot;Total Slots&quot;</span>\n\n<span class=\"k\">from</span> <span class=\"n\">cd</span><span class=\"p\">.</span><span class=\"n\">bookings</span>\n\n<span class=\"k\">group</span> <span class=\"k\">by</span> <span class=\"n\">facid</span><span class=\"p\">,</span> <span class=\"k\">month</span>\n\n<span class=\"k\">order</span> <span class=\"k\">by</span> <span class=\"k\">month</span><span class=\"p\">,</span> <span class=\"n\">facid</span><span class=\"p\">;</span>\n</pre></div>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 119666255,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "pete@peterlyons.com",
            "sender_full_name": "Peter Lyons (he) (W1'17)",
            "sender_id": 103052,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "SQL and DB basics study group",
            "submessages": [],
            "timestamp": 1513091322,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/e30b9e7d531d60960da4c58b24cf7e7c5aff03f0?x=x&version=5",
            "client": "ZulipElectron",
            "content": "<p>Found a slicker way to round to nearest 10:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"n\">postgres</span><span class=\"o\">=#</span> <span class=\"k\">select</span> <span class=\"n\">round</span><span class=\"p\">(</span><span class=\"mi\">343</span><span class=\"p\">,</span> <span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">);</span>\n <span class=\"n\">round</span>\n<span class=\"c1\">-------</span>\n   <span class=\"mi\">340</span>\n<span class=\"p\">(</span><span class=\"mi\">1</span> <span class=\"k\">row</span><span class=\"p\">)</span>\n\n<span class=\"n\">postgres</span><span class=\"o\">=#</span> <span class=\"k\">select</span> <span class=\"n\">round</span><span class=\"p\">(</span><span class=\"mi\">345</span><span class=\"p\">,</span> <span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">);</span>\n <span class=\"n\">round</span>\n<span class=\"c1\">-------</span>\n   <span class=\"mi\">350</span>\n<span class=\"p\">(</span><span class=\"mi\">1</span> <span class=\"k\">row</span><span class=\"p\">)</span>\n</pre></div>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 119672377,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "pete@peterlyons.com",
            "sender_full_name": "Peter Lyons (he) (W1'17)",
            "sender_id": 103052,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "SQL and DB basics study group",
            "submessages": [],
            "timestamp": 1513100308,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/e30b9e7d531d60960da4c58b24cf7e7c5aff03f0?x=x&version=5",
            "client": "ZulipElectron",
            "content": "<p><a href=\"https://launchschool.com/books/sql\" target=\"_blank\" title=\"https://launchschool.com/books/sql\">https://launchschool.com/books/sql</a></p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 119679165,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "pete@peterlyons.com",
            "sender_full_name": "Peter Lyons (he) (W1'17)",
            "sender_id": 103052,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "SQL and DB basics study group",
            "submessages": [],
            "timestamp": 1513110406,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/e30b9e7d531d60960da4c58b24cf7e7c5aff03f0?x=x&version=5",
            "client": "ZulipElectron",
            "content": "<p><a href=\"https://www.sqlteaching.com/\" target=\"_blank\" title=\"https://www.sqlteaching.com/\">https://www.sqlteaching.com/</a></p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 119679182,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "pete@peterlyons.com",
            "sender_full_name": "Peter Lyons (he) (W1'17)",
            "sender_id": 103052,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "SQL and DB basics study group",
            "submessages": [],
            "timestamp": 1513110447,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/b3969612f0d6f4b398a1eec04087aafc0a38475e?x=x&version=2",
            "client": "ZulipElectron",
            "content": "<p><a href=\"https://hgducharme.gitbooks.io/sql-basics/content/table_variables_&amp;_set_operators/\" target=\"_blank\" title=\"https://hgducharme.gitbooks.io/sql-basics/content/table_variables_&amp;_set_operators/\">https://hgducharme.gitbooks.io/sql-basics/content/table_variables_&amp;_set_operators/</a></p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 119679183,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "joebeach@gmail.com",
            "sender_full_name": "Joe Beach (F2'17)",
            "sender_id": 102026,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "SQL and DB basics study group",
            "submessages": [],
            "timestamp": 1513110450,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/c4e6637707ff62601f3dd21ec7626095?d=identicon&version=1",
            "client": "website",
            "content": "<p>I'm currently trying to learn about the implementation of relational query compilers and optimizers, with the tentative goal of building a simple in-memory Datalog that actually uses these techniques (rather than either being completely naive and using nested loops, or shunting the problem off on an existing tool). My long-term goal is to apply these techniques to Datafun, a research language I'm working on.</p>\n<p>Anybody have recommended sources (textbooks, papers, blog posts) for learning about query compilation \"from the ground up\"? <span class=\"user-mention\" data-user-email=\"jamie@scattered-thoughts.net\" data-user-id=\"863\">@Jamie Brandon (F'12)</span> I seem to recall you built a query engine for Imp.</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 119730147,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "daekharel@gmail.com",
            "sender_full_name": "Michael 'rntz' Arntzenius (he) (S2'20)",
            "sender_id": 5866,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "query compilation resources",
            "submessages": [],
            "timestamp": 1513200391,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/81c6c8040fc0263607edd05c09dacf6b?d=identicon&version=1",
            "client": "website",
            "content": "<p>This book is one of the only ones I've found that is both introductory and covers building a DBMS, not just using one: <a href=\"http://infolab.stanford.edu/~ullman/dscb.html\" target=\"_blank\" title=\"http://infolab.stanford.edu/~ullman/dscb.html\">http://infolab.stanford.edu/~ullman/dscb.html</a><br>\nIIRC it has a good coverage of query compilation and optimization, and in particular magic sets which is relevant to datalog.<br>\nBut after you've read it, you can dig into the <a href=\"http://redbook.io\" target=\"_blank\" title=\"http://redbook.io\">Database Red Book</a> and then interesting papers.</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 119730386,
            "is_me_message": false,
            "last_edit_timestamp": 1513200735,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "julian@cipht.net",
            "sender_full_name": "Julian Squires (he) (F2'17)",
            "sender_id": 101992,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "query compilation resources",
            "submessages": [],
            "timestamp": 1513200699,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/81c6c8040fc0263607edd05c09dacf6b?d=identicon&version=1",
            "client": "website",
            "content": "<p>BTW <a href=\"https://www.goodreads.com/book/show/1416957.Transaction_Processing\" target=\"_blank\" title=\"https://www.goodreads.com/book/show/1416957.Transaction_Processing\">Transaction Processing</a> is one of my favorite database books ever, but is almost exclusively about the other stuff: implementing transactions, ACID, lock managers, et cetera.</p>\n<p>Something you might find useful for a Datalog implementation in particular is <a href=\"http://wambook.sourceforge.net/\" target=\"_blank\" title=\"http://wambook.sourceforge.net/\">WAM: A Tutorial Reconstruction</a>, but of course it's more about building a Prolog implementation and some of the issues are irrelevant to Datalog and query optimization.</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 119730581,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "julian@cipht.net",
            "sender_full_name": "Julian Squires (he) (F2'17)",
            "sender_id": 101992,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "query compilation resources",
            "submessages": [],
            "timestamp": 1513200911,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/81c6c8040fc0263607edd05c09dacf6b?d=identicon&version=1",
            "client": "website",
            "content": "<p>About ten years ago I built a relational algebra-based query optimizer mostly using the Ullman book as a reference but I remember it being somewhat unsatisfactory.  I look forward to hearing about alternatives!</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 119730631,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "julian@cipht.net",
            "sender_full_name": "Julian Squires (he) (F2'17)",
            "sender_id": 101992,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "query compilation resources",
            "submessages": [],
            "timestamp": 1513200965,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/81c6c8040fc0263607edd05c09dacf6b?d=identicon&version=1",
            "client": "website",
            "content": "<p>BTW <a href=\"https://github.com/rxin/db-readings\" target=\"_blank\" title=\"https://github.com/rxin/db-readings\">Reynold Xin's db-readings repo</a> is a great list of database papers to read for this stuff.</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 119730773,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "julian@cipht.net",
            "sender_full_name": "Julian Squires (he) (F2'17)",
            "sender_id": 101992,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "query compilation resources",
            "submessages": [],
            "timestamp": 1513201180,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/81c6c8040fc0263607edd05c09dacf6b?d=identicon&version=1",
            "client": "website",
            "content": "<p>I see the System R link in that repo is busted, so here's a working one: <a href=\"https://people.eecs.berkeley.edu/~brewer/cs262/3-selinger79.pdf\" target=\"_blank\" title=\"https://people.eecs.berkeley.edu/~brewer/cs262/3-selinger79.pdf\">Access Path Selection in a Relational Database Management System</a></p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 119730933,
            "is_me_message": false,
            "last_edit_timestamp": 1513201332,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "julian@cipht.net",
            "sender_full_name": "Julian Squires (he) (F2'17)",
            "sender_id": 101992,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "query compilation resources",
            "submessages": [],
            "timestamp": 1513201325,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/c4e6637707ff62601f3dd21ec7626095?d=identicon&version=1",
            "client": "website",
            "content": "<p>wow, thanks! that looks like it will be very helpful.</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 119731512,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "daekharel@gmail.com",
            "sender_full_name": "Michael 'rntz' Arntzenius (he) (S2'20)",
            "sender_id": 5866,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "query compilation resources",
            "submessages": [],
            "timestamp": 1513202159,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/0aac726e8ce27b55809824e7f6de77e7?d=identicon&version=1",
            "client": "website",
            "content": "<p>Query compilation is undergoing something of a revolution in the last few years with a sudden spurt of research on multi-join algorithms. <a href=\"https://arxiv.org/pdf/1703.03147.pdf\" target=\"_blank\" title=\"https://arxiv.org/pdf/1703.03147.pdf\">https://arxiv.org/pdf/1703.03147.pdf</a> is a good example. Unfortunately none of the papers are particularly readable, but they are pretty simple to implement once you get the underlying ideas, as demonstrated by <a href=\"http://scattered-thoughts.net/blog/2016/10/11/a-practical-relational-query-compiler-in-500-lines/\" target=\"_blank\" title=\"http://scattered-thoughts.net/blog/2016/10/11/a-practical-relational-query-compiler-in-500-lines/\">http://scattered-thoughts.net/blog/2016/10/11/a-practical-relational-query-compiler-in-500-lines/</a></p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 119734526,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "jamie@scattered-thoughts.net",
            "sender_full_name": "Jamie Brandon (he) (W1'20)",
            "sender_id": 863,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "query compilation resources",
            "submessages": [],
            "timestamp": 1513205583,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/0aac726e8ce27b55809824e7f6de77e7?d=identicon&version=1",
            "client": "website",
            "content": "<p>I'm currently working on a cleaned up version of the compiler. In a few weeks I'll be giving a presentation at work about it. If you're interested I can send you the slides afterwards.</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 119734548,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "jamie@scattered-thoughts.net",
            "sender_full_name": "Jamie Brandon (he) (W1'20)",
            "sender_id": 863,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "query compilation resources",
            "submessages": [],
            "timestamp": 1513205628,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/c4e6637707ff62601f3dd21ec7626095?d=identicon&version=1",
            "client": "website",
            "content": "<p><span class=\"user-mention\" data-user-email=\"jamie@scattered-thoughts.net\" data-user-id=\"863\">@Jamie Brandon (F'12)</span> I would definitely be interested in seeing those slides! where are you working these days, by the way?</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 119737412,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "daekharel@gmail.com",
            "sender_full_name": "Michael 'rntz' Arntzenius (he) (S2'20)",
            "sender_id": 5866,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "query compilation resources",
            "submessages": [],
            "timestamp": 1513209166,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/c4e6637707ff62601f3dd21ec7626095?d=identicon&version=1",
            "client": "website",
            "content": "<p>also, has anyone got opinions on Fritz Henglein's recent work on discrimination-based joins? (eg. <a href=\"http://www.diku.dk/hjemmesider/ansatte/henglein/papers/henglein2010d.pdf\" target=\"_blank\" title=\"http://www.diku.dk/hjemmesider/ansatte/henglein/papers/henglein2010d.pdf\">http://www.diku.dk/hjemmesider/ansatte/henglein/papers/henglein2010d.pdf</a>; he has more papers at <a href=\"http://www.diku.dk/~henglein/bib/author/Fritz.Henglein.html\" target=\"_blank\" title=\"http://www.diku.dk/~henglein/bib/author/Fritz.Henglein.html\">http://www.diku.dk/~henglein/bib/author/Fritz.Henglein.html</a>)</p>\n<p>It looks interesting to me, but I only have a \"PL world\" perspective on it.</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 119737601,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "daekharel@gmail.com",
            "sender_full_name": "Michael 'rntz' Arntzenius (he) (S2'20)",
            "sender_id": 5866,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "query compilation resources",
            "submessages": [],
            "timestamp": 1513209429,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/0aac726e8ce27b55809824e7f6de77e7?d=identicon&version=1",
            "client": "website",
            "content": "<p>Yeah, I don't really like that paper.</p>\n<blockquote>\n<p>We obtain a linear running time in this example without an index.<br>\nbs = disc e (xs ++ ys)<br>\ndisc :: Equiv k \u2192 [(k, v)] \u2192 [[v]]</p>\n</blockquote>\n<p>Maybe I'm not reading it closely enough, but that looks awfully like building an index on the fly. </p>\n<p>Not very efficiently either - their graph shows joining 50k elements in 100ms, without materializing the results. For comparison, Imp takes 8.6ms including materializing the results, of which about 8ms is building indexes. They should have at least compared it to LINQ which is also designed to work without indexes, rather than hamstringing sqlite. </p>\n<p>Both <a href=\"http://homepages.inf.ed.ac.uk/slindley/papers/practical-theory-of-linq.pdf\" target=\"_blank\" title=\"http://homepages.inf.ed.ac.uk/slindley/papers/practical-theory-of-linq.pdf\">PLINQ</a> and <a href=\"http://www.cs.ox.ac.uk/dan.olteanu/papers/os-sigrec16.pdf\" target=\"_blank\" title=\"http://www.cs.ox.ac.uk/dan.olteanu/papers/os-sigrec16.pdf\">factorized databases</a> are worth looking at if you like the idea of working on algebraic expressions over relations. </p>\n<p>DB and PL people really need to start talking to each other. It's just as bad in the reverse direction eg papers about query compilation where they compile to entire query to one massive C++ expression in one shot, with no IR, using strings to emit the code.</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 119760512,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "jamie@scattered-thoughts.net",
            "sender_full_name": "Jamie Brandon (he) (W1'20)",
            "sender_id": 863,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "query compilation resources",
            "submessages": [],
            "timestamp": 1513258581,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/e30b9e7d531d60960da4c58b24cf7e7c5aff03f0?x=x&version=5",
            "client": "ZulipElectron",
            "content": "<p>Oh I found the blogger who goes deep into postgres internals. Great stuff: <a href=\"http://patshaughnessy.net/2017/12/15/looking-inside-postgres-at-a-gist-index\" target=\"_blank\" title=\"http://patshaughnessy.net/2017/12/15/looking-inside-postgres-at-a-gist-index\">http://patshaughnessy.net/2017/12/15/looking-inside-postgres-at-a-gist-index</a></p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 119835955,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "pete@peterlyons.com",
            "sender_full_name": "Peter Lyons (he) (W1'17)",
            "sender_id": 103052,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "SQL and DB basics study group",
            "submessages": [],
            "timestamp": 1513390065,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/c4e6637707ff62601f3dd21ec7626095?d=identicon&version=1",
            "client": "website",
            "content": "<p>Yes, building an index on the fly is what it's doing; in another paper (<a href=\"https://dl.acm.org/citation.cfm?id=1706372\" target=\"_blank\" title=\"https://dl.acm.org/citation.cfm?id=1706372\">https://dl.acm.org/citation.cfm?id=1706372</a>) Henglein describes it as \"first building up an ephemeral join index and then doing a scan\".</p>\n<p>I'd already seen PLINQ, and it seems relevant to my longer-term goal of implementing Datafun efficiently, since it converts comprehension-style queries (which Datafun uses) into join-style queries. I hadn't seen factorized databases. That looks potentially interesting, and possibly connected to Henglein's ideas about lazy products, although the machine-learning stuff is irrelevant to me.</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 119852216,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "daekharel@gmail.com",
            "sender_full_name": "Michael 'rntz' Arntzenius (he) (S2'20)",
            "sender_id": 5866,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "query compilation resources",
            "submessages": [],
            "timestamp": 1513430002,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/c4e6637707ff62601f3dd21ec7626095?d=identicon&version=1",
            "client": "website",
            "content": "<p><span class=\"user-mention\" data-user-email=\"jamie@scattered-thoughts.net\" data-user-id=\"863\">@Jamie Brandon (F'12)</span> Does Imp allow recursively-defined predicates? (e.g. given an edge relation for a graph, determine reachability.) <a href=\"http://scattered-thoughts.net/blog/2016/10/11/a-practical-relational-query-compiler-in-500-lines/\" target=\"_blank\" title=\"http://scattered-thoughts.net/blog/2016/10/11/a-practical-relational-query-compiler-in-500-lines/\">http://scattered-thoughts.net/blog/2016/10/11/a-practical-relational-query-compiler-in-500-lines/</a> doesn't say anything about them. It seems like they could raise some implementation issues.</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 119852307,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "daekharel@gmail.com",
            "sender_full_name": "Michael 'rntz' Arntzenius (he) (S2'20)",
            "sender_id": 5866,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "query compilation resources",
            "submessages": [],
            "timestamp": 1513430271,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/0aac726e8ce27b55809824e7f6de77e7?d=identicon&version=1",
            "client": "website",
            "content": "<p><span class=\"user-mention\" data-user-email=\"daekharel@gmail.com\" data-user-id=\"5866\">@Michael Robert Arntzenius (S'14)</span> It can handle them but it doesn't do anything smarter than run them to fixpoint. Improving that is usually not handled at the layer of individual query compilation though, but instead by some query rewrite that provides incremental maintenance eg <a href=\"https://pdfs.semanticscholar.org/006c/a7d3571497c73062b67ab1ab20a4b09b0972.pdf\" target=\"_blank\" title=\"https://pdfs.semanticscholar.org/006c/a7d3571497c73062b67ab1ab20a4b09b0972.pdf\">https://pdfs.semanticscholar.org/006c/a7d3571497c73062b67ab1ab20a4b09b0972.pdf</a>. Then a fixpoint is just incrementally maintaining the query with respect to changes in itself.</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 119864055,
            "is_me_message": false,
            "last_edit_timestamp": 1513457433,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "jamie@scattered-thoughts.net",
            "sender_full_name": "Jamie Brandon (he) (W1'20)",
            "sender_id": 863,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "query compilation resources",
            "submessages": [],
            "timestamp": 1513457305,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/c4e6637707ff62601f3dd21ec7626095?d=identicon&version=1",
            "client": "website",
            "content": "<p>hm. actually, I think the issue I'm thinking of comes up <em>only</em> if you do the incremental/seminaive thing for fixed points. (I'm currently working on generalizing incremental/seminaive fixed points to Datafun, using techniques from <a href=\"http://www.informatik.uni-marburg.de/~pgiarrusso/papers/pldi14-ilc-author-final.pdf\" target=\"_blank\" title=\"http://www.informatik.uni-marburg.de/~pgiarrusso/papers/pldi14-ilc-author-final.pdf\">http://www.informatik.uni-marburg.de/~pgiarrusso/papers/pldi14-ilc-author-final.pdf</a>)</p>\n<p>If you just do the naive thing, everything works, but you'll recompute a lot of stuff. To do the seminaive thing, you keep an accumulator and a delta, and keep computing the next delta and adding it to the accumulator. And the problem is the \"add it to the accumulator\" step. If your sets are flat arrays, union is O(n+m). So in every iteration, you have to pay again for the elements you already computed (that are in the accumulator you're unioning with)!</p>\n<p>I suspect there is some (probably already well-understood) amortized solution here.</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 119867268,
            "is_me_message": false,
            "last_edit_timestamp": 1513467430,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "daekharel@gmail.com",
            "sender_full_name": "Michael 'rntz' Arntzenius (he) (S2'20)",
            "sender_id": 5866,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "query compilation resources",
            "submessages": [],
            "timestamp": 1513465239,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/0aac726e8ce27b55809824e7f6de77e7?d=identicon&version=1",
            "client": "website",
            "content": "<p>Oh yeah, that's definitely a problem for bigger queries. I'm currently working on being able to compile queries over any data-structure that implements some simple interface, and then we'll implement some O(log n) data-structures for intermediate results.</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 119898812,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "jamie@scattered-thoughts.net",
            "sender_full_name": "Jamie Brandon (he) (W1'20)",
            "sender_id": 863,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "query compilation resources",
            "submessages": [],
            "timestamp": 1513542941,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/c4e6637707ff62601f3dd21ec7626095?d=identicon&version=1",
            "client": "website",
            "content": "<p><span class=\"user-mention\" data-user-email=\"jamie@scattered-thoughts.net\" data-user-id=\"863\">@Jamie Brandon (F'12)</span> So I'm reading the leapfrog triejoin paper, and it talks about how, to ensure that you're always leapfrogging the smallest iterator past the largest value, it maintains an invariant that the iterator-list is sorted by the value at the head of each iterator. But to maintain this invariant, all they need to do is sort the iterator-list at the beginning, and then cycle through iterators circularly.</p>\n<p>It occurs to me, it should be fine to <em>not</em> sort the iterators initially. Because, after one pass through the iterators, the leapfrogging will ensure they are sorted! Does that seem right to you?</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 120128463,
            "is_me_message": false,
            "last_edit_timestamp": 1513991598,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "daekharel@gmail.com",
            "sender_full_name": "Michael 'rntz' Arntzenius (he) (S2'20)",
            "sender_id": 5866,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "query compilation resources",
            "submessages": [],
            "timestamp": 1513991583,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/0aac726e8ce27b55809824e7f6de77e7?d=identicon&version=1",
            "client": "website",
            "content": "<p>Yes, although I remember there being some subtlety over how to efficiently check if they are all equal. I think I had <code>seek</code> return a boolean indicating whether it reached the target or went past it, and then maintained a count of how many consecutive <code>true</code>s I got, whereas if you know they are always sorted you can just check if the resulting value is equal to the next iterator.</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 120247810,
            "is_me_message": false,
            "last_edit_timestamp": 1514283356,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "jamie@scattered-thoughts.net",
            "sender_full_name": "Jamie Brandon (he) (W1'20)",
            "sender_id": 863,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "query compilation resources",
            "submessages": [],
            "timestamp": 1514283134,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/c4e6637707ff62601f3dd21ec7626095?d=identicon&version=1",
            "client": "website",
            "content": "<p>ah, checking if the result is equal to the next iterator is clever, I didn't think of that. The versions I've written just keep a count.</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 120249374,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "daekharel@gmail.com",
            "sender_full_name": "Michael 'rntz' Arntzenius (he) (S2'20)",
            "sender_id": 5866,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "query compilation resources",
            "submessages": [],
            "timestamp": 1514287066,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/b3969612f0d6f4b398a1eec04087aafc0a38475e?x=x&version=2",
            "client": "ZulipElectron",
            "content": "<p><span class=\"user-mention\" data-user-email=\"genny.hoffman@gmail.com\" data-user-id=\"103122\">@Genevieve Hoffman (W1'17)</span> <span class=\"user-mention\" data-user-email=\"tyler.tape@gmail.com\" data-user-id=\"103045\">@Tyler Tape (W1'17)</span> Let's keep going with the SQL stuff. I'll be around Thursday afternoon. What time works for y'all? (all are welcome of course!)</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 121098097,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "joebeach@gmail.com",
            "sender_full_name": "Joe Beach (F2'17)",
            "sender_id": 102026,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "SQL and DB basics study group",
            "submessages": [],
            "timestamp": 1516049627,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/64b2edb83576c1475274f82ff5c4d504?d=identicon&version=1",
            "client": "website",
            "content": "<p>You want to meet up after lunch, like 2pm?</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 121098167,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "genny.hoffman@gmail.com",
            "sender_full_name": "Genevieve Hoffman (W1'17)",
            "sender_id": 103122,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "SQL and DB basics study group",
            "submessages": [],
            "timestamp": 1516049760,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/b3969612f0d6f4b398a1eec04087aafc0a38475e?x=x&version=2",
            "client": "ZulipElectron",
            "content": "<p>That works for me</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 121098231,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "joebeach@gmail.com",
            "sender_full_name": "Joe Beach (F2'17)",
            "sender_id": 102026,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "SQL and DB basics study group",
            "submessages": [],
            "timestamp": 1516049840,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/64b2edb83576c1475274f82ff5c4d504?d=identicon&version=1",
            "client": "website",
            "content": "<p>I don't think it conflicts with anything other than job stuff, so I can put it on the calendar. I'm pretty flexible if the time needs to shift though.</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 121098301,
            "is_me_message": false,
            "reactions": [
                {
                    "emoji_code": "1f44d",
                    "emoji_name": "thumbs_up",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "joebeach@gmail.com",
                        "full_name": "Joe Beach (F2'17)",
                        "id": 102026
                    },
                    "user_id": 102026
                }
            ],
            "recipient_id": 41342,
            "sender_email": "genny.hoffman@gmail.com",
            "sender_full_name": "Genevieve Hoffman (W1'17)",
            "sender_id": 103122,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "SQL and DB basics study group",
            "submessages": [],
            "timestamp": 1516049962,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/3f6bef626649c46b4cc3fd9f67c151a19170da5e?x=x&version=21",
            "client": "website",
            "content": "<p>I'm proficient with relational databases and other types of databases and would be happy to contribute to this group if that's desirable.</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 121133250,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "jkozak@fmail.co.uk",
            "sender_full_name": "Jake \u26e4 Prozvyshe (they) (W1'17)",
            "sender_id": 8478,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "SQL and DB basics study group",
            "submessages": [],
            "timestamp": 1516122123,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/3f6bef626649c46b4cc3fd9f67c151a19170da5e?x=x&version=21",
            "client": "website",
            "content": "<p>my most recent major project was implementing a SQLite3-compatible relational database.</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 121133270,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "jkozak@fmail.co.uk",
            "sender_full_name": "Jake \u26e4 Prozvyshe (they) (W1'17)",
            "sender_id": 8478,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "SQL and DB basics study group",
            "submessages": [],
            "timestamp": 1516122170,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/a3e610d8bcbd1089a39b1a8caf972ab6?d=identicon&version=1",
            "client": "ZulipElectron",
            "content": "<p>No preference for time, whenever's good.</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 121133950,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "tyler.tape@gmail.com",
            "sender_full_name": "Tyler Tape (he) (W1'17)",
            "sender_id": 103045,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "SQL and DB basics study group",
            "submessages": [],
            "timestamp": 1516123097,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/b3969612f0d6f4b398a1eec04087aafc0a38475e?x=x&version=2",
            "client": "ZulipElectron",
            "content": "<p>I'm running pretty late. Can we say 2:30? Or feel free to start without me. <span class=\"user-mention\" data-user-email=\"genny.hoffman@gmail.com\" data-user-id=\"103122\">@Genevieve Hoffman (W1'17)</span> <span class=\"user-mention\" data-user-email=\"tyler.tape@gmail.com\" data-user-id=\"103045\">@Tyler Tape (W1'17)</span></p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 121230458,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "joebeach@gmail.com",
            "sender_full_name": "Joe Beach (F2'17)",
            "sender_id": 102026,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "SQL and DB basics study group",
            "submessages": [],
            "timestamp": 1516300114,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/64b2edb83576c1475274f82ff5c4d504?d=identicon&version=1",
            "client": "website",
            "content": "<p>Hey <span class=\"user-mention\" data-user-email=\"joebeach@gmail.com\" data-user-id=\"102026\">@Joe Beach (F2'17)</span> That's totally fine with me to push the meeting by 30 minutes. Maybe that let's <span class=\"user-mention\" data-user-email=\"annkidder@gmail.com\" data-user-id=\"105044\">@Ann Kidder (W2'18)</span> join more easily too!</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 121230777,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "genny.hoffman@gmail.com",
            "sender_full_name": "Genevieve Hoffman (W1'17)",
            "sender_id": 103122,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "SQL and DB basics study group",
            "submessages": [],
            "timestamp": 1516300681,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/a3e610d8bcbd1089a39b1a8caf972ab6?d=identicon&version=1",
            "client": "ZulipElectron",
            "content": "<p>2:30's fine for me!</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 121230829,
            "is_me_message": false,
            "reactions": [
                {
                    "emoji_code": "1f64c",
                    "emoji_name": "raised_hands",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "annkidder@gmail.com",
                        "full_name": "ann haeyoung (she) (W2'18)",
                        "id": 105044
                    },
                    "user_id": 105044
                }
            ],
            "recipient_id": 41342,
            "sender_email": "tyler.tape@gmail.com",
            "sender_full_name": "Tyler Tape (he) (W1'17)",
            "sender_id": 103045,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "SQL and DB basics study group",
            "submessages": [],
            "timestamp": 1516300737,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/3fafc0390e40bf6e659c54dd968b3713?d=identicon&version=1",
            "client": "ZulipElectron",
            "content": "<p>so is this happening now? The turing room looks full</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 121232882,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "bootandy@gmail.com",
            "sender_full_name": "andrew boot (W2'18)",
            "sender_id": 105172,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "SQL and DB basics study group",
            "submessages": [],
            "timestamp": 1516303913,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/64b2edb83576c1475274f82ff5c4d504?d=identicon&version=1",
            "client": "website",
            "content": "<p>it is! come if you're interested!</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 121232952,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "genny.hoffman@gmail.com",
            "sender_full_name": "Genevieve Hoffman (W1'17)",
            "sender_id": 103122,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "SQL and DB basics study group",
            "submessages": [],
            "timestamp": 1516304003,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/64b2edb83576c1475274f82ff5c4d504?d=identicon&version=1",
            "client": "website",
            "content": "<p>Another SQL resource from andrew: <a href=\"http://use-the-index-luke.com/\" target=\"_blank\" title=\"http://use-the-index-luke.com/\">http://use-the-index-luke.com/</a></p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 121234127,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "genny.hoffman@gmail.com",
            "sender_full_name": "Genevieve Hoffman (W1'17)",
            "sender_id": 103122,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "SQL and DB basics study group",
            "submessages": [],
            "timestamp": 1516305742,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/a3e610d8bcbd1089a39b1a8caf972ab6?d=identicon&version=1",
            "client": "ZulipElectron",
            "content": "<p><span class=\"user-mention\" data-user-email=\"genny.hoffman@gmail.com\" data-user-id=\"103122\">@Genevieve Hoffman (W1'17)</span> Thanks for the share, but I don't have enough space in my dropbox. Too stingy to upgrade. Is there another way to get it?</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 121235399,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "tyler.tape@gmail.com",
            "sender_full_name": "Tyler Tape (he) (W1'17)",
            "sender_id": 103045,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "SQL and DB basics study group",
            "submessages": [],
            "timestamp": 1516307907,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/64b2edb83576c1475274f82ff5c4d504?d=identicon&version=1",
            "client": "website",
            "content": "<p>Let me try and just host the book there. I can re-send a link with just the book.</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 121235413,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "genny.hoffman@gmail.com",
            "sender_full_name": "Genevieve Hoffman (W1'17)",
            "sender_id": 103122,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "SQL and DB basics study group",
            "submessages": [],
            "timestamp": 1516307960,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/a3e610d8bcbd1089a39b1a8caf972ab6?d=identicon&version=1",
            "client": "ZulipElectron",
            "content": "<p>Got it! Thank youuu</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 121235792,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "tyler.tape@gmail.com",
            "sender_full_name": "Tyler Tape (he) (W1'17)",
            "sender_id": 103045,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "SQL and DB basics study group",
            "submessages": [],
            "timestamp": 1516308666,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/47d545529e036682e7075910a2489214?d=identicon&version=1",
            "client": "ZulipElectron",
            "content": "<p>I have a great resource on database modeling if you are also interested in it. (PDF) I found too late about the meeting today, is there something I can check to see where you are at atm? I have been working Backend for years without really having to write SQL so I always find myself googling for stuff that's not basic</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 121235907,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "ondoheer@gmail.com",
            "sender_full_name": "Pedro Alejandro Baumann Cornejo (he) (W2'18)",
            "sender_id": 105145,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "SQL and DB basics study group",
            "submessages": [],
            "timestamp": 1516308853,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/64b2edb83576c1475274f82ff5c4d504?d=identicon&version=1",
            "client": "website",
            "content": "<p><span class=\"user-mention\" data-user-email=\"ondoheer@gmail.com\" data-user-id=\"105145\">@Pedro Alejandro Baumann Cornejo (W2'18)</span> It would be great to see the database modeling resource you're talking about. Some of us decided to read through this book: <a href=\"https://bigmachine.io/products/a-curious-moon\" target=\"_blank\" title=\"https://bigmachine.io/products/a-curious-moon\">https://bigmachine.io/products/a-curious-moon</a><br>\nLet me know if you want to join and I can send you links.</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 121236478,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "genny.hoffman@gmail.com",
            "sender_full_name": "Genevieve Hoffman (W1'17)",
            "sender_id": 103122,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "SQL and DB basics study group",
            "submessages": [],
            "timestamp": 1516309808,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/47d545529e036682e7075910a2489214?d=identicon&version=1",
            "client": "ZulipElectron",
            "content": "<p>I'll send you an email with the book</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 121236491,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "ondoheer@gmail.com",
            "sender_full_name": "Pedro Alejandro Baumann Cornejo (he) (W2'18)",
            "sender_id": 105145,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "SQL and DB basics study group",
            "submessages": [],
            "timestamp": 1516309841,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/47d545529e036682e7075910a2489214?d=identicon&version=1",
            "client": "ZulipElectron",
            "content": "<p>Let me chweck that</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 121236492,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "ondoheer@gmail.com",
            "sender_full_name": "Pedro Alejandro Baumann Cornejo (he) (W2'18)",
            "sender_id": 105145,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "SQL and DB basics study group",
            "submessages": [],
            "timestamp": 1516309844,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/47d545529e036682e7075910a2489214?d=identicon&version=1",
            "client": "ZulipElectron",
            "content": "<p>I am a little bit afraid I might be doind to much because of FOMO, so I'll check it to see if I can join!</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 121236503,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "ondoheer@gmail.com",
            "sender_full_name": "Pedro Alejandro Baumann Cornejo (he) (W2'18)",
            "sender_id": 105145,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "SQL and DB basics study group",
            "submessages": [],
            "timestamp": 1516309875,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/a3e610d8bcbd1089a39b1a8caf972ab6?d=identicon&version=1",
            "client": "ZulipElectron",
            "content": "<p>I'm working on my poker server. It manages many users who may be in many poker rooms at once. To represent this in Postgres, I have a <code>user_room</code> table, with foreign keys to <code>user_id</code> and <code>room_id</code>.</p>\n<p>My problem is, I want to allow users to join a room (i.e. insert a user/room pair into <code>user_room</code>) only if it's not at capacity, and they're not already in it. What's the most natural way to pull this off? I could do it in application code, but I'd prefer to do it in a single query or transaction to avoid concurrency bugs.</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 122419874,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "tyler.tape@gmail.com",
            "sender_full_name": "Tyler Tape (he) (W1'17)",
            "sender_id": 103045,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "Constrain many-many relationship to a maximum",
            "submessages": [],
            "timestamp": 1518564521,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/a3e610d8bcbd1089a39b1a8caf972ab6?d=identicon&version=1",
            "client": "ZulipElectron",
            "content": "<div class=\"codehilite\"><pre><span></span>SELECT\n  CASE\n   WHEN (SELECT COUNT(u_id) FROM user_room WHERE r_id = 7) &lt; 7 AND (SELECT COUNT(u_id) FROM user_room WHERE r_id = 7 AND u_id = 1) = 0 THEN &#39;true&#39;\n   ELSE &#39;false&#39;\n  END\nFROM user_room;\n</pre></div>\n\n\n<p>This returns <code>true</code> or <code>false</code> under the right conditions, but I don't know how to then perform an insert based on the result.</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 122419945,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "tyler.tape@gmail.com",
            "sender_full_name": "Tyler Tape (he) (W1'17)",
            "sender_id": 103045,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "Constrain many-many relationship to a maximum",
            "submessages": [],
            "timestamp": 1518564639,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/091c0c9965b28415105333a5fdcd7c37?d=identicon&version=1",
            "client": "website",
            "content": "<p>I would probably start a transaction and do the check and insert?</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 122419956,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "stuart.b.elston@gmail.com",
            "sender_full_name": "Stu Elston (he) (W1'17)",
            "sender_id": 103057,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "Constrain many-many relationship to a maximum",
            "submessages": [],
            "timestamp": 1518564667,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/a3e610d8bcbd1089a39b1a8caf972ab6?d=identicon&version=1",
            "client": "ZulipElectron",
            "content": "<p>Ah cool, I'll look into transactions more. :)</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 122420016,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "tyler.tape@gmail.com",
            "sender_full_name": "Tyler Tape (he) (W1'17)",
            "sender_id": 103045,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "Constrain many-many relationship to a maximum",
            "submessages": [],
            "timestamp": 1518564750,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/b0d3d1042e23d55075953653f9736863?d=identicon&version=1",
            "client": "ZulipElectron",
            "content": "<p><span class=\"user-mention\" data-user-email=\"stuart.b.elston@gmail.com\" data-user-id=\"103057\">@Stuart Elston (W1'17)</span> I think even if you start a transaction you might have race conditions.    <br>\nI would use a lock when doing the query to check number of players in the room and inserting.</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 122420542,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "laurent.direr@gmail.com",
            "sender_full_name": "Laurent Direr (W2'18)",
            "sender_id": 105084,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "Constrain many-many relationship to a maximum",
            "submessages": [],
            "timestamp": 1518565847,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/21b9cce736cbbe8e0761bbb33863c7d3112d0136?x=x&version=2",
            "client": "website",
            "content": "<p>Laurent is right. Even if you use a transaction, due to Postgres' default settings, you can run into an issue called write skew. The Wikipedia page for <a href=\"https://en.wikipedia.org/wiki/Snapshot_isolation\" target=\"_blank\" title=\"https://en.wikipedia.org/wiki/Snapshot_isolation\">snapshot isolation</a> gives an example:</p>\n<blockquote>\n<p>In a write skew anomaly, two transactions (T1 and T2) concurrently read an overlapping data set (e.g. values V1 and V2), concurrently make disjoint updates (e.g. T1 updates V1, T2 updates V2), and finally concurrently commit, neither having seen the update performed by the other. Were the system serializable, such an anomaly would be impossible, as either T1 or T2 would have to occur \"first\", and be visible to the other. In contrast, snapshot isolation permits write skew anomalies.</p>\n</blockquote>\n<p>To solve this problem, I would suggest grabbing a write lock on the room. This can be done by using <a href=\"https://www.postgresql.org/docs/current/static/explicit-locking.html\" target=\"_blank\" title=\"https://www.postgresql.org/docs/current/static/explicit-locking.html\">SELECT FOR UPDATE</a>. After grabbing the write lock on the room, you can check the number of people in the room and then add the user to the room. Grabbing the write lock prevents a concurrent transaction from seeing how many people are in the room until you add/don't add the person.</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 122422505,
            "is_me_message": false,
            "last_edit_timestamp": 1518569944,
            "reactions": [
                {
                    "emoji_code": "1f44d",
                    "emoji_name": "thumbs_up",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "tyler.tape@gmail.com",
                        "full_name": "Tyler Tape (he) (W1'17)",
                        "id": 103045
                    },
                    "user_id": 103045
                },
                {
                    "emoji_code": "1f44d",
                    "emoji_name": "thumbs_up",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "roberto.n.thais@gmail.com",
                        "full_name": "Roberto Thais (he) (W2'18)",
                        "id": 105531
                    },
                    "user_id": 105531
                },
                {
                    "emoji_code": "1f44d",
                    "emoji_name": "thumbs_up",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "ondoheer@gmail.com",
                        "full_name": "Pedro Alejandro Baumann Cornejo (he) (W2'18)",
                        "id": 105145
                    },
                    "user_id": 105145
                },
                {
                    "emoji_code": "1f44d",
                    "emoji_name": "thumbs_up",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "pete@peterlyons.com",
                        "full_name": "Peter Lyons (he) (W1'17)",
                        "id": 103052
                    },
                    "user_id": 103052
                }
            ],
            "recipient_id": 41342,
            "sender_email": "michaelmalis2@gmail.com",
            "sender_full_name": "Michael Malis (SP2'19)",
            "sender_id": 8099,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "Constrain many-many relationship to a maximum",
            "submessages": [],
            "timestamp": 1518569925,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/21b9cce736cbbe8e0761bbb33863c7d3112d0136?x=x&version=2",
            "client": "website",
            "content": "<p>There are two other options I can think of. One is to use the \"serializable\" isolation level in Postgres. This will automatically abort transactions where write-skew could occur. It can be somewhat difficult to work with serializable because you now have to retry transactions if they abort.</p>\n<p>Another option is to store the number of people in the room in the room row. Since <code>UPDATE</code>s on the same row ran across multiple transactions will serialize, you can do something like <code>UPDATE rooms WHERE room_id = 0 AND people_in_room &lt; 5</code>. If the update was not successful, you know the room either does not exist or is at capacity.</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 122422760,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "michaelmalis2@gmail.com",
            "sender_full_name": "Michael Malis (SP2'19)",
            "sender_id": 8099,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "Constrain many-many relationship to a maximum",
            "submessages": [],
            "timestamp": 1518570370,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/21b9cce736cbbe8e0761bbb33863c7d3112d0136?x=x&version=2",
            "client": "website",
            "content": "<p>If you need any help, I would be glad to answer any questions you have.</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 122422763,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "michaelmalis2@gmail.com",
            "sender_full_name": "Michael Malis (SP2'19)",
            "sender_id": 8099,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "Constrain many-many relationship to a maximum",
            "submessages": [],
            "timestamp": 1518570418,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/b0d3d1042e23d55075953653f9736863?d=identicon&version=1",
            "client": "ZulipElectron",
            "content": "<p><span class=\"user-mention\" data-user-email=\"michaelmalis2@gmail.com\" data-user-id=\"8099\">@Michael Malis (S1'15)</span> Nice answer! Thanks for the insights</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 122422929,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "laurent.direr@gmail.com",
            "sender_full_name": "Laurent Direr (W2'18)",
            "sender_id": 105084,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "Constrain many-many relationship to a maximum",
            "submessages": [],
            "timestamp": 1518570773,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/21b9cce736cbbe8e0761bbb33863c7d3112d0136?x=x&version=2",
            "client": "website",
            "content": "<p>Actually, I just recalled an easier solution. You can store the number of people in the room row. You can then put a constraint <code>people_in_room &lt;= 5</code>. This will prevent the number of people in the room from ever going above five. I think either the write lock solution or this solution are the best options.</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 122422975,
            "is_me_message": false,
            "last_edit_timestamp": 1518570882,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "michaelmalis2@gmail.com",
            "sender_full_name": "Michael Malis (SP2'19)",
            "sender_id": 8099,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "Constrain many-many relationship to a maximum",
            "submessages": [],
            "timestamp": 1518570868,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/47d545529e036682e7075910a2489214?d=identicon&version=1",
            "client": "website",
            "content": "<p>This is great to know about, thanks <span class=\"user-mention\" data-user-email=\"stuart.b.elston@gmail.com\" data-user-id=\"103057\">@Stuart Elston (W1'17)</span> <span class=\"user-mention\" data-user-email=\"laurent.direr@gmail.com\" data-user-id=\"105084\">@Laurent Direr (W2'18)</span> and <span class=\"user-mention\" data-user-email=\"michaelmalis2@gmail.com\" data-user-id=\"8099\">@Michael Malis (S1'15)</span></p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 122427440,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "ondoheer@gmail.com",
            "sender_full_name": "Pedro Alejandro Baumann Cornejo (he) (W2'18)",
            "sender_id": 105145,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "Constrain many-many relationship to a maximum",
            "submessages": [],
            "timestamp": 1518580835,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/3f6bef626649c46b4cc3fd9f67c151a19170da5e?x=x&version=21",
            "client": "website",
            "content": "<p>I told you <span class=\"user-mention\" data-user-email=\"tyler.tape@gmail.com\" data-user-id=\"103045\">@Tyler Tape (W1'17)</span></p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 122429262,
            "is_me_message": false,
            "reactions": [
                {
                    "emoji_code": "1f601",
                    "emoji_name": "grin",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "tyler.tape@gmail.com",
                        "full_name": "Tyler Tape (he) (W1'17)",
                        "id": 103045
                    },
                    "user_id": 103045
                }
            ],
            "recipient_id": 41342,
            "sender_email": "jkozak@fmail.co.uk",
            "sender_full_name": "Jake \u26e4 Prozvyshe (they) (W1'17)",
            "sender_id": 8478,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "Constrain many-many relationship to a maximum",
            "submessages": [],
            "timestamp": 1518585005,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/3f6bef626649c46b4cc3fd9f67c151a19170da5e?x=x&version=21",
            "client": "website",
            "content": "<p>I warned you about transactions</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 122429266,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "jkozak@fmail.co.uk",
            "sender_full_name": "Jake \u26e4 Prozvyshe (they) (W1'17)",
            "sender_id": 8478,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "Constrain many-many relationship to a maximum",
            "submessages": [],
            "timestamp": 1518585011,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/3f6bef626649c46b4cc3fd9f67c151a19170da5e?x=x&version=21",
            "client": "website",
            "content": "<p>The txid doesn't stop from getting overflown</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 122429271,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "jkozak@fmail.co.uk",
            "sender_full_name": "Jake \u26e4 Prozvyshe (they) (W1'17)",
            "sender_id": 8478,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "Constrain many-many relationship to a maximum",
            "submessages": [],
            "timestamp": 1518585022,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/091c0c9965b28415105333a5fdcd7c37?d=identicon&version=1",
            "client": "website",
            "content": "<p><span class=\"user-mention\" data-user-email=\"laurent.direr@gmail.com\" data-user-id=\"105084\">@Laurent Direr (W2'18)</span>  and <span class=\"user-mention\" data-user-email=\"michaelmalis2@gmail.com\" data-user-id=\"8099\">@Michael Malis (S1'15)</span>  Oh yeah you're right of course.  If you're gonna do the solution with a people_in_room count, then you definitely want to wrap whatever inserts a person into the room table (assuming this exists) and whatever increments the person_in_room count in a transaction, though, so they fail atomically, right?</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 122430069,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "stuart.b.elston@gmail.com",
            "sender_full_name": "Stu Elston (he) (W1'17)",
            "sender_id": 103057,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "Constrain many-many relationship to a maximum",
            "submessages": [],
            "timestamp": 1518586637,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/21b9cce736cbbe8e0761bbb33863c7d3112d0136?x=x&version=2",
            "client": "website",
            "content": "<p>If I understand the question correctly, you are asking for whether the UPDATE to the <code>rooms</code> table should be in a transaction with the INSERT into the <code>user_room</code> table. The answer is yes. In general, any time you want to perform multiple commands in a single step, you put them in a transaction. Doing so prevents the case where some of the commands execute, but not all of them. This is atomicity which is the A in ACID. Atomicity is the property that when a transaction is run, either the transaction will fail and it has no effect, or it succeeds and all of the commands in the transaction have their effect.</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 122431200,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "michaelmalis2@gmail.com",
            "sender_full_name": "Michael Malis (SP2'19)",
            "sender_id": 8099,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "Constrain many-many relationship to a maximum",
            "submessages": [],
            "timestamp": 1518589239,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/a3e610d8bcbd1089a39b1a8caf972ab6?d=identicon&version=1",
            "client": "ZulipElectron",
            "content": "<p>Thanks for the wonderful answers guys!</p>\n<p>I read about write skew in <em>Designing Data Intensive Applications</em>, and now here I am running into it already! DBs are hard.</p>\n<blockquote>\n<p>After grabbing the write lock on the room, you can check the number of people in the room and then add the user to the room. Grabbing the write lock prevents a concurrent transaction from seeing how many people are in the room until you add/don't add the person.</p>\n</blockquote>\n<p><span class=\"user-mention\" data-user-email=\"michaelmalis2@gmail.com\" data-user-id=\"8099\">@Michael Malis (S1'15)</span> So, the write lock causes reads to block also? <span class=\"emoji emoji-1f914\" title=\"thinking face\">:thinking_face:</span></p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 122459297,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "tyler.tape@gmail.com",
            "sender_full_name": "Tyler Tape (he) (W1'17)",
            "sender_id": 103045,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "Constrain many-many relationship to a maximum",
            "submessages": [],
            "timestamp": 1518640320,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/a3e610d8bcbd1089a39b1a8caf972ab6?d=identicon&version=1",
            "client": "ZulipElectron",
            "content": "<p>Still very new to SQL and Postgres. I know the CLI is the right way to interact generally, but I often need to mess around a bit before I land on the right syntax, and not being able to copy/paste easily or place my cursor where I want on a line is a significant pain in the butt. Is there a handy tool or IDE type thing to make this process easier?</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 122462816,
            "is_me_message": false,
            "last_edit_timestamp": 1518646327,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "tyler.tape@gmail.com",
            "sender_full_name": "Tyler Tape (he) (W1'17)",
            "sender_id": 103045,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "Testing queries",
            "submessages": [],
            "timestamp": 1518645383,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/a3e610d8bcbd1089a39b1a8caf972ab6?d=identicon&version=1",
            "client": "ZulipElectron",
            "content": "<p>Or maybe I should be typing the queries into text files and executing them from the command line that way?</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 122462822,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "tyler.tape@gmail.com",
            "sender_full_name": "Tyler Tape (he) (W1'17)",
            "sender_id": 103045,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "Testing queries",
            "submessages": [],
            "timestamp": 1518645401,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/3fafc0390e40bf6e659c54dd968b3713?d=identicon&version=1",
            "client": "ZulipElectron",
            "content": "<p>When things get messy I write queries in a notepad and cut n paste them in. </p>\n<p>I used to use tools like SQL Squirrel <a href=\"https://sourceforge.net/projects/squirrel-sql/\" target=\"_blank\" title=\"https://sourceforge.net/projects/squirrel-sql/\">https://sourceforge.net/projects/squirrel-sql/</a> but now I mostly use the CLI.</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 122462904,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "bootandy@gmail.com",
            "sender_full_name": "andrew boot (W2'18)",
            "sender_id": 105172,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "Testing queries",
            "submessages": [],
            "timestamp": 1518645530,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/68c07aa24ae39681409794daff1a921b08e5e324?x=x&version=2",
            "client": "website",
            "content": "<p><a href=\"https://www.pgadmin.org/\" target=\"_blank\" title=\"https://www.pgadmin.org/\">pgAdmin</a> is a classic tool, although probably fairly heavy for what you're looking for</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 122463009,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "james@recurse.com",
            "sender_full_name": "James J. Porter (he) (S'13)",
            "sender_id": 2113,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "Testing queries",
            "submessages": [],
            "timestamp": 1518645641,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/68c07aa24ae39681409794daff1a921b08e5e324?x=x&version=2",
            "client": "website",
            "content": "<p>There are hip things like postico (<a href=\"https://eggerapps.at/postico/\" target=\"_blank\" title=\"https://eggerapps.at/postico/\">https://eggerapps.at/postico/</a>) or postage (<a href=\"https://github.com/workflowproducts/postage\" target=\"_blank\" title=\"https://github.com/workflowproducts/postage\">https://github.com/workflowproducts/postage</a>), although it looks like postage is no longer being worked on sadly :/</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 122463094,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "james@recurse.com",
            "sender_full_name": "James J. Porter (he) (S'13)",
            "sender_id": 2113,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "Testing queries",
            "submessages": [],
            "timestamp": 1518645731,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/b0d3d1042e23d55075953653f9736863?d=identicon&version=1",
            "client": "ZulipElectron",
            "content": "<p>I've also heard good things about postico if you are on a Mac.   <br>\nI use the database tools integrated with my IDE (PyCharm/Jetbrains).  </p>\n<p>I feel strongly against the statement </p>\n<blockquote>\n<p>the CLI is the right way to interact generally</p>\n</blockquote>\n<p>Dont want to start a debate, I'd say use a tool that you are comfortable with (and maybe the cli is harder to get comfortable with ;)).    <br>\nI really like having a visual interface to see the tables / autocomplete when writing queries.</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 122463295,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "laurent.direr@gmail.com",
            "sender_full_name": "Laurent Direr (W2'18)",
            "sender_id": 105084,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "Testing queries",
            "submessages": [],
            "timestamp": 1518646043,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/a3e610d8bcbd1089a39b1a8caf972ab6?d=identicon&version=1",
            "client": "ZulipElectron",
            "content": "<p>Thanks! I will try postico and andrew's copypasta method :)</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 122463351,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "tyler.tape@gmail.com",
            "sender_full_name": "Tyler Tape (he) (W1'17)",
            "sender_id": 103045,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "Testing queries",
            "submessages": [],
            "timestamp": 1518646146,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/e30b9e7d531d60960da4c58b24cf7e7c5aff03f0?x=x&version=5",
            "client": "ZulipElectron",
            "content": "<p>You can also write them in text files and run them via a command line <code>psql --file=my-stuff.sql</code> client. There's also a new GUI called Postico</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 122470957,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "pete@peterlyons.com",
            "sender_full_name": "Peter Lyons (he) (W1'17)",
            "sender_id": 103052,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "Testing queries",
            "submessages": [],
            "timestamp": 1518659032,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/21b9cce736cbbe8e0761bbb33863c7d3112d0136?x=x&version=2",
            "client": "website",
            "content": "<p><span class=\"user-mention\" data-user-email=\"tyler.tape@gmail.com\" data-user-id=\"103045\">@Tyler Tape (W1'17)</span> Not quite. What I wrote left out some details. In particular, concurrent transactions will still be able to read the row even if another transaction has a write lock. Grabbing a write lock on a row prevents a second transaction from grabbing a lock on the row until the first transaction commits or rolls back. In your case, having all transactions that add people to rooms first grab a write lock on the relevant room would prevent write skew. This is because only one transaction that adds people to a room can see how many people are in the room at a time.</p>\n<p>By default, <code>SELECT</code> in Postgres does not grab a lock on any of the rows being selected. This means a <code>SELECT</code> statement can still read a row even if another transaction has a write lock on the row. <code>SELECT ... FOR UPDATE</code> in Postgres grabs write locks on all rows being selected. If a second <code>SELECT ... FOR UPDATE</code> tries to grab write locks on a row with a write lock on it, the second query will wait for the first to finish or rollback. There is also <code>SELECT ... FOR SHARE</code> which grabs a read lock on a row. Read locks conflict with write locks, but a read lock does not conflict with another read lock. That means if two transactions perform <code>SELECT ... FOR SHARE</code> on the same row, nothing will happen. On the other hand, if one transaction performs <code>SELECT ... FOR SHARE</code> and a second one performs <code>SELECT ... FOR UPDATE</code>, regardless of which query ran first or second, the second query will wait for the first to finish. </p>\n<p><code>UPDATE</code>/<code>DELETE</code> grab write locks on all rows they are touching to prevent concurrent modification of the rows.</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 122471137,
            "is_me_message": false,
            "last_edit_timestamp": 1518659442,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "michaelmalis2@gmail.com",
            "sender_full_name": "Michael Malis (SP2'19)",
            "sender_id": 8099,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "Constrain many-many relationship to a maximum",
            "submessages": [],
            "timestamp": 1518659390,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/a3e610d8bcbd1089a39b1a8caf972ab6?d=identicon&version=1",
            "client": "ZulipElectron",
            "content": "<p>Eyy, think I did it! I added a <code>player_count</code> column to <code>rooms</code> like you suggested, then added a CHECK constraint that <code>(player_count &lt;= seat_count)</code>. That enforces max room size. Then I added a unique index on <code>user_room</code> so you can't join the same room twice.</p>\n<p>Thanks again for the help and 'splains!</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 122503574,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "tyler.tape@gmail.com",
            "sender_full_name": "Tyler Tape (he) (W1'17)",
            "sender_id": 103045,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "Constrain many-many relationship to a maximum",
            "submessages": [],
            "timestamp": 1518721861,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/e30b9e7d531d60960da4c58b24cf7e7c5aff03f0?x=x&version=5",
            "client": "ZulipElectron",
            "content": "<p>Interesting article covering some of these topics <a href=\"https://www.citusdata.com/blog/2018/02/15/when-postgresql-blocks/\" target=\"_blank\" title=\"https://www.citusdata.com/blog/2018/02/15/when-postgresql-blocks/\">https://www.citusdata.com/blog/2018/02/15/when-postgresql-blocks/</a></p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 122516677,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "pete@peterlyons.com",
            "sender_full_name": "Peter Lyons (he) (W1'17)",
            "sender_id": 103052,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "Constrain many-many relationship to a maximum",
            "submessages": [],
            "timestamp": 1518742846,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/21b9cce736cbbe8e0761bbb33863c7d3112d0136?x=x&version=2",
            "client": "website",
            "content": "<p><span class=\"user-mention\" data-user-email=\"tyler.tape@gmail.com\" data-user-id=\"103045\">@Tyler Tape (W1'17)</span> I mentioned this problem to one of my coworkers. He came up with what I think would be a solution that may be cleaner in this case. Instead of having a <code>user_room</code> table, you have a <code>seat</code> table. The <code>seat</code> table has both the room the seat is for, and the person who is sitting in it if any. When a player tries to sit down at a seat, they try to sit down in a specific seat. This will fail if someone else tries to sit into the same seat at the same time. Every room has a fixed number of seats, so it's impossible for there to be more people in the room than there are seats in the room.</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 122640938,
            "is_me_message": false,
            "last_edit_timestamp": 1518930784,
            "reactions": [
                {
                    "emoji_code": "1f44d",
                    "emoji_name": "thumbs_up",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "jkozak@fmail.co.uk",
                        "full_name": "Jake \u26e4 Prozvyshe (they) (W1'17)",
                        "id": 8478
                    },
                    "user_id": 8478
                },
                {
                    "emoji_code": "1f44d",
                    "emoji_name": "thumbs_up",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "nick@recurse.com",
                        "full_name": "Nick Bergson-Shilcock (he)",
                        "id": 811
                    },
                    "user_id": 811
                },
                {
                    "emoji_code": "1f44d",
                    "emoji_name": "thumbs_up",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "tyler.tape@gmail.com",
                        "full_name": "Tyler Tape (he) (W1'17)",
                        "id": 103045
                    },
                    "user_id": 103045
                },
                {
                    "emoji_code": "1f62e",
                    "emoji_name": "open_mouth",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "tyler.tape@gmail.com",
                        "full_name": "Tyler Tape (he) (W1'17)",
                        "id": 103045
                    },
                    "user_id": 103045
                }
            ],
            "recipient_id": 41342,
            "sender_email": "michaelmalis2@gmail.com",
            "sender_full_name": "Michael Malis (SP2'19)",
            "sender_id": 8099,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "Constrain many-many relationship to a maximum",
            "submessages": [],
            "timestamp": 1518930749,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/47d545529e036682e7075910a2489214?d=identicon&version=1",
            "client": "ZulipMobile",
            "content": "<p><span class=\"user-mention\" data-user-email=\"michaelmalis2@gmail.com\" data-user-id=\"8099\">@Michael Malis (S1'15)</span> I like that suggestion. It models reality in a more 'realistic' way and is simpler to implement. Great suggestion!</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 122654787,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "ondoheer@gmail.com",
            "sender_full_name": "Pedro Alejandro Baumann Cornejo (he) (W2'18)",
            "sender_id": 105145,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "Constrain many-many relationship to a maximum",
            "submessages": [],
            "timestamp": 1518966731,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/3f6bef626649c46b4cc3fd9f67c151a19170da5e?x=x&version=21",
            "client": "ZulipMobile",
            "content": "<p>seconded. i think the constraint is a better way to go if room sizes are much larger or if order of players doesnt matter, but for poker this is very good</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 122962939,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "jkozak@fmail.co.uk",
            "sender_full_name": "Jake \u26e4 Prozvyshe (they) (W1'17)",
            "sender_id": 8478,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "Constrain many-many relationship to a maximum",
            "submessages": [],
            "timestamp": 1519578259,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/d78ab1df3a0ad57e48ac2f39be4af853ddb1db17?x=x&version=3",
            "client": "ZulipElectron",
            "content": "<p>This book didn't really happen for me when we talked about it a few weeks ago, but I'm giving it another go. Anyone want to have an accountability/discussion meeting about progress next week?</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 123163952,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "logan.williams@alum.mit.edu",
            "sender_full_name": "Logan Williams (he) (W2'18)",
            "sender_id": 105229,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "A Curious Moon",
            "submessages": [],
            "timestamp": 1519954147,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/78f341b5969eb2baa618953167980815?d=identicon&version=1",
            "client": "website",
            "content": "<p>Hey RC. I have a data/sql question that I wonder if anyone knows the answer to. </p>\n<p>I\u2019d like to find users that exist every day in a large data set. I think of it as a fold left set intersection. The business use case takes the relative counts of the sets by day and shows a graph where time zero has a value of 100% and the curve decreases (or stays flat) each additional day as users don't return.</p>\n<p>For example, if </p>\n<p>t0 has {a,b,c}<br>\nt1 has {a,c}<br>\nt2 has {a,b}<br>\nt3 has {a,b}</p>\n<p>I'd like the output to be:<br>\nt1:{a,c}<br>\nt2:{a}<br>\nt3:{a}</p>\n<p>I put the t3 time period in there since I've seen similar use cases where people self join with a time lag. A query like that would put \"b\" into the results for t3 since \"b\" exists in both t2 and t3 whereas I would like \"b\" to be excluded since it doesn't appear in all prior days.</p>\n<p>Is there a way to do this in sql? Or in spark? I ask about sql since if I can do it in sql I can generally do it in spark (in case a respondent doesn't know spark). I don't think spark has fold left though and what I'm trying to get isn't associative since I'd like a result for each day that intersects that day and the previous day. If I merely cared about the start and end value I could reduce the set intersection since doing this over the entire time period is associative but the \"by day\" requirement breaks the associate property I think.  And lastly, I can do this via an iterative loop but that's very expensive on this dataset and frankly feels to me like there could be a better way that I just don't see right now. </p>\n<p>Any thoughts on the above or links to writeups where others have addressed this? I may be overthinking it as well! Thanks in advance.</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 124346368,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "robert.h.hunt@gmail.com",
            "sender_full_name": "Robert Hunt (W1'16)",
            "sender_id": 100318,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "By day set intersection",
            "submessages": [],
            "timestamp": 1522286206,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/21b9cce736cbbe8e0761bbb33863c7d3112d0136?x=x&version=2",
            "client": "website",
            "content": "<p>I think since, as you mentioned, the value of each day depends on all the previous days, the most efficient way to do this would be to maintain the set by day. If you can quickly determine whether a user visited on a specific day, another option would be to, for each user, iterate through each day and determine the first day they did not visit. This gives you a number for each user which you can then aggregate to generate the result set.</p>\n<p>Based on your description, it's hard to tell what operations are cheap/expensive over the dataset. Without more information its a bit difficult to provide more suggestions.</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 124347696,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "michaelmalis2@gmail.com",
            "sender_full_name": "Michael Malis (SP2'19)",
            "sender_id": 8099,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "By day set intersection",
            "submessages": [],
            "timestamp": 1522288988,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/9b29f100095e5e013806f5099120daa7?d=identicon&version=1",
            "client": "website",
            "content": "<p>I think you want SQL window functions</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 124349657,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "blinsay@gmail.com",
            "sender_full_name": "Ben Linsay (he) (SP1'18)",
            "sender_id": 109385,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "By day set intersection",
            "submessages": [],
            "timestamp": 1522293718,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/9b29f100095e5e013806f5099120daa7?d=identicon&version=1",
            "client": "website",
            "content": "<p>it seems like you're calculating all sessions that start on a given day</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 124349762,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "blinsay@gmail.com",
            "sender_full_name": "Ben Linsay (he) (SP1'18)",
            "sender_id": 109385,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "By day set intersection",
            "submessages": [],
            "timestamp": 1522293879,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/9b29f100095e5e013806f5099120daa7?d=identicon&version=1",
            "client": "website",
            "content": "<p>googling retention curve was pretty fruitful</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 124349884,
            "is_me_message": false,
            "last_edit_timestamp": 1522294175,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "blinsay@gmail.com",
            "sender_full_name": "Ben Linsay (he) (SP1'18)",
            "sender_id": 109385,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "By day set intersection",
            "submessages": [],
            "timestamp": 1522294134,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/9b29f100095e5e013806f5099120daa7?d=identicon&version=1",
            "client": "website",
            "content": "<p><a href=\"http://blog.forcerank.it/sql-for-calculating-churn-retention-reengagement\" target=\"_blank\" title=\"http://blog.forcerank.it/sql-for-calculating-churn-retention-reengagement\">http://blog.forcerank.it/sql-for-calculating-churn-retention-reengagement</a></p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 124349891,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "blinsay@gmail.com",
            "sender_full_name": "Ben Linsay (he) (SP1'18)",
            "sender_id": 109385,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "By day set intersection",
            "submessages": [],
            "timestamp": 1522294177,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/78f341b5969eb2baa618953167980815?d=identicon&version=1",
            "client": "website",
            "content": "<p>Thanks to both of you for the thoughts. I appreciate it. </p>\n<p>Michael, I think your idea of walking the users and finding the first day they didn't visit is a really good one. In spark, groupByKey will let me do this and it'll let me see every day for the user in a single list. So I can do the fold left in a custom aggregator and return the first day the user didn't come back. That's great! I've already done the hard work of getting distinct users by day so a groupByKey here isn't much work (even though it would never complete on the underlying dataset). </p>\n<p>Ben, unless I'm misunderstanding the code from that blog post, I think the lead/lag approach pulls in \"b\" in period 3 from my example and that's not desired. To sanity check that, I took the code from the blog post, tweaked some of the syntax for postgres, created test data in their format, and put the results in a <a href=\"https://gist.github.com/aindustries/70127a98de8f27789a791e36e3b77e1f\" target=\"_blank\" title=\"https://gist.github.com/aindustries/70127a98de8f27789a791e36e3b77e1f\">gist</a></p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 124353166,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "robert.h.hunt@gmail.com",
            "sender_full_name": "Robert Hunt (W1'16)",
            "sender_id": 100318,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "By day set intersection",
            "submessages": [],
            "timestamp": 1522301675,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/9b29f100095e5e013806f5099120daa7?d=identicon&version=1",
            "client": "website",
            "content": "<p>for sure!</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 124370098,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "blinsay@gmail.com",
            "sender_full_name": "Ben Linsay (he) (SP1'18)",
            "sender_id": 109385,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "By day set intersection",
            "submessages": [],
            "timestamp": 1522336050,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/9b29f100095e5e013806f5099120daa7?d=identicon&version=1",
            "client": "website",
            "content": "<p>session metrics are cool and super userful</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 124370166,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "blinsay@gmail.com",
            "sender_full_name": "Ben Linsay (he) (SP1'18)",
            "sender_id": 109385,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "By day set intersection",
            "submessages": [],
            "timestamp": 1522336112,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/9b29f100095e5e013806f5099120daa7?d=identicon&version=1",
            "client": "website",
            "content": "<p>you'll definitely have to tweak those queries a bit</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 124370461,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "blinsay@gmail.com",
            "sender_full_name": "Ben Linsay (he) (SP1'18)",
            "sender_id": 109385,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "By day set intersection",
            "submessages": [],
            "timestamp": 1522336550,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/9b29f100095e5e013806f5099120daa7?d=identicon&version=1",
            "client": "website",
            "content": "<p>here's something that might be helpful</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 124370463,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "blinsay@gmail.com",
            "sender_full_name": "Ben Linsay (he) (SP1'18)",
            "sender_id": 109385,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "By day set intersection",
            "submessages": [],
            "timestamp": 1522336558,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/9b29f100095e5e013806f5099120daa7?d=identicon&version=1",
            "client": "website",
            "content": "<div class=\"codehilite\"><pre><span></span>select\n  who_identifier,\n  case\n  when lead(time_period) over (partition by who_identifier order by time_period) != time_period + 1\n    then 1\n    else 0\n  end as end_of_session,\n  event,\n  time_period\nfrom events\norder by who_identifier, time_period;\n</pre></div>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 124370464,
            "is_me_message": false,
            "last_edit_timestamp": 1522336571,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "blinsay@gmail.com",
            "sender_full_name": "Ben Linsay (he) (SP1'18)",
            "sender_id": 109385,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "By day set intersection",
            "submessages": [],
            "timestamp": 1522336561,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/9b29f100095e5e013806f5099120daa7?d=identicon&version=1",
            "client": "website",
            "content": "<p>i think that should give you a <code>1</code> on the last time period before someone doesn't show up again</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 124370512,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "blinsay@gmail.com",
            "sender_full_name": "Ben Linsay (he) (SP1'18)",
            "sender_id": 109385,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "By day set intersection",
            "submessages": [],
            "timestamp": 1522336612,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/9b29f100095e5e013806f5099120daa7?d=identicon&version=1",
            "client": "website",
            "content": "<div class=\"codehilite\"><pre><span></span> who_identifier | end_of_session | event | time_period\n----------------+----------------+-------+-------------\n a              |              0 | login |           0\n a              |              0 | login |           1\n a              |              0 | login |           2\n a              |              0 | login |           3\n b              |              1 | login |           0\n b              |              0 | login |           2\n b              |              0 | login |           3\n c              |              0 | login |           0\n c              |              0 | login |           1\n</pre></div>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 124370514,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "blinsay@gmail.com",
            "sender_full_name": "Ben Linsay (he) (SP1'18)",
            "sender_id": 109385,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "By day set intersection",
            "submessages": [],
            "timestamp": 1522336617,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/9b29f100095e5e013806f5099120daa7?d=identicon&version=1",
            "client": "website",
            "content": "<p>oops, you'll have to tweak it to also check when <code>lead(time_period)</code> is null too</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 124370773,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "blinsay@gmail.com",
            "sender_full_name": "Ben Linsay (he) (SP1'18)",
            "sender_id": 109385,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "By day set intersection",
            "submessages": [],
            "timestamp": 1522336955,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/9b29f100095e5e013806f5099120daa7?d=identicon&version=1",
            "client": "website",
            "content": "<p>but yeah, the thing michael suggested is very doable in SQL</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 124370894,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "blinsay@gmail.com",
            "sender_full_name": "Ben Linsay (he) (SP1'18)",
            "sender_id": 109385,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "By day set intersection",
            "submessages": [],
            "timestamp": 1522337104,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/9b29f100095e5e013806f5099120daa7?d=identicon&version=1",
            "client": "website",
            "content": "<p><a href=\"https://gist.github.com/blinsay/41582bf95fa9297f27619cd302011232\" target=\"_blank\" title=\"https://gist.github.com/blinsay/41582bf95fa9297f27619cd302011232\">https://gist.github.com/blinsay/41582bf95fa9297f27619cd302011232</a></p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 124370906,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "blinsay@gmail.com",
            "sender_full_name": "Ben Linsay (he) (SP1'18)",
            "sender_id": 109385,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "By day set intersection",
            "submessages": [],
            "timestamp": 1522337141,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/c4d7b6c49eb4324319e18eb7c6394623?d=identicon&version=1",
            "client": "website",
            "content": "<p>Hey all,</p>\n<p>One of my goals for this week's mini-batch is to build a shitty database, something I think many people did in school, but wasn't covered in my Russian literature program :)</p>\n<p>I'm currently reading:<br>\n<a href=\"http://db.cs.berkeley.edu/papers/fntdb07-architecture.pdf\" target=\"_blank\" title=\"http://db.cs.berkeley.edu/papers/fntdb07-architecture.pdf\">http://db.cs.berkeley.edu/papers/fntdb07-architecture.pdf</a></p>\n<p>Do you have any other favorite resources?</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 124527327,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "kellan@gmail.com",
            "sender_full_name": "Kellan Elliott-McCrea (he) (m3'18)",
            "sender_id": 111980,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "reading on databases",
            "submessages": [],
            "timestamp": 1522676516,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/33de48db54cb67ad74fa1b8991b6e790a7941300?x=x&version=4",
            "client": "ZulipElectron",
            "content": "<p><span class=\"user-mention\" data-user-id=\"111980\">@Kellan Elliott-McCrea (m3'18)</span> i feel like LevelDB qualifies as a \"shitty database\" feature-wise, i can't find any papers but there are some high level articles like <a href=\"https://www.igvita.com/2012/02/06/sstable-and-log-structured-storage-leveldb/\" target=\"_blank\" title=\"https://www.igvita.com/2012/02/06/sstable-and-log-structured-storage-leveldb/\">https://www.igvita.com/2012/02/06/sstable-and-log-structured-storage-leveldb/</a></p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 124536077,
            "is_me_message": false,
            "reactions": [
                {
                    "emoji_code": "1f389",
                    "emoji_name": "tada",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "kellan@gmail.com",
                        "full_name": "Kellan Elliott-McCrea (he) (m3'18)",
                        "id": 111980
                    },
                    "user_id": 111980
                }
            ],
            "recipient_id": 41342,
            "sender_email": "liu.brandon@gmail.com",
            "sender_full_name": "Brandon Liu (SP2'18)",
            "sender_id": 111910,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "reading on databases",
            "submessages": [],
            "timestamp": 1522690348,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/ed70ffe68c29cf73836d8dbb5d5be0b1fc7d7b00?x=x&version=2",
            "client": "website",
            "content": "<p>I'm a bit puzzled about something I'm seeing in a SQLite database query I'm working on \u2014 it's running very slowly, and I can't seem to formulate an index that will speed it up. H</p>\n<p>ere are the two tables, and the <code>explain query plan</code> for a simplified version of the query I'm trying to write. </p>\n<p>The output shows that the implicit index from the unique constraint on <code>labelid</code> in <code>tag_label</code>is being used; but none of the indexes on the <code>tag</code> table seem to be doing any good. Any insight would be appreciated, if somebody happens to know about this sort of thing. :-)</p>\n<div class=\"codehilite\"><pre><span></span>sqlite&gt; .schema tag\nCREATE TABLE tag(\n  &quot;tagid&quot; integer not null,\n  &quot;workid&quot; integer not null,\n  &quot;kind&quot; text not null,\n  &quot;labelid&quot; integer not null,\n  &quot;orig_pos&quot; integer not null,\n  unique (tagid, workid)\n\n);\nCREATE INDEX tag_1 ON tag (labelid);\nCREATE INDEX tag_2 on tag (tagid, workid, kind, labelid, orig_pos);\nsqlite&gt; .schema tag_label\nCREATE TABLE tag_label(\n    &quot;labelid&quot; integer not null,\n    &quot;label&quot; text not null,\n    unique (labelid)\n);\nsqlite&gt; explain query plan\n   ...&gt; create table tags as\n   ...&gt;     select *\n   ...&gt;         from tag a\n   ...&gt;             left join tag_label b\n   ...&gt;             on a.labelid=b.labelid;\nselectid,order,from,detail\n0,0,0,&quot;SCAN TABLE tag AS a&quot;\n0,1,1,&quot;SEARCH TABLE tag_label AS b USING INDEX sqlite_autoindex_tag_label_1 (labelid=?)&quot;\n</pre></div>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 124548276,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "yurivish@gmail.com",
            "sender_full_name": "Yuri Vishnevsky (SP2'18)",
            "sender_id": 111923,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "index optimization",
            "submessages": [],
            "timestamp": 1522707248,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/7c6db32ec251d9f676010e746c9fc932?d=identicon&version=1",
            "client": "website",
            "content": "<p>well, you do want one row of output for every row in <code>tag</code>, so it seems reasonable for sqlite to be doing a table scan of <code>tag</code></p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 124548439,
            "is_me_message": false,
            "reactions": [
                {
                    "emoji_code": "1f44d",
                    "emoji_name": "thumbs_up",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "yurivish@gmail.com",
                        "full_name": "Yuri Vishnevsky (SP2'18)",
                        "id": 111923
                    },
                    "user_id": 111923
                }
            ],
            "recipient_id": 41342,
            "sender_email": "oremanj@gmail.com",
            "sender_full_name": "Joshua Oreman (he) (m3'18)",
            "sender_id": 112100,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "index optimization",
            "submessages": [],
            "timestamp": 1522707487,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/7c6db32ec251d9f676010e746c9fc932?d=identicon&version=1",
            "client": "website",
            "content": "<p>and then it's looking up the corresponding entry in <code>tag_label</code> each time</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 124548445,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "oremanj@gmail.com",
            "sender_full_name": "Joshua Oreman (he) (m3'18)",
            "sender_id": 112100,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "index optimization",
            "submessages": [],
            "timestamp": 1522707518,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/7c6db32ec251d9f676010e746c9fc932?d=identicon&version=1",
            "client": "website",
            "content": "<p>I can see how it would perform better for it to iterate through <code>tag</code> and <code>tag_label</code> in lockstep with both ordered by labelid; I'm just guessing that the sqlite query planner isn't smart enough to figure out that that's appropriate</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 124548468,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "oremanj@gmail.com",
            "sender_full_name": "Joshua Oreman (he) (m3'18)",
            "sender_id": 112100,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "index optimization",
            "submessages": [],
            "timestamp": 1522707582,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/7c6db32ec251d9f676010e746c9fc932?d=identicon&version=1",
            "client": "website",
            "content": "<p>have you run an <code>analyze</code> query on your tables?</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 124548534,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "oremanj@gmail.com",
            "sender_full_name": "Joshua Oreman (he) (m3'18)",
            "sender_id": 112100,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "index optimization",
            "submessages": [],
            "timestamp": 1522707631,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/7c6db32ec251d9f676010e746c9fc932?d=identicon&version=1",
            "client": "website",
            "content": "<p>ah, and also, from <a href=\"https://sqlite.org/optoverview.html\" target=\"_blank\" title=\"https://sqlite.org/optoverview.html\">https://sqlite.org/optoverview.html</a> sec 7.1:</p>\n<blockquote>\n<p>The current implementation of SQLite uses only loop joins. That is to say, joins are implemented as nested loops.</p>\n</blockquote>\n<p>which I think means it doesn't support the iterate-in-lockstep type of join</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 124548563,
            "is_me_message": false,
            "last_edit_timestamp": 1522707698,
            "reactions": [
                {
                    "emoji_code": "2764",
                    "emoji_name": "heart",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "blinsay@gmail.com",
                        "full_name": "Ben Linsay (he) (SP1'18)",
                        "id": 109385
                    },
                    "user_id": 109385
                },
                {
                    "emoji_code": "2764",
                    "emoji_name": "heart",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "yurivish@gmail.com",
                        "full_name": "Yuri Vishnevsky (SP2'18)",
                        "id": 111923
                    },
                    "user_id": 111923
                }
            ],
            "recipient_id": 41342,
            "sender_email": "oremanj@gmail.com",
            "sender_full_name": "Joshua Oreman (he) (m3'18)",
            "sender_id": 112100,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "index optimization",
            "submessages": [],
            "timestamp": 1522707687,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/ed70ffe68c29cf73836d8dbb5d5be0b1fc7d7b00?x=x&version=2",
            "client": "website",
            "content": "<p>Oh, I didn't see that! I think that explains it.</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 124548950,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "yurivish@gmail.com",
            "sender_full_name": "Yuri Vishnevsky (SP2'18)",
            "sender_id": 111923,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "index optimization",
            "submessages": [],
            "timestamp": 1522708430,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/ed70ffe68c29cf73836d8dbb5d5be0b1fc7d7b00?x=x&version=2",
            "client": "website",
            "content": "<p>...and it completed in just a minute or so anyway. :-)</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 124549072,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "yurivish@gmail.com",
            "sender_full_name": "Yuri Vishnevsky (SP2'18)",
            "sender_id": 111923,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "index optimization",
            "submessages": [],
            "timestamp": 1522708581,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/714a2066e816e59288705a646d4afc775f63b0e0?x=x&version=2",
            "client": "ZulipElectron",
            "content": "<p>Hey <span class=\"user-mention\" data-user-id=\"111980\">@Kellan Elliott-McCrea (m3'18)</span> ,  I've been looking at <a href=\"https://cstack.github.io/db_tutorial/\" target=\"_blank\" title=\"https://cstack.github.io/db_tutorial/\">this journal</a> by someone who documented his endeavor to build a clone of SQLite from scratch. Maybe you'll find it interesting.</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 124551035,
            "is_me_message": false,
            "reactions": [
                {
                    "emoji_code": "1f389",
                    "emoji_name": "tada",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "ahmad19526@gmail.com",
                        "full_name": "Ahmed Abdalla (SP2'16)",
                        "id": 7874
                    },
                    "user_id": 7874
                },
                {
                    "emoji_code": "1f389",
                    "emoji_name": "tada",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "kellan@gmail.com",
                        "full_name": "Kellan Elliott-McCrea (he) (m3'18)",
                        "id": 111980
                    },
                    "user_id": 111980
                }
            ],
            "recipient_id": 41342,
            "sender_email": "alanjgou@gmail.com",
            "sender_full_name": "Alan Gou (he) (SP2'18)",
            "sender_id": 111917,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "reading on databases",
            "submessages": [],
            "timestamp": 1522711981,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/8756446588cfc2014859f5f1fa68c850?d=identicon&version=1",
            "client": "website",
            "content": "<p>Also, you can use the <code>\\edit</code> <a href=\"https://www.postgresql.org/docs/current/static/app-psql.html#APP-PSQL-META-COMMANDS\" target=\"_blank\" title=\"https://www.postgresql.org/docs/current/static/app-psql.html#APP-PSQL-META-COMMANDS\">psql meta-command</a>, which will open an editor (with the last query, by default); then you can use vim or emacs or gedit or intellij or whatever you have set in your <code>EDITOR</code> environment variable.</p>\n<blockquote>\n<p>after the editor exits, the file's content is copied into the current query buffer</p>\n<p>The new contents of the query buffer are then re-parsed according to the normal rules of psql, treating the whole buffer as a single line. Any complete queries are immediately executed</p>\n</blockquote>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 125574414,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "jason.a.owen@gmail.com",
            "sender_full_name": "Jason Owen (SP2'19)",
            "sender_id": 100450,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "Testing queries",
            "submessages": [],
            "timestamp": 1524497722,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/6646d75a6aaec762c95821b761049e6d?d=identicon&version=1",
            "client": "website",
            "content": "<p>Hey all! I'm designing a new feature test system for my company's website, and I'd really like to be able to roll back all changes to our mysql 5.6 database after each test. I'd like to use transactions (as opposed to truncation or deletion, which are less ideal in our case for various reasons). something like this:</p>\n<p>1. Begin save point / start transaction <br>\n2. run test stuff that changes db<br>\n3. Roll back</p>\n<p>A few details: the feature tests are written in javascript  (<a href=\"https://www.cypress.io/\" target=\"_blank\" title=\"https://www.cypress.io/\">cypress</a>), so I have to send special test-environment specific api requests to the backend for #1 and #3.</p>\n<p>Is it possible to do this? I've had trouble because from what I can tell, transactions can only be defined and rolled back within a specific database session\u2014they can't apply globally to all changes to the database. Is there any way around this limitation, or a different transactional approach that I could use?</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 126061590,
            "is_me_message": false,
            "last_edit_timestamp": 1525376153,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "nathanwshane@gmail.com",
            "sender_full_name": "Nathan Weeks Shane (F1'17)",
            "sender_id": 101725,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "roll back db to before test",
            "submessages": [],
            "timestamp": 1525376128,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/9b59a59f24058e465d934bdafce39c4a?d=identicon&version=1",
            "client": "website",
            "content": "<p>There are 3 chapters in the \"500 lines or less\" book that talk about various kinds of databases:</p>\n<p><a href=\"http://aosabook.org/en/index.html\" target=\"_blank\" title=\"http://aosabook.org/en/index.html\">http://aosabook.org/en/index.html</a></p>\n<p>I haven't worked with any of them, but I have worked with other chapters in that book and I think it's a nice way to learn.  In fact that's my strategy for my upcoming batch at RC (the 3D Modeller chapter).</p>\n<p>I haven't built a database or even a shitty one (not even during my CS degree), but I've used many databases.  I read that overview from Hellerstein et. al. a few years ago and really liked it.  However, now that I look over it again, I think there's probably too much detail and too many issues laid out that you can't prototype/test/verify in a week (e.g. the variations on different process models).</p>\n<p>Databases are a lot about performance, and so is that article, but you probably shouldn't care about performance for the initial exploration.  LevelDB is also highly tuned for performance.</p>\n<p>Do you know what kind of database you want to build?  (Probably the kinds you have used or plan on using?)  I roughly think of the dimensions as SQL vs NoSQL, transactional vs. non-transactional, distributed vs single node, online/transactional vs analytics (i.e mostly readonly, bulk updates).</p>\n<p>The simplest thing is a single-node key value store (like a LevelDB that doesn't perform well).  And then layers like distribution (bigtable), transactions, or SQL can be built on top of it.  In MySQL there the most popular storage engine is \"innodb\" as far as I understand.</p>\n<p>I also like this talk about Foundation DB (which is more about testing and servers than databases):</p>\n<p><a href=\"https://www.youtube.com/watch?v=4fFDFbi3toc\" target=\"_blank\" title=\"https://www.youtube.com/watch?v=4fFDFbi3toc\">https://www.youtube.com/watch?v=4fFDFbi3toc</a></p>\n<p>\"Foundation\" refers to separating out the distributed storage layer from the high level data model (e.g. SQL, indices, etc.)  In other words you can't usually mix and match front ends and back ends for databases -- they are coupled together -- but in this particular project they tried to do that.</p>\n<p>I think most people think of databases as \"the back end\" storage part, but there's almost always a significant front end (what the user sees, querying, etc.).  Personally I would start with the back end and move up to the front end, but that's just an opinion.</p>\n<p>I like reading the sqlite website: <a href=\"https://www.sqlite.org/docs.html\" target=\"_blank\" title=\"https://www.sqlite.org/docs.html\">https://www.sqlite.org/docs.html</a></p>\n<p>Maybe this one is interesting: <a href=\"https://www.sqlite.org/arch.html\" target=\"_blank\" title=\"https://www.sqlite.org/arch.html\">https://www.sqlite.org/arch.html</a></p>\n<div class=\"youtube-video message_inline_image\"><a data-id=\"4fFDFbi3toc\" href=\"https://www.youtube.com/watch?v=4fFDFbi3toc\" target=\"_blank\" title=\"https://www.youtube.com/watch?v=4fFDFbi3toc\"><img src=\"https://i.ytimg.com/vi/4fFDFbi3toc/default.jpg\"></a></div>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 126299379,
            "is_me_message": false,
            "last_edit_timestamp": 1525842445,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "andychup@gmail.com",
            "sender_full_name": "Andy Chu (S1'18)",
            "sender_id": 116399,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "reading on databases",
            "submessages": [],
            "timestamp": 1525842046,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/9b59a59f24058e465d934bdafce39c4a?d=identicon&version=1",
            "client": "website",
            "content": "<p>Oh I think I responded to an old message, still getting used to Zulip :-/</p>\n<p>Anyway if it's still useful, there are some shorter docs here:</p>\n<p><a href=\"http://aosabook.org/en/bdb.html\" target=\"_blank\" title=\"http://aosabook.org/en/bdb.html\">http://aosabook.org/en/bdb.html</a></p>\n<p><a href=\"http://aosabook.org/en/graphite.html\" target=\"_blank\" title=\"http://aosabook.org/en/graphite.html\">http://aosabook.org/en/graphite.html</a></p>\n<p><a href=\"http://aosabook.org/en/nosql.html\" target=\"_blank\" title=\"http://aosabook.org/en/nosql.html\">http://aosabook.org/en/nosql.html</a></p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 126299883,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "andychup@gmail.com",
            "sender_full_name": "Andy Chu (S1'18)",
            "sender_id": 116399,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "reading on databases",
            "submessages": [],
            "timestamp": 1525843117,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/fe405bbed728ab0b6fcef148e8c65a8b?d=identicon&version=1",
            "client": "ZulipElectron",
            "content": "<p>Hey Nathan,<br>\nI've often used this approach, running tests in a transaction and then rolling back afterwards. That keeps the tests nicely isolated and also seems to be pretty fast. But yeah, I think you can only do transactions with the same db handle, i.e. there's no way to have something like a global transaction. So you need to create the db handle during test setup and be able to pass that into the code you test.</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 126428424,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "soenkehahn@gmail.com",
            "sender_full_name": "S\u00f6nke Hahn (he) (S1'18)",
            "sender_id": 116583,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "roll back db to before test",
            "submessages": [],
            "timestamp": 1526064792,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/21b9cce736cbbe8e0761bbb33863c7d3112d0136?x=x&version=2",
            "client": "website",
            "content": "<p>This may be a bit more painful, but you can use MySQL's point in time recovery: <a href=\"https://dev.mysql.com/doc/refman/8.0/en/point-in-time-recovery.html\" target=\"_blank\" title=\"https://dev.mysql.com/doc/refman/8.0/en/point-in-time-recovery.html\">https://dev.mysql.com/doc/refman/8.0/en/point-in-time-recovery.html</a></p>\n<p>It requires restoring a full backup, but you can restore the database to any specific time you want.</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 126441284,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "michaelmalis2@gmail.com",
            "sender_full_name": "Michael Malis (SP2'19)",
            "sender_id": 8099,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "roll back db to before test",
            "submessages": [],
            "timestamp": 1526084565,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/38f320cd24a45f367ed2485034b90adb46a9d738?x=x&version=2",
            "client": "website",
            "content": "<p><span class=\"user-mention\" data-user-id=\"120364\">@Pauline Kelly (S2'18)</span> here's the thread i mentioned!</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 129144956,
            "is_me_message": false,
            "reactions": [
                {
                    "emoji_code": "1f44d",
                    "emoji_name": "thumbs_up",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "pauline.m.kelly1@gmail.com",
                        "full_name": "Pauline Kelly (she) (S2'18)",
                        "id": 120364
                    },
                    "user_id": 120364
                }
            ],
            "recipient_id": 41342,
            "sender_email": "asinghamgoodwin@gmail.com",
            "sender_full_name": "Alicia Thilani Singham Goodwin (she) (F1'16)",
            "sender_id": 8469,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "SQL and DB basics study group",
            "submessages": [],
            "timestamp": 1530804126,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/948d9d7e524888d7759824164e5be92cfa6b8c3b?x=x&version=2",
            "client": "website",
            "content": "<p>Hey, for those of you who have been discussing databases with me (<span class=\"user-mention\" data-user-id=\"129934\">@Keenan Tsuruichi Komoto (F2'18)</span> , <span class=\"user-mention\" data-user-id=\"125310\">@Zi Chong Kao (F1'18)</span> , <span class=\"user-mention\" data-user-id=\"130584\">@Ammar Mian (F2'18)</span> , <span class=\"user-mention\" data-user-id=\"130218\">@Adam Tigar (F2'18)</span> , <span class=\"user-mention\" data-user-id=\"129956\">@Chun Li (F2'18)</span> , <span class=\"user-mention\" data-user-id=\"129933\">@William Sykes Fisher (F2'18)</span> ) -- I slept on setting up a next meeting because I wanted to have some code written before the next time we talked. Since sleeping on that, I've realized that Tuesday and Thursday are pretty busy, meeting-wise, <em>and</em> that maybe we should back off to once a week so that we'll have things to discuss.</p>\n<p>I've also been thinking a bit about format and I _really_ like what we did last time where we showed up with information and questions to discuss together. So I'm thinking: For now, I can commit to showing up once a week with something to show, whether it's some code or just something I read and learned. This week, I'm working on implementing some of the data access code in Python; I'd be ready to show y'all something on Thursday afternoon I think.</p>\n<p>In general, I think Wednesday is probably better (less meetings)--thoughts?</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 135045191,
            "is_me_message": false,
            "reactions": [
                {
                    "emoji_code": "1f389",
                    "emoji_name": "tada",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "ammar.x.mian@gmail.com",
                        "full_name": "Ammar Mian (he) (F2'18)",
                        "id": 130584
                    },
                    "user_id": 130584
                }
            ],
            "recipient_id": 41342,
            "sender_email": "astrosilverio@gmail.com",
            "sender_full_name": "Katie Silverio (she/they) (F2'18)",
            "sender_id": 2869,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "database group meet up",
            "submessages": [],
            "timestamp": 1538495865,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/23e1fe70d5308e1361010e0519c5d4ec36b53702?x=x&version=2",
            "client": "website",
            "content": "<p>I'm happy with Wednesdays or Thursdays!</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 135045278,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "zichongkao@gmail.com",
            "sender_full_name": "Zi Chong Kao (he) (F1'18)",
            "sender_id": 125310,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "database group meet up",
            "submessages": [],
            "timestamp": 1538495928,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/7da8f8ef20569f6876aeb1188d2ebb6d41c6f842?x=x&version=2",
            "client": "ZulipElectron",
            "content": "<p>Both days outside of PLP work for me.</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 135045315,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "KeenanKomoto@gmail.com",
            "sender_full_name": "Keenan Tsuruichi Komoto (he) (F2'18)",
            "sender_id": 129934,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "database group meet up",
            "submessages": [],
            "timestamp": 1538495972,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/ca9f8cb0bcede6fa920c47295ad4e7a972c9f863?x=x&version=2",
            "client": "ZulipMobile",
            "content": "<p>Ditto I\u2019m free for both</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 135045418,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "chunli.developer@gmail.com",
            "sender_full_name": "Chun Li (he) (F2'18)",
            "sender_id": 129956,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "database group meet up",
            "submessages": [],
            "timestamp": 1538496021,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/2429e9ef7fdae2bc7252dd3bdebdb3101fb9a8b2?x=x&version=2",
            "client": "website",
            "content": "<p>Ditto both! For the sake of picking one, how about Thursday?</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 135045596,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "ammar.x.mian@gmail.com",
            "sender_full_name": "Ammar Mian (he) (F2'18)",
            "sender_id": 130584,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "database group meet up",
            "submessages": [],
            "timestamp": 1538496182,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/2429e9ef7fdae2bc7252dd3bdebdb3101fb9a8b2?x=x&version=2",
            "client": "website",
            "content": "<hr>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 135045627,
            "is_me_message": false,
            "last_edit_timestamp": 1538496266,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "ammar.x.mian@gmail.com",
            "sender_full_name": "Ammar Mian (he) (F2'18)",
            "sender_id": 130584,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "database group meet up",
            "submessages": [],
            "timestamp": 1538496214,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/948d9d7e524888d7759824164e5be92cfa6b8c3b?x=x&version=2",
            "client": "website",
            "content": "<p>sure! I made a recurring once a week meeting from 4:30-5:30 on thurs, to avoid PLP and Rust study group</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 135045956,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "astrosilverio@gmail.com",
            "sender_full_name": "Katie Silverio (she/they) (F2'18)",
            "sender_id": 2869,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "database group meet up",
            "submessages": [],
            "timestamp": 1538496526,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/ca9f8cb0bcede6fa920c47295ad4e7a972c9f863?x=x&version=2",
            "client": "ZulipElectron",
            "content": "<p>i just wanted to FYI i've been concentrating on working through SICP lately so i might not have a ton to contribute :(</p>\n<p>but i still wanna come and listen! &lt;3</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 135055621,
            "is_me_message": false,
            "last_edit_timestamp": 1538506219,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "chunli.developer@gmail.com",
            "sender_full_name": "Chun Li (he) (F2'18)",
            "sender_id": 129956,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "database group meet up",
            "submessages": [],
            "timestamp": 1538506206,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/948d9d7e524888d7759824164e5be92cfa6b8c3b?x=x&version=2",
            "client": "website",
            "content": "<p>:nod: sounds great! I want it to be low pressure</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 135055695,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "astrosilverio@gmail.com",
            "sender_full_name": "Katie Silverio (she/they) (F2'18)",
            "sender_id": 2869,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "database group meet up",
            "submessages": [],
            "timestamp": 1538506274,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/948d9d7e524888d7759824164e5be92cfa6b8c3b?x=x&version=2",
            "client": "website",
            "content": "<ul>\n<li>here's the CStack post: <a href=\"https://cstack.github.io/db_tutorial/\" target=\"_blank\" title=\"https://cstack.github.io/db_tutorial/\">https://cstack.github.io/db_tutorial/</a></li>\n<li>I'll push my pager to GH tomorrow morning :D</li>\n</ul>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 135217284,
            "is_me_message": false,
            "last_edit_timestamp": 1538687882,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "astrosilverio@gmail.com",
            "sender_full_name": "Katie Silverio (she/they) (F2'18)",
            "sender_id": 2869,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "10/4 things",
            "submessages": [],
            "timestamp": 1538687874,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/7da8f8ef20569f6876aeb1188d2ebb6d41c6f842?x=x&version=2",
            "client": "ZulipElectron",
            "content": "<p>Hey all, just as an update: I am starting to work on a REPL (read, evaluate, print, loop) for our database engine. This is the interactive prompt that will take in commands and run them against the database (SQL parser will be included). One thing I am not sure about is how to directly access the database. With our current system would my REPL access <span class=\"user-mention\" data-user-id=\"125310\">@Zi Chong Kao (F1'18)</span> 's B-Tree directly? If so does anyone have any references/ideas of how this can be done? <br>\nAlso, we should probably start a GitHub Repo with our project.</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 135412851,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "KeenanKomoto@gmail.com",
            "sender_full_name": "Keenan Tsuruichi Komoto (he) (F2'18)",
            "sender_id": 129934,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "Updates",
            "submessages": [],
            "timestamp": 1539014404,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/f47c30352bcf26bb97f17f9ee3db944cf167e09b?x=x&version=2",
            "client": "website",
            "content": "<p>I would expect the B-Tree to expose a set of operations (it's API), the parser to produce an AST, and there to be a set of functions that interpret the AST in terms of B-Tree operations exposed in the API.</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 135413015,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "williamsykesfisher@gmail.com",
            "sender_full_name": "William Sykes Fisher (he) (F2'18)",
            "sender_id": 129933,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "Updates",
            "submessages": [],
            "timestamp": 1539014594,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/7da8f8ef20569f6876aeb1188d2ebb6d41c6f842?x=x&version=2",
            "client": "ZulipElectron",
            "content": "<p>This might be something we need to talk about in person since I am a little confused on how this might work exactly. <span class=\"user-mention\" data-user-id=\"129933\">@William Sykes Fisher (F2'18)</span>, <span class=\"user-mention\" data-user-id=\"125310\">@Zi Chong Kao (F1'18)</span>  and others, are you free sometime today for a quick discussion?</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 135413226,
            "is_me_message": false,
            "last_edit_timestamp": 1539014824,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "KeenanKomoto@gmail.com",
            "sender_full_name": "Keenan Tsuruichi Komoto (he) (F2'18)",
            "sender_id": 129934,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "Updates",
            "submessages": [],
            "timestamp": 1539014813,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/f47c30352bcf26bb97f17f9ee3db944cf167e09b?x=x&version=2",
            "client": "website",
            "content": "<p>I'm free all day after post-lunch prep</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 135413258,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "williamsykesfisher@gmail.com",
            "sender_full_name": "William Sykes Fisher (he) (F2'18)",
            "sender_id": 129933,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "Updates",
            "submessages": [],
            "timestamp": 1539014872,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/948d9d7e524888d7759824164e5be92cfa6b8c3b?x=x&version=2",
            "client": "website",
            "content": "<p>agreed on having the b-tree expose an API. there's a little discussion in that tutorial, happy to discuss it more this afternoon</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 135413380,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "astrosilverio@gmail.com",
            "sender_full_name": "Katie Silverio (she/they) (F2'18)",
            "sender_id": 2869,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "Updates",
            "submessages": [],
            "timestamp": 1539015003,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/7da8f8ef20569f6876aeb1188d2ebb6d41c6f842?x=x&version=2",
            "client": "ZulipElectron",
            "content": "<p>4pm?</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 135414311,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "KeenanKomoto@gmail.com",
            "sender_full_name": "Keenan Tsuruichi Komoto (he) (F2'18)",
            "sender_id": 129934,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "Updates",
            "submessages": [],
            "timestamp": 1539015889,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/2429e9ef7fdae2bc7252dd3bdebdb3101fb9a8b2?x=x&version=2",
            "client": "website",
            "content": "<p><span class=\"user-mention\" data-user-id=\"129934\">@Keenan Tsuruichi Komoto (F2'18)</span>  could make sense to think of that as a DBClient program decoupled from the DBServer. DBServer has references to the storage engine and the query engine/VM to execute commands; it listens on a port awaiting client requests. DBClient itself is a REPL that constructs a message from user input and ships it off to the server</p>\n<p>4pm works for me!</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 135414449,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "ammar.x.mian@gmail.com",
            "sender_full_name": "Ammar Mian (he) (F2'18)",
            "sender_id": 130584,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "Updates",
            "submessages": [],
            "timestamp": 1539016049,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/23e1fe70d5308e1361010e0519c5d4ec36b53702?x=x&version=2",
            "client": "website",
            "content": "<p>me too!</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 135414455,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "zichongkao@gmail.com",
            "sender_full_name": "Zi Chong Kao (he) (F1'18)",
            "sender_id": 125310,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "Updates",
            "submessages": [],
            "timestamp": 1539016057,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/7da8f8ef20569f6876aeb1188d2ebb6d41c6f842?x=x&version=2",
            "client": "ZulipElectron",
            "content": "<p><span class=\"user-mention\" data-user-id=\"130584\">@Ammar Mian (F2'18)</span> Awesome! That definitely sounds like a solid plan. Right now I am just implementing simple Postgres(like) commands that will allow you to do simple things like exit the prompt, list the databases, etc. I do have a gap in knowledge here though so I think the group discussion will help me with this a lot.</p>\n<p>I booked Sammet from 4pm-5pm today. Marked on Calendar (<a href=\"https://www.recurse.com/calendar/3432\" target=\"_blank\" title=\"https://www.recurse.com/calendar/3432\">https://www.recurse.com/calendar/3432</a>)</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 135414831,
            "is_me_message": false,
            "reactions": [
                {
                    "emoji_code": "1f389",
                    "emoji_name": "tada",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "ammar.x.mian@gmail.com",
                        "full_name": "Ammar Mian (he) (F2'18)",
                        "id": 130584
                    },
                    "user_id": 130584
                }
            ],
            "recipient_id": 41342,
            "sender_email": "KeenanKomoto@gmail.com",
            "sender_full_name": "Keenan Tsuruichi Komoto (he) (F2'18)",
            "sender_id": 129934,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "Updates",
            "submessages": [],
            "timestamp": 1539016498,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/7da8f8ef20569f6876aeb1188d2ebb6d41c6f842?x=x&version=2",
            "client": "ZulipElectron",
            "content": "<p>Here is a link to the GitHub Repo for this project!<br>\n<a href=\"https://github.com/KeenanKomoto/PokeDB\" target=\"_blank\" title=\"https://github.com/KeenanKomoto/PokeDB\">https://github.com/KeenanKomoto/PokeDB</a></p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 135426650,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "KeenanKomoto@gmail.com",
            "sender_full_name": "Keenan Tsuruichi Komoto (he) (F2'18)",
            "sender_id": 129934,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "GitHub",
            "submessages": [],
            "timestamp": 1539030925,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/23e1fe70d5308e1361010e0519c5d4ec36b53702?x=x&version=2",
            "client": "website",
            "content": "<p>Made a pull request to insert the BTree code. To be clear, the deletion code still doesn't work, but I thought it'd be good to push earlier so that the group can view the function definitions and folder structure for use in other work.</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 135497495,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "zichongkao@gmail.com",
            "sender_full_name": "Zi Chong Kao (he) (F1'18)",
            "sender_id": 125310,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "GitHub",
            "submessages": [],
            "timestamp": 1539117737,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/7da8f8ef20569f6876aeb1188d2ebb6d41c6f842?x=x&version=2",
            "client": "ZulipElectron",
            "content": "<p>Looks great thanks <span class=\"user-mention\" data-user-id=\"125310\">@Zi Chong Kao (F1'18)</span> ! Merged it into master. If anyone else is working on another branch be sure to rebase it on the master branch</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 135497743,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "KeenanKomoto@gmail.com",
            "sender_full_name": "Keenan Tsuruichi Komoto (he) (F2'18)",
            "sender_id": 129934,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "GitHub",
            "submessages": [],
            "timestamp": 1539118008,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/7da8f8ef20569f6876aeb1188d2ebb6d41c6f842?x=x&version=2",
            "client": "ZulipElectron",
            "content": "<p>Here is some good info about what an Oracle database is made up of: <a href=\"http://www.orafaq.com/wiki/Database_Concepts_and_Architecture\" target=\"_blank\" title=\"http://www.orafaq.com/wiki/Database_Concepts_and_Architecture\">http://www.orafaq.com/wiki/Database_Concepts_and_Architecture</a></p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 135553727,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "KeenanKomoto@gmail.com",
            "sender_full_name": "Keenan Tsuruichi Komoto (he) (F2'18)",
            "sender_id": 129934,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "Oracle",
            "submessages": [],
            "timestamp": 1539190421,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/7da8f8ef20569f6876aeb1188d2ebb6d41c6f842?x=x&version=2",
            "client": "ZulipElectron",
            "content": "<p>Super nice information about the file structure/what is stored on disk.</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 135553790,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "KeenanKomoto@gmail.com",
            "sender_full_name": "Keenan Tsuruichi Komoto (he) (F2'18)",
            "sender_id": 129934,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "Oracle",
            "submessages": [],
            "timestamp": 1539190455,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/7da8f8ef20569f6876aeb1188d2ebb6d41c6f842?x=x&version=2",
            "client": "ZulipElectron",
            "content": "<p>Hey All, we are meeting in Hopper now</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 135634227,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "KeenanKomoto@gmail.com",
            "sender_full_name": "Keenan Tsuruichi Komoto (he) (F2'18)",
            "sender_id": 129934,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "Meeting in Hopper",
            "submessages": [],
            "timestamp": 1539290047,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/2429e9ef7fdae2bc7252dd3bdebdb3101fb9a8b2?x=x&version=2",
            "client": "website",
            "content": "<p>hey all, strange week this week, had to take care of some family stuff that came up (all is good).</p>\n<p>ive been plugging away on reading redis source code and trying to, where i can, stay faithful to antirez's design decisions. here's a first stab at a subset of redis in python. have many data types to implement, but so far uses a single-threaded event loop to do nonblocking i/o, an append-only log for persistence, and the ability to reload all data from on server start when passed an aof file.</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 135648818,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "ammar.x.mian@gmail.com",
            "sender_full_name": "Ammar Mian (he) (F2'18)",
            "sender_id": 130584,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "Meeting in Hopper",
            "submessages": [],
            "timestamp": 1539309483,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/2429e9ef7fdae2bc7252dd3bdebdb3101fb9a8b2?x=x&version=2",
            "client": "website",
            "content": "<p><a href=\"https://github.com/ammarm08/redisnot\" target=\"_blank\" title=\"https://github.com/ammarm08/redisnot\">https://github.com/ammarm08/redisnot</a></p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 135648823,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "ammar.x.mian@gmail.com",
            "sender_full_name": "Ammar Mian (he) (F2'18)",
            "sender_id": 130584,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "Meeting in Hopper",
            "submessages": [],
            "timestamp": 1539309503,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/725b72e62dee517d5a85bb050caf09b4a2ee775a?x=x&version=2",
            "client": "website",
            "content": "<p>(deleted)</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 147541450,
            "is_me_message": false,
            "last_edit_timestamp": 1542046015,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "heime.a@gmail.com",
            "sender_full_name": "Heime S Ashkenazie (F2'18)",
            "sender_id": 130406,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "Mongodb",
            "submessages": [],
            "timestamp": 1542045990,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/7da8f8ef20569f6876aeb1188d2ebb6d41c6f842?x=x&version=2",
            "client": "ZulipElectron",
            "content": "<p>Today we are starting the PokeDB meeting! Meet in Sammet at 4:30pm if you would like to learn all about how database management systems work on the inside. <a href=\"https://www.recurse.com/calendar/3369\" target=\"_blank\" title=\"https://www.recurse.com/calendar/3369\">https://www.recurse.com/calendar/3369</a></p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 147766339,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "KeenanKomoto@gmail.com",
            "sender_full_name": "Keenan Tsuruichi Komoto (he) (F2'18)",
            "sender_id": 129934,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "PokeDB meeting",
            "submessages": [],
            "timestamp": 1542309886,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/36716766e555f85a2c18cf8f358d6f63ccc077d9?x=x&version=2",
            "client": "website",
            "content": "<p>I've been infatuated w/ triplestores or RDF DBs lately. I'm still trying to figure out how they work and they all seem fairly complicated. Anyone have tips on which is a good triplestore to set up locally for fooling around with? Sparql support would be preferable as it's the one interface language I'm getting a handle on so far</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 154621236,
            "is_me_message": false,
            "reactions": [
                {
                    "emoji_code": "1f44d",
                    "emoji_name": "+1",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "sajjad.bashar@gmail.com",
                        "full_name": "Sajjad Bashardanesh (he) (W2'19)",
                        "id": 198447
                    },
                    "user_id": 198447
                }
            ],
            "recipient_id": 41342,
            "sender_email": "mattg@leema.org",
            "sender_full_name": "Matthew Graham (he) (F1'18)",
            "sender_id": 125276,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "triplestores",
            "submessages": [],
            "timestamp": 1546918730,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/73c4ffbe7ffe7e39fa6a337f1945fc0c501db7f2?x=x&version=4",
            "client": "website",
            "content": "<p>Apache Jena maybe ?</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 154622477,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "sajjad.bashar@gmail.com",
            "sender_full_name": "Sajjad Bashardanesh (he) (W2'19)",
            "sender_id": 198447,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "triplestores",
            "submessages": [],
            "timestamp": 1546921087,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/36716766e555f85a2c18cf8f358d6f63ccc077d9?x=x&version=2",
            "client": "website",
            "content": "<p>thanks, I was able to get the free version of Ontotext GraphDB going pretty easily (after giving them my email address). trying it out now.  Jena looks like it has a lot going on, but I'll try that one out in a while</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 154623687,
            "is_me_message": false,
            "reactions": [
                {
                    "emoji_code": "1f44d",
                    "emoji_name": "+1",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "sajjad.bashar@gmail.com",
                        "full_name": "Sajjad Bashardanesh (he) (W2'19)",
                        "id": 198447
                    },
                    "user_id": 198447
                }
            ],
            "recipient_id": 41342,
            "sender_email": "mattg@leema.org",
            "sender_full_name": "Matthew Graham (he) (F1'18)",
            "sender_id": 125276,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "triplestores",
            "submessages": [],
            "timestamp": 1546923395,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/d7f66e3aca9270099c8dcf5be86878eb?d=identicon&version=1",
            "client": "ZulipElectron",
            "content": "<p>Hi, I'm just getting started with MySQL... The first thing I'm trying to do is gain access to a remote db instance with:</p>\n<blockquote>\n<p>mysql -h <em>hostname</em> -u <em>username</em> -p <em>databasename</em></p>\n</blockquote>\n<p>But after I enter my password, I get: </p>\n<p><strong>ERROR 2005 (HY000): Unknown MySQL server host</strong></p>\n<p>Reading through Stack overflow, it seems that I may need to resolve the database hostname to a numeric IP? That or I need to ask the database administrator to whitelist my IP?</p>\n<p>Any help would be greatly appreciated!</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 154670507,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "david.mahfouda@gmail.com",
            "sender_full_name": "David Mahfouda (he/they) (F2'18)",
            "sender_id": 129928,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "Reading Remote MySQL Database",
            "submessages": [],
            "timestamp": 1546976210,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/d16cd71b27dfd2af0f84e16276c00b61314db772?x=x&version=3",
            "client": "ZulipElectron",
            "content": "<p>I don't think you should need an ip for the host, though certainly something you can try</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 154670843,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "to@akiva.email",
            "sender_full_name": "Akiva Leffert (he) (W2'19)",
            "sender_id": 198444,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "Reading Remote MySQL Database",
            "submessages": [],
            "timestamp": 1546976496,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/d7f66e3aca9270099c8dcf5be86878eb?d=identicon&version=1",
            "client": "ZulipElectron",
            "content": "<p>Hi Akiva. Thanks! Do you know how I'd get the host IP from the hostname?</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 154670973,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "david.mahfouda@gmail.com",
            "sender_full_name": "David Mahfouda (he/they) (F2'18)",
            "sender_id": 129928,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "Reading Remote MySQL Database",
            "submessages": [],
            "timestamp": 1546976603,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/d16cd71b27dfd2af0f84e16276c00b61314db772?x=x&version=3",
            "client": "ZulipElectron",
            "content": "<p>I usually just do <code>ping &lt;hostname&gt;</code> maybe there's a more specific way to do that</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 154671062,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "to@akiva.email",
            "sender_full_name": "Akiva Leffert (he) (W2'19)",
            "sender_id": 198444,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "Reading Remote MySQL Database",
            "submessages": [],
            "timestamp": 1546976678,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/d16cd71b27dfd2af0f84e16276c00b61314db772?x=x&version=3",
            "client": "ZulipElectron",
            "content": "<p>but like I said, I'd be surprised if that were it. your networking config thing sounds more plausible</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 154671194,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "to@akiva.email",
            "sender_full_name": "Akiva Leffert (he) (W2'19)",
            "sender_id": 198444,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "Reading Remote MySQL Database",
            "submessages": [],
            "timestamp": 1546976766,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/d7f66e3aca9270099c8dcf5be86878eb?d=identicon&version=1",
            "client": "ZulipElectron",
            "content": "<p>Ok, thanks again! I'll keep ya posted</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 154671290,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "david.mahfouda@gmail.com",
            "sender_full_name": "David Mahfouda (he/they) (F2'18)",
            "sender_id": 129928,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "Reading Remote MySQL Database",
            "submessages": [],
            "timestamp": 1546976861,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/1c860d00a4cedc01147fbb2e0533c37b?d=identicon&version=1",
            "client": "website",
            "content": "<p><span class=\"user-mention\" data-user-id=\"129928\">@David Mahfouda (F2'18)</span>  how are you hosting your remove database?</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 154677527,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "corydominguez@gmail.com",
            "sender_full_name": "Cory Michael Dominguez (he) (SP1'15)",
            "sender_id": 7625,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "Reading Remote MySQL Database",
            "submessages": [],
            "timestamp": 1546981917,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/ab772058030721ef1c85f4d7692609dc?d=identicon&version=1",
            "client": "website",
            "content": "<p><span class=\"user-mention\" data-user-id=\"129928\">@David Mahfouda (F2'18)</span> hope this can help<br>\n1. check the status of your mysql server<br>\n<code>sudo service mysql status</code><br>\nor something similar depending your distro<br>\n2. make sure you have mysql client installed<br>\n3. try to connect without the host to force it to use localhost<br>\n<code>mysql -uYOURUSERNAME -pYOURPASSWORD</code></p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 154677834,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "hola@michelletorres.mx",
            "sender_full_name": "Michelle Torres (she) (W2'19)",
            "sender_id": 198461,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "Reading Remote MySQL Database",
            "submessages": [],
            "timestamp": 1546982170,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/86f87d8c43e01b254ce156f3a4ffd6a2?d=identicon&version=1",
            "client": "website",
            "content": "<p>Probably my favorite deal-making postgres feature <a href=\"https://julien.danjou.info/why-you-should-care-that-your-sql-ddl-is-transactional/\" target=\"_blank\" title=\"https://julien.danjou.info/why-you-should-care-that-your-sql-ddl-is-transactional/\">https://julien.danjou.info/why-you-should-care-that-your-sql-ddl-is-transactional/</a></p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 154812721,
            "is_me_message": false,
            "reactions": [
                {
                    "emoji_code": "1f418",
                    "emoji_name": "elephant",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "jason.a.owen@gmail.com",
                        "full_name": "Jason Owen (SP2'19)",
                        "id": 100450
                    },
                    "user_id": 100450
                }
            ],
            "recipient_id": 41342,
            "sender_email": "conrad.p.dean@gmail.com",
            "sender_full_name": "Conrad Dean (he) (W2'19)",
            "sender_id": 158539,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "Transactional DDL",
            "submessages": [],
            "timestamp": 1547090496,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/8ec0ac61efa8cf07f7427726bc602b5b?d=identicon&version=1",
            "client": "ZulipElectron",
            "content": "<p>So good! Plus as long as you know to ask for it, Postgres supports doing most schema changes online. For example you can build an index on a table without impacting traffic to that table: <a href=\"https://www.postgresql.org/docs/current/sql-createindex.html#SQL-CREATEINDEX-CONCURRENTLY\" target=\"_blank\" title=\"https://www.postgresql.org/docs/current/sql-createindex.html#SQL-CREATEINDEX-CONCURRENTLY\">https://www.postgresql.org/docs/current/sql-createindex.html#SQL-CREATEINDEX-CONCURRENTLY</a>.</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 154813591,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "nikhil.benesch@gmail.com",
            "sender_full_name": "Nikhil Benesch (he) (W2'19)",
            "sender_id": 198449,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "Transactional DDL",
            "submessages": [],
            "timestamp": 1547091975,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/d7f66e3aca9270099c8dcf5be86878eb?d=identicon&version=1",
            "client": "ZulipElectron",
            "content": "<p>Hi all, pinging my hostname and then using my IP worked. I was able to get around my local blacklisted IP by using a google script instead of connecting from terminal. Thank you!</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 154843768,
            "is_me_message": false,
            "reactions": [
                {
                    "emoji_code": "1f389",
                    "emoji_name": "tada",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "mattg@leema.org",
                        "full_name": "Matthew Graham (he) (F1'18)",
                        "id": 125276
                    },
                    "user_id": 125276
                }
            ],
            "recipient_id": 41342,
            "sender_email": "david.mahfouda@gmail.com",
            "sender_full_name": "David Mahfouda (he/they) (F2'18)",
            "sender_id": 129928,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "Reading Remote MySQL Database",
            "submessages": [],
            "timestamp": 1547131899,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/54dfd2f4cb0de5cd25e3554b0ca74e307087922e?x=x&version=2",
            "client": "website",
            "content": "<p>Any recurses out there who know Postgres internals? I'm working on a FDW and running into some weird bugs around multi-row inserts.</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 158816783,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "web@stillinbeta.com",
            "sender_full_name": "Liz Frost (she) (SP1'19)",
            "sender_id": 203700,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "Postgres Internals",
            "submessages": [],
            "timestamp": 1550511739,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/6527e077e84e20214d5373101ea15910d6b6f7a3?x=x&version=1",
            "client": "website",
            "content": "<p><span class=\"user-mention\" data-user-id=\"8099\">@Michael Malis (S1'15)</span> could likely help (I unfortunately cannot <span aria-label=\"sweat smile\" class=\"emoji emoji-1f605\" role=\"img\" title=\"sweat smile\">:sweat_smile:</span> )</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 158819373,
            "is_me_message": false,
            "last_edit_timestamp": 1550514191,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "steve@redlua.com",
            "sender_full_name": "Steven McCarthy (he) (SP2'15)",
            "sender_id": 7871,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "Postgres Internals",
            "submessages": [],
            "timestamp": 1550514126,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/21b9cce736cbbe8e0761bbb33863c7d3112d0136?x=x&version=2",
            "client": "website",
            "content": "<p><span class=\"user-mention\" data-user-id=\"203700\">@Liz Frost (SP1'19)</span> I can try. I've done a tiny bit of working against the Postgres internals. I've written a C extension that hooks into the Postgres planner. What do you have so far?</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 158837387,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "michaelmalis2@gmail.com",
            "sender_full_name": "Michael Malis (SP2'19)",
            "sender_id": 8099,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "Postgres Internals",
            "submessages": [],
            "timestamp": 1550533612,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/21b9cce736cbbe8e0761bbb33863c7d3112d0136?x=x&version=2",
            "client": "website",
            "content": "<p>Hey <span class=\"user-mention\" data-user-id=\"203700\">@Liz Frost (SP1'19)</span>. Were you able to figure things out?</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 158920581,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "michaelmalis2@gmail.com",
            "sender_full_name": "Michael Malis (SP2'19)",
            "sender_id": 8099,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "Postgres Internals",
            "submessages": [],
            "timestamp": 1550611736,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/54dfd2f4cb0de5cd25e3554b0ca74e307087922e?x=x&version=2",
            "client": "website",
            "content": "<p>Yeah I did! Eventually I summoned the courage to subscribe to pg-hackers and they answered my questions</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 158920623,
            "is_me_message": false,
            "reactions": [
                {
                    "emoji_code": "1f44d",
                    "emoji_name": "+1",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "michaelmalis2@gmail.com",
                        "full_name": "Michael Malis (SP2'19)",
                        "id": 8099
                    },
                    "user_id": 8099
                }
            ],
            "recipient_id": 41342,
            "sender_email": "web@stillinbeta.com",
            "sender_full_name": "Liz Frost (she) (SP1'19)",
            "sender_id": 203700,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "Postgres Internals",
            "submessages": [],
            "timestamp": 1550611769,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/772419261815796fcbed195f9871885315f4b5c6?x=x&version=4",
            "client": "website",
            "content": "<p>For my new job, I am tasked with creating a database of genomics data (on the order of hundreds of gigs) using AWS services. I'm working on the preprocessing now, and trying to decide how to structure/partition my data. Does anyone have experience with these specific technologies, or even more general concepts like partitioning/bucketing? Would love a sanity check!</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 160295037,
            "is_me_message": false,
            "reactions": [
                {
                    "emoji_code": "1f44b",
                    "emoji_name": "wave",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "pekarsky.maxim@gmail.com",
                        "full_name": "Max Pekarsky (he) (W2'19)",
                        "id": 158536
                    },
                    "user_id": 158536
                }
            ],
            "recipient_id": 41342,
            "sender_email": "ebalczewski@gmail.com",
            "sender_full_name": "Emily Ann Balczewski (she) (W1'18)",
            "sender_id": 134389,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "AWS Athena/Glue, Apache Hive",
            "submessages": [],
            "timestamp": 1552056179,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/70201dad8f30b376c8e9f8ede010e43b63266850?x=x&version=6",
            "client": "website",
            "content": "<p>.</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 160295171,
            "is_me_message": false,
            "last_edit_timestamp": 1605730913,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "stanley@zheng.nyc",
            "sender_full_name": "Stanley Zheng (they) (W1'19)",
            "sender_id": 100315,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "AWS Athena/Glue, Apache Hive",
            "submessages": [],
            "timestamp": 1552056282,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/70201dad8f30b376c8e9f8ede010e43b63266850?x=x&version=6",
            "client": "website",
            "content": "<p>.</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 160295306,
            "is_me_message": false,
            "last_edit_timestamp": 1605730913,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "stanley@zheng.nyc",
            "sender_full_name": "Stanley Zheng (they) (W1'19)",
            "sender_id": 100315,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "AWS Athena/Glue, Apache Hive",
            "submessages": [],
            "timestamp": 1552056371,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/21b9cce736cbbe8e0761bbb33863c7d3112d0136?x=x&version=2",
            "client": "website",
            "content": "<p><span class=\"user-mention\" data-user-id=\"134389\">@Emily Ann Balczewski (W1'18)</span> Can you clarify what you're trying to do? What's do you want to do with the data?</p>\n<p>If you need to use some sort of datastore that you will need to query, personally I would use an RDS (Postgres) database. A several hundred GB RDS instance isn't too expensive. It may be a lot compared to storing the data in S3 and querying it from there, but it will also be a lot easier to setup and work with.</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 160312381,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "michaelmalis2@gmail.com",
            "sender_full_name": "Michael Malis (SP2'19)",
            "sender_id": 8099,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "AWS Athena/Glue, Apache Hive",
            "submessages": [],
            "timestamp": 1552069456,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/772419261815796fcbed195f9871885315f4b5c6?x=x&version=4",
            "client": "website",
            "content": "<p><span class=\"user-mention\" data-user-id=\"8099\">@Michael Malis (S1'15)</span>  I don't necessarily have flexibility with which tools I use. My company already has the infrastructure to store data in S3, and work with the aforementioned tools.</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 160319585,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "ebalczewski@gmail.com",
            "sender_full_name": "Emily Ann Balczewski (she) (W1'18)",
            "sender_id": 134389,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "AWS Athena/Glue, Apache Hive",
            "submessages": [],
            "timestamp": 1552074791,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/772419261815796fcbed195f9871885315f4b5c6?x=x&version=4",
            "client": "website",
            "content": "<p>Essentially, my task is this: a very large clinical trial was run. All of that data has been meticulously processed and lives in an S3 bucket. Think hundreds and hundreds of CSVs of info about patients that have been tracked for dozens of visits and dozens of procedures and dozens of tests and...it's quite the dataset.</p>\n<p>I am in charge of a project to integrate this clinical database with each patient's genomics data. For each patient, there are ~seven 50k x 10 line matrices for several different genomics assays. I believe this is the type of data that Glue/Athena is solid at working with (same schema between files for each assay, large size, not very relational).</p>\n<p>My current approach is to preprocess the genomics data to Parquet files, upload them to S3, and create a Glue db instance over them. My main question is how to structure my data to optimize space/query costs.</p>\n<p>My use cases will be to make a series of visualizations of these data probably in Jupyter notebooks (in the short term) , and potentially opening up the db so others could query to find the information they wanted to (in the long term).</p>\n<p>Does that clarify?</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 160320669,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "ebalczewski@gmail.com",
            "sender_full_name": "Emily Ann Balczewski (she) (W1'18)",
            "sender_id": 134389,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "AWS Athena/Glue, Apache Hive",
            "submessages": [],
            "timestamp": 1552075468,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/8ef0cc9607b07f392f70560a43dbbb2d0efd6328?x=x&version=1",
            "client": "website",
            "content": "<p>you say visualize and query - but those are terms I typically hear for structured data (i.e. things that fit nicely in SQL databases), rather than genomics data (which sounds like giant arrays of floats)</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 160542425,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "brian.kihoon.lee@gmail.com",
            "sender_full_name": "Brian Lee (F1'16)",
            "sender_id": 100043,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "AWS Athena/Glue, Apache Hive",
            "submessages": [],
            "timestamp": 1552365064,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/8ef0cc9607b07f392f70560a43dbbb2d0efd6328?x=x&version=1",
            "client": "website",
            "content": "<p>maybe dask is something that would be relevant here?</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 160542433,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "brian.kihoon.lee@gmail.com",
            "sender_full_name": "Brian Lee (F1'16)",
            "sender_id": 100043,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "AWS Athena/Glue, Apache Hive",
            "submessages": [],
            "timestamp": 1552365076,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/8ef0cc9607b07f392f70560a43dbbb2d0efd6328?x=x&version=1",
            "client": "website",
            "content": "<p>also I should plug Nucleus, which my coworkers develop <a href=\"https://github.com/google/nucleus\" target=\"_blank\" title=\"https://github.com/google/nucleus\">https://github.com/google/nucleus</a></p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 160542437,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "brian.kihoon.lee@gmail.com",
            "sender_full_name": "Brian Lee (F1'16)",
            "sender_id": 100043,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "AWS Athena/Glue, Apache Hive",
            "submessages": [],
            "timestamp": 1552365105,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/8ef0cc9607b07f392f70560a43dbbb2d0efd6328?x=x&version=1",
            "client": "website",
            "content": "<p>if you ever plan on shoving your data through tensorflow</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 160542439,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "brian.kihoon.lee@gmail.com",
            "sender_full_name": "Brian Lee (F1'16)",
            "sender_id": 100043,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "AWS Athena/Glue, Apache Hive",
            "submessages": [],
            "timestamp": 1552365112,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/65d6c64fa1f9d28ab178a7dda4cfb5e3d978dd5e?x=x&version=2",
            "client": "ZulipElectron",
            "content": "<p>Any ideas why  my PostGIS functions aren't recognized? I don't get any errors when I run \"CREATE EXTENSION\" for postgis, address_standardizer, address_standardizer_data_us, fuzzystrmatch, and postgis_tiger_geocoder.</p>\n<p>However, when I query \"SELECT * FROM normalize_address('1 Devonshire Place, Boston, MA 02109');\"<br>\n or \"SELECT * FROM geocode('1 Devonshire Place, Boston, MA 02109');\" <br>\nI get the following error:</p>\n<p>ERROR:  function geocode(unknown) does not exist<br>\nLINE 1: SELECT * FROM geocode('1 Devonshire Place, Boston, MA 02109'...<br>\n                      ^<br>\nHINT:  No function matches the given name and argument types. You might need to add explicit type casts.</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 161670341,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "housker@gmail.com",
            "sender_full_name": "Adelle Housker (she) (W2'19)",
            "sender_id": 158595,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "PostGIS",
            "submessages": [],
            "timestamp": 1553536993,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/70201dad8f30b376c8e9f8ede010e43b63266850?x=x&version=6",
            "client": "website",
            "content": "<p>.</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 161670858,
            "is_me_message": false,
            "last_edit_timestamp": 1605719625,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "stanley@zheng.nyc",
            "sender_full_name": "Stanley Zheng (they) (W1'19)",
            "sender_id": 100315,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "PostGIS",
            "submessages": [],
            "timestamp": 1553537310,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/65d6c64fa1f9d28ab178a7dda4cfb5e3d978dd5e?x=x&version=2",
            "client": "ZulipElectron",
            "content": "<p><span class=\"user-mention\" data-user-id=\"100315\">@Stanley Zheng (W1'16)</span>, I'm running this locally. I enabled the extension in the schema, but as I've been attempting to debug, I'm also running it in the command line. What would  you  suggest I do to find out more information?</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 161674826,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "housker@gmail.com",
            "sender_full_name": "Adelle Housker (she) (W2'19)",
            "sender_id": 158595,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "PostGIS",
            "submessages": [],
            "timestamp": 1553539534,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/86f87d8c43e01b254ce156f3a4ffd6a2?d=identicon&version=1",
            "client": "website",
            "content": "<p>i think this might be an issue with the datatype</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 161674853,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "conrad.p.dean@gmail.com",
            "sender_full_name": "Conrad Dean (he) (W2'19)",
            "sender_id": 158539,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "PostGIS",
            "submessages": [],
            "timestamp": 1553539552,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/65d6c64fa1f9d28ab178a7dda4cfb5e3d978dd5e?x=x&version=2",
            "client": "ZulipElectron",
            "content": "<p>What do  you mean?</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 161674921,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "housker@gmail.com",
            "sender_full_name": "Adelle Housker (she) (W2'19)",
            "sender_id": 158595,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "PostGIS",
            "submessages": [],
            "timestamp": 1553539567,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/86f87d8c43e01b254ce156f3a4ffd6a2?d=identicon&version=1",
            "client": "website",
            "content": "<p><span class=\"user-mention\" data-user-id=\"158595\">@Adelle Housker (W2'19)</span> what does postgres say when you run it with doublequotes?</p>\n<div class=\"codehilite\"><pre><span></span>SELECT * FROM geocode(&quot;1 Devonshire Place, Boston, MA 02109&quot;);\n</pre></div>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 161674923,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "conrad.p.dean@gmail.com",
            "sender_full_name": "Conrad Dean (he) (W2'19)",
            "sender_id": 158539,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "PostGIS",
            "submessages": [],
            "timestamp": 1553539570,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/86f87d8c43e01b254ce156f3a4ffd6a2?d=identicon&version=1",
            "client": "website",
            "content": "<p>singlequotes in sql mean something different than strings</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 161674939,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "conrad.p.dean@gmail.com",
            "sender_full_name": "Conrad Dean (he) (W2'19)",
            "sender_id": 158539,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "PostGIS",
            "submessages": [],
            "timestamp": 1553539582,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/65d6c64fa1f9d28ab178a7dda4cfb5e3d978dd5e?x=x&version=2",
            "client": "ZulipElectron",
            "content": "<p>This is what I get:<br>\nERROR:  column \"1 Devonshire Place, Boston, MA 02109\" does not exist</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 161674998,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "housker@gmail.com",
            "sender_full_name": "Adelle Housker (she) (W2'19)",
            "sender_id": 158595,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "PostGIS",
            "submessages": [],
            "timestamp": 1553539624,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/86f87d8c43e01b254ce156f3a4ffd6a2?d=identicon&version=1",
            "client": "website",
            "content": "<p>ah sorry i got that backwards :(</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 161675024,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "conrad.p.dean@gmail.com",
            "sender_full_name": "Conrad Dean (he) (W2'19)",
            "sender_id": 158539,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "PostGIS",
            "submessages": [],
            "timestamp": 1553539642,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/70201dad8f30b376c8e9f8ede010e43b63266850?x=x&version=6",
            "client": "website",
            "content": "<p>.</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 161675054,
            "is_me_message": false,
            "last_edit_timestamp": 1605719625,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "stanley@zheng.nyc",
            "sender_full_name": "Stanley Zheng (they) (W1'19)",
            "sender_id": 100315,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "PostGIS",
            "submessages": [],
            "timestamp": 1553539661,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/65d6c64fa1f9d28ab178a7dda4cfb5e3d978dd5e?x=x&version=2",
            "client": "ZulipElectron",
            "content": "<p>POSTGIS=\"2.4.3 r16312\" PGSQL=\"100\" GEOS=\"3.6.2-CAPI-1.10.2 4d2925d6\" PROJ=\"Rel. 4.9.3, 15 August 2016\" GDAL=\"GDAL 2.1.3, released 2017/20/01\" LIBXML=\"2.9.7\" LIBJSON=\"0.12.1\" TOPOLOGY RASTER</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 161675130,
            "is_me_message": false,
            "reactions": [
                {
                    "emoji_code": "1f44d",
                    "emoji_name": "+1",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "stanley@zheng.nyc",
                        "full_name": "Stanley Zheng (they) (W1'19)",
                        "id": 100315
                    },
                    "user_id": 100315
                }
            ],
            "recipient_id": 41342,
            "sender_email": "housker@gmail.com",
            "sender_full_name": "Adelle Housker (she) (W2'19)",
            "sender_id": 158595,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "PostGIS",
            "submessages": [],
            "timestamp": 1553539690,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/70201dad8f30b376c8e9f8ede010e43b63266850?x=x&version=6",
            "client": "website",
            "content": "<p>.</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 161675554,
            "is_me_message": false,
            "last_edit_timestamp": 1605719625,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "stanley@zheng.nyc",
            "sender_full_name": "Stanley Zheng (they) (W1'19)",
            "sender_id": 100315,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "PostGIS",
            "submessages": [],
            "timestamp": 1553539945,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/70201dad8f30b376c8e9f8ede010e43b63266850?x=x&version=6",
            "client": "website",
            "content": "<p>.</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 161675644,
            "is_me_message": false,
            "last_edit_timestamp": 1605719625,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "stanley@zheng.nyc",
            "sender_full_name": "Stanley Zheng (they) (W1'19)",
            "sender_id": 100315,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "PostGIS",
            "submessages": [],
            "timestamp": 1553540001,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/70201dad8f30b376c8e9f8ede010e43b63266850?x=x&version=6",
            "client": "website",
            "content": "<p>.</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 161675878,
            "is_me_message": false,
            "last_edit_timestamp": 1605719625,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "stanley@zheng.nyc",
            "sender_full_name": "Stanley Zheng (they) (W1'19)",
            "sender_id": 100315,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "PostGIS",
            "submessages": [],
            "timestamp": 1553540146,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/65d6c64fa1f9d28ab178a7dda4cfb5e3d978dd5e?x=x&version=2",
            "client": "ZulipElectron",
            "content": "<p>For all of them I'm getting errors similar to:<br>\nERROR:  extension \"postgis_tiger_geocoder\" already exists</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 161676691,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "housker@gmail.com",
            "sender_full_name": "Adelle Housker (she) (W2'19)",
            "sender_id": 158595,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "PostGIS",
            "submessages": [],
            "timestamp": 1553540590,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/65d6c64fa1f9d28ab178a7dda4cfb5e3d978dd5e?x=x&version=2",
            "client": "ZulipElectron",
            "content": "<p>I'm not sure the tiger dataset is loaded. How does that work?</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 161676737,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "housker@gmail.com",
            "sender_full_name": "Adelle Housker (she) (W2'19)",
            "sender_id": 158595,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "PostGIS",
            "submessages": [],
            "timestamp": 1553540629,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/65d6c64fa1f9d28ab178a7dda4cfb5e3d978dd5e?x=x&version=2",
            "client": "ZulipElectron",
            "content": "<p>This is mostly for practice with PostGIS. I'm aware I could easily use smartystreets or google's api.</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 161676831,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "housker@gmail.com",
            "sender_full_name": "Adelle Housker (she) (W2'19)",
            "sender_id": 158595,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "PostGIS",
            "submessages": [],
            "timestamp": 1553540663,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/70201dad8f30b376c8e9f8ede010e43b63266850?x=x&version=6",
            "client": "website",
            "content": "<p>.</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 161677326,
            "is_me_message": false,
            "last_edit_timestamp": 1605719625,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "stanley@zheng.nyc",
            "sender_full_name": "Stanley Zheng (they) (W1'19)",
            "sender_id": 100315,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "PostGIS",
            "submessages": [],
            "timestamp": 1553540994,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/65d6c64fa1f9d28ab178a7dda4cfb5e3d978dd5e?x=x&version=2",
            "client": "ZulipElectron",
            "content": "<p><span class=\"user-mention\" data-user-id=\"100315\">@Stanley Zheng (W1'16)</span> and <span class=\"user-mention\" data-user-id=\"158539\">@Conrad Dean (W2'19)</span> thank you for debugging a little with me! I might come in later. I was feeling under the weather earlier. We'll see.</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 161678583,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "housker@gmail.com",
            "sender_full_name": "Adelle Housker (she) (W2'19)",
            "sender_id": 158595,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "PostGIS",
            "submessages": [],
            "timestamp": 1553541768,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/379065f5ed34b60c451bedb37fff109b?d=identicon&version=1",
            "client": "ZulipElectron",
            "content": "<p>Hi all! I'm working with Postgres for the first time, and am trying to figure out how to return a default row if the requested row doesn't exist. I found documentation for COALESCE(), but it seemed like it was geared towards individual cells (vs an entire row). Does anyone have ideas for how to implement this?</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 161895745,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "pearl.isaac@gmail.com",
            "sender_full_name": "Isaac Pearl (he) (SP1'19)",
            "sender_id": 203622,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "Postgres default row when null row is requested",
            "submessages": [],
            "timestamp": 1553717137,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/7530a0eb7a6becf50783ad55094b30af3cd5bd96?x=x&version=2",
            "client": "website",
            "content": "<p>one thought is to do it in the application layer; i.e. catch the error if there is one or check if its null and instead send back a different record</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 161896508,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "rekhviasnino@gmail.com",
            "sender_full_name": "Nino Rekhviashvili (she/they) (SP1'19)",
            "sender_id": 203433,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "Postgres default row when null row is requested",
            "submessages": [],
            "timestamp": 1553717739,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/21b9cce736cbbe8e0761bbb33863c7d3112d0136?x=x&version=2",
            "client": "website",
            "content": "<p><span class=\"user-mention\" data-user-id=\"203622\">@Isaac Pearl (SP1'19)</span> Can you go a bit more in depth about what you are trying to do? What is the goal behind returning a default row? </p>\n<p>Depending on what you are doing, you may be looking for something like <a href=\"https://www.postgresql.org/docs/current/sql-insert.html\" target=\"_blank\" title=\"https://www.postgresql.org/docs/current/sql-insert.html\">upserts</a>. I've used something like the following in the past to create a row if it does not exist and then return the new or existing row:</p>\n<div class=\"codehilite\"><pre><span></span>INSERT INTO table &lt;columns&gt;\nSELECT &lt;default values&gt;\nON CONFLICT\nDO UPDATE SET id = excluded.id\nRETURNING &lt;returned values&gt;\n</pre></div>\n\n\n<p>Alternatively, it should be possible to use <code>COALESCE</code>if you only need to select a single field. A query like:</p>\n<div class=\"codehilite\"><pre><span></span>SELECT COALESCE((SELECT &lt;field&gt; FROM &lt;table&gt; WHERE &lt;condition&gt;), &lt;default&gt;);\n</pre></div>\n\n\n<p>should work. If you need to select multiple fields, you can either use multiple <code>COALESCE</code> statements or look into using a <a href=\"https://www.postgresql.org/docs/10/rowtypes.html\" target=\"_blank\" title=\"https://www.postgresql.org/docs/10/rowtypes.html\">composite type</a>.</p>\n<p>As Nino mentioned, another option is to handle the default case in the application instead of in SQL.</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 161897534,
            "is_me_message": false,
            "last_edit_timestamp": 1553718552,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "michaelmalis2@gmail.com",
            "sender_full_name": "Michael Malis (SP2'19)",
            "sender_id": 8099,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "Postgres default row when null row is requested",
            "submessages": [],
            "timestamp": 1553718486,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/379065f5ed34b60c451bedb37fff109b?d=identicon&version=1",
            "client": "ZulipElectron",
            "content": "<p>thank you both for replying! the reason I want to return a default row is that I currently have some manually written placeholder query parameters in the frontend to prevent null arguments to my API calls. <br>\n<span class=\"user-mention\" data-user-id=\"8099\">@Michael Malis (S1'15)</span>  the code you sent does exactly what I want it to do, but after reading your responses / thinking about it more, in this case it may be better to just handle this stuff in the application layer like <span class=\"user-mention\" data-user-id=\"203433\">@Nino Rekhviashvili (SP1'19)</span> suggested and keep my queries more basic</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 161898032,
            "is_me_message": false,
            "last_edit_timestamp": 1553718895,
            "reactions": [
                {
                    "emoji_code": "1f6e0",
                    "emoji_name": "working_on_it",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "rekhviasnino@gmail.com",
                        "full_name": "Nino Rekhviashvili (she/they) (SP1'19)",
                        "id": 203433
                    },
                    "user_id": 203433
                }
            ],
            "recipient_id": 41342,
            "sender_email": "pearl.isaac@gmail.com",
            "sender_full_name": "Isaac Pearl (he) (SP1'19)",
            "sender_id": 203622,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "Postgres default row when null row is requested",
            "submessages": [],
            "timestamp": 1553718872,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/9c4af750426d3bf0c15347009913c0323596658f?x=x&version=2",
            "client": "ZulipElectron",
            "content": "<p>Hey folks!  I'm thinking a lot about how to approach data modeling and database selection for ambiguous, nuanced, or uncertain data, or for cases where data is conceptually connected in both tabular/relational and network/graph ways. (Which ... in both cases is most data, in my mind, but that's maybe a different issue?)  This has been one of my main intellectual interests since my historian days, but I feel like I still don't have a clear sense of any standard/traditional approaches to modeling and working with data while preserving particularly complex relations.</p>\n<p>Does anyone have strong opinions about the pluses and minuses (beyond just performance in applications, I guess) of preserving those kinds of ontologies, or recommendations for readings, or thoughts on their own experiences with it? I've read Kleppman ( <span aria-label=\"praise\" class=\"emoji emoji-1f64c\" role=\"img\" title=\"praise\">:praise:</span> ), but haven't dug into the Red Book yet, and only have work experience with the limited case of \"we've already made schema decisions; make this db Go Faster\".</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 167209791,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "katelaurel@gmail.com",
            "sender_full_name": "Kate-Laurel Agnew (she) (SP2'19)",
            "sender_id": 215254,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "data modeling opinions and reading",
            "submessages": [],
            "timestamp": 1559581125,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/4c1c5789a9ec48818bbc90f3fdc324560d9a2021?x=x&version=2",
            "client": "website",
            "content": "<p>Regarding data that seems both relational and graph-ish, you might be interested in the database Datomic -- it has a data model that supports combining those pretty fluidly. (Not particularly traditional, though. I'm also curious if anyone has suggestions about further reading for this sort of thing.)</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 167237006,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "logan.buckley@gmail.com",
            "sender_full_name": "Logan Buckley (S1'17)",
            "sender_id": 101096,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "data modeling opinions and reading",
            "submessages": [],
            "timestamp": 1559600148,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/86f87d8c43e01b254ce156f3a4ffd6a2?d=identicon&version=1",
            "client": "ZulipMobile",
            "content": "<p>re: uncertain data, \"data vault\" as a modeling strategy for capturing data for later processing is a buzz word that keeps coming up at work, but I haven't used it long enough to have a real opinion yet</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 167717180,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "conrad.p.dean@gmail.com",
            "sender_full_name": "Conrad Dean (he) (W2'19)",
            "sender_id": 158539,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "data modeling opinions and reading",
            "submessages": [],
            "timestamp": 1560114679,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/86f87d8c43e01b254ce156f3a4ffd6a2?d=identicon&version=1",
            "client": "ZulipMobile",
            "content": "<p>you model data in a way that avoids the need for changes to your schema (as well as old pipelines)</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 167717249,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "conrad.p.dean@gmail.com",
            "sender_full_name": "Conrad Dean (he) (W2'19)",
            "sender_id": 158539,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "data modeling opinions and reading",
            "submessages": [],
            "timestamp": 1560114782,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/7a48902c9379b61bebcc7d4ddf51078ad881b09c?x=x&version=2",
            "client": "ZulipElectron",
            "content": "<p>I'm scraping the laws of Ontario and am wondering where to store them. Right now, I'm thinking some NoSQL solution because I have them in a dictionaries that look like this:</p>\n<div class=\"codehilite\"><pre><span></span>{\n &#39;name&#39;: {title of the law},\n &#39;url&#39;: {link},\n &#39;content&#39;: {&#39;title1&#39;: &#39;headnote1&#39;: {text}, &#39;title2&#39;:{text}, ..}\n}\n</pre></div>\n\n\n<p>the documents generally have <code>Title &gt; Headnote &gt; text</code> structure but you may also have a bunch of headnotes that have no title, and the number of titles and headnotes varies. I'm probably going to add more fields as I work with them too. Does anyone have suggestions for a good solution? Doesn't have to be NoSQL</p>\n<p>I've been looking at this structure for some time now so if it's not clear and I need to use more words let me know <span aria-label=\"sweat smile\" class=\"emoji emoji-1f605\" role=\"img\" title=\"sweat smile\">:sweat_smile:</span></p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 193523143,
            "is_me_message": false,
            "last_edit_timestamp": 1586475317,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "serena.peruzzo@gmail.com",
            "sender_full_name": "Serena Peruzzo (she) (SP2'20)",
            "sender_id": 7642,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "storing documents",
            "submessages": [],
            "timestamp": 1586475229,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/097edbae0d41f8a5149c6ada6fd5c4941e572159?x=x&version=2",
            "client": "ZulipElectron",
            "content": "<p>How do you want to query the data later / what do you want to do with it?</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 193523675,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "rprior@protonmail.com",
            "sender_full_name": "Ryan Prior (he) (F1'19)",
            "sender_id": 234256,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "storing documents",
            "submessages": [],
            "timestamp": 1586475712,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/097edbae0d41f8a5149c6ada6fd5c4941e572159?x=x&version=2",
            "client": "ZulipElectron",
            "content": "<p>If you want to split it into streams and write programs that consume a stream and output some kind of analysis, then a streaming data store like Kafka would be a good option.</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 193523790,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "rprior@protonmail.com",
            "sender_full_name": "Ryan Prior (he) (F1'19)",
            "sender_id": 234256,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "storing documents",
            "submessages": [],
            "timestamp": 1586475786,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/097edbae0d41f8a5149c6ada6fd5c4941e572159?x=x&version=2",
            "client": "ZulipElectron",
            "content": "<p>If you want to do structured queries against them, looking for specific patterns and relationships, then finding a workable schema and filing them into an RDBMS will really help you later.</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 193523900,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "rprior@protonmail.com",
            "sender_full_name": "Ryan Prior (he) (F1'19)",
            "sender_id": 234256,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "storing documents",
            "submessages": [],
            "timestamp": 1586475846,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/097edbae0d41f8a5149c6ada6fd5c4941e572159?x=x&version=2",
            "client": "ZulipElectron",
            "content": "<p>If you want to do massive parallel analysis of the dataset and order doesn't particularly matter, or you don't really have distinct streams and it's basically all one big pool of data, or your use case is to pull up a single record at a time and display it, then NoSQL is going to be a good simple solution.</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 193523969,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "rprior@protonmail.com",
            "sender_full_name": "Ryan Prior (he) (F1'19)",
            "sender_id": 234256,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "storing documents",
            "submessages": [],
            "timestamp": 1586475911,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/7a48902c9379b61bebcc7d4ddf51078ad881b09c?x=x&version=2",
            "client": "ZulipElectron",
            "content": "<p>definitely not streaming. Right now the one-by one case seems the most likely but I might build some models with them later on. So I guess starting with NoSQL makes sense. Do you have any recommendation for that? I've used mongo in the past but I haven't looked at anything similar in years</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 193524780,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "serena.peruzzo@gmail.com",
            "sender_full_name": "Serena Peruzzo (she) (SP2'20)",
            "sender_id": 7642,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "storing documents",
            "submessages": [],
            "timestamp": 1586476519,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/097edbae0d41f8a5149c6ada6fd5c4941e572159?x=x&version=2",
            "client": "ZulipElectron",
            "content": "<p>If you have Mongo experience I don't know any reason not to use that, and Mongo even offers a free tier on Atlas, their mongodb-as-a-service, if you don't need more than 512mb: <a href=\"https://www.mongodb.com/cloud/atlas/\" title=\"https://www.mongodb.com/cloud/atlas/\">https://www.mongodb.com/cloud/atlas/</a></p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 193525508,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "rprior@protonmail.com",
            "sender_full_name": "Ryan Prior (he) (F1'19)",
            "sender_id": 234256,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "storing documents",
            "submessages": [],
            "timestamp": 1586477205,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/097edbae0d41f8a5149c6ada6fd5c4941e572159?x=x&version=2",
            "client": "ZulipElectron",
            "content": "<p>Postgres also has a nice JSON document database (tutorial: <a href=\"https://www.postgresqltutorial.com/postgresql-json/\" title=\"https://www.postgresqltutorial.com/postgresql-json/\">https://www.postgresqltutorial.com/postgresql-json/</a>) and is just a wonderful database overall with great support on pretty much every platform.</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 193525667,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "rprior@protonmail.com",
            "sender_full_name": "Ryan Prior (he) (F1'19)",
            "sender_id": 234256,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "storing documents",
            "submessages": [],
            "timestamp": 1586477426,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/097edbae0d41f8a5149c6ada6fd5c4941e572159?x=x&version=2",
            "client": "ZulipElectron",
            "content": "<p>If you want to create offline-friendly apps that cache database queries locally so that you can continue to bring up documents with no connection, there's CouchDB+PouchDB which is a NoSQL system designed specifically for that use case. <a href=\"https://couchdb.apache.org/\" title=\"https://couchdb.apache.org/\">https://couchdb.apache.org/</a> and <a href=\"https://pouchdb.com/\" title=\"https://pouchdb.com/\">https://pouchdb.com/</a></p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 193525703,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "rprior@protonmail.com",
            "sender_full_name": "Ryan Prior (he) (F1'19)",
            "sender_id": 234256,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "storing documents",
            "submessages": [],
            "timestamp": 1586477521,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/1c860d00a4cedc01147fbb2e0533c37b?d=identicon&version=1",
            "client": "website",
            "content": "<p>I think <span class=\"user-mention\" data-user-id=\"234256\">@Ryan Prior (he) (F1'19)</span> 's approach is a good way to think about it. You are essentially building a mini data pipeline. You have the ingestion part down, which is you wrote a scrapper which brings the information into memory on your computer in this somewhat unstructured way. The next step is to consider what your access patterns on the data might be. You probably want to explore the data  and you want to build models with it. If the data is really small then one simple option is to just write the data out as a json file. Then write a script that will read the files back into memory so that you can do something with it. Databases can be valuable if you want to use something like SQL or some other query language. But if the whole dataset fits in memory sometimes it is better to just use something like pandas on your local computer.</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 193525786,
            "is_me_message": false,
            "last_edit_timestamp": 1586478231,
            "reactions": [
                {
                    "emoji_code": "1f44d",
                    "emoji_name": "+1",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "jamie@scattered-thoughts.net",
                        "full_name": "Jamie Brandon (he) (W1'20)",
                        "id": 863
                    },
                    "user_id": 863
                },
                {
                    "emoji_code": "1f44d",
                    "emoji_name": "+1",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "serena.peruzzo@gmail.com",
                        "full_name": "Serena Peruzzo (she) (SP2'20)",
                        "id": 7642
                    },
                    "user_id": 7642
                }
            ],
            "recipient_id": 41342,
            "sender_email": "corydominguez@gmail.com",
            "sender_full_name": "Cory Michael Dominguez (he) (SP1'15)",
            "sender_id": 7625,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "storing documents",
            "submessages": [],
            "timestamp": 1586477594,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/d05d1234dcf01c0c049d3178b47069dea9142332?x=x&version=12",
            "client": "website",
            "content": "<p><span class=\"user-mention\" data-user-id=\"7642\">@Serena Peruzzo (she) (SP2'20)</span>  NoSQL and JSON stores are good ideas for this, but I also want to point out that even just making the flat JSON files available for download on a regular basis is a valuable thing to start with too, especially if you provide an RSS feed for the updates.</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 193528265,
            "is_me_message": false,
            "reactions": [
                {
                    "emoji_code": "1f44d",
                    "emoji_name": "+1",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "dwinston@alum.mit.edu",
                        "full_name": "Donny Winston (he) (W1'19)",
                        "id": 246979
                    },
                    "user_id": 246979
                },
                {
                    "emoji_code": "1f44d",
                    "emoji_name": "+1",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "aditya.athalye@gmail.com",
                        "full_name": "Aditya Athalye (he) (SP1'20)",
                        "id": 263547
                    },
                    "user_id": 263547
                },
                {
                    "emoji_code": "1f44d",
                    "emoji_name": "+1",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "nathanisom27@gmail.com",
                        "full_name": "Nathan Isom (he) (W2'20)",
                        "id": 255190
                    },
                    "user_id": 255190
                },
                {
                    "emoji_code": "1f44d",
                    "emoji_name": "+1",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "rprior@protonmail.com",
                        "full_name": "Ryan Prior (he) (F1'19)",
                        "id": 234256
                    },
                    "user_id": 234256
                },
                {
                    "emoji_code": "1f44d",
                    "emoji_name": "+1",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "serena.peruzzo@gmail.com",
                        "full_name": "Serena Peruzzo (she) (SP2'20)",
                        "id": 7642
                    },
                    "user_id": 7642
                },
                {
                    "emoji_code": "1f44d",
                    "emoji_name": "+1",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "roland@rolandcrosby.com",
                        "full_name": "Roland Crosby (he) (SP2'20)",
                        "id": 276197
                    },
                    "user_id": 276197
                },
                {
                    "emoji_code": "1f44d",
                    "emoji_name": "+1",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "george@mand.is",
                        "full_name": "George Mandis (he) (W2'20)",
                        "id": 255044
                    },
                    "user_id": 255044
                }
            ],
            "recipient_id": 41342,
            "sender_email": "pius@alum.mit.edu",
            "sender_full_name": "Pius Uzamere (he) (SP2'20)",
            "sender_id": 256945,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "storing documents",
            "submessages": [],
            "timestamp": 1586479969,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/afcff71a280c619fe7f45af5df2f66b9617479fc?x=x&version=4",
            "client": "ZulipElectron",
            "content": "<p><span class=\"user-mention\" data-user-id=\"7642\">@Serena Peruzzo (she) (SP2'20)</span> I'm in agreement with <span class=\"user-mention\" data-user-id=\"256945\">@Pius Uzamere (he) (SP2'20)</span> but from a different angle. How much data is there, really? </p>\n<p>If its just a few GB to a few dozen GB, queries on flat files will probably be the least-overhead solution both in terms of domain complexity (no need to invest in learning a specialized data-store until use cases and query patterns are better understood), and in terms of  computing resource overhead (therefore use cheaper / free tier machines).</p>\n<p>If I really needed a DB, and I were fluent with XYZ-db (sql or not), I would just just stick with that, once again because I don't want to add an _incidental_ unknown, viz. the specific learning/maintenance overhead of $unfimiliar-DB.</p>\n<p>The higher order bit is to understand what the data is, and how users want to consume it... that will naturally surface information about what tool to apply for best results.</p>\n<p>We can have the cake and eat it too especially in the exploratory phase, because:</p>\n<ol>\n<li>JSON flat file queries are covered by most programming languages, by libraries for JSON processing</li>\n<li>CSV/TSV flat file queries are covered by tools that let us run SQL over them. </li>\n</ol>\n<p>For example, this github curates <a href=\"https://github.com/dbohdan/structured-text-tools/\" title=\"https://github.com/dbohdan/structured-text-tools/\">tools for manipulating structured text data</a>.</p>\n<p>If the data set is not too large, we can maintain a json dump _and_ a corresponding CSV analogue (at most 2x disk storage space).</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 193541444,
            "is_me_message": false,
            "last_edit_timestamp": 1586500968,
            "reactions": [
                {
                    "emoji_code": "1f44d",
                    "emoji_name": "+1",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "pius@alum.mit.edu",
                        "full_name": "Pius Uzamere (he) (SP2'20)",
                        "id": 256945
                    },
                    "user_id": 256945
                }
            ],
            "recipient_id": 41342,
            "sender_email": "aditya.athalye@gmail.com",
            "sender_full_name": "Aditya Athalye (he) (SP1'20)",
            "sender_id": 263547,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "storing documents",
            "submessages": [],
            "timestamp": 1586499766,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/0a7281da0a7289a741650707cabd4fd97b489f0e?x=x&version=2",
            "client": "ZulipElectron",
            "content": "<p>that list of structured text tools looks like a great resource \u2014\u00a0thanks :)</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 196201060,
            "is_me_message": false,
            "reactions": [
                {
                    "emoji_code": "1f419",
                    "emoji_name": "octopus",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "aditya.athalye@gmail.com",
                        "full_name": "Aditya Athalye (he) (SP1'20)",
                        "id": 263547
                    },
                    "user_id": 263547
                }
            ],
            "recipient_id": 41342,
            "sender_email": "toph.allen@gmail.com",
            "sender_full_name": "Toph Allen (he) (SP2'20)",
            "sender_id": 255104,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "storing documents",
            "submessages": [],
            "timestamp": 1588607820,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/6b5fe2f87b37afbbfe2a6aa4a84b7f97ebd6679f?x=x&version=2",
            "client": "website",
            "content": "<p>(I'm asking for help with some database woes and I wasn't sure which stream to put this in, so please redirect me if another stream would work better.)</p>\n<p>I'm trying to write a migration for a Python-Flask app that has a Postgresql database.  I want to add an <code>order</code> to all <code>rank</code> records that don't already have an order.  The migration is below.</p>\n<div class=\"codehilite\"><pre><span></span><code>&quot;&quot;&quot;\nfrom alembic import op\nimport sqlalchemy as sa\nfrom app.models import Department, Job, db\n\n\n# revision identifiers, used by Alembic.\nrevision = &#39;562bd5f1bc1f&#39;\ndown_revision = &#39;6045f42587ec&#39;\nbranch_labels = None\ndepends_on = None\n\n\ndef upgrade():\n    op.drop_constraint(&#39;unique_department_job_order&#39;, &#39;jobs&#39;, type_=&#39;unique&#39;)\n\n    for department in Department.query.all():\n        job_order = 0\n        for job in Job.query.filter(sa.and_(Job.department_id == department.id, Job.order.is_(None))).all():\n            job.order = job_order\n            job_order += 1\n    db.session.commit()\n\n    op.alter_column(&#39;jobs&#39;, &#39;order&#39;,\n                    existing_type=sa.INTEGER(),\n                    nullable=False)\n\n\ndef downgrade():\n    op.create_unique_constraint(&#39;unique_department_job_order&#39;, &#39;jobs&#39;, [&#39;order&#39;, &#39;department_id&#39;])\n\n    op.alter_column(&#39;jobs&#39;, &#39;order&#39;,\n                    existing_type=sa.INTEGER(),\n                    nullable=True)\n</code></pre></div>\n\n\n<p>When I run flask db upgrade, it hangs after this line:</p>\n<p><code>INFO [alembic.runtime.migration] Running upgrade 6045f42587ec -&gt; 562bd5f1bc1f, Add order to jobs in DB and adjust constraints on order column</code></p>\n<p>I tried to see if there are any locks on the database</p>\n<p><code>SELECT (locktype, pid, mode, granted) FROM pg_locks ORDER BY pid;</code></p>\n<p>and found this process where granted was false</p>\n<p><code>(relation,83,AccessShareLock,f)</code></p>\n<p>I checked <code>pg_stat_activity</code> next</p>\n<div class=\"codehilite\"><pre><span></span><code>SELECT (pid, application_name, state, query) FROM pg_stat_activity WHERE pid=83;\n(83,&quot;&quot;,active,&quot;SELECT jobs.id AS jobs_id, jobs.job_title AS jobs_job_title, jobs.is_sworn_officer AS jobs_is_sworn_officer, jobs.&quot;&quot;order&quot;&quot; AS jobs_order, jobs.department_id AS jobs_department_id + FROM jobs + WHERE jobs.department_id = 1 AND jobs.&quot;&quot;order&quot;&quot; IS NULL&quot;)\n</code></pre></div>\n\n\n<p>It seems to be locked on this query? I'm not sure why.</p>\n<p>Then I investigated another pid that appeared in the pg_locks table. It seems that the process to remove the unique constraint on job order is idle?</p>\n<div class=\"codehilite\"><pre><span></span><code>SELECT (pid, application_name, state, query) FROM pg_stat_activity WHERE pid=82;\n(82,&quot;&quot;,&quot;idle in transaction&quot;,&quot;ALTER TABLE jobs DROP CONSTRAINT unique_department_job_order&quot;)\n</code></pre></div>\n\n\n<p>I'm having a hard time figuring out why the migration isn't completing. Any help would be appreciated. Thanks!</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 197229415,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "eileenm@gmail.com",
            "sender_full_name": "Eileen McFarland (she) (SP1'19)",
            "sender_id": 203637,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "Migration hangs when run with `flask db migrate`",
            "submessages": [],
            "timestamp": 1589251845,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/b0d3d1042e23d55075953653f9736863?d=identicon&version=1",
            "client": "website",
            "content": "<p>When I'm not sure where things are stuck I usually run them with <code>SQLALCHEMY_ECHO = True</code> in the flask config.   <br>\nThis should let you see where it's hanging.    <br>\nI don't really know how to read/interpret pg_* tables.</p>\n<p>A couple random questions: </p>\n<ul>\n<li>What postgres version are you running?   </li>\n<li>What is the rough size of your tables?</li>\n<li>How long did you let it hang for?</li>\n</ul>\n<p>Wish I had a better answer <span aria-label=\"upside down\" class=\"emoji emoji-1f643\" role=\"img\" title=\"upside down\">:upside_down:</span></p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 197276150,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "laurent.direr@gmail.com",
            "sender_full_name": "Laurent Direr (W2'18)",
            "sender_id": 105084,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "Migration hangs when run with `flask db migrate`",
            "submessages": [],
            "timestamp": 1589290569,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/6b5fe2f87b37afbbfe2a6aa4a84b7f97ebd6679f?x=x&version=2",
            "client": "website",
            "content": "<p>Thanks for the suggestions!  I'm attempting the migration again with <code>SQLALCHEMY_ECHO=True</code> in the flask config, but I'm still not seeing anything.</p>\n<ul>\n<li>I have postgres 11 installed.</li>\n<li>My tables aren't big.  I have 20 tables and the biggest one has 15,000 records.  However, the jobs table, which I'm trying to run the migration on, only has 10 records.</li>\n</ul>\n<p>And I let it hang for ten minutes.</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 197365339,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "eileenm@gmail.com",
            "sender_full_name": "Eileen McFarland (she) (SP1'19)",
            "sender_id": 203637,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "Migration hangs when run with `flask db migrate`",
            "submessages": [],
            "timestamp": 1589340279,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/b0d3d1042e23d55075953653f9736863?d=identicon&version=1",
            "client": "ZulipMobile",
            "content": "<p>The SQLALCHEMY_ECHO thing should have printed the SQL queries issued by sqlalchemy to stdout.  <br>\nI might not be up to date on the latest config variable though and it might be Flask-Sqlalchemy which maybe you don't use. Anyway! <br>\nSqlalchemy let's you do that (print sql queries as they are issued) which I find immensely helpful in debugging.</p>\n<p>The migration looks pretty straightforward otherwise so I'm not sure where to look!</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 197366436,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "laurent.direr@gmail.com",
            "sender_full_name": "Laurent Direr (W2'18)",
            "sender_id": 105084,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "Migration hangs when run with `flask db migrate`",
            "submessages": [],
            "timestamp": 1589341976,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/b0d3d1042e23d55075953653f9736863?d=identicon&version=1",
            "client": "website",
            "content": "<p>Looking into it I don't think you should use <code>db.session</code>.    <br>\nI still need to look up the exact reason but it looks like that's what is making it hang.  </p>\n<p>You can do something like:</p>\n<div class=\"codehilite\"><pre><span></span><code>def upgrade():\n    op.drop_constraint(&#39;unique_department_job_order&#39;, &#39;job&#39;, type_=&#39;unique&#39;)\n\n    connection = op.get_bind()\n    Session = sa.orm.sessionmaker()\n    session = Session(bind=connection)\n    # #\n    for department in session.query(Department).all():\n        job_order = 0\n        for job in session.query(Job).filter(sa.and_(Job.department_id == department.id, Job.order.is_(None))).all():\n            job.order = job_order\n            job_order += 1\n    session.commit()\n\n    op.alter_column(&#39;job&#39;, &#39;order&#39;,\n                    existing_type=sa.INTEGER(),\n                    nullable=False)\n</code></pre></div>\n\n\n<p>Also as a side note you might want to re-define your model classes in the migration file as your <code>app.models</code>file will change over time.    <br>\nIf you want the migration to remain the same you should not import them. <br>\nBetter explained here maybe: <a href=\"https://stackoverflow.com/a/45805092/3914041\">https://stackoverflow.com/a/45805092/3914041</a></p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 197369204,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "laurent.direr@gmail.com",
            "sender_full_name": "Laurent Direr (W2'18)",
            "sender_id": 105084,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "Migration hangs when run with `flask db migrate`",
            "submessages": [],
            "timestamp": 1589345909,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/6b5fe2f87b37afbbfe2a6aa4a84b7f97ebd6679f?x=x&version=2",
            "client": "website",
            "content": "<p>Hi <span class=\"user-mention\" data-user-id=\"105084\">@Laurent Direr (W2'18)</span> , I took some time away from this problem because I was busy with NGW and such.  Thank you for your suggestions!</p>\n<p>I tried your suggestion and removed <code>db.session</code>  Using the code that you  posted, it still hangs during the migration.  I just let it hang for six minutes.  I'm going to kill the process and keep trying.</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 197882155,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "eileenm@gmail.com",
            "sender_full_name": "Eileen McFarland (she) (SP1'19)",
            "sender_id": 203637,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "Migration hangs when run with `flask db migrate`",
            "submessages": [],
            "timestamp": 1589767862,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/6b5fe2f87b37afbbfe2a6aa4a84b7f97ebd6679f?x=x&version=2",
            "client": "website",
            "content": "<p><span class=\"user-mention\" data-user-id=\"105084\">@Laurent Direr (W2'18)</span> I wanted to share the happy news that I got my migration to work!  I removed session entirely and used connection instead!  Here's a relevant snippet.</p>\n<div class=\"codehilite\"><pre><span></span><code> connection = op.get_bind()\n    job = table(&#39;jobs&#39;,\n                column(&#39;department_id&#39;, sa.Integer),\n                column(&#39;order&#39;, sa.Integer))\n\n    department = table(&#39;departments&#39;,\n                       column(&#39;id&#39;, sa.Integer),\n                       column(&#39;name&#39;, sa.String))\n.......\n\n    all_depts = connection.execute(department.select()).fetchall()\n    for dept in all_depts:\n        job_order = 0\n        connection.execute(job.update().values({&quot;order&quot;: job_order}).where(sa.and_(job.c.department_id == dept.id, job.c.order.is_(None))))\n</code></pre></div>\n\n\n<p>Thanks for your help.</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 198281268,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "eileenm@gmail.com",
            "sender_full_name": "Eileen McFarland (she) (SP1'19)",
            "sender_id": 203637,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "Migration hangs when run with `flask db migrate`",
            "submessages": [],
            "timestamp": 1590029675,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/b0d3d1042e23d55075953653f9736863?d=identicon&version=1",
            "client": "website",
            "content": "<p>Great, thanks for following up!  <br>\nThe key seems to be that alembic and sqlalchemy open different connections to the database, but I'm not sure why this causes it to hang.   <br>\nWould require more in-depth investigation!</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 198302031,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "laurent.direr@gmail.com",
            "sender_full_name": "Laurent Direr (W2'18)",
            "sender_id": 105084,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "Migration hangs when run with `flask db migrate`",
            "submessages": [],
            "timestamp": 1590053615,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/afcff71a280c619fe7f45af5df2f66b9617479fc?x=x&version=4",
            "client": "website",
            "content": "<p>I've never personally made the design decisions or operated an RDBMS containing binary objects (PDFs, images, GIFs, etc.). </p>\n<p>So far, I believe I've done enough research to understand the various \"blob storage patterns\", and the tradeoffs; namely:</p>\n<ul>\n<li>blobs in the primary store</li>\n<li>blobs in a <em>secondary</em> store (e.g. Postgres primary, and SQLite blob store)</li>\n<li>blobs in a regular file system</li>\n<li>blobs in an object store (e.g. Amazon s3)</li>\n</ul>\n<p>I'm doing a study project where I intend to try out \"blobs in the primary store\", and \"blobs in a secondary store\", just to see how it works. I'm not inclined to do that in a \"production\" scenario, where usage is not bounded. For small-scale apps, with little-ish files, I might opt for the operationally simpler route \"well, just put it all in the DB\".</p>\n<p>However, I'm curious about peoples' lived experiences in real-world applications ... </p>\n<p>Have you ever chosen to store blobs in your production RDBMS? Why? How did that go?</p>\n<hr>\n<p>P.S. My current opinion is informed by:</p>\n<ul>\n<li><a href=\"https://www.microsoft.com/en-us/research/wp-content/uploads/2006/04/tr-2006-45.pdf\">(PDF) To BLOB or Not To BLOB: Large Object Storage in a Database or a Filesystem?</a></li>\n<li><a href=\"https://wiki.postgresql.org/wiki/BinaryFilesInDB\">PG Wiki: Binary Files in DB</a></li>\n<li><a href=\"https://www.cybertec-postgresql.com/en/binary-data-performance-in-postgresql/\">Binary data performance in Postgresql</a></li>\n<li><a href=\"https://www.postgresql.org/message-id/flat/CAC6Op19%3DNG9C61RqwDshhSZkm66Tsp%2BAyK-a5wukY%2B7ApbeDig%40mail.gmail.com#00735b4f6d7d1b65daf4572c8bb36223\">pgsql-general mailing list thread discussing binary object storage</a></li>\n<li><a href=\"https://sqlite.org/appfileformat.html\">SQLite As An Application File Format</a></li>\n<li><a href=\"https://dba.stackexchange.com/a/226464\">this SO user's neat answer to \"Should binary files be stored in the database?\"</a></li>\n</ul>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 201737563,
            "is_me_message": false,
            "last_edit_timestamp": 1592937214,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "aditya.athalye@gmail.com",
            "sender_full_name": "Aditya Athalye (he) (SP1'20)",
            "sender_id": 263547,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "When and why did you choose to store blobs in your RDBMS?",
            "submessages": [],
            "timestamp": 1592924513,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/523da7ab50b368701be60ddf77adff60cc9a7610?x=x&version=3",
            "client": "website",
            "content": "<p>i'm not aware of an rdbms that handles large blobs gracefully, and i'd be interested in hearing about any that are designed to do.</p>\n<p>an approach that worked for me is to store content-addressed blobs on filesystem or s3/b2/gcs, and keep metadata and blob hashes in the db. i learned this from plan9's venti. perkeep and upspin also do this. having blobs content-addressed gives you deduplication for free, and saves you having to write code to handle name clashes and associated corner cases.</p>\n<p>one gotcha for doing this on fs: be careful of max files per directory limitations. a 2-level layout where the first level is the first n-bytes of the hash usually works out. s3-type services don't have this problem.</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 201746490,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "s@aljmz.com",
            "sender_full_name": "Salm\u0101n Aljamm\u0101z (he) (SP1'20)",
            "sender_id": 263563,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "When and why did you choose to store blobs in your RDBMS?",
            "submessages": [],
            "timestamp": 1592928403,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/afcff71a280c619fe7f45af5df2f66b9617479fc?x=x&version=4",
            "client": "website",
            "content": "<p>Thanks for the insight, <span class=\"user-mention\" data-user-id=\"263563\">@Salm\u0101n Aljamm\u0101z (he) (SP1'20)</span> </p>\n<blockquote>\n<p>i'm not aware of an rdbms that handles large blobs gracefully</p>\n</blockquote>\n<p>I saw that --- theoretically --- a Postgres or SQLite field can hold up to 1GB data. I haven't found any practical examples of blobs going into the 100s of MBs or more. All accounts, including yours, warn that big blobs in DB = extreme poor performance. </p>\n<p>I suppose PostGIS <a href=\"https://postgis.net/docs/RT_reference.html\">raster</a> data values can get big-ish, as in 10s of MBs. However, I guess PostGIS would be optimizing the daylights out of their storage use. As far as I can tell PostGIS data types are backed by Postgres's <code>bytea</code> (PG's binary object data type). </p>\n<p>I don't really know, I'm new to all this RDBMS stuff... just feeling my way about. <img alt=\":shruggies:\" class=\"emoji\" src=\"https://zulip-avatars.s3.amazonaws.com/13/emoji/images/1179.png\" title=\"shruggies\"> </p>\n<blockquote>\n<p>an approach that worked for me is to store content-addressed blobs on filesystem or s3/b2/gcs, and keep metadata and blob hashes in the db</p>\n</blockquote>\n<p>Thanks for the CAFS tip. I thought maybe a git-like layout would be nice, but I gave up the idea too soon :)</p>\n<p>I was leaning to the following kind of namespace on local disk (with the hash and filename stored in DB). It's CAFS-enough for my requirement:</p>\n<div class=\"codehilite\"><pre><span></span><code>/path/to/protected_docs/users/USERID/DOC_HASH/name_of_file.(doc|pdf|mp4)\n</code></pre></div>\n\n\n<p>I've used S3 to store application logs and terraform state before, so I'm pretty confident I can make the same scheme work with S3 too. No idea about b2 or gcs though.</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 201760909,
            "is_me_message": false,
            "last_edit_timestamp": 1592937333,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "aditya.athalye@gmail.com",
            "sender_full_name": "Aditya Athalye (he) (SP1'20)",
            "sender_id": 263547,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "When and why did you choose to store blobs in your RDBMS?",
            "submessages": [],
            "timestamp": 1592935566,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/700775c1b9679bb74bd97d4ced91fadf9cc2ed17?x=x&version=2",
            "client": "website",
            "content": "<p>i'm pretty sure that s3 does have issues with lots of files at a single level under the same prefix</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 201761808,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "roland@rolandcrosby.com",
            "sender_full_name": "Roland Crosby (he) (SP2'20)",
            "sender_id": 276197,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "When and why did you choose to store blobs in your RDBMS?",
            "submessages": [],
            "timestamp": 1592936027,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/700775c1b9679bb74bd97d4ced91fadf9cc2ed17?x=x&version=2",
            "client": "website",
            "content": "<p>or at least it's very not graceful if you ever want to enumerate the objects in your bucket</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 201761909,
            "is_me_message": false,
            "reactions": [
                {
                    "emoji_code": "261d",
                    "emoji_name": "point_of_information",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "aditya.athalye@gmail.com",
                        "full_name": "Aditya Athalye (he) (SP1'20)",
                        "id": 263547
                    },
                    "user_id": 263547
                }
            ],
            "recipient_id": 41342,
            "sender_email": "roland@rolandcrosby.com",
            "sender_full_name": "Roland Crosby (he) (SP2'20)",
            "sender_id": 276197,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "When and why did you choose to store blobs in your RDBMS?",
            "submessages": [],
            "timestamp": 1592936064,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/700775c1b9679bb74bd97d4ced91fadf9cc2ed17?x=x&version=2",
            "client": "website",
            "content": "<p>but you can easily get around this with the same strategy you'd use on a regular filesystem, using the first few characters of the hash as part of the prefix</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 201761978,
            "is_me_message": false,
            "reactions": [
                {
                    "emoji_code": "1f44d",
                    "emoji_name": "+1",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "aditya.athalye@gmail.com",
                        "full_name": "Aditya Athalye (he) (SP1'20)",
                        "id": 263547
                    },
                    "user_id": 263547
                }
            ],
            "recipient_id": 41342,
            "sender_email": "roland@rolandcrosby.com",
            "sender_full_name": "Roland Crosby (he) (SP2'20)",
            "sender_id": 276197,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "When and why did you choose to store blobs in your RDBMS?",
            "submessages": [],
            "timestamp": 1592936098,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/afcff71a280c619fe7f45af5df2f66b9617479fc?x=x&version=4",
            "client": "website",
            "content": "<p>So far, I've always bucketed and namespaced data in S3 as if I were doing it on a local disk. Plus my use cases haven't been too large --- low single-digit Terabytes at most, with infrequent reads.</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 201762660,
            "is_me_message": false,
            "last_edit_timestamp": 1592936518,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "aditya.athalye@gmail.com",
            "sender_full_name": "Aditya Athalye (he) (SP1'20)",
            "sender_id": 263547,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "When and why did you choose to store blobs in your RDBMS?",
            "submessages": [],
            "timestamp": 1592936460,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/afcff71a280c619fe7f45af5df2f66b9617479fc?x=x&version=4",
            "client": "website",
            "content": "<p>I don't remember where I got the idea, but my brain is telling me that about a million objects under a prefix is where <code>ls</code> type operations start to become really cumbersome.</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 201763260,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "aditya.athalye@gmail.com",
            "sender_full_name": "Aditya Athalye (he) (SP1'20)",
            "sender_id": 263547,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "When and why did you choose to store blobs in your RDBMS?",
            "submessages": [],
            "timestamp": 1592936734,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/afcff71a280c619fe7f45af5df2f66b9617479fc?x=x&version=4",
            "client": "website",
            "content": "<p>Ah, here's what S3 says about performance optimization <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/optimizing-performance.html\">https://docs.aws.amazon.com/AmazonS3/latest/dev/optimizing-performance.html</a></p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 201763811,
            "is_me_message": false,
            "last_edit_timestamp": 1592937447,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "aditya.athalye@gmail.com",
            "sender_full_name": "Aditya Athalye (he) (SP1'20)",
            "sender_id": 263547,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "When and why did you choose to store blobs in your RDBMS?",
            "submessages": [],
            "timestamp": 1592936997,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/7219fef444d9242d5c96eb33bfe456c37a2df41c?x=x&version=2",
            "client": "ZulipElectron",
            "content": "<p>I'll echo suggestions to use FS/OS; I've worked with teams who ran into really bad performance bottlenecks when using Postgres for BLOB storage. They had opted for DB storage because they had built the service before S3 standardized read-after-write consistency and they were worried about eventual consistency.</p>\n<p>Might be worth looking at <a href=\"https://ceph.io/\">ceph</a>/<a href=\"https://github.com/Alluxio/alluxio\">alluxio</a> and <a href=\"https://github.com/open-io\">OpenIO</a>. I haven't used them personally, but have seen quite a bit of hype in data engineering communities. I've used <a href=\"https://github.com/minio/minio\">MinIO</a> before so that I could have a consistent S3-ish API between my local and production environments, but I think the others might be better options at this point.</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 201774724,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "johnurbanik@gmail.com",
            "sender_full_name": "John Urbanik (he) (S1'20)",
            "sender_id": 303322,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "When and why did you choose to store blobs in your RDBMS?",
            "submessages": [],
            "timestamp": 1592942333,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/c6a4682e6a46285de64c97c77b771481?d=identicon&version=1",
            "client": "website",
            "content": "<blockquote>\n<p>one gotcha for doing this on fs: be careful of max files per directory limitations. a 2-level layout where the first level is the first n-bytes of the hash usually works out. s3-type services don't have this problem.</p>\n</blockquote>\n<p>Note, this is not a problem on most modern file systems as far as I'm aware -- some older ones had O(n) lookups, but modern file systems should all be O(log(n)) or better</p>\n<blockquote>\n<p>i'm pretty sure that s3 does have issues with lots of files at a single level under the same prefix</p>\n</blockquote>\n<p>Correct me if I'm wrong -- but I was under the impression that S3 doesn't actually treat '/' specially, and separating 'directory components' is just a convention.</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 201793115,
            "is_me_message": false,
            "last_edit_timestamp": 1592952017,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "ori@eigenstate.org",
            "sender_full_name": "Ori Dean Bernstein (he) (W2'20)",
            "sender_id": 255045,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "When and why did you choose to store blobs in your RDBMS?",
            "submessages": [],
            "timestamp": 1592951933,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/afcff71a280c619fe7f45af5df2f66b9617479fc?x=x&version=4",
            "client": "website",
            "content": "<p>Thanks for the note, <span class=\"user-mention\" data-user-id=\"303322\">@John Urbanik (he) (S1'20)</span> </p>\n<blockquote>\n<p>I'll echo suggestions to use FS/OS ... ...</p>\n</blockquote>\n<p>Yeah, that's what I'm going to do, even though I think blob-in-primary-db will just work for my use case. Mainly because:</p>\n<ol>\n<li>My collaborators seem to have more operational familiarity with blob-on-disk. And</li>\n<li>To hedge aganist the chance that my analysis is wrong; viz. I'll soon discover we need to store multi-MB blobs instead of 10-to-100KB blobs that I expect currently.</li>\n</ol>\n<blockquote>\n<p>Might be worth looking at ceph/alluxio and OpenIO.  ... ...</p>\n</blockquote>\n<p>So, there's basically zero chance my application will hit \"Internet Scale\", or anything even remotely close to it <span aria-label=\"grinning\" class=\"emoji emoji-1f600\" role=\"img\" title=\"grinning\">:grinning:</span> </p>\n<p>But let's argue that, by some freak chance, it does grow to moderate success --- say hundreds (maybe thousands) of SQL queries per minute, a dozen or so tables, and tens to 100s of GBs of storage (DB + on-disk blobs). Even then, I fully expect to be able to maintain primary storage on a single machine.</p>\n<blockquote>\n<p>they had built the service before S3 standardized read-after-write consistency </p>\n</blockquote>\n<p>Hm, this one's tricky ... S3 guarantees read-after-write <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/Introduction.html#ConsistencyModel\">only under very specific conditions</a>. This is one reason, why I'm not too keen on using s3. But that's secondary. Mainly, I don't want to go over to another service if I can avoid it. \"Local\" disks are just fine.</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 201854271,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "aditya.athalye@gmail.com",
            "sender_full_name": "Aditya Athalye (he) (SP1'20)",
            "sender_id": 263547,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "When and why did you choose to store blobs in your RDBMS?",
            "submessages": [],
            "timestamp": 1593008917,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/afcff71a280c619fe7f45af5df2f66b9617479fc?x=x&version=4",
            "client": "website",
            "content": "<p><span class=\"user-mention silent\" data-user-id=\"255045\">Ori Dean Bernstein (he) (W2'20)</span> <a href=\"#narrow/stream/27213-databases/topic/When.20and.20why.20did.20you.20choose.20to.20store.20blobs.20in.20your.20RDBMS.3F/near/201793115\">said</a>:</p>\n<blockquote>\n<p>Note, this is not a problem on most modern file systems as far as I'm aware -- some older ones had O(n) lookups, but modern file systems should all be O(log(n)) or better</p>\n</blockquote>\n<p>I was arguing with someone about this, and found out that <code>ls</code> can be slow if the directory has &gt; 10^6 files. But this is not a filesystem limitation, it is <code>ls</code> performance. <code>ls -f</code> can remove the bottleneck (list all, but don't sort and don't colourise).</p>\n<blockquote>\n<blockquote>\n<p>i'm pretty sure that s3 does have issues with lots of files at a single level under the same prefix</p>\n</blockquote>\n<p>Correct me if I'm wrong -- but I was under the impression that S3 doesn't actually treat '/' specially, and separating 'directory components' is just a convention.</p>\n</blockquote>\n<p>That is my understanding too... the object keys are just for query convenience. Any slowness people experience with listing objects is quite like the <code>ls</code> problem, but now bottlenecked by a network... If a key groups a million objects, that list is going to take time to travel down to your computer.</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 201857019,
            "is_me_message": false,
            "last_edit_timestamp": 1593011082,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "aditya.athalye@gmail.com",
            "sender_full_name": "Aditya Athalye (he) (SP1'20)",
            "sender_id": 263547,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "When and why did you choose to store blobs in your RDBMS?",
            "submessages": [],
            "timestamp": 1593010069,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/21b9cce736cbbe8e0761bbb33863c7d3112d0136?x=x&version=2",
            "client": "website",
            "content": "<p><span class=\"user-mention\" data-user-id=\"263547\">@Aditya Athalye (he) (SP1'20)</span> FWIW, I would highly suggest not storing data directly on the filesystem. You will wind up having to deal with a bunch of problems that databases normally solve such as:</p>\n<ul>\n<li>backups</li>\n<li>using fsync properly</li>\n<li>concurrency</li>\n</ul>\n<p>If your concern is performance, it looks like <a href=\"https://www.sqlite.org/fasterthanfs.html\">SQLite is faster than the filesystem when working with blobs</a>. This is because SQLite stores all the blobs in a single file which it keeps open as opposed to the filesystem direction which reads and writes to many different files.</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 202025292,
            "is_me_message": false,
            "reactions": [
                {
                    "emoji_code": "1f44d",
                    "emoji_name": "+1",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "stanley@zheng.nyc",
                        "full_name": "Stanley Zheng (they) (W1'19)",
                        "id": 100315
                    },
                    "user_id": 100315
                }
            ],
            "recipient_id": 41342,
            "sender_email": "michaelmalis2@gmail.com",
            "sender_full_name": "Michael Malis (SP2'19)",
            "sender_id": 8099,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "When and why did you choose to store blobs in your RDBMS?",
            "submessages": [],
            "timestamp": 1593119343,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/7219fef444d9242d5c96eb33bfe456c37a2df41c?x=x&version=2",
            "client": "ZulipElectron",
            "content": "<p><span class=\"user-mention\" data-user-id=\"8099\">@Michael Malis (SP2'19)</span> Hmm, I thought I remember seeing that SQLite is only faster than the FS for blobs under ~256kB on most setups, and that memory mapping files may push that crossover point lower. I'll see if I can find a reference, but do you have experience showing otherwise?</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 202027701,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "johnurbanik@gmail.com",
            "sender_full_name": "John Urbanik (he) (S1'20)",
            "sender_id": 303322,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "When and why did you choose to store blobs in your RDBMS?",
            "submessages": [],
            "timestamp": 1593120650,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/21b9cce736cbbe8e0761bbb33863c7d3112d0136?x=x&version=2",
            "client": "website",
            "content": "<p><span class=\"user-mention\" data-user-id=\"303322\">@John Urbanik (he) (S1'20)</span> You may be thinking of <a href=\"https://www.microsoft.com/en-us/research/publication/to-blob-or-not-to-blob-large-object-storage-in-a-database-or-a-filesystem/\">this paper</a> which compared SQL Server and the filesystem and found SQL Server was better for blobs of &lt;256kb. </p>\n<p>Based on what Aditya said, I don't think he needs bleeding edge performance. It seems like you will get comparable performance between SQLite and the filesystem, but if you go with the filesystem, you will have to roll your own DB on top to recreate things SQLite gives you for free.</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 202047211,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "michaelmalis2@gmail.com",
            "sender_full_name": "Michael Malis (SP2'19)",
            "sender_id": 8099,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "When and why did you choose to store blobs in your RDBMS?",
            "submessages": [],
            "timestamp": 1593139177,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/afcff71a280c619fe7f45af5df2f66b9617479fc?x=x&version=4",
            "client": "website",
            "content": "<p><span class=\"user-mention\" data-user-id=\"303322\">@John Urbanik (he) (S1'20)</span> AFAIK, blob performance is not widely researched. I too got the 256KB number, and traced it back to the 2006 paper that <span class=\"user-mention\" data-user-id=\"8099\">@Michael Malis (SP2'19)</span> mentions. The SQLite team also did a related benchmark (my OP links to these and some other resources that discuss the design tradeoffs).</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 202082474,
            "is_me_message": false,
            "last_edit_timestamp": 1593174021,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "aditya.athalye@gmail.com",
            "sender_full_name": "Aditya Athalye (he) (SP1'20)",
            "sender_id": 263547,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "When and why did you choose to store blobs in your RDBMS?",
            "submessages": [],
            "timestamp": 1593174008,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/afcff71a280c619fe7f45af5df2f66b9617479fc?x=x&version=4",
            "client": "website",
            "content": "<p><span class=\"user-mention silent\" data-user-id=\"8099\">Michael Malis (SP2'19)</span> <a href=\"#narrow/stream/27213-databases/topic/When.20and.20why.20did.20you.20choose.20to.20store.20blobs.20in.20your.20RDBMS.3F/near/202025292\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"263547\">Aditya Athalye (he) (SP1'20)</span> FWIW, I would highly suggest not storing data directly on the filesystem. You will wind up having to deal with a bunch of problems that databases normally solve...</p>\n<p>If your concern is performance, it looks like <a href=\"https://www.sqlite.org/fasterthanfs.html\">SQLite is faster than the filesystem when working with blobs</a>.... ....</p>\n</blockquote>\n<p>Thanks for this recommendation! In my research, I found the SQLite solution attractive for the reasons you stated! </p>\n<p>However, it will be simplest to just deal with one DB. I'm going to use Postgres, which---I think---won't even notice my workload (even if I'm 10x wrong about my estimates). </p>\n<p>I haven't been able to make a good argument for \"blobs-in-primary-db\", for our use case. Like, there's a lot of folklore saying \"don't put blobs in DBs\", but not enough hard evidence one way or the other. And the tradeoffs are very different for different cases.</p>\n<p>I guess I should do a proof of concept to get a better sense of this.</p>\n<p>Thanks again, for your recommendation.</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 202086595,
            "is_me_message": false,
            "last_edit_timestamp": 1593179254,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "aditya.athalye@gmail.com",
            "sender_full_name": "Aditya Athalye (he) (SP1'20)",
            "sender_id": 263547,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "When and why did you choose to store blobs in your RDBMS?",
            "submessages": [],
            "timestamp": 1593176650,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/c6a4682e6a46285de64c97c77b771481?d=identicon&version=1",
            "client": "website",
            "content": "<blockquote>\n<p>mm, I thought I remember seeing that SQLite is only faster than the FS for blobs under ~256kB on most setups, </p>\n</blockquote>\n<p>I've experimented with the sqlite benchmarks a few years ago (sadly, lost the code for it), but realized a kind of neat thing: for their benchmark, the bulk of the file system cost was actually walking to the files. Replacing 'open()' with 'openat()' brought them really close for small blobs, leaving the difference in overhead at basically the 2 extra system calls (open()/close()).</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 202112424,
            "is_me_message": false,
            "last_edit_timestamp": 1593188917,
            "reactions": [
                {
                    "emoji_code": "1f44d",
                    "emoji_name": "+1",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "aditya.athalye@gmail.com",
                        "full_name": "Aditya Athalye (he) (SP1'20)",
                        "id": 263547
                    },
                    "user_id": 263547
                }
            ],
            "recipient_id": 41342,
            "sender_email": "ori@eigenstate.org",
            "sender_full_name": "Ori Dean Bernstein (he) (W2'20)",
            "sender_id": 255045,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "When and why did you choose to store blobs in your RDBMS?",
            "submessages": [],
            "timestamp": 1593188890,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/aa00aab2a15eb677ff74f7abf5e2519cdcef19da?x=x&version=2",
            "client": "website",
            "content": "<p>Hi y'all! I'm going to be working on the deploy portion of a distributed database while I'm here. Sounds like some folks are interested in talking about what all that means and how it's done, so I figured I'd start a topic. Here's the link to the repo where I've built the database: <a href=\"https://github.com/btmorr/leifdb\">https://github.com/btmorr/leifdb</a></p>\n<p>There is info, and a bunch of links in the Readme, but I'll also add some info and links here. The problem I'm trying to solve is \"When you have different servers that are supposed to store copies of some information, how do you ensure that their copies are all the same (even as they change over time)?\" It's very difficult, and there are some procedures/algorithms for trying to guarantee it. There's an older one from Leslie Lamport (a famous researcher who wrote a lot of important distributed systems papers) called Paxos, and there's a more recent one that I'm using called Raft. The short Raft paper is here: <a href=\"https://www.usenix.org/system/files/conference/atc14/atc14-paper-ongaro.pdf\">https://www.usenix.org/system/files/conference/atc14/atc14-paper-ongaro.pdf</a></p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 202338601,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "b.toma.morris@gmail.com",
            "sender_full_name": "Toma Morris (they) (m5'20)",
            "sender_id": 314654,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "consensus alorithms",
            "submessages": [],
            "timestamp": 1593449860,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/aa00aab2a15eb677ff74f7abf5e2519cdcef19da?x=x&version=2",
            "client": "website",
            "content": "<p>If anyone is interested, then at 2pm UTC (10am Eastern), <span class=\"user-mention\" data-user-id=\"314648\">@Suhail Patel (he) (m5'20)</span> and I are going to be hanging out and chatting about algorithms such as Raft. Feel free to drop in! (super informal, and no prerequisites or anything)</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 202352110,
            "is_me_message": false,
            "reactions": [
                {
                    "emoji_code": "1f64c",
                    "emoji_name": "praise",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "me@suhailpatel.com",
                        "full_name": "Suhail Patel (he) (m5'20)",
                        "id": 314648
                    },
                    "user_id": 314648
                }
            ],
            "recipient_id": 41342,
            "sender_email": "b.toma.morris@gmail.com",
            "sender_full_name": "Toma Morris (they) (m5'20)",
            "sender_id": 314654,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "consensus alorithms",
            "submessages": [],
            "timestamp": 1593456310,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/e3320e126276138a2347efd87ca2a61bd1ab4016?x=x&version=2",
            "client": "website",
            "content": "<blockquote>\n<p>Have you ever chosen to store blobs in your production RDBMS? Why? How did that go?</p>\n</blockquote>\n<p>At my last job, we did this. Our primary store was MongoDB. The applications supported by the system were read-heavy and well-modeled by document-oriented schema. MongoDB supports large (more than the 16MB document size limit) blob storage through its GridFS system. We found GridFS to be fine for our performance requirements, and it was operationally helpful to not depend on any local filesystems or an additional external service such as S3.</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 202562957,
            "is_me_message": false,
            "last_edit_timestamp": 1593607156,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "dwinston@alum.mit.edu",
            "sender_full_name": "Donny Winston (he) (W1'19)",
            "sender_id": 246979,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "When and why did you choose to store blobs in your RDBMS?",
            "submessages": [],
            "timestamp": 1593607089,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/afcff71a280c619fe7f45af5df2f66b9617479fc?x=x&version=4",
            "client": "website",
            "content": "<p><span class=\"user-mention\" data-user-id=\"246979\">@Donny Winston (he) (W1'19)</span> thanks for sharing!</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 202595162,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "aditya.athalye@gmail.com",
            "sender_full_name": "Aditya Athalye (he) (SP1'20)",
            "sender_id": 263547,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "When and why did you choose to store blobs in your RDBMS?",
            "submessages": [],
            "timestamp": 1593622867,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/aa00aab2a15eb677ff74f7abf5e2519cdcef19da?x=x&version=2",
            "client": "website",
            "content": "<p>Btw, I'm reading up on using erasure codes in Raft to reduce storage and network traffic used without compromising liveness (x-posting here from <a class=\"stream\" data-stream-id=\"26031\" href=\"/#narrow/stream/26031-distributed-systems\">#distributed systems</a>, in case folks here are interested)</p>\n<p><a href=\"#narrow/stream/26031-distributed-systems/topic/Erasure.20codes.20in.20distributed.20systems/near/202808634\">https://recurse.zulipchat.com/#narrow/stream/26031-distributed-systems/topic/Erasure.20codes.20in.20distributed.20systems/near/202808634</a></p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 202808997,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "b.toma.morris@gmail.com",
            "sender_full_name": "Toma Morris (they) (m5'20)",
            "sender_id": 314654,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "consensus alorithms",
            "submessages": [],
            "timestamp": 1593786426,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/200183991cd15d8c08fc2f29cc78fa65e7b2f5ae?x=x&version=4",
            "client": "website",
            "content": "<p>does anyone here have experience with it? are there good hosted options??</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 203345136,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "sory.rawyer@gmail.com",
            "sender_full_name": "Rory Sawyer (he) (SP2'18)",
            "sender_id": 111920,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "couchdb",
            "submessages": [],
            "timestamp": 1594261128,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/200183991cd15d8c08fc2f29cc78fa65e7b2f5ae?x=x&version=4",
            "client": "website",
            "content": "<p>for context: I'm trying to use couch/pouch for an electron application, and am curious to hear user stories about how syncing works</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 203345174,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "sory.rawyer@gmail.com",
            "sender_full_name": "Rory Sawyer (he) (SP2'18)",
            "sender_id": 111920,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "couchdb",
            "submessages": [],
            "timestamp": 1594261170,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/7dc1374e8307c45a20af92a81bd15fc1?d=identicon&version=1",
            "client": "website",
            "content": "<p>Not personal experience, but a friend of mine did a lot of research on DBs that could enable collaborative editing for his  \"tree editor\" and settled on CouchDB+PouchDB is the best option.</p>\n<p>I checked the code repo and it doesn't seem to be implemented yet: <a href=\"https://github.com/gingko/client\">https://github.com/gingko/client</a> <br>\nthis seems to be a relevant library <a href=\"https://github.com/pouchdb-community/pouchdb-replication-stream\">https://github.com/pouchdb-community/pouchdb-replication-stream</a></p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 203599478,
            "is_me_message": false,
            "last_edit_timestamp": 1594479057,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "ivan.savov@gmail.com",
            "sender_full_name": "Ivan Savov (SP2'17)",
            "sender_id": 100772,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "couchdb",
            "submessages": [],
            "timestamp": 1594478678,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/200183991cd15d8c08fc2f29cc78fa65e7b2f5ae?x=x&version=4",
            "client": "ZulipMobile",
            "content": "<p>Thanks! Apparently one of my coworkers contributed to couchdb for a while. He mentioned that cloudant (the IBM hosted option) is probably the best hosted option and has a lot of the couchdb contributors working there</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 203604256,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "sory.rawyer@gmail.com",
            "sender_full_name": "Rory Sawyer (he) (SP2'18)",
            "sender_id": 111920,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "couchdb",
            "submessages": [],
            "timestamp": 1594485963,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/afcff71a280c619fe7f45af5df2f66b9617479fc?x=x&version=4",
            "client": "website",
            "content": "<p>Just came here to say; the book is worth every penny. I wish more such technical literature existed... the struggle of a mind gradually grasping the many facets of the as-yet-unknown.</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 205060057,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "aditya.athalye@gmail.com",
            "sender_full_name": "Aditya Athalye (he) (SP1'20)",
            "sender_id": 263547,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "A Curious Moon",
            "submessages": [],
            "timestamp": 1595784250,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/b2f05ff47bfeb3ef2d5f8690d48a42c4?d=identicon&version=1",
            "client": "ZulipElectron",
            "content": "<p>I'm interested in this too!</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 205066313,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "jacob.vartuli.92@gmail.com",
            "sender_full_name": "Jacob Vartuli-Schonberg (he) (F2'20)",
            "sender_id": 314689,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "A Curious Moon",
            "submessages": [],
            "timestamp": 1595795665,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/b2f05ff47bfeb3ef2d5f8690d48a42c4?d=identicon&version=1",
            "client": "ZulipElectron",
            "content": "<p>(deleted)</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 205066315,
            "is_me_message": false,
            "last_edit_timestamp": 1595795685,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "jacob.vartuli.92@gmail.com",
            "sender_full_name": "Jacob Vartuli-Schonberg (he) (F2'20)",
            "sender_id": 314689,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "A Curious Moon",
            "submessages": [],
            "timestamp": 1595795665,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/e3320e126276138a2347efd87ca2a61bd1ab4016?x=x&version=2",
            "client": "website",
            "content": "<p>I just read it over the last several days following your recommendation, <span class=\"user-mention\" data-user-id=\"263547\">@Aditya Athalye (he) (SP1'20)</span>! Quite exhilarating and hard to put down.</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 205747030,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "dwinston@alum.mit.edu",
            "sender_full_name": "Donny Winston (he) (W1'19)",
            "sender_id": 246979,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "A Curious Moon",
            "submessages": [],
            "timestamp": 1596407867,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/e3320e126276138a2347efd87ca2a61bd1ab4016?x=x&version=2",
            "client": "website",
            "content": "<p>It shares space in my head with Goldratt\u2019s \u201cThe Goal\u201d, another narrative conveyance of technical know-how that I also learned about from a Recurser, <span class=\"user-mention\" data-user-id=\"9489\">@Dan Puttick (he) (W2'20)</span>.</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 205747213,
            "is_me_message": false,
            "reactions": [
                {
                    "emoji_code": "2764",
                    "emoji_name": "heart",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "me@danielputtick.com",
                        "full_name": "Dan Puttick (he) (W2'20)",
                        "id": 9489
                    },
                    "user_id": 9489
                }
            ],
            "recipient_id": 41342,
            "sender_email": "dwinston@alum.mit.edu",
            "sender_full_name": "Donny Winston (he) (W1'19)",
            "sender_id": 246979,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "A Curious Moon",
            "submessages": [],
            "timestamp": 1596408235,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/e3320e126276138a2347efd87ca2a61bd1ab4016?x=x&version=2",
            "client": "website",
            "content": "<p>Any thoughts, first- or second-hand, on <a href=\"https://pragprog.com/titles/pwrdata/\">this book</a>? My goal is \u201cminimum viable experience\u201d with a bunch of database technologies. The idea of content that is more substantial than typical tutorials without going too deep is appealing.</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 205747602,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "dwinston@alum.mit.edu",
            "sender_full_name": "Donny Winston (he) (W1'19)",
            "sender_id": 246979,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "seven databases in seven weeks?",
            "submessages": [],
            "timestamp": 1596408963,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/afcff71a280c619fe7f45af5df2f66b9617479fc?x=x&version=4",
            "client": "website",
            "content": "<p><span class=\"user-mention silent\" data-user-id=\"246979\">Donny Winston (he) (W1'19)</span> <a href=\"#narrow/stream/27213-databases/topic/A.20Curious.20Moon/near/205747030\">said</a>:</p>\n<blockquote>\n<p>I just read it over the last several days following your recommendation, <span class=\"user-mention silent\" data-user-id=\"263547\">Aditya Athalye (he) (SP1'20)</span>! Quite exhilarating and hard to put down.</p>\n</blockquote>\n<p><span class=\"user-mention\" data-user-id=\"246979\">@Donny Winston (he) (W1'19)</span> isn't it?! Happy to know you've enjoyed it! I think the author would love to hear from you. I exchanged a few emails with Rob and he was so delighted to hear from a reader. I've DM'd you his email.</p>\n<p>I got halfway through and decided to go back and code along, because the later chapters really upped the ante for my current understanding.</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 205815744,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "aditya.athalye@gmail.com",
            "sender_full_name": "Aditya Athalye (he) (SP1'20)",
            "sender_id": 263547,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "A Curious Moon",
            "submessages": [],
            "timestamp": 1596472275,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/afcff71a280c619fe7f45af5df2f66b9617479fc?x=x&version=4",
            "client": "website",
            "content": "<p><span class=\"user-mention silent\" data-user-id=\"246979\">Donny Winston (he) (W1'19)</span> <a href=\"#narrow/stream/27213-databases/topic/A.20Curious.20Moon/near/205747213\">said</a>:</p>\n<blockquote>\n<p>It shares space in my head with Goldratt\u2019s \u201cThe Goal\u201d, another narrative conveyance of technical know-how ...</p>\n</blockquote>\n<p>Yes, I too enjoyed Goldratt's books for that reason. I think standard textbooks are good for what they do, however they so often lack complementary reading that adds the all-too-important human factors side of any problem solving activity. For someone starting out on X thing, it really is a whodunit in their head, with all the accompanying ups and downs and tangential frustrations.</p>\n<p>Nothing can substitute the intense process of discovery that a good teacher or dedicated peer can spark. However, absent that stroke of luck, I find books such as The Goal and A Curious Moon can do quite a bit in that direction.</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 205816637,
            "is_me_message": false,
            "last_edit_timestamp": 1596472747,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "aditya.athalye@gmail.com",
            "sender_full_name": "Aditya Athalye (he) (SP1'20)",
            "sender_id": 263547,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "A Curious Moon",
            "submessages": [],
            "timestamp": 1596472691,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/8776bd2d19cdb1399c4e9589d9397d57290e5729?x=x&version=2",
            "client": "ZulipMobile",
            "content": "<p>I just bought this book because of this recommendation, now to make time to read it.</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 205827275,
            "is_me_message": false,
            "reactions": [
                {
                    "emoji_code": "1f419",
                    "emoji_name": "octopus",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "aditya.athalye@gmail.com",
                        "full_name": "Aditya Athalye (he) (SP1'20)",
                        "id": 263547
                    },
                    "user_id": 263547
                }
            ],
            "recipient_id": 41342,
            "sender_email": "shae.erisson@gmail.com",
            "sender_full_name": "Shae Matijs Erisson (he) (F1'19)",
            "sender_id": 221819,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "A Curious Moon",
            "submessages": [],
            "timestamp": 1596478117,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/8f3e3f13689ac077fe4ae537e33bde345a57cb22?x=x&version=2",
            "client": "website",
            "content": "<p>I too have fallen prey to the hype here :)</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 205868295,
            "is_me_message": false,
            "reactions": [
                {
                    "emoji_code": "9129",
                    "emoji_name": "animatedoctopus",
                    "reaction_type": "realm_emoji",
                    "user": {
                        "email": "aditya.athalye@gmail.com",
                        "full_name": "Aditya Athalye (he) (SP1'20)",
                        "id": 263547
                    },
                    "user_id": 263547
                }
            ],
            "recipient_id": 41342,
            "sender_email": "recurse@ardent.nebcorp.com",
            "sender_full_name": "Joe Ardent (he) (SP1'17)",
            "sender_id": 9097,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "A Curious Moon",
            "submessages": [],
            "timestamp": 1596509069,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/6026a80c57f6d1d949cee04bcd1ad817?d=identicon&version=1",
            "client": "website",
            "content": "<p>This is x-posted from <a class=\"stream\" data-stream-id=\"102312\" href=\"/#narrow/stream/102312-consciousness\">#consciousness</a> .</p>\n<p>Here's the scenario: you are building a website (a stretch to imagine, I know). Your website incorporates another third party application that has its own data model. You are deciding whether to have the the 3PA share your website's main database or have its own database. The 3PA has taken the name 'User' for one of its tables. You want to leave the 3PA code untouched.</p>\n<p>Do you:</p>\n<p>1) use one database, renaming your website's user to, say , 'muser' in the database, but use your ORM to map the table 'user' to something like '3PAAdmin' (which more or less describes what it is), and map 'muser' to 'User', so that you have a 'User' object and a 'user' table but they do not refer to the same thing,</p>\n<p>2) use one database, and rename your website's user in the database and in code, so now you have a 'muser' table and a 'Muser' object, and a 'user' table that, to avoid confusion with what would conventionally be called 'User', maps to '3PAAdmin',</p>\n<p>or</p>\n<p>3) use more than one database and absorb some administrative overhead from that, keep a 'user' table and a 'User' object for your website, and have the 'user' table in the second database map to '3PAAdmin' in your code?</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 205976954,
            "is_me_message": false,
            "last_edit_timestamp": 1596588636,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "tiburona@gmail.com",
            "sender_full_name": "Katie Surrence (she) (W2'18)",
            "sender_id": 105443,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "a poll",
            "submessages": [],
            "timestamp": 1596587236,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/8f3e3f13689ac077fe4ae537e33bde345a57cb22?x=x&version=2",
            "client": "website",
            "content": "<p>also, I was wondering how best to read the book, so I looked for an epub reader for emacs, which lead me to <a href=\"https://depp.brause.cc/nov.el/\">nov.el</a>, whose name completely devastated me</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 206065401,
            "is_me_message": false,
            "reactions": [
                {
                    "emoji_code": "14619",
                    "emoji_name": "emacs",
                    "reaction_type": "realm_emoji",
                    "user": {
                        "email": "shae.erisson@gmail.com",
                        "full_name": "Shae Matijs Erisson (he) (F1'19)",
                        "id": 221819
                    },
                    "user_id": 221819
                },
                {
                    "emoji_code": "14619",
                    "emoji_name": "emacs",
                    "reaction_type": "realm_emoji",
                    "user": {
                        "email": "nathanisom27@gmail.com",
                        "full_name": "Nathan Isom (he) (W2'20)",
                        "id": 255190
                    },
                    "user_id": 255190
                },
                {
                    "emoji_code": "14619",
                    "emoji_name": "emacs",
                    "reaction_type": "realm_emoji",
                    "user": {
                        "email": "aditya.athalye@gmail.com",
                        "full_name": "Aditya Athalye (he) (SP1'20)",
                        "id": 263547
                    },
                    "user_id": 263547
                },
                {
                    "emoji_code": "14619",
                    "emoji_name": "emacs",
                    "reaction_type": "realm_emoji",
                    "user": {
                        "email": "dwinston@alum.mit.edu",
                        "full_name": "Donny Winston (he) (W1'19)",
                        "id": 246979
                    },
                    "user_id": 246979
                }
            ],
            "recipient_id": 41342,
            "sender_email": "recurse@ardent.nebcorp.com",
            "sender_full_name": "Joe Ardent (he) (SP1'17)",
            "sender_id": 9097,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "A Curious Moon",
            "submessages": [],
            "timestamp": 1596654618,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/8f3e3f13689ac077fe4ae537e33bde345a57cb22?x=x&version=2",
            "client": "website",
            "content": "<p>it's so clever</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 206065420,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "recurse@ardent.nebcorp.com",
            "sender_full_name": "Joe Ardent (he) (SP1'17)",
            "sender_id": 9097,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "A Curious Moon",
            "submessages": [],
            "timestamp": 1596654631,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/8f3e3f13689ac077fe4ae537e33bde345a57cb22?x=x&version=2",
            "client": "website",
            "content": "<p>it's also a pretty nice experience?</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 206065445,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "recurse@ardent.nebcorp.com",
            "sender_full_name": "Joe Ardent (he) (SP1'17)",
            "sender_id": 9097,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "A Curious Moon",
            "submessages": [],
            "timestamp": 1596654648,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/aa00aab2a15eb677ff74f7abf5e2519cdcef19da?x=x&version=2",
            "client": "website",
            "content": "<p>Not knowing too much about the scenario, I probably lean toward #3, primarily because it's described as a 3rd party <em>application</em> as opposed to a 3rd party library. To expand on that--if it's an application, I would hope that it provides an abstraction layer with access functions so that I'm not interacting with its database directly from my own app, and vice versa. They should be isolated and not care about each other's names. If they need to access each other's underlying data store, in what way is this a separate application?</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 206188886,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "b.toma.morris@gmail.com",
            "sender_full_name": "Toma Morris (they) (m5'20)",
            "sender_id": 314654,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "a poll",
            "submessages": [],
            "timestamp": 1596743732,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/6026a80c57f6d1d949cee04bcd1ad817?d=identicon&version=1",
            "client": "website",
            "content": "<p>It's a third party application.  It's written in another language.  AFAIK (I'm not the person setting this up, just someone who until now has been the primary person setting up the architecture of the original application's backend, and cares about it going forward) the only access they need to have to each other is a foreign key (or other identifier) so that User of the website can be linked to Participant (or something similar) for the 3PA.</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 206315585,
            "is_me_message": false,
            "last_edit_timestamp": 1596838997,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "tiburona@gmail.com",
            "sender_full_name": "Katie Surrence (she) (W2'18)",
            "sender_id": 105443,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "a poll",
            "submessages": [],
            "timestamp": 1596838597,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/aa00aab2a15eb677ff74f7abf5e2519cdcef19da?x=x&version=2",
            "client": "website",
            "content": "<p>Hard to know for sure, but everything you've shared makes me think it's a good idea to encapsulate it as much as possible (so I'm sticking with my vote for  option #3 from your poll)</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 206325770,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "b.toma.morris@gmail.com",
            "sender_full_name": "Toma Morris (they) (m5'20)",
            "sender_id": 314654,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "a poll",
            "submessages": [],
            "timestamp": 1596851062,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/6026a80c57f6d1d949cee04bcd1ad817?d=identicon&version=1",
            "client": "website",
            "content": "<p>thanks!</p>\n<p>My correspondent wants me to add:</p>\n<p>Does it change your judgement at all that the application doesn't come with an abstraction layer?  We have to write that when we want the web application to get information.  It provides a front end (that I think we are embedding in an iframe) and some Java code we don't touch.  It needs a database set up to support this (and so the question is whether to try to namespace them/encapsulate them or have them commingled).</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 206359715,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "tiburona@gmail.com",
            "sender_full_name": "Katie Surrence (she) (W2'18)",
            "sender_id": 105443,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "a poll",
            "submessages": [],
            "timestamp": 1596913100,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/aa00aab2a15eb677ff74f7abf5e2519cdcef19da?x=x&version=2",
            "client": "website",
            "content": "<p>Sometimes making an abstraction layer is a <em>lot</em> of work, especially if you don't want to lose the full expressive power of SQL or the like. But if you're retrieving a single object with a set schema it shouldn't be a big pain (note: \"shouldn't\"--can't make any guarantees). </p>\n<p>One of the biggest reasons I lean this direction is because it keeps things from becoming entangled in a way that makes it hard to change later. A lot of systems that I've worked on have co-mingled 3PA logic and tables for expedience sake, and it works just fine until either (a) the 3PA needs to be upgraded either for security reasons or to get a new feature or fix and it turns out they changed something about the db in the meantime, or (b) you want to swap it out for a different solution, whether 3rd party or building your own.</p>\n<p>Case (a) happens a lot, because developers of these kinds of applications usually consider the db schema to be an implementation detail (not to be used directly), so they'll change it freely as needed for features and fixes, so if you do get at the db directly it becomes a lot more of a hassle to upgrade. If this is limited to your custom abstraction layer, then you'll only have to modify that piece, rather than hope you catch every reference throughout your whole application. </p>\n<p>In case (b), it also helps to have an abstraction layer, as you can usually decide to entirely swap this 3PA out for a completely different one and the only code you have to rewrite is the private methods of the abstraction.</p>\n<p>The thing that would change my mind about going for the expedient (co-mingling) option is actually not really even about tradeoffs for \"better\" architecture. It's about what makes sense for a business. If I was designing this project for a company that was anywhere from series B onward (e.g.: a modestly established startup with a team of more than maybe 4 software engineers), then I would unambiguously say \"take the time to build the abstraction layer\". If I was designing for a tiny startup (1-4 software engineers, haven't gotten a toe-hold in the market yet), then go for the absolute fastest thing you can do, no matter how \"bad\" it is architecturally. If you survive, then you'll have time to clean it up later. If you go slow and don't survive it won't matter how \"good\" your architecture is.</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 206399551,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "b.toma.morris@gmail.com",
            "sender_full_name": "Toma Morris (they) (m5'20)",
            "sender_id": 314654,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "a poll",
            "submessages": [],
            "timestamp": 1596986964,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/6026a80c57f6d1d949cee04bcd1ad817?d=identicon&version=1",
            "client": "website",
            "content": "<p>We're definitely small, and painfully underfunded to the point of endangering the project, but we're not a business; we're academics.  Now that I've heard your thoughts (and those of the people who answered me on <a class=\"stream\" data-stream-id=\"102312\" href=\"/#narrow/stream/102312-consciousness\">#consciousness</a>), I can reveal that <em>I</em> was a strong proponent of 3, or even, as I started to think after reading your other responses, of structuring this 3PA as a microservice with its own server.  I've been arguing with my boss and I did this poll with his permission to demonstrate what I suspected to be true (and appears to be): the larger community of more professionalized developers would not like the commingling.  I'm not exactly a very experienced programmer, but I am more so than my boss (that's just not saying much).  I think one route this project has to survival is interesting open source contributors, and I've been reasoning that it's likelier to do that the fewer frustrating choices we make.</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 206415691,
            "is_me_message": false,
            "last_edit_timestamp": 1597014663,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "tiburona@gmail.com",
            "sender_full_name": "Katie Surrence (she) (W2'18)",
            "sender_id": 105443,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "a poll",
            "submessages": [],
            "timestamp": 1597014373,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/6026a80c57f6d1d949cee04bcd1ad817?d=identicon&version=1",
            "client": "website",
            "content": "<p>(I also just feel visceral distress at, for instance, a code base in which there is a user table and a User object and they are not the same thing, especially when that's a change to code I have set up and tried to make rational.  But I think my visceral distress is not a bad predictor of other people's distress.)</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 206415767,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "tiburona@gmail.com",
            "sender_full_name": "Katie Surrence (she) (W2'18)",
            "sender_id": 105443,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "a poll",
            "submessages": [],
            "timestamp": 1597014584,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/aa00aab2a15eb677ff74f7abf5e2519cdcef19da?x=x&version=2",
            "client": "website",
            "content": "<p>Ok, cool. Glad you were able to get useful feedback from folks!</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 206417321,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "b.toma.morris@gmail.com",
            "sender_full_name": "Toma Morris (they) (m5'20)",
            "sender_id": 314654,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "a poll",
            "submessages": [],
            "timestamp": 1597017127,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/aa00aab2a15eb677ff74f7abf5e2519cdcef19da?x=x&version=2",
            "client": "website",
            "content": "<p>I hope it goes really well, no matter which way you go</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 206417329,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "b.toma.morris@gmail.com",
            "sender_full_name": "Toma Morris (they) (m5'20)",
            "sender_id": 314654,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "a poll",
            "submessages": [],
            "timestamp": 1597017139,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/94a346b8b7e9d9af710e554f113b201887fc9bd6?x=x&version=2",
            "client": "website",
            "content": "<p>Hi! I'm trying to model a mysql database and would like to be able to easily analyze how the data changes over time (so don't want to use audit tables). </p>\n<p>My first thought is to include two fields in each table that hold the date the record was added and the state of the record ie whether it's the current version of the data or historical. Then instead of updating the values, I'd add a duplicate record except with the changes and the states edited. This seems like a lot of unnecessary duplication though, especially of the data that probably won't change or don't need to track. </p>\n<p>Another idea was to hold the values that I'd like to track the changes of in separate tables and only those tables will include the date and state fields plus a foreign key to the table that holds the entity's static values. This option seems like other non time related queries would require a lot of joins. </p>\n<p>Does anyone have any ideas on how to do this most efficiently?</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 207441783,
            "is_me_message": false,
            "last_edit_timestamp": 1597860405,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "pascalemariebell@gmail.com",
            "sender_full_name": "Pascale Bell (she) (S2'20)",
            "sender_id": 316754,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "DB Design for tracking changes over time",
            "submessages": [],
            "timestamp": 1597860391,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/0baa75c82ed02d819be85a4b24b0f4d3?d=identicon&version=1",
            "client": "website",
            "content": "<p>This sounds like what <a href=\"https://www.datomic.com/\">https://www.datomic.com/</a> does. My general understanding is that data is stored with 4 columns: Entity, Attribute, Value, Time (EAVT). I haven't implemented this myself but I'm guessing you can do some kind of <code>select distinct on (attribute) ... group by entity</code> to pull full records out. If your common use case is reading the latest then that could go in as a traditional relation during the same transaction as the EAVT data. You probably want to keep your updated at timestamp and your EAVT time column in sync and then you can use that to query for changes too.</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 207447304,
            "is_me_message": false,
            "reactions": [
                {
                    "emoji_code": "1f4af",
                    "emoji_name": "100",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "pascalemariebell@gmail.com",
                        "full_name": "Pascale Bell (she) (S2'20)",
                        "id": 316754
                    },
                    "user_id": 316754
                }
            ],
            "recipient_id": 41342,
            "sender_email": "mdparker89@gmail.com",
            "sender_full_name": "Matthew Parker (F2'14)",
            "sender_id": 6698,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "DB Design for tracking changes over time",
            "submessages": [],
            "timestamp": 1597863351,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/afcff71a280c619fe7f45af5df2f66b9617479fc?x=x&version=4",
            "client": "website",
            "content": "<p><span class=\"user-mention\" data-user-id=\"316754\">@Pascale Bell (she) (S2'20)</span> Still a bit fringe, but <code>crux</code> could be of interest to you <a href=\"https://opencrux.com/about/what-is-crux.html\">https://opencrux.com/about/what-is-crux.html</a></p>\n<p>Ref: <a href=\"https://juxt.pro/blog/value-of-bitemporality\">The Value of Bitemporality</a></p>\n<p>Copying some parts that I think appear relevant to your design considerations:</p>\n<blockquote>\n<p>Most of us might have coded up the humble database column <code>updated_date</code>, at some point or another, giving us a feeling that data and time are nearly always intrinsically linked in our database designs. Along with <code>updated_date</code>, we may also find ourselves needing <code>created_date</code>, to preserve an immutable record of the row\u2019s origin.<br>\n...<br>\n...<br>\nTemporal databases aim to make our programming lives easier around time, by baking time itself into the engine. One major feature of temporal databases is the ability to query the database as of a particular point in time.</p>\n<p>The SQL:2011 specification gives syntax for this:<br>\nSELECT... AS OF SYSTEM TIME</p>\n<p>To facilitate this, the database itself maintains a transaction time (aka system time) for each transaction, and it is always increasing so that the past is immutable. This allows you to query the database at any point on the transaction time axis, to see what the database looked like in a given point in history.</p>\n<p><code>transaction time</code> is the time at which the database sees incoming data. This gives an inherent audit log, maintaining an immutable history of database transactions.</p>\n</blockquote>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 207492990,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "aditya.athalye@gmail.com",
            "sender_full_name": "Aditya Athalye (he) (SP1'20)",
            "sender_id": 263547,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "DB Design for tracking changes over time",
            "submessages": [],
            "timestamp": 1597905454,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/aa00aab2a15eb677ff74f7abf5e2519cdcef19da?x=x&version=2",
            "client": "website",
            "content": "<p>I'd recommend doing a bit of reading on the \"event sourcing\" pattern, which I think is similar to what you're trying to achieve. One of the core ideas there is that you separate the current state from the history log. When an update comes in, you put a log record in the \"events\" table that includes the id of the record you're updating and a description of the update, and then you update the \"state\" table accordingly. If you want to see how a record got to its current state, you can take the id of the record from the \"state\" table and search in the \"events\" table and see the whole history</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 207550231,
            "is_me_message": false,
            "reactions": [
                {
                    "emoji_code": "1f389",
                    "emoji_name": "tada",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "pascalemariebell@gmail.com",
                        "full_name": "Pascale Bell (she) (S2'20)",
                        "id": 316754
                    },
                    "user_id": 316754
                }
            ],
            "recipient_id": 41342,
            "sender_email": "b.toma.morris@gmail.com",
            "sender_full_name": "Toma Morris (they) (m5'20)",
            "sender_id": 314654,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "DB Design for tracking changes over time",
            "submessages": [],
            "timestamp": 1597944491,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/aa00aab2a15eb677ff74f7abf5e2519cdcef19da?x=x&version=2",
            "client": "website",
            "content": "<p>And then you don't have to update the history table to say whether a record is the current state or not</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 207550268,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "b.toma.morris@gmail.com",
            "sender_full_name": "Toma Morris (they) (m5'20)",
            "sender_id": 314654,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "DB Design for tracking changes over time",
            "submessages": [],
            "timestamp": 1597944514,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/aa00aab2a15eb677ff74f7abf5e2519cdcef19da?x=x&version=2",
            "client": "website",
            "content": "<p>This is the pattern underlying a lot of important systems now. Apache Kafka provides this event stream as it's own application. Database servers and file systems usually also do this (that's what the \"journal\" is for a file system or database)</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 207550397,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "b.toma.morris@gmail.com",
            "sender_full_name": "Toma Morris (they) (m5'20)",
            "sender_id": 314654,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "DB Design for tracking changes over time",
            "submessages": [],
            "timestamp": 1597944594,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/b0d3d1042e23d55075953653f9736863?d=identicon&version=1",
            "client": "website",
            "content": "<p>I have done something similar in the past where we had 2 tables: </p>\n<ul>\n<li>The first table stores the 'current state' of objects, as if we were not doing any history recording.</li>\n<li>The second table is an 'event' table that stores event objects: a timestamp, maybe a source, probably a reference (id, type?) to the object it applies to, and a description of the changes.  <br>\nFor the changes description we used jsonpatch and stored it in a jsonfield.    </li>\n</ul>\n<p>I think jsonpatch was pretty convenient to have a history of changes and be able to re-apply them from scratch to reconstruct the timeline of an object.   <br>\nI'm guessing this is a lot less efficient than what you described (storing historical versions with a flag in the same table as the regular object) since reconstructing the history can take time if there are lots of changes.   <br>\nIt is maybe a good fit if you want something more 'out of the way'.</p>\n<p>PS: After writing all this I wonder if I just described fancy audit tables <span aria-label=\"sweat smile\" class=\"emoji emoji-1f605\" role=\"img\" title=\"sweat smile\">:sweat_smile:</span> ... I'll let you decide if that's useful <span aria-label=\"upside down\" class=\"emoji emoji-1f643\" role=\"img\" title=\"upside down\">:upside_down:</span> !</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 207612673,
            "is_me_message": false,
            "reactions": [
                {
                    "emoji_code": "1f923",
                    "emoji_name": "rolling_on_the_floor_laughing",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "pascalemariebell@gmail.com",
                        "full_name": "Pascale Bell (she) (S2'20)",
                        "id": 316754
                    },
                    "user_id": 316754
                }
            ],
            "recipient_id": 41342,
            "sender_email": "laurent.direr@gmail.com",
            "sender_full_name": "Laurent Direr (W2'18)",
            "sender_id": 105084,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "DB Design for tracking changes over time",
            "submessages": [],
            "timestamp": 1598000490,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/fc9272e3a28bf63ce1ab1a6b7db9b090?d=identicon&version=1",
            "client": "website",
            "content": "<p>If you want to keep things simple and keep using mysql , you might find some inspiration in how <a href=\"https://github.com/paper-trail-gem/paper_trail\">PaperTrail</a> for Rails implements this. They do things similar to the second approach you described in your original post (a separate table for tracking the old versions of a row). There's a <code>Versions</code> table that stores all the old versions of objects in your database. The main columns  of Version are: <code>id, item_type, item_id, event, whodunnit, object_changes, created_at</code></p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 207647262,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "andrew@hyfen.net",
            "sender_full_name": "Andrew Louis (he) (S2'20)",
            "sender_id": 315317,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "DB Design for tracking changes over time",
            "submessages": [],
            "timestamp": 1598023424,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/65d6c64fa1f9d28ab178a7dda4cfb5e3d978dd5e?x=x&version=2",
            "client": "ZulipElectron",
            "content": "<p>Any idea why I'm getting \"panic: dial tcp 127.0.0.1:5432: connect: connection refused\" when connecting a docker container to the locally running postgres?</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 208501534,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "housker@gmail.com",
            "sender_full_name": "Adelle Housker (she) (W2'19)",
            "sender_id": 158595,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "connect docker to postgres",
            "submessages": [],
            "timestamp": 1598817436,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/1bd49962ff0f7e7f3ee603f8243a1015bb6690bd?x=x&version=7",
            "client": "website",
            "content": "<p>Is the postgres running in the host? What OS is the host running in? Not a Docker expert, but I think the default networking setup in a container wouldn't resolve localhost (127.0.0.1) to the same network interface as the host. Reading over the answers here: <a href=\"https://stackoverflow.com/a/24326540\">https://stackoverflow.com/a/24326540</a>, you could try using <code>host.docker.internal</code> as the host in your client's connection string, or using <code>docker run --network=host</code> if on Linux.</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 208504066,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "talyian@gmail.com",
            "sender_full_name": "Jimmy Tang (he) (SP2'20)",
            "sender_id": 276140,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "connect docker to postgres",
            "submessages": [],
            "timestamp": 1598821229,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/aa00aab2a15eb677ff74f7abf5e2519cdcef19da?x=x&version=2",
            "client": "website",
            "content": "<p>What was your <code>docker run</code> command? Did you remember to expose the port (the <code>-p</code> flag)? That's what I usually forget :p</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 208506132,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "b.toma.morris@gmail.com",
            "sender_full_name": "Toma Morris (they) (m5'20)",
            "sender_id": 314654,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "connect docker to postgres",
            "submessages": [],
            "timestamp": 1598824680,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/65d6c64fa1f9d28ab178a7dda4cfb5e3d978dd5e?x=x&version=2",
            "client": "ZulipElectron",
            "content": "<p>Thank you <span class=\"user-mention\" data-user-id=\"276140\">@Jimmy Tang (he) (SP2'20)</span> and <span class=\"user-mention\" data-user-id=\"314654\">@Toma Morris (they) (m5'20)</span> for replying. Using <code>host.docker.internal</code> gave me a new error regarding root, so I specified user in the connection string and those two changes did the trick! Thanks so much for all your help. I searched stack overflow, but Jimmy, your googling skills are superior to mine!</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 208518289,
            "is_me_message": false,
            "reactions": [
                {
                    "emoji_code": "1f389",
                    "emoji_name": "tada",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "b.toma.morris@gmail.com",
                        "full_name": "Toma Morris (they) (m5'20)",
                        "id": 314654
                    },
                    "user_id": 314654
                }
            ],
            "recipient_id": 41342,
            "sender_email": "housker@gmail.com",
            "sender_full_name": "Adelle Housker (she) (W2'19)",
            "sender_id": 158595,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "connect docker to postgres",
            "submessages": [],
            "timestamp": 1598845949,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/5d6a7a4735c43e9dae0e3f9ef82919706728452a?x=x&version=3",
            "client": "website",
            "content": "<p>does anyone have a link to a good explanation of recursive CTEs? i can find a bunch that seem aimed at analysts/etc, but they don't do a very good job explaining things in a way that makes sense given that i already know how recursion works.</p>\n<p>specifically, i don't really get how you can set what the \"base case\" is for a CTE. any tips?</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 212761689,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "me@wesleyac.com",
            "sender_full_name": "Wesley Aptekar-Cassels (they) (m8'20)",
            "sender_id": 101330,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "recursive cte explainer",
            "submessages": [],
            "timestamp": 1602199452,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/6485c74622306264ff53449c6f0ca540?d=identicon&version=1",
            "client": "ZulipMobile",
            "content": "<p>When I did one recently the trick was to put a UNION inside the CTE; one half of the union is the base case and the other half is the recursive case</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 212764058,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "iain@mccoy.id.au",
            "sender_full_name": "Iain McCoy (he) (SP2'17)",
            "sender_id": 100806,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "recursive cte explainer",
            "submessages": [],
            "timestamp": 1602201619,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/1bd49962ff0f7e7f3ee603f8243a1015bb6690bd?x=x&version=7",
            "client": "website",
            "content": "<p>I'm not sure how much variation there is between different implementations, but at least in sqlite it won't allow you to have more than one self-reference, so it seems more useful to compare to an unfold than general recursion. </p>\n<div class=\"codehilite\" data-code-language=\"sqlite3con\"><pre><span></span><code><span class=\"go\">with fibonacci as (</span>\n<span class=\"go\">  select 1 as x, 1 as y</span>\n<span class=\"go\">  union all</span>\n<span class=\"go\">  select y, x + y from fibonacci where x + y &lt; 100</span>\n<span class=\"go\">)</span>\n<span class=\"go\">select group_concat(x) from fibonacci;</span>\n<span class=\"go\">-- 1,1,2,3,5,8,13,21,34,55</span>\n</code></pre></div>\n\n<p>vs</p>\n<div class=\"codehilite\" data-code-language=\"OCaml\"><pre><span></span><code><span class=\"k\">let</span> <span class=\"n\">fibonacci</span> <span class=\"o\">=</span>\n   <span class=\"o\">(</span><span class=\"mi\">1</span><span class=\"o\">,</span> <span class=\"mi\">1</span><span class=\"o\">)</span> <span class=\"o\">|&gt;</span> <span class=\"nn\">Seq</span><span class=\"p\">.</span><span class=\"n\">unfold</span> <span class=\"o\">(</span><span class=\"k\">fun</span> <span class=\"o\">(</span><span class=\"n\">x</span><span class=\"o\">,</span> <span class=\"n\">y</span><span class=\"o\">)</span> <span class=\"o\">-&gt;</span>\n      <span class=\"k\">if</span> <span class=\"n\">x</span> <span class=\"o\">+</span> <span class=\"n\">y</span> <span class=\"o\">&lt;</span> <span class=\"mi\">100</span> <span class=\"k\">then</span> <span class=\"nc\">Some</span><span class=\"o\">(</span><span class=\"n\">x</span><span class=\"o\">,</span> <span class=\"o\">(</span><span class=\"n\">y</span><span class=\"o\">,</span> <span class=\"n\">x</span> <span class=\"o\">+</span> <span class=\"n\">y</span><span class=\"o\">))</span> <span class=\"k\">else</span> <span class=\"nc\">None</span>\n   <span class=\"o\">);;</span>\n<span class=\"nn\">List</span><span class=\"p\">.</span><span class=\"n\">of_seq</span> <span class=\"n\">fibonacci</span>\n<span class=\"c\">(* | 1 | 1 | 2 | 3 | 5 | 8 | 13 | 21 | 34 |  *)</span>\n</code></pre></div>\n\n<p>Not exactly the same, since sql operates on the whole cte/table at a time rather than a row at a time, but you could fix up the other example to match with some amount of <code>flatten</code>-ing</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 212850518,
            "is_me_message": false,
            "last_edit_timestamp": 1602262735,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "talyian@gmail.com",
            "sender_full_name": "Jimmy Tang (he) (SP2'20)",
            "sender_id": 276140,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "recursive cte explainer",
            "submessages": [],
            "timestamp": 1602262489,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/7530a0eb7a6becf50783ad55094b30af3cd5bd96?x=x&version=2",
            "client": "website",
            "content": "<p>Hi friends, does anybody have thoughts on an efficient / flexible design for a schema for sending messaging among users? And if you have multiple ideas, I'd like thoughts on the pro's and con's of doing it one way or another. For example, you can have a table that has <code>userID, recipientID, timestamp, text</code>. To show User A all of the messages between them and and User B, you'd run one query with User A's ID as the userID and user B as recipient ID, and another query with User B as userID and user A as the recipient ID; you'd then sort by timestamp. Thanks in advance.</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 214775430,
            "is_me_message": false,
            "last_edit_timestamp": 1603839940,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "rekhviasnino@gmail.com",
            "sender_full_name": "Nino Rekhviashvili (she/they) (SP1'19)",
            "sender_id": 203433,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "schema for messaging among users",
            "submessages": [],
            "timestamp": 1603839650,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/e3320e126276138a2347efd87ca2a61bd1ab4016?x=x&version=2",
            "client": "website",
            "content": "<p>That seems nice and simple. Does the system need to support editing messages (and does the edit history need to be viewable)? Does it need to support visibility toggling (e.g. draft vs published)?</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 214837820,
            "is_me_message": false,
            "last_edit_timestamp": 1603892851,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "dwinston@alum.mit.edu",
            "sender_full_name": "Donny Winston (he) (W1'19)",
            "sender_id": 246979,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "schema for messaging among users",
            "submessages": [],
            "timestamp": 1603892824,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/6485c74622306264ff53449c6f0ca540?d=identicon&version=1",
            "client": "website",
            "content": "<p>For one-to-one messaging only, that'll work nicely! You could also do a table of <code>messageID, timestamp, text</code> and another table of user_messages  like <code>messageID, userID</code> where role is sender or recipient. It's kind of cute because you don't need to do one search for recipient and another for sender, but it's less cute when you want to find messages between A and B and you need to find all messages such that both (messageID, A) and (messageID, B) exists. Kind of nice for \"most recent messages that involved you\", though.</p>\n<p>You could also say that messages belong to groups: groups have participants and groups have messages. The one-to-one messaging case turns into a group with two participants. This is probably the one I'd go for, mostly because it has a bunch of nice symmetries and I think most of the likely queries turn out pretty nicely.</p>",
            "content_type": "text/html",
            "display_recipient": "databases",
            "flags": [
                "read",
                "historical"
            ],
            "id": 214920239,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 41342,
            "sender_email": "iain@mccoy.id.au",
            "sender_full_name": "Iain McCoy (he) (SP2'17)",
            "sender_id": 100806,
            "sender_realm_str": "recurse",
            "stream_id": 27213,
            "subject": "schema for messaging among users",
            "submessages": [],
            "timestamp": 1603938780,
            "topic_links": [],
            "type": "stream"
        }
    ],
    "msg": "",
    "result": "success"
}
