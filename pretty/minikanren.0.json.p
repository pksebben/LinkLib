{
    "anchor": 0,
    "found_anchor": false,
    "found_newest": true,
    "found_oldest": true,
    "history_limited": false,
    "messages": [
        {
            "avatar_url": "https://secure.gravatar.com/avatar/57ad6b289d2b066f6497c2c7a542f246?d=identicon&version=1",
            "client": "website",
            "content": "<p>This is a stream for discussion related to relational programming with miniKanren (<a href=\"http://minikanren.org/\" target=\"_blank\" title=\"http://minikanren.org/\">http://minikanren.org/</a>), as well as related topics like Clojure's core.logic library.</p>",
            "content_type": "text/html",
            "display_recipient": "minikanren",
            "flags": [
                "read",
                "historical"
            ],
            "id": 6491909,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 22681,
            "sender_email": "lindsey@composition.al",
            "sender_full_name": "Lindsey Kuper (she)",
            "sender_id": 2170,
            "sender_realm_str": "recurse",
            "stream_id": 20306,
            "subject": "welcome",
            "submessages": [],
            "timestamp": 1370408602,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/6f331605bee541a4c2c8da37a297786194212c15?x=x&version=2",
            "client": "website",
            "content": "<p>Thanks so much for getting the 2nd edition copies of the reasoned schemer!</p>",
            "content_type": "text/html",
            "display_recipient": "minikanren",
            "flags": [
                "read",
                "historical"
            ],
            "id": 6779703,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 22681,
            "sender_email": "zach.allaun+recurse-zulip@gmail.com",
            "sender_full_name": "Zach Allaun (he) (S'12)",
            "sender_id": 808,
            "sender_realm_str": "recurse",
            "stream_id": 20306,
            "subject": "welcome",
            "submessages": [],
            "timestamp": 1371073466,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/57ad6b289d2b066f6497c2c7a542f246?d=identicon&version=1",
            "client": "website",
            "content": "<p>@<strong>Zach Allaun</strong> not a problem!</p>",
            "content_type": "text/html",
            "display_recipient": "minikanren",
            "flags": [
                "read",
                "historical"
            ],
            "id": 6780272,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 22681,
            "sender_email": "lindsey@composition.al",
            "sender_full_name": "Lindsey Kuper (she)",
            "sender_id": 2170,
            "sender_realm_str": "recurse",
            "stream_id": 20306,
            "subject": "welcome",
            "submessages": [],
            "timestamp": 1371074627,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/eac0aafb77a926e0ef53779ce873a472?d=identicon&version=1",
            "client": "website",
            "content": "<p>Whoa awesome!</p>",
            "content_type": "text/html",
            "display_recipient": "minikanren",
            "flags": [
                "read",
                "historical"
            ],
            "id": 6782341,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 22681,
            "sender_email": "david.nolen@gmail.com",
            "sender_full_name": "David Nolen",
            "sender_id": 931,
            "sender_realm_str": "recurse",
            "stream_id": 20306,
            "subject": "welcome",
            "submessages": [],
            "timestamp": 1371078859,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/3cb0beddd08492887f62491a4c2815ab7b1f181c?x=x&version=1",
            "client": "website",
            "content": "<p>So, just started on TRS, and it seems to be referencing some goals that I can't find core.logic equivalents to: <code>symbolo</code>, <code>numbero</code>, and <code>absento</code>. Is there a list of core.logic goals anywhere, or should I just dive into the source?</p>",
            "content_type": "text/html",
            "display_recipient": "minikanren",
            "flags": [
                "read",
                "historical"
            ],
            "id": 6886043,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 22681,
            "sender_email": "me@thomasboyt.com",
            "sender_full_name": "Thomas Boyt (he) (W'13)",
            "sender_id": 818,
            "sender_realm_str": "recurse",
            "stream_id": 20306,
            "subject": "core.logic",
            "submessages": [],
            "timestamp": 1371330045,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/3cb0beddd08492887f62491a4c2815ab7b1f181c?x=x&version=1",
            "client": "website",
            "content": "<p>(also, I guess TRS calls those \"relations,\" not goals.)</p>",
            "content_type": "text/html",
            "display_recipient": "minikanren",
            "flags": [
                "read",
                "historical"
            ],
            "id": 6886124,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 22681,
            "sender_email": "me@thomasboyt.com",
            "sender_full_name": "Thomas Boyt (he) (W'13)",
            "sender_id": 818,
            "sender_realm_str": "recurse",
            "stream_id": 20306,
            "subject": "core.logic",
            "submessages": [],
            "timestamp": 1371330251,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/57ad6b289d2b066f6497c2c7a542f246?d=identicon&version=1",
            "client": "website",
            "content": "<p>@<strong>Thomas Boyt</strong> I don't know the answer to that one -- try @<strong>dnolen</strong>.</p>\n<p>Those sorts of things, though, would be called relations in core.logic too.  For instance, <code>conso</code>, <code>firsto</code>, and <code>resto</code> are relations in core.logic.  As a rule of thumb, when writing miniKanren or core.logic you can substitute \"relation\" whenever you'd say \"function\" if you were working in a typical functional setting.</p>\n<p>Although, hm -- your comment makes me realize that I'm a little fuzzy on the difference between relations and goals!  ping @<strong>dnolen</strong>...</p>",
            "content_type": "text/html",
            "display_recipient": "minikanren",
            "flags": [
                "read",
                "historical"
            ],
            "id": 6890102,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 22681,
            "sender_email": "lindsey@composition.al",
            "sender_full_name": "Lindsey Kuper (she)",
            "sender_id": 2170,
            "sender_realm_str": "recurse",
            "stream_id": 20306,
            "subject": "core.logic",
            "submessages": [],
            "timestamp": 1371341175,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/eac0aafb77a926e0ef53779ce873a472?d=identicon&version=1",
            "client": "website",
            "content": "<p>@<strong>Thomas Boyt</strong> oh yeah, so core.logic doesn't implement those goals from the 2nd edition. I forgot they added somethings - core.logic works best with the 1st edition.</p>",
            "content_type": "text/html",
            "display_recipient": "minikanren",
            "flags": [
                "read",
                "historical"
            ],
            "id": 6892703,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 22681,
            "sender_email": "david.nolen@gmail.com",
            "sender_full_name": "David Nolen",
            "sender_id": 931,
            "sender_realm_str": "recurse",
            "stream_id": 20306,
            "subject": "core.logic",
            "submessages": [],
            "timestamp": 1371348573,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/eac0aafb77a926e0ef53779ce873a472?d=identicon&version=1",
            "client": "website",
            "content": "<p>@<strong>Lindsey Kuper</strong> I tend to use the terms interchangeably - probably because of Will's dissertation.</p>",
            "content_type": "text/html",
            "display_recipient": "minikanren",
            "flags": [
                "read",
                "historical"
            ],
            "id": 6892742,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 22681,
            "sender_email": "david.nolen@gmail.com",
            "sender_full_name": "David Nolen",
            "sender_id": 931,
            "sender_realm_str": "recurse",
            "stream_id": 20306,
            "subject": "core.logic",
            "submessages": [],
            "timestamp": 1371348622,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/57ad6b289d2b066f6497c2c7a542f246?d=identicon&version=1",
            "client": "website",
            "content": "<p>@<strong>dnolen</strong> Hm, so I checked Will's diss, and in in section 3.3 he defines \"goal\" this way:</p>\n<p>\"A goal g is a function that maps a substitution s to an ordered sequence of zero or<br>\nmore values\u2014these values are almost always substitutions.\"</p>\n<p>This is a very internals-of-mK way to think about things.  When writing mK code, you aren't explicitly passing a substitution around, and I don't think you should have to think about it (in the same way that you shouldn't have to think about environments when you call eval and in the same way that you shouldn't have to think about hygiene when you use macros).</p>",
            "content_type": "text/html",
            "display_recipient": "minikanren",
            "flags": [
                "read",
                "historical"
            ],
            "id": 6914403,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 22681,
            "sender_email": "lindsey@composition.al",
            "sender_full_name": "Lindsey Kuper (she)",
            "sender_id": 2170,
            "sender_realm_str": "recurse",
            "stream_id": 20306,
            "subject": "core.logic",
            "submessages": [],
            "timestamp": 1371409220,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/eac0aafb77a926e0ef53779ce873a472?d=identicon&version=1",
            "client": "website",
            "content": "<p>@<strong>Lindsey Kuper</strong> I've found in practice users do often need to need to understand the implementation for one reason or another - so I've come to use these words interchangeably. For example, core.logic encourages extending unification as well as hooking into external streams of data (i.e. sources of data besides large conde's).</p>",
            "content_type": "text/html",
            "display_recipient": "minikanren",
            "flags": [
                "read",
                "historical"
            ],
            "id": 6914487,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 22681,
            "sender_email": "david.nolen@gmail.com",
            "sender_full_name": "David Nolen",
            "sender_id": 931,
            "sender_realm_str": "recurse",
            "stream_id": 20306,
            "subject": "core.logic",
            "submessages": [],
            "timestamp": 1371409464,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/57ad6b289d2b066f6497c2c7a542f246?d=identicon&version=1",
            "client": "website",
            "content": "<p>@<strong>dnolen</strong> Yeah, that makes sense.  But the idea of \"relation\" and \"goal\" meaning the same thing just squicks me for some reason, and I never thought about it before.  Maybe I'll ask Will.</p>",
            "content_type": "text/html",
            "display_recipient": "minikanren",
            "flags": [
                "read",
                "historical"
            ],
            "id": 6914535,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 22681,
            "sender_email": "lindsey@composition.al",
            "sender_full_name": "Lindsey Kuper (she)",
            "sender_id": 2170,
            "sender_realm_str": "recurse",
            "stream_id": 20306,
            "subject": "core.logic",
            "submessages": [],
            "timestamp": 1371409650,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/eac0aafb77a926e0ef53779ce873a472?d=identicon&version=1",
            "client": "website",
            "content": "<p>@<strong>Lindsey Kuper</strong> it's probably incorrect when discussing the mK as a language - but core.logic is hackable extensible implementation so I'm not so careful with my terminology.</p>",
            "content_type": "text/html",
            "display_recipient": "minikanren",
            "flags": [
                "read",
                "historical"
            ],
            "id": 6914737,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 22681,
            "sender_email": "david.nolen@gmail.com",
            "sender_full_name": "David Nolen",
            "sender_id": 931,
            "sender_realm_str": "recurse",
            "stream_id": 20306,
            "subject": "core.logic",
            "submessages": [],
            "timestamp": 1371410251,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/57ad6b289d2b066f6497c2c7a542f246?d=identicon&version=1",
            "client": "website",
            "content": "<p>@<strong>dnolen</strong> OK, I emailed Will and cc'd you; maybe that'll clear up matters.  Perhaps conflating \"relation\" and \"goal\" is analogous to conflating \"lambda\" and \"closure\" (which I do all the time)...</p>",
            "content_type": "text/html",
            "display_recipient": "minikanren",
            "flags": [
                "read",
                "historical"
            ],
            "id": 6914897,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 22681,
            "sender_email": "lindsey@composition.al",
            "sender_full_name": "Lindsey Kuper (she)",
            "sender_id": 2170,
            "sender_realm_str": "recurse",
            "stream_id": 20306,
            "subject": "core.logic",
            "submessages": [],
            "timestamp": 1371410699,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/f0ec11be62f8c5fefb9ffe4497c81bac?d=identicon&version=1",
            "client": "website",
            "content": "<p>@<strong>Lindsey Kuper</strong> Speaking of lambdas and closures, how would you describe the difference? I find myself using them interchangeably often (or sometimes using closures when I want to emphasize the closing-over-variables part)</p>",
            "content_type": "text/html",
            "display_recipient": "minikanren",
            "flags": [
                "read",
                "historical"
            ],
            "id": 6917250,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 22681,
            "sender_email": "lfranchi@kde.org",
            "sender_full_name": "Leo Franchi (he) (F'12)",
            "sender_id": 806,
            "sender_realm_str": "recurse",
            "stream_id": 20306,
            "subject": "core.logic",
            "submessages": [],
            "timestamp": 1371416298,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/57ad6b289d2b066f6497c2c7a542f246?d=identicon&version=1",
            "client": "website",
            "content": "<p>@<strong>Leo Franchi</strong> I think it's useful to think of a lambda as a thing that can *produce* a closure.  The lambda is what the programmer writes; the closure is a data structure that is produced when that lambda is interpreted or compiled.  For instance, it might be a record with two fields, \"code\" and \"environment\". </p>",
            "content_type": "text/html",
            "display_recipient": "minikanren",
            "flags": [
                "read",
                "historical"
            ],
            "id": 6917426,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 22681,
            "sender_email": "lindsey@composition.al",
            "sender_full_name": "Lindsey Kuper (she)",
            "sender_id": 2170,
            "sender_realm_str": "recurse",
            "stream_id": 20306,
            "subject": "core.logic",
            "submessages": [],
            "timestamp": 1371416737,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/f0ec11be62f8c5fefb9ffe4497c81bac?d=identicon&version=1",
            "client": "website",
            "content": "<p>Makes sense!</p>",
            "content_type": "text/html",
            "display_recipient": "minikanren",
            "flags": [
                "read",
                "historical"
            ],
            "id": 6917482,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 22681,
            "sender_email": "lfranchi@kde.org",
            "sender_full_name": "Leo Franchi (he) (F'12)",
            "sender_id": 806,
            "sender_realm_str": "recurse",
            "stream_id": 20306,
            "subject": "core.logic",
            "submessages": [],
            "timestamp": 1371416851,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/57ad6b289d2b066f6497c2c7a542f246?d=identicon&version=1",
            "client": "website",
            "content": "<p>But I pretty much conflate the two.  I find that a lot of people are comfortable with one term but scared of the other.  So I use whatever they're comfortable with.  Really, a closure is a lambda but with the environment made explicit, whereas with a lambda you'd have to inspect the program to see what the environment is.</p>",
            "content_type": "text/html",
            "display_recipient": "minikanren",
            "flags": [
                "read",
                "historical"
            ],
            "id": 6917528,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 22681,
            "sender_email": "lindsey@composition.al",
            "sender_full_name": "Lindsey Kuper (she)",
            "sender_id": 2170,
            "sender_realm_str": "recurse",
            "stream_id": 20306,
            "subject": "core.logic",
            "submessages": [],
            "timestamp": 1371416959,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/f0ec11be62f8c5fefb9ffe4497c81bac?d=identicon&version=1",
            "client": "website",
            "content": "<p>Yeah I like that closure implies environment, so I know to \"look\" to see if there are variables it's capturing from the beginning :)</p>",
            "content_type": "text/html",
            "display_recipient": "minikanren",
            "flags": [
                "read",
                "historical"
            ],
            "id": 6917891,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 22681,
            "sender_email": "lfranchi@kde.org",
            "sender_full_name": "Leo Franchi (he) (F'12)",
            "sender_id": 806,
            "sender_realm_str": "recurse",
            "stream_id": 20306,
            "subject": "core.logic",
            "submessages": [],
            "timestamp": 1371417909,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/c5b4e77efa6e623fbd38ca2747865ce7?d=identicon&version=1",
            "client": "website",
            "content": "<p>Has anyone used Racket's Racklog? How does it compare to miniKanren/core.logic? @<strong>Lindsey Kuper</strong> ?</p>",
            "content_type": "text/html",
            "display_recipient": "minikanren",
            "flags": [
                "read",
                "historical"
            ],
            "id": 6918045,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 22681,
            "sender_email": "martin@tornwall.net",
            "sender_full_name": "Martin T\u00f6rnwall (S'13)",
            "sender_id": 2124,
            "sender_realm_str": "recurse",
            "stream_id": 20306,
            "subject": "racklog",
            "submessages": [],
            "timestamp": 1371418289,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/57ad6b289d2b066f6497c2c7a542f246?d=identicon&version=1",
            "client": "website",
            "content": "<p>@<strong>Martin T\u00f6rnwall</strong> Hm, I've never tried racklog.  If you want miniKanren-in-Racket, take a look at <a href=\"https://github.com/miniKanren/Racket-miniKanren\" target=\"_blank\" title=\"https://github.com/miniKanren/Racket-miniKanren\">https://github.com/miniKanren/Racket-miniKanren</a>.</p>",
            "content_type": "text/html",
            "display_recipient": "minikanren",
            "flags": [
                "read",
                "historical"
            ],
            "id": 6918928,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 22681,
            "sender_email": "lindsey@composition.al",
            "sender_full_name": "Lindsey Kuper (she)",
            "sender_id": 2170,
            "sender_realm_str": "recurse",
            "stream_id": 20306,
            "subject": "racklog",
            "submessages": [],
            "timestamp": 1371420374,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/c5b4e77efa6e623fbd38ca2747865ce7?d=identicon&version=1",
            "client": "website",
            "content": "<p>@<strong>Lindsey Kuper</strong> Thanks, I'll take a look!</p>",
            "content_type": "text/html",
            "display_recipient": "minikanren",
            "flags": [
                "read",
                "historical"
            ],
            "id": 6918939,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 22681,
            "sender_email": "martin@tornwall.net",
            "sender_full_name": "Martin T\u00f6rnwall (S'13)",
            "sender_id": 2124,
            "sender_realm_str": "recurse",
            "stream_id": 20306,
            "subject": "racklog",
            "submessages": [],
            "timestamp": 1371420428,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/57ad6b289d2b066f6497c2c7a542f246?d=identicon&version=1",
            "client": "website",
            "content": "<p>@<strong>Thomas Boyt</strong> So here's what Will had to say when I asked about the difference between relations and goals:</p>\n<p>\"Hey Lindsey!</p>\n<p>I use 'relation' to mean a Platonic, mathematical object (a set of tuples), and 'goal' to describe a miniKanren entity (a function mapping a substitution to a stream of substitutions).  (Technically, the expressions (== x y), (fresh (x) g), and (conde [g1 g2] [g3 g4]) are all goal-constructors, which evaluate to goals.)</p>\n<p>An analogy would be a mathematical function, versus a Scheme procedure that computes the value of said function.  Of course, there are Scheme procedures that do not correspond to any mathematical function (think effects).  Similarly, a relation is a concept in pure math, while a miniKanren goal does not necessarily correspond to a relation, or have any clear logical or relational interpretation.  (For example, think of a miniKanren goal that uses project and conde, and makes calls to Scheme's 'eval' function.)</p>\n<p>Does that help?\"</p>",
            "content_type": "text/html",
            "display_recipient": "minikanren",
            "flags": [
                "read",
                "historical"
            ],
            "id": 6924530,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 22681,
            "sender_email": "lindsey@composition.al",
            "sender_full_name": "Lindsey Kuper (she)",
            "sender_id": 2170,
            "sender_realm_str": "recurse",
            "stream_id": 20306,
            "subject": "core.logic",
            "submessages": [],
            "timestamp": 1371434014,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/57ad6b289d2b066f6497c2c7a542f246?d=identicon&version=1",
            "client": "website",
            "content": "<p>Seems legit to me.  Also, that's the reason that Scheme procedures are called \"procedures\" rather than \"functions\".  It's because the authors of the Scheme spec were too pedantic to call something a function if it had the possibility of having side effects or not being total, because those things would make it not fit the mathematical definition of \"function\".  So they say \"procedure\" instead.</p>",
            "content_type": "text/html",
            "display_recipient": "minikanren",
            "flags": [
                "read",
                "historical"
            ],
            "id": 6924587,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 22681,
            "sender_email": "lindsey@composition.al",
            "sender_full_name": "Lindsey Kuper (she)",
            "sender_id": 2170,
            "sender_realm_str": "recurse",
            "stream_id": 20306,
            "subject": "core.logic",
            "submessages": [],
            "timestamp": 1371434159,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/eac0aafb77a926e0ef53779ce873a472?d=identicon&version=1",
            "client": "website",
            "content": "<p>@<strong>Martin T\u00f6rnwall</strong> far as I can tell Racklog is more or less and updated Schelog. From what I've seen it probably has a few more Prolog-ish niceties, but is also missing extensible constraint logic programming facilities.</p>",
            "content_type": "text/html",
            "display_recipient": "minikanren",
            "flags": [
                "read",
                "historical"
            ],
            "id": 6925089,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 22681,
            "sender_email": "david.nolen@gmail.com",
            "sender_full_name": "David Nolen",
            "sender_id": 931,
            "sender_realm_str": "recurse",
            "stream_id": 20306,
            "subject": "racklog",
            "submessages": [],
            "timestamp": 1371435270,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/4140d5654a0f8d10811c31ea9a659a6d?d=identicon&version=1",
            "client": "website",
            "content": "<p>If anyone would like to learn/hack on some miniKanren, I'm hanging in 175</p>",
            "content_type": "text/html",
            "display_recipient": "minikanren",
            "flags": [
                "read",
                "historical"
            ],
            "id": 8304613,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 22681,
            "sender_email": "webyrd@gmail.com",
            "sender_full_name": "Will Byrd",
            "sender_id": 2419,
            "sender_realm_str": "recurse",
            "stream_id": 20306,
            "subject": "(no subject)",
            "submessages": [],
            "timestamp": 1374603271,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/57ad6b289d2b066f6497c2c7a542f246?d=identicon&version=1",
            "client": "website",
            "content": "<p><span class=\"user-mention\" data-user-email=\"david.nolen@gmail.com\">@David Nolen</span>  Hey, I had a quick question -- I'm trying to test some core.logic relations with midje, and it doesn't know what <code>_0</code> means.</p>",
            "content_type": "text/html",
            "display_recipient": "minikanren",
            "flags": [
                "read",
                "historical"
            ],
            "id": 8994067,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 22681,
            "sender_email": "lindsey@composition.al",
            "sender_full_name": "Lindsey Kuper (she)",
            "sender_id": 2170,
            "sender_realm_str": "recurse",
            "stream_id": 20306,
            "subject": "core.logic printing",
            "submessages": [],
            "timestamp": 1376242199,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/eac0aafb77a926e0ef53779ce873a472?d=identicon&version=1",
            "client": "website",
            "content": "<p>(I don't know much about midje or how it works) why does it need to know what <code>_0</code> means?</p>",
            "content_type": "text/html",
            "display_recipient": "minikanren",
            "flags": [
                "read",
                "historical"
            ],
            "id": 8994121,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 22681,
            "sender_email": "david.nolen@gmail.com",
            "sender_full_name": "David Nolen",
            "sender_id": 931,
            "sender_realm_str": "recurse",
            "stream_id": 20306,
            "subject": "core.logic printing",
            "submessages": [],
            "timestamp": 1376242253,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/57ad6b289d2b066f6497c2c7a542f246?d=identicon&version=1",
            "client": "website",
            "content": "<p>For example, here's the test I want to write:</p>\n<p><code>(run* [q] (fresh [u v] (bit-oro u v) (== [u v] q))) =&gt; ([1 _0] [_0 1])</code></p>",
            "content_type": "text/html",
            "display_recipient": "minikanren",
            "flags": [
                "read",
                "historical"
            ],
            "id": 8994126,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 22681,
            "sender_email": "lindsey@composition.al",
            "sender_full_name": "Lindsey Kuper (she)",
            "sender_id": 2170,
            "sender_realm_str": "recurse",
            "stream_id": 20306,
            "subject": "core.logic printing",
            "submessages": [],
            "timestamp": 1376242289,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/57ad6b289d2b066f6497c2c7a542f246?d=identicon&version=1",
            "client": "website",
            "content": "<p>and the error I get is: java.lang.RuntimeException: Unable to resolve symbol: _0 in this context</p>",
            "content_type": "text/html",
            "display_recipient": "minikanren",
            "flags": [
                "read",
                "historical"
            ],
            "id": 8994149,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 22681,
            "sender_email": "lindsey@composition.al",
            "sender_full_name": "Lindsey Kuper (she)",
            "sender_id": 2170,
            "sender_realm_str": "recurse",
            "stream_id": 20306,
            "subject": "core.logic printing",
            "submessages": [],
            "timestamp": 1376242325,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/57ad6b289d2b066f6497c2c7a542f246?d=identicon&version=1",
            "client": "website",
            "content": "<p>(<code>bit-oro</code> is a relation that does bitwise or, as you might be able to tell :) )</p>",
            "content_type": "text/html",
            "display_recipient": "minikanren",
            "flags": [
                "read",
                "historical"
            ],
            "id": 8994178,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 22681,
            "sender_email": "lindsey@composition.al",
            "sender_full_name": "Lindsey Kuper (she)",
            "sender_id": 2170,
            "sender_realm_str": "recurse",
            "stream_id": 20306,
            "subject": "core.logic printing",
            "submessages": [],
            "timestamp": 1376242365,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/eac0aafb77a926e0ef53779ce873a472?d=identicon&version=1",
            "client": "website",
            "content": "<p>oh, you need to quote the list since <code>_0</code> is a symbol. <code>'([1 _0] [_0 1])</code></p>",
            "content_type": "text/html",
            "display_recipient": "minikanren",
            "flags": [
                "read",
                "historical"
            ],
            "id": 8994186,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 22681,
            "sender_email": "david.nolen@gmail.com",
            "sender_full_name": "David Nolen",
            "sender_id": 931,
            "sender_realm_str": "recurse",
            "stream_id": 20306,
            "subject": "core.logic printing",
            "submessages": [],
            "timestamp": 1376242416,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/57ad6b289d2b066f6497c2c7a542f246?d=identicon&version=1",
            "client": "website",
            "content": "<p>oh, right!</p>\n<p>but then I get:</p>\n<p>Expected: ([1 _0] [_0 1])<br>\n      Actual: java.lang.ClassCastException: clojure.lang.PersistentVector cannot be cast to java.lang.Number</p>",
            "content_type": "text/html",
            "display_recipient": "minikanren",
            "flags": [
                "read",
                "historical"
            ],
            "id": 8994229,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 22681,
            "sender_email": "lindsey@composition.al",
            "sender_full_name": "Lindsey Kuper (she)",
            "sender_id": 2170,
            "sender_realm_str": "recurse",
            "stream_id": 20306,
            "subject": "core.logic printing",
            "submessages": [],
            "timestamp": 1376242487,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/eac0aafb77a926e0ef53779ce873a472?d=identicon&version=1",
            "client": "website",
            "content": "<p>can you show me exactly what minimal code is causing this problem?</p>",
            "content_type": "text/html",
            "display_recipient": "minikanren",
            "flags": [
                "read",
                "historical"
            ],
            "id": 8994790,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 22681,
            "sender_email": "david.nolen@gmail.com",
            "sender_full_name": "David Nolen",
            "sender_id": 931,
            "sender_realm_str": "recurse",
            "stream_id": 20306,
            "subject": "core.logic printing",
            "submessages": [],
            "timestamp": 1376244023,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/57ad6b289d2b066f6497c2c7a542f246?d=identicon&version=1",
            "client": "website",
            "content": "<p><span class=\"user-mention\" data-user-email=\"david.nolen@gmail.com\">@David Nolen</span> I'm not sure I can come up with a minimal example right now, but we'll make the repo public when the contest ends (in three hours!) and I'll ask you about it later! :)</p>",
            "content_type": "text/html",
            "display_recipient": "minikanren",
            "flags": [
                "read",
                "historical"
            ],
            "id": 8998769,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 22681,
            "sender_email": "lindsey@composition.al",
            "sender_full_name": "Lindsey Kuper (she)",
            "sender_id": 2170,
            "sender_realm_str": "recurse",
            "stream_id": 20306,
            "subject": "core.logic printing",
            "submessages": [],
            "timestamp": 1376255004,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/eac0aafb77a926e0ef53779ce873a472?d=identicon&version=1",
            "client": "website",
            "content": "<p><span class=\"user-mention\" data-user-email=\"lindsey@composition.al\">@Lindsey Kuper</span> so I don't think that error has anything to do w/ core.logic - it means somewhere you are trying to use a vector as a number.</p>",
            "content_type": "text/html",
            "display_recipient": "minikanren",
            "flags": [
                "read",
                "historical"
            ],
            "id": 8998814,
            "is_me_message": false,
            "last_edit_timestamp": 1376255099,
            "reactions": [],
            "recipient_id": 22681,
            "sender_email": "david.nolen@gmail.com",
            "sender_full_name": "David Nolen",
            "sender_id": 931,
            "sender_realm_str": "recurse",
            "stream_id": 20306,
            "subject": "core.logic printing",
            "submessages": [],
            "timestamp": 1376255086,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/57ad6b289d2b066f6497c2c7a542f246?d=identicon&version=1",
            "client": "website",
            "content": "<p>I don't think it's a core.logic problem either -- the code works like I expected outside of the test framework.</p>",
            "content_type": "text/html",
            "display_recipient": "minikanren",
            "flags": [
                "read",
                "historical"
            ],
            "id": 8998851,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 22681,
            "sender_email": "lindsey@composition.al",
            "sender_full_name": "Lindsey Kuper (she)",
            "sender_id": 2170,
            "sender_realm_str": "recurse",
            "stream_id": 20306,
            "subject": "core.logic printing",
            "submessages": [],
            "timestamp": 1376255167,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/57ad6b289d2b066f6497c2c7a542f246?d=identicon&version=1",
            "client": "website",
            "content": "<p>So maybe I should ask someone who uses midje.  :)</p>",
            "content_type": "text/html",
            "display_recipient": "minikanren",
            "flags": [
                "read",
                "historical"
            ],
            "id": 8998869,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 22681,
            "sender_email": "lindsey@composition.al",
            "sender_full_name": "Lindsey Kuper (she)",
            "sender_id": 2170,
            "sender_realm_str": "recurse",
            "stream_id": 20306,
            "subject": "core.logic printing",
            "submessages": [],
            "timestamp": 1376255207,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/57ad6b289d2b066f6497c2c7a542f246?d=identicon&version=1",
            "client": "website",
            "content": "<p><span class=\"user-mention\" data-user-email=\"david.nolen@gmail.com\">@David Nolen</span> So our code from the ICFP contest is public now, and I can try to ask my question again!  Here's the <code>bit-oro</code> relation: <a href=\"https://github.com/zachallaun/ICFP-2013-contest/blob/master/src/clj/com/hackerschool/icfp_contest_2013/lambda_bv.clj#L105\" target=\"_blank\" title=\"https://github.com/zachallaun/ICFP-2013-contest/blob/master/src/clj/com/hackerschool/icfp_contest_2013/lambda_bv.clj#L105\">https://github.com/zachallaun/ICFP-2013-contest/blob/master/src/clj/com/hackerschool/icfp_contest_2013/lambda_bv.clj#L105</a></p>",
            "content_type": "text/html",
            "display_recipient": "minikanren",
            "flags": [
                "read",
                "historical"
            ],
            "id": 9142533,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 22681,
            "sender_email": "lindsey@composition.al",
            "sender_full_name": "Lindsey Kuper (she)",
            "sender_id": 2170,
            "sender_realm_str": "recurse",
            "stream_id": 20306,
            "subject": "core.logic printing",
            "submessages": [],
            "timestamp": 1376587715,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/eac0aafb77a926e0ef53779ce873a472?d=identicon&version=1",
            "client": "website",
            "content": "<p><span class=\"user-mention\" data-user-email=\"lindsey@composition.al\">@Lindsey Kuper</span> cool! What's the question?</p>",
            "content_type": "text/html",
            "display_recipient": "minikanren",
            "flags": [
                "read",
                "historical"
            ],
            "id": 9142599,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 22681,
            "sender_email": "david.nolen@gmail.com",
            "sender_full_name": "David Nolen",
            "sender_id": 931,
            "sender_realm_str": "recurse",
            "stream_id": 20306,
            "subject": "core.logic printing",
            "submessages": [],
            "timestamp": 1376587811,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/57ad6b289d2b066f6497c2c7a542f246?d=identicon&version=1",
            "client": "website",
            "content": "<p>I can: open lambda_bv.clj in emacs, compile the file, start an nREPL server, go to the appropriate namespace and then do</p>\n<div class=\"codehilite\"><pre><span class=\"nv\">com.hackerschool.icfp-contest-2013.lambda-bv&gt;</span> <span class=\"p\">(</span><span class=\"nf\">run*</span> <span class=\"p\">[</span><span class=\"nv\">q</span><span class=\"p\">]</span> <span class=\"p\">(</span><span class=\"nf\">fresh</span> <span class=\"p\">[</span><span class=\"nv\">u</span> <span class=\"nv\">v</span><span class=\"p\">]</span> <span class=\"p\">(</span><span class=\"nf\">bit-oro</span> <span class=\"nv\">u</span> <span class=\"nv\">v</span><span class=\"p\">)</span> <span class=\"p\">(</span><span class=\"nb\">== </span><span class=\"p\">[</span><span class=\"nv\">u</span> <span class=\"nv\">v</span><span class=\"p\">]</span> <span class=\"nv\">q</span><span class=\"p\">)))</span>\n<span class=\"p\">([</span><span class=\"mi\">1</span> <span class=\"nv\">_0</span><span class=\"p\">]</span> <span class=\"p\">[</span><span class=\"nv\">_0</span> <span class=\"mi\">1</span><span class=\"p\">])</span>\n</pre></div>\n\n\n<p>(edit: fixed highlighting/indentation)</p>\n<p>which is the answer I want!  But when I try to write a midje test...</p>",
            "content_type": "text/html",
            "display_recipient": "minikanren",
            "flags": [
                "read",
                "historical"
            ],
            "id": 9142625,
            "is_me_message": false,
            "last_edit_timestamp": 1376587862,
            "reactions": [],
            "recipient_id": 22681,
            "sender_email": "lindsey@composition.al",
            "sender_full_name": "Lindsey Kuper (she)",
            "sender_id": 2170,
            "sender_realm_str": "recurse",
            "stream_id": 20306,
            "subject": "core.logic printing",
            "submessages": [],
            "timestamp": 1376587833,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/57ad6b289d2b066f6497c2c7a542f246?d=identicon&version=1",
            "client": "website",
            "content": "<p>so I just tried adding </p>\n<div class=\"codehilite\"><pre><span class=\"p\">(</span><span class=\"nf\">fact</span> <span class=\"s\">&quot;about bit-oro&quot;</span>\n  <span class=\"p\">(</span><span class=\"nf\">run*</span> <span class=\"p\">[</span><span class=\"nv\">q</span><span class=\"p\">]</span> <span class=\"p\">(</span><span class=\"nf\">fresh</span> <span class=\"p\">[</span><span class=\"nv\">u</span> <span class=\"nv\">v</span><span class=\"p\">]</span> <span class=\"p\">(</span><span class=\"nf\">bit-oro</span> <span class=\"nv\">u</span> <span class=\"nv\">v</span><span class=\"p\">)</span> <span class=\"p\">(</span><span class=\"nb\">== </span><span class=\"p\">[</span><span class=\"nv\">u</span> <span class=\"nv\">v</span><span class=\"p\">]</span> <span class=\"nv\">q</span><span class=\"p\">)))</span> <span class=\"nv\">=&gt;</span> <span class=\"o\">&#39;</span><span class=\"p\">([</span><span class=\"mi\">1</span> <span class=\"nv\">_0</span><span class=\"p\">]</span> <span class=\"p\">[</span><span class=\"nv\">_0</span> <span class=\"mi\">1</span><span class=\"p\">]))</span>\n</pre></div>\n\n\n<p>to the corresponding test file (<a href=\"https://github.com/zachallaun/ICFP-2013-contest/blob/master/test/com/hackerschool/icfp_contest_2013/t_lambda_bv.clj\" target=\"_blank\" title=\"https://github.com/zachallaun/ICFP-2013-contest/blob/master/test/com/hackerschool/icfp_contest_2013/t_lambda_bv.clj\">https://github.com/zachallaun/ICFP-2013-contest/blob/master/test/com/hackerschool/icfp_contest_2013/t_lambda_bv.clj</a>) and then run <code>lein midje</code>, I get</p>\n<div class=\"codehilite\"><pre>FAIL &quot;about bit-oro&quot; at (t_lambda_bv.clj:13)\n    Expected: ([1 _0] [_0 1])\n      Actual: java.lang.ClassCastException: clojure.lang.PersistentVector cannot be cast to java.lang.Number\n</pre></div>",
            "content_type": "text/html",
            "display_recipient": "minikanren",
            "flags": [
                "read",
                "historical"
            ],
            "id": 9142797,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 22681,
            "sender_email": "lindsey@composition.al",
            "sender_full_name": "Lindsey Kuper (she)",
            "sender_id": 2170,
            "sender_realm_str": "recurse",
            "stream_id": 20306,
            "subject": "core.logic printing",
            "submessages": [],
            "timestamp": 1376588152,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/57ad6b289d2b066f6497c2c7a542f246?d=identicon&version=1",
            "client": "website",
            "content": "<p>so the problem is something to do with midje...maybe <span class=\"user-mention\" data-user-email=\"kevin@keminglabs.com\">@Kevin Lynagh</span> knows what's up?</p>",
            "content_type": "text/html",
            "display_recipient": "minikanren",
            "flags": [
                "read",
                "historical"
            ],
            "id": 9142847,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 22681,
            "sender_email": "lindsey@composition.al",
            "sender_full_name": "Lindsey Kuper (she)",
            "sender_id": 2170,
            "sender_realm_str": "recurse",
            "stream_id": 20306,
            "subject": "core.logic printing",
            "submessages": [],
            "timestamp": 1376588217,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/3670aa0d1ce05f885788e64d3ad6404f7cf73962?x=x&version=1",
            "client": "website",
            "content": "<p>FYI: Kevin's not subscribed to this stream, so I don't think he saw that</p>",
            "content_type": "text/html",
            "display_recipient": "minikanren",
            "flags": [
                "read",
                "historical"
            ],
            "id": 9142991,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 22681,
            "sender_email": "scott@scott.mn",
            "sender_full_name": "Scott Feeney (W'13)",
            "sender_id": 825,
            "sender_realm_str": "recurse",
            "stream_id": 20306,
            "subject": "core.logic printing",
            "submessages": [],
            "timestamp": 1376588524,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/57ad6b289d2b066f6497c2c7a542f246?d=identicon&version=1",
            "client": "website",
            "content": "<p><span class=\"user-mention\" data-user-email=\"scott@scott.mn\">@Scott Feeney</span> oh, thanks</p>",
            "content_type": "text/html",
            "display_recipient": "minikanren",
            "flags": [
                "read",
                "historical"
            ],
            "id": 9143083,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 22681,
            "sender_email": "lindsey@composition.al",
            "sender_full_name": "Lindsey Kuper (she)",
            "sender_id": 2170,
            "sender_realm_str": "recurse",
            "stream_id": 20306,
            "subject": "core.logic printing",
            "submessages": [],
            "timestamp": 1376588711,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/57ad6b289d2b066f6497c2c7a542f246?d=identicon&version=1",
            "client": "website",
            "content": "<p>/me reposts to the ICFP contest stream</p>",
            "content_type": "text/html",
            "display_recipient": "minikanren",
            "flags": [
                "read",
                "historical"
            ],
            "id": 9143094,
            "is_me_message": true,
            "reactions": [],
            "recipient_id": 22681,
            "sender_email": "lindsey@composition.al",
            "sender_full_name": "Lindsey Kuper (she)",
            "sender_id": 2170,
            "sender_realm_str": "recurse",
            "stream_id": 20306,
            "subject": "core.logic printing",
            "submessages": [],
            "timestamp": 1376588748,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/eac0aafb77a926e0ef53779ce873a472?d=identicon&version=1",
            "client": "website",
            "content": "<p><span class=\"user-mention\" data-user-email=\"lindsey@composition.al\">@Lindsey Kuper</span> honestly that looks like midje bug to me and I don't use midje.</p>",
            "content_type": "text/html",
            "display_recipient": "minikanren",
            "flags": [
                "read",
                "historical"
            ],
            "id": 9143148,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 22681,
            "sender_email": "david.nolen@gmail.com",
            "sender_full_name": "David Nolen",
            "sender_id": 931,
            "sender_realm_str": "recurse",
            "stream_id": 20306,
            "subject": "core.logic printing",
            "submessages": [],
            "timestamp": 1376588822,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/57ad6b289d2b066f6497c2c7a542f246?d=identicon&version=1",
            "client": "website",
            "content": "<p><span class=\"user-mention\" data-user-email=\"david.nolen@gmail.com\">@David Nolen</span>  OK, thanks, I thought it might be.  I'll see what Kevin says.</p>",
            "content_type": "text/html",
            "display_recipient": "minikanren",
            "flags": [
                "read",
                "historical"
            ],
            "id": 9143276,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 22681,
            "sender_email": "lindsey@composition.al",
            "sender_full_name": "Lindsey Kuper (she)",
            "sender_id": 2170,
            "sender_realm_str": "recurse",
            "stream_id": 20306,
            "subject": "core.logic printing",
            "submessages": [],
            "timestamp": 1376589110,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/57ad6b289d2b066f6497c2c7a542f246?d=identicon&version=1",
            "client": "website",
            "content": "<p>I'm organizing some photos from last summer, and found these:</p>\n<p>Last summer, a special delivery arrived at Hacker School:<br>\n<a href=\"http://www.flickr.com/photos/lindseykuper/9359576875/in/photostream/\" target=\"_blank\" title=\"http://www.flickr.com/photos/lindseykuper/9359576875/in/photostream/\">http://www.flickr.com/photos/lindseykuper/9359576875/in/photostream/</a><br>\nAnd a few moths were drawn to the flame:<br>\n<a href=\"http://www.flickr.com/photos/lindseykuper/9362353728/in/photostream/\" target=\"_blank\" title=\"http://www.flickr.com/photos/lindseykuper/9362353728/in/photostream/\">http://www.flickr.com/photos/lindseykuper/9362353728/in/photostream/</a></p>\n<p>Thanks to <span class=\"user-mention\" data-user-email=\"ertysdl@gmail.com\">@Erik Seidel (S'13)</span> and <span class=\"user-mention\" data-user-email=\"travis@mcdem.us\">@Travis McDemus (S'13)</span> for allowing themselves to be photographed!</p>",
            "content_type": "text/html",
            "display_recipient": "minikanren",
            "flags": [
                "read",
                "historical"
            ],
            "id": 11408388,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 22681,
            "sender_email": "lindsey@composition.al",
            "sender_full_name": "Lindsey Kuper (she)",
            "sender_id": 2170,
            "sender_realm_str": "recurse",
            "stream_id": 20306,
            "subject": "photos from the last batch",
            "submessages": [],
            "timestamp": 1381723771,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/aba1e26cd3f268ad4224f3522011f17b?d=identicon&version=1",
            "client": "desktop app 0.3.5",
            "content": "<p>I'm trying to test MK with the above environment, I load mk.rkt but it doesn't appear to be enough<br>\n<code>(define succeed (== #f #f))</code> fails for instance</p>",
            "content_type": "text/html",
            "display_recipient": "minikanren",
            "flags": [
                "read",
                "historical"
            ],
            "id": 13010123,
            "is_me_message": false,
            "last_edit_timestamp": 1384881967,
            "reactions": [],
            "recipient_id": 22681,
            "sender_email": "baccou@normalesup.org",
            "sender_full_name": "Pierre-Yves Baccou (F'13)",
            "sender_id": 2865,
            "sender_realm_str": "recurse",
            "stream_id": 20306,
            "subject": "mk + racket +geiser",
            "submessages": [],
            "timestamp": 1384881953,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/aba1e26cd3f268ad4224f3522011f17b?d=identicon&version=1",
            "client": "desktop app 0.3.5",
            "content": "<p>My bad, works if I <code>require</code> instead of  <code>load</code> MK</p>",
            "content_type": "text/html",
            "display_recipient": "minikanren",
            "flags": [
                "read",
                "historical"
            ],
            "id": 13010255,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 22681,
            "sender_email": "baccou@normalesup.org",
            "sender_full_name": "Pierre-Yves Baccou (F'13)",
            "sender_id": 2865,
            "sender_realm_str": "recurse",
            "stream_id": 20306,
            "subject": "mk + racket +geiser",
            "submessages": [],
            "timestamp": 1384882125,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/aba1e26cd3f268ad4224f3522011f17b?d=identicon&version=1",
            "client": "desktop app 0.3.5",
            "content": "<p>I've been looking at alphaKanren but having trouble understanding what it does.<br>\nAt a naive level, I wonder if it's theorically possible to define some semantics for a language and have the system produce a whole interpreter for it.<br>\nIs it the kind of thing that alphaKanren would facilitate?</p>",
            "content_type": "text/html",
            "display_recipient": "minikanren",
            "flags": [
                "read",
                "historical"
            ],
            "id": 13057562,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 22681,
            "sender_email": "baccou@normalesup.org",
            "sender_full_name": "Pierre-Yves Baccou (F'13)",
            "sender_id": 2865,
            "sender_realm_str": "recurse",
            "stream_id": 20306,
            "subject": "alphaKanren",
            "submessages": [],
            "timestamp": 1384965506,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/4140d5654a0f8d10811c31ea9a659a6d?d=identicon&version=1",
            "client": "website",
            "content": "<p>alphaKanren is an implementation of nominal logic programming.  The idea is that variable binding is tricky to handle, so we need built-in support to handle it correctly.  For example, the Scheme expressions (lambda (x) x) and (lambda (y) y) both evaluate to a procedure that returns its argument (that is, the identity function).  We might try unifying quoted lists representing these expressions: (== '(lambda (x) x) '(lambda (y) y)).  However, this will fail in miniKanren, since the expressions are not syntactically equal.  In alphaKanren, we can use *nominal unification*, which understands that syntactically different terms can represent equivalent expressions in Scheme or lambda calculus or first-order logic or differential calculus or whatever.</p>",
            "content_type": "text/html",
            "display_recipient": "minikanren",
            "flags": [
                "read",
                "historical"
            ],
            "id": 13087492,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 22681,
            "sender_email": "webyrd@gmail.com",
            "sender_full_name": "Will Byrd",
            "sender_id": 2419,
            "sender_realm_str": "recurse",
            "stream_id": 20306,
            "subject": "alphaKanren",
            "submessages": [],
            "timestamp": 1385009566,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/4140d5654a0f8d10811c31ea9a659a6d?d=identicon&version=1",
            "client": "website",
            "content": "<p>Implementing the semantics directly is the motivating reason for the existence of miniKanren (although the language has many other users at this point).  I'll show how to implement inference rules for simply typed lambda calculus, and for a simple Scheme interpreter, at tomorrow afternoon's talk.  I won't use nominal logic, but alphaKanren does make certain semantics easier to implement (such as capture-avoiding substitution in lambda calculus).  Alternative approaches to handling variable binding include Higher-Order Abstract Syntax (HOAS) and De Bruijn indices.  MLSOS and Twelf are other systems worth looking at, for implementing semantics directly.</p>",
            "content_type": "text/html",
            "display_recipient": "minikanren",
            "flags": [
                "read",
                "historical"
            ],
            "id": 13087697,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 22681,
            "sender_email": "webyrd@gmail.com",
            "sender_full_name": "Will Byrd",
            "sender_id": 2419,
            "sender_realm_str": "recurse",
            "stream_id": 20306,
            "subject": "alphaKanren",
            "submessages": [],
            "timestamp": 1385009918,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/aba1e26cd3f268ad4224f3522011f17b?d=identicon&version=1",
            "client": "desktop app 0.3.5",
            "content": "<p>Thanks <span class=\"user-mention\" data-user-email=\"webyrd@gmail.com\">@Will Byrd</span> that was really helpful! </p>",
            "content_type": "text/html",
            "display_recipient": "minikanren",
            "flags": [
                "read",
                "historical"
            ],
            "id": 13101437,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 22681,
            "sender_email": "baccou@normalesup.org",
            "sender_full_name": "Pierre-Yves Baccou (F'13)",
            "sender_id": 2865,
            "sender_realm_str": "recurse",
            "stream_id": 20306,
            "subject": "alphaKanren",
            "submessages": [],
            "timestamp": 1385040425,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/543d521918b79ccc96c5c2b00d703622af31e567?x=x&version=1",
            "client": "desktop app 0.3.5",
            "content": "<p>Does anyone know how to unify a logic variable squared with some number, in effect this: <br>\n(== (* x x) 4)<br>\nThat syntax doesn't work.</p>",
            "content_type": "text/html",
            "display_recipient": "minikanren",
            "flags": [
                "read",
                "historical"
            ],
            "id": 13926283,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 22681,
            "sender_email": "jtfmumm@gmail.com",
            "sender_full_name": "John Mumm (F'13)",
            "sender_id": 2862,
            "sender_realm_str": "recurse",
            "stream_id": 20306,
            "subject": "squaring",
            "submessages": [],
            "timestamp": 1386703510,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/6f331605bee541a4c2c8da37a297786194212c15?x=x&version=2",
            "client": "website",
            "content": "<p><span class=\"user-mention\" data-user-email=\"jtfmumm@gmail.com\">@John Mumm (F'13)</span> Well, the problem is that <code>*</code> isn't defined relationally. <code>x</code> might be an unbound logic variable at that point.</p>\n<p>If you don't care about the result being relational, core.logic provides <code>project</code>, which basically replaces a logic variable with its value in a certain context:</p>\n<div class=\"codehilite\"><pre><span class=\"p\">(</span><span class=\"nb\">project </span><span class=\"p\">[</span><span class=\"nv\">x</span><span class=\"p\">]</span>\n  <span class=\"p\">(</span><span class=\"nb\">== </span><span class=\"p\">(</span><span class=\"nb\">* </span><span class=\"nv\">x</span> <span class=\"nv\">x</span><span class=\"p\">)</span> <span class=\"mi\">4</span><span class=\"p\">))</span>\n</pre></div>\n\n\n<p>If you're using actual miniKanren and not core.logic, I'm not sure what you'd do. I'll also add that there's probably a relational way to accomplish this using finite domains. cc <span class=\"user-mention\" data-user-email=\"david.nolen@gmail.com\">@David Nolen</span> </p>",
            "content_type": "text/html",
            "display_recipient": "minikanren",
            "flags": [
                "read",
                "historical"
            ],
            "id": 13927161,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 22681,
            "sender_email": "zach.allaun+recurse-zulip@gmail.com",
            "sender_full_name": "Zach Allaun (he) (S'12)",
            "sender_id": 808,
            "sender_realm_str": "recurse",
            "stream_id": 20306,
            "subject": "squaring",
            "submessages": [],
            "timestamp": 1386704621,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/eac0aafb77a926e0ef53779ce873a472?d=identicon&version=1",
            "client": "website",
            "content": "<p><span class=\"user-mention\" data-user-email=\"zach@hackerschool.com\">@Zach Allaun</span> <span class=\"user-mention\" data-user-email=\"jtfmumm@gmail.com\">@John Mumm (F'13)</span> yes there's no good way to express that relationally in miniKanren w/o resorting to Oleg numbers (which are cool, but crazy). In core.logic you could do something like:</p>\n<div class=\"codehilite\"><pre>(run* [q]\n  (fd/in q (fd/interval 1 10))\n  (fd/* q q 4))\n</pre></div>\n\n\n<p>cKanren looks similar.</p>",
            "content_type": "text/html",
            "display_recipient": "minikanren",
            "flags": [
                "read",
                "historical"
            ],
            "id": 13927236,
            "is_me_message": false,
            "last_edit_timestamp": 1386704824,
            "reactions": [],
            "recipient_id": 22681,
            "sender_email": "david.nolen@gmail.com",
            "sender_full_name": "David Nolen",
            "sender_id": 931,
            "sender_realm_str": "recurse",
            "stream_id": 20306,
            "subject": "squaring",
            "submessages": [],
            "timestamp": 1386704699,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/543d521918b79ccc96c5c2b00d703622af31e567?x=x&version=1",
            "client": "desktop app 0.3.5",
            "content": "<p><span class=\"user-mention\" data-user-email=\"david.nolen@gmail.com\">@David Nolen</span> <span class=\"user-mention\" data-user-email=\"zach@hackerschool.com\">@Zach Allaun</span> Ok, thanks.  I was hoping to use this in a blog post as a relatively simple example of when miniKanren would return multiple solutions.  Diving into Oleg numbers sounds interesting, but probably won't achieve that goal!</p>",
            "content_type": "text/html",
            "display_recipient": "minikanren",
            "flags": [
                "read",
                "historical"
            ],
            "id": 13930513,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 22681,
            "sender_email": "jtfmumm@gmail.com",
            "sender_full_name": "John Mumm (F'13)",
            "sender_id": 2862,
            "sender_realm_str": "recurse",
            "stream_id": 20306,
            "subject": "squaring",
            "submessages": [],
            "timestamp": 1386708724,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/57ad6b289d2b066f6497c2c7a542f246?d=identicon&version=1",
            "client": "website",
            "content": "<p><span class=\"user-mention\" data-user-email=\"jtfmumm@gmail.com\">@John Mumm (F'13)</span> If you just want a simple example of returning multiple solutions, I'd just do an example with <code>conso</code>, where you have some list like <code>(a b c)</code> as the third argument, and then there are various ways to instantiate the first and second.</p>",
            "content_type": "text/html",
            "display_recipient": "minikanren",
            "flags": [
                "read",
                "historical"
            ],
            "id": 13931483,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 22681,
            "sender_email": "lindsey@composition.al",
            "sender_full_name": "Lindsey Kuper (she)",
            "sender_id": 2170,
            "sender_realm_str": "recurse",
            "stream_id": 20306,
            "subject": "squaring",
            "submessages": [],
            "timestamp": 1386709939,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/57ad6b289d2b066f6497c2c7a542f246?d=identicon&version=1",
            "client": "website",
            "content": "<p>Regarding Oleg numbers, they're not actually that bad.  They're just binary numbers, written as lists of 1s and 0s, big-endian style.  So <code>'(0 0 1)</code> is 4, for example.  Where it gets weird is that the arithmetic system built into miniKanren to handle these things is based on hardware ALUs.  Even that isn't so surprising once you see what's going on.  The trouble, I think, was that Oleg wrote the arithmetic system and then handed it over to Will and Dan without explaining that he had written a bunch of code based on hardware adder circuits and so forth.  Will had to stare at it for a long time before he realized that that's what it was.  (<span class=\"user-mention\" data-user-email=\"webyrd@gmail.com\">@Will Byrd</span> can correct me if I have the folklore wrong.) </p>",
            "content_type": "text/html",
            "display_recipient": "minikanren",
            "flags": [
                "read",
                "historical"
            ],
            "id": 13931770,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 22681,
            "sender_email": "lindsey@composition.al",
            "sender_full_name": "Lindsey Kuper (she)",
            "sender_id": 2170,
            "sender_realm_str": "recurse",
            "stream_id": 20306,
            "subject": "squaring",
            "submessages": [],
            "timestamp": 1386710290,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/543d521918b79ccc96c5c2b00d703622af31e567?x=x&version=1",
            "client": "desktop app 0.3.5",
            "content": "<p><span class=\"user-mention\" data-user-email=\"lindsey@composition.al\">@Lindsey Kuper</span> Thanks Lindsey, I think that's a good idea.</p>",
            "content_type": "text/html",
            "display_recipient": "minikanren",
            "flags": [
                "read",
                "historical"
            ],
            "id": 13934955,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 22681,
            "sender_email": "jtfmumm@gmail.com",
            "sender_full_name": "John Mumm (F'13)",
            "sender_id": 2862,
            "sender_realm_str": "recurse",
            "stream_id": 20306,
            "subject": "squaring",
            "submessages": [],
            "timestamp": 1386714012,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/543d521918b79ccc96c5c2b00d703622af31e567?x=x&version=1",
            "client": "desktop app 0.3.5",
            "content": "<p>Re: Oleg numbers: I'm just concerned that introducing binary would be too much cognitive load.  I'm introducing both miniKanren and propositional logic in the post.</p>",
            "content_type": "text/html",
            "display_recipient": "minikanren",
            "flags": [
                "read",
                "historical"
            ],
            "id": 13935005,
            "is_me_message": false,
            "last_edit_timestamp": 1386714124,
            "reactions": [],
            "recipient_id": 22681,
            "sender_email": "jtfmumm@gmail.com",
            "sender_full_name": "John Mumm (F'13)",
            "sender_id": 2862,
            "sender_realm_str": "recurse",
            "stream_id": 20306,
            "subject": "squaring",
            "submessages": [],
            "timestamp": 1386714105,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/57ad6b289d2b066f6497c2c7a542f246?d=identicon&version=1",
            "client": "website",
            "content": "<p><span class=\"user-mention\" data-user-email=\"jtfmumm@gmail.com\">@John Mumm (F'13)</span>  Good call; I don't think you should introduce Oleg numbers in the post either.  I just wanted to say something to reduce the risk of people on Zulip being scared off.  I sort of wish it weren't the done thing to call them \"Oleg numbers\" because that scares the crap out of people.</p>",
            "content_type": "text/html",
            "display_recipient": "minikanren",
            "flags": [
                "read",
                "historical"
            ],
            "id": 13935360,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 22681,
            "sender_email": "lindsey@composition.al",
            "sender_full_name": "Lindsey Kuper (she)",
            "sender_id": 2170,
            "sender_realm_str": "recurse",
            "stream_id": 20306,
            "subject": "squaring",
            "submessages": [],
            "timestamp": 1386714548,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/7a59c708d63d6e411127984a042dfe273ce90e04?x=x&version=1",
            "client": "website",
            "content": "<p>which Scheme works best with <a href=\"https://github.com/miniKanren/miniKanren/\" target=\"_blank\" title=\"https://github.com/miniKanren/miniKanren/\">https://github.com/miniKanren/miniKanren/</a> ? I tried Guile, fiddled around a bit, and I think it's still not working:</p>\n<div class=\"codehilite\"><pre>scheme@(guile-user)&gt; (import (rnrs (6)))\nscheme@(guile-user)&gt; (define (sort proc list) (list-sort proc list))\nscheme@(guile-user)&gt; (load &quot;mk.scm&quot;)\nscheme@(guile-user)&gt; (run* (q) (fresh (p j) (=/= &#39;(lime mango) (p j)) (== (p j) q)))\nERROR: In procedure #(p):\nERROR: Wrong type to apply: #(p)\n\nEntering a new prompt.  Type `,bt&#39; for a backtrace or `,q&#39; to continue.\nscheme@(guile-user) [1]&gt; \n</pre></div>\n\n\n<p>I tried Racket and this repo <a href=\"https://github.com/miniKanren/Racket-miniKanren\" target=\"_blank\" title=\"https://github.com/miniKanren/Racket-miniKanren\">https://github.com/miniKanren/Racket-miniKanren</a> but I think I have the same error as above:</p>\n<div class=\"codehilite\"><pre>&gt; (require &quot;racket-compat.rkt&quot;)\n&gt; (require &quot;mk.rkt&quot;)\n&gt; (run* (q) (fresh (p j) (=/= &#39;(lime mango) (p j)) (== (p j) q)))\napplication: not a procedure;\n expected a procedure that can be applied to arguments\n  given: &#39;#(p)\n  arguments...:\n   &#39;#(j)\n  context...:\n   /Users/aki/source/Racket-miniKanren/mk.rkt:75:7\n   /Users/aki/source/Racket-miniKanren/mk.rkt:88:11\n   /Users/aki/source/Racket-miniKanren/mk.rkt:45:2: take\n   /Applications/Racket v5.3.6/collects/racket/private/misc.rkt:87:7\n&gt; \n</pre></div>\n\n\n<p>the fact that both produce similar errors makes me think I'm doing something pretty wrong. maybe I'm copying out of the Reasoned Schemer incorrectly?</p>",
            "content_type": "text/html",
            "display_recipient": "minikanren",
            "flags": [
                "read",
                "historical"
            ],
            "id": 13947798,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 22681,
            "sender_email": "spacemanaki@gmail.com",
            "sender_full_name": "Aki Yamada (S'13)",
            "sender_id": 2118,
            "sender_realm_str": "recurse",
            "stream_id": 20306,
            "subject": "which scheme? (or: how do I miniKanren)",
            "submessages": [],
            "timestamp": 1386735160,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/aba1e26cd3f268ad4224f3522011f17b?d=identicon&version=1",
            "client": "desktop app 0.3.5",
            "content": "<p>Replace (p j) with (list p j). Tested with Racket<br>\nGenerally, you can't just paste the Reasoned Schemer code into a REPL as it's in fact not exactly Scheme syntax</p>",
            "content_type": "text/html",
            "display_recipient": "minikanren",
            "flags": [
                "read",
                "historical"
            ],
            "id": 13949644,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 22681,
            "sender_email": "baccou@normalesup.org",
            "sender_full_name": "Pierre-Yves Baccou (F'13)",
            "sender_id": 2865,
            "sender_realm_str": "recurse",
            "stream_id": 20306,
            "subject": "which scheme? (or: how do I miniKanren)",
            "submessages": [],
            "timestamp": 1386739113,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/57ad6b289d2b066f6497c2c7a542f246?d=identicon&version=1",
            "client": "website",
            "content": "<p><span class=\"user-mention\" data-user-email=\"spacemanaki@gmail.com\">@Aki Yamada (S'13)</span> The book was written against Chez Scheme/Petite Chez Scheme, and that's what I use.  For the code in <a href=\"https://github.com/miniKanren/miniKanren/\" target=\"_blank\" title=\"https://github.com/miniKanren/miniKanren/\">https://github.com/miniKanren/miniKanren/</a>, you should be fine in Chez or Petite Chez.  However, I think these days <span class=\"user-mention\" data-user-email=\"webyrd@gmail.com\">@Will Byrd</span> uses Vicare Scheme (<a href=\"http://marcomaggi.github.io/vicare.html\" target=\"_blank\" title=\"http://marcomaggi.github.io/vicare.html\">http://marcomaggi.github.io/vicare.html</a>).</p>",
            "content_type": "text/html",
            "display_recipient": "minikanren",
            "flags": [
                "read",
                "historical"
            ],
            "id": 13949807,
            "is_me_message": false,
            "last_edit_timestamp": 1386739540,
            "reactions": [],
            "recipient_id": 22681,
            "sender_email": "lindsey@composition.al",
            "sender_full_name": "Lindsey Kuper (she)",
            "sender_id": 2170,
            "sender_realm_str": "recurse",
            "stream_id": 20306,
            "subject": "which scheme? (or: how do I miniKanren)",
            "submessages": [],
            "timestamp": 1386739516,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/57ad6b289d2b066f6497c2c7a542f246?d=identicon&version=1",
            "client": "website",
            "content": "<p><span class=\"user-mention\" data-user-email=\"baccou@normalesup.org\">@Pierre-Yves Baccou (F'13)</span> What are you referring to by \"not exactly Scheme syntax\"?  Do you just mean the special forms that miniKanren defines, or something else?</p>",
            "content_type": "text/html",
            "display_recipient": "minikanren",
            "flags": [
                "read",
                "historical"
            ],
            "id": 13949864,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 22681,
            "sender_email": "lindsey@composition.al",
            "sender_full_name": "Lindsey Kuper (she)",
            "sender_id": 2170,
            "sender_realm_str": "recurse",
            "stream_id": 20306,
            "subject": "which scheme? (or: how do I miniKanren)",
            "submessages": [],
            "timestamp": 1386739622,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/aba1e26cd3f268ad4224f3522011f17b?d=identicon&version=1",
            "client": "desktop app 0.3.5",
            "content": "<p>I mean they write (p j) when they mean (list p j)  aka `(,p ,j), to make the book easier to read</p>",
            "content_type": "text/html",
            "display_recipient": "minikanren",
            "flags": [
                "read",
                "historical"
            ],
            "id": 13949875,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 22681,
            "sender_email": "baccou@normalesup.org",
            "sender_full_name": "Pierre-Yves Baccou (F'13)",
            "sender_id": 2865,
            "sender_realm_str": "recurse",
            "stream_id": 20306,
            "subject": "which scheme? (or: how do I miniKanren)",
            "submessages": [],
            "timestamp": 1386739678,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/57ad6b289d2b066f6497c2c7a542f246?d=identicon&version=1",
            "client": "website",
            "content": "<p>Oh.  Yeah, that's the typesetting macros trying to \"help\".  I think it's that way in all the Little books.</p>",
            "content_type": "text/html",
            "display_recipient": "minikanren",
            "flags": [
                "read",
                "historical"
            ],
            "id": 13949932,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 22681,
            "sender_email": "lindsey@composition.al",
            "sender_full_name": "Lindsey Kuper (she)",
            "sender_id": 2170,
            "sender_realm_str": "recurse",
            "stream_id": 20306,
            "subject": "which scheme? (or: how do I miniKanren)",
            "submessages": [],
            "timestamp": 1386739800,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/7a59c708d63d6e411127984a042dfe273ce90e04?x=x&version=1",
            "client": "website",
            "content": "<p>thanks <span class=\"user-mention\" data-user-email=\"baccou@normalesup.org\">@Pierre-Yves Baccou (F'13)</span> that worked! I'll also check out chez and/or vicare, thanks <span class=\"user-mention\" data-user-email=\"lindsey@composition.al\">@Lindsey Kuper</span> </p>",
            "content_type": "text/html",
            "display_recipient": "minikanren",
            "flags": [
                "read",
                "historical"
            ],
            "id": 13961130,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 22681,
            "sender_email": "spacemanaki@gmail.com",
            "sender_full_name": "Aki Yamada (S'13)",
            "sender_id": 2118,
            "sender_realm_str": "recurse",
            "stream_id": 20306,
            "subject": "which scheme? (or: how do I miniKanren)",
            "submessages": [],
            "timestamp": 1386765841,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/4140d5654a0f8d10811c31ea9a659a6d?d=identicon&version=1",
            "client": "website",
            "content": "<p>Using Oleg numbers, this becomes (*o x x (build-num 4)).  To avoid the cognitive overhead of Oleg numbers in something like a blog post, I often replace the Oleg numbers with the equivalent arabic numerals, then include a note that I'm using a special representation of natural numbers (little-endian binary lists), and point them to chapters 7 and 8 of The Reasoned Schemer, or to chapter 6 of my dissertation.</p>",
            "content_type": "text/html",
            "display_recipient": "minikanren",
            "flags": [
                "read",
                "historical"
            ],
            "id": 13963865,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 22681,
            "sender_email": "webyrd@gmail.com",
            "sender_full_name": "Will Byrd",
            "sender_id": 2419,
            "sender_realm_str": "recurse",
            "stream_id": 20306,
            "subject": "squaring",
            "submessages": [],
            "timestamp": 1386772010,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/4140d5654a0f8d10811c31ea9a659a6d?d=identicon&version=1",
            "client": "website",
            "content": "<p>Yep, we use implicit quasiquotes and unquotes in the book, as explained in the preface.  It takes a little getting used to, but makes the book much nicer to read (originally the code was a sea of ` and ,'s).  I like Vicare for the most part, although it is a pain to install on OS X.</p>",
            "content_type": "text/html",
            "display_recipient": "minikanren",
            "flags": [
                "read",
                "historical"
            ],
            "id": 13963988,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 22681,
            "sender_email": "webyrd@gmail.com",
            "sender_full_name": "Will Byrd",
            "sender_id": 2419,
            "sender_realm_str": "recurse",
            "stream_id": 20306,
            "subject": "which scheme? (or: how do I miniKanren)",
            "submessages": [],
            "timestamp": 1386772270,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/543d521918b79ccc96c5c2b00d703622af31e567?x=x&version=1",
            "client": "desktop app 0.3.5",
            "content": "<p><span class=\"user-mention\" data-user-email=\"webyrd@gmail.com\">@Will Byrd</span> Thanks for the idea, Will!</p>",
            "content_type": "text/html",
            "display_recipient": "minikanren",
            "flags": [
                "read",
                "historical"
            ],
            "id": 13969997,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 22681,
            "sender_email": "jtfmumm@gmail.com",
            "sender_full_name": "John Mumm (F'13)",
            "sender_id": 2862,
            "sender_realm_str": "recurse",
            "stream_id": 20306,
            "subject": "squaring",
            "submessages": [],
            "timestamp": 1386780719,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/543d521918b79ccc96c5c2b00d703622af31e567?x=x&version=1",
            "client": "desktop app 0.3.5",
            "content": "<p><span class=\"user-mention\" data-user-email=\"lindsey@composition.al\">@Lindsey Kuper</span> Yes, somehow \"Oleg numbers\" sounds impenetrable!</p>",
            "content_type": "text/html",
            "display_recipient": "minikanren",
            "flags": [
                "read",
                "historical"
            ],
            "id": 13970134,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 22681,
            "sender_email": "jtfmumm@gmail.com",
            "sender_full_name": "John Mumm (F'13)",
            "sender_id": 2862,
            "sender_realm_str": "recurse",
            "stream_id": 20306,
            "subject": "squaring",
            "submessages": [],
            "timestamp": 1386780805,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/543d521918b79ccc96c5c2b00d703622af31e567?x=x&version=1",
            "client": "desktop app 0.3.5",
            "content": "<p>I'm trying to set up cKanren for Racket and when I run \"raco setup cKanren\" I get a bad syntax error for define-generics.  Anyone else run into this problem?</p>",
            "content_type": "text/html",
            "display_recipient": "minikanren",
            "flags": [
                "read",
                "historical"
            ],
            "id": 13976060,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 22681,
            "sender_email": "jtfmumm@gmail.com",
            "sender_full_name": "John Mumm (F'13)",
            "sender_id": 2862,
            "sender_realm_str": "recurse",
            "stream_id": 20306,
            "subject": "cKanren",
            "submessages": [],
            "timestamp": 1386788708,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/7a59c708d63d6e411127984a042dfe273ce90e04?x=x&version=1",
            "client": "website",
            "content": "<p><span class=\"user-mention\" data-user-email=\"webyrd@gmail.com\">@Will Byrd</span> oops you're right, re-read the preface and see that now. thanks!</p>",
            "content_type": "text/html",
            "display_recipient": "minikanren",
            "flags": [
                "read",
                "historical"
            ],
            "id": 13992911,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 22681,
            "sender_email": "spacemanaki@gmail.com",
            "sender_full_name": "Aki Yamada (S'13)",
            "sender_id": 2118,
            "sender_realm_str": "recurse",
            "stream_id": 20306,
            "subject": "which scheme? (or: how do I miniKanren)",
            "submessages": [],
            "timestamp": 1386812404,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/4140d5654a0f8d10811c31ea9a659a6d?d=identicon&version=1",
            "client": "website",
            "content": "<p>Hey John!  Claire Alves says you need the latest version of Racket (5.3.6 or whatever).   If you are running the latest version, it may be a bug in the master branch.  Please let me know if it works!</p>",
            "content_type": "text/html",
            "display_recipient": "minikanren",
            "flags": [
                "read",
                "historical"
            ],
            "id": 14043997,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 22681,
            "sender_email": "webyrd@gmail.com",
            "sender_full_name": "Will Byrd",
            "sender_id": 2419,
            "sender_realm_str": "recurse",
            "stream_id": 20306,
            "subject": "cKanren",
            "submessages": [],
            "timestamp": 1386904523,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/3670aa0d1ce05f885788e64d3ad6404f7cf73962?x=x&version=1",
            "client": "website",
            "content": "<p>^ <span class=\"user-mention\" data-user-email=\"jtfmumm@gmail.com\">@John Mumm (F'13)</span></p>",
            "content_type": "text/html",
            "display_recipient": "minikanren",
            "flags": [
                "read",
                "historical"
            ],
            "id": 14044051,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 22681,
            "sender_email": "scott@scott.mn",
            "sender_full_name": "Scott Feeney (W'13)",
            "sender_id": 825,
            "sender_realm_str": "recurse",
            "stream_id": 20306,
            "subject": "cKanren",
            "submessages": [],
            "timestamp": 1386904650,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/4140d5654a0f8d10811c31ea9a659a6d?d=identicon&version=1",
            "client": "website",
            "content": "<p>I think Oleg eventually told us about the hardware aspect, or maybe Ken Shan pointed that out.  Oleg came up with the name 'Kanren', but wouldn't tell us what it meant for the longest time.  I was convinced/hoped it was some unspeakable Russian obscenity.  Turns out it means something like 'relation' in Japanese.  :)</p>",
            "content_type": "text/html",
            "display_recipient": "minikanren",
            "flags": [
                "read",
                "historical"
            ],
            "id": 14044060,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 22681,
            "sender_email": "webyrd@gmail.com",
            "sender_full_name": "Will Byrd",
            "sender_id": 2419,
            "sender_realm_str": "recurse",
            "stream_id": 20306,
            "subject": "squaring",
            "submessages": [],
            "timestamp": 1386904680,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/543d521918b79ccc96c5c2b00d703622af31e567?x=x&version=1",
            "client": "desktop app 0.3.5",
            "content": "<p><span class=\"user-mention\" data-user-email=\"webyrd@gmail.com\">@Will Byrd</span> Hey Will, thanks for the tip.  For whatever reason, I can't seem to get cKanren to work with 5.3.6 either.  I don't know that it's a cKanren problem, since I get a </p>\n<div class=\"codehilite\"><pre>omitted-paths: given directory path is not in any collection root\n</pre></div>\n\n\n<p>error when running \"raco setup cKanren\".  It seems like it might be a raco problem, but I don't know anything about Racket.</p>",
            "content_type": "text/html",
            "display_recipient": "minikanren",
            "flags": [
                "read",
                "historical"
            ],
            "id": 14073861,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 22681,
            "sender_email": "jtfmumm@gmail.com",
            "sender_full_name": "John Mumm (F'13)",
            "sender_id": 2862,
            "sender_realm_str": "recurse",
            "stream_id": 20306,
            "subject": "cKanren",
            "submessages": [],
            "timestamp": 1386963774,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/543d521918b79ccc96c5c2b00d703622af31e567?x=x&version=1",
            "client": "desktop app 0.3.5",
            "content": "<p>I tried looking into it, but couldn't come up with anything.</p>",
            "content_type": "text/html",
            "display_recipient": "minikanren",
            "flags": [
                "read",
                "historical"
            ],
            "id": 14073892,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 22681,
            "sender_email": "jtfmumm@gmail.com",
            "sender_full_name": "John Mumm (F'13)",
            "sender_id": 2862,
            "sender_realm_str": "recurse",
            "stream_id": 20306,
            "subject": "cKanren",
            "submessages": [],
            "timestamp": 1386963830,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/ff22292433214ccd87cf6ff9ae34e54ac477eab8?x=x&version=1",
            "client": "website",
            "content": "<p>N-Lang meetup group is hosting a talk on MiniKanren early next month: <a href=\"http://www.meetup.com/N-Languages-in-N-Months-NYC/events/227228087/\" target=\"_blank\" title=\"http://www.meetup.com/N-Languages-in-N-Months-NYC/events/227228087/\">http://www.meetup.com/N-Languages-in-N-Months-NYC/events/227228087/</a></p>\n<p>Several of us plan to attend as a group, so you should reach out if you care to join us as the date draws near.</p>\n<p>Dave</p>",
            "content_type": "text/html",
            "display_recipient": "minikanren",
            "flags": [
                "read",
                "historical"
            ],
            "id": 55226156,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 22681,
            "sender_email": "ds2643@columbia.edu",
            "sender_full_name": "David Shaked (W2'16)",
            "sender_id": 8995,
            "sender_realm_str": "recurse",
            "stream_id": 20306,
            "subject": "nlang minikanren talk",
            "submessages": [],
            "timestamp": 1459302302,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/dd016afc5e2d346a0eee00bb0268c2b33da824d5?x=x&version=1",
            "client": "website",
            "content": "<p>Might be interested!</p>",
            "content_type": "text/html",
            "display_recipient": "minikanren",
            "flags": [
                "read",
                "historical"
            ],
            "id": 55305317,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 22681,
            "sender_email": "amindfv@gmail.com",
            "sender_full_name": "Tom Murphy (F2'15)",
            "sender_id": 8693,
            "sender_realm_str": "recurse",
            "stream_id": 20306,
            "subject": "nlang minikanren talk",
            "submessages": [],
            "timestamp": 1459392299,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/ff22292433214ccd87cf6ff9ae34e54ac477eab8?x=x&version=1",
            "client": "website",
            "content": "<p>As a reminder, the n-lang meet up group's MiniKanren talk is next Tues (May 3). Those who are interested in joining should meet at 455 Broadway and take the train up to YieldMo as a group.</p>",
            "content_type": "text/html",
            "display_recipient": "minikanren",
            "flags": [
                "read",
                "historical"
            ],
            "id": 56576661,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 22681,
            "sender_email": "ds2643@columbia.edu",
            "sender_full_name": "David Shaked (W2'16)",
            "sender_id": 8995,
            "sender_realm_str": "recurse",
            "stream_id": 20306,
            "subject": "nlang minikanren talk",
            "submessages": [],
            "timestamp": 1461948812,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/4140d5654a0f8d10811c31ea9a659a6d?d=identicon&version=1",
            "client": "website",
            "content": "<p>Hey everyone!  If you are interested in miniKanren or program synthesis, you may be interested in this talk I just gave with Greg Rosenblatt:  <a href=\"https://www.youtube.com/watch?v=er_lLvkklsk\" target=\"_blank\" title=\"https://www.youtube.com/watch?v=er_lLvkklsk\">https://www.youtube.com/watch?v=er_lLvkklsk</a></p>\n<div class=\"youtube-video message_inline_image\"><a data-id=\"er_lLvkklsk\" href=\"https://www.youtube.com/watch?v=er_lLvkklsk\" target=\"_blank\" title=\"https://www.youtube.com/watch?v=er_lLvkklsk\"><img src=\"https://i.ytimg.com/vi/er_lLvkklsk/default.jpg\"></a></div>",
            "content_type": "text/html",
            "display_recipient": "minikanren",
            "flags": [
                "read",
                "historical"
            ],
            "id": 104240268,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 22681,
            "sender_email": "webyrd@gmail.com",
            "sender_full_name": "Will Byrd",
            "sender_id": 2419,
            "sender_realm_str": "recurse",
            "stream_id": 20306,
            "subject": "Barliman talk",
            "submessages": [],
            "timestamp": 1480907598,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/9e0096ad9f376eb9f609372bc87542e4?d=identicon&version=1",
            "client": "website",
            "content": "<p>oh nice, i think i saw a tweet about that and wanted to see it, but i couldn't find it.</p>",
            "content_type": "text/html",
            "display_recipient": "minikanren",
            "flags": [
                "read",
                "historical"
            ],
            "id": 104240590,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 22681,
            "sender_email": "tehgeekmeister@gmail.com",
            "sender_full_name": "Sophie Ren\u00e9e Smithburg (she) (F2'15)",
            "sender_id": 8690,
            "sender_realm_str": "recurse",
            "stream_id": 20306,
            "subject": "Barliman talk",
            "submessages": [],
            "timestamp": 1480908425,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/c21944a6a1d816666759e8c37fbdff15441a590b?x=x&version=1",
            "client": "website",
            "content": "<p>most things in the book are explained eventually, but chapter 4 ends on an unresolved cliffhanger. why exactly is <code>b</code> returned? I thought I'd seen other examples where a variable is successfully constrained to be \"anything but some fixed set of values\", but maybe I'm misremembering, or it requires an extension to the language. is there a better implementation of surpriseo that wouldn't have this problem?</p>\n<div class=\"codehilite\"><pre><span></span>(define surpriseo\n  (lambda (s)\n    (rembero s &#39;(a b c) &#39;(a b c))))\n\n(run* r\n  (== &#39;b r)\n  (surpriseo r))\n\n;; --&gt; (b), which also makes no sense. Please pass the aspirin!\n</pre></div>",
            "content_type": "text/html",
            "display_recipient": "minikanren",
            "flags": [
                "read",
                "historical"
            ],
            "id": 108890140,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 22681,
            "sender_email": "kyle.littler@gmail.com",
            "sender_full_name": "Kyle Littler (F'13)",
            "sender_id": 2857,
            "sender_realm_str": "recurse",
            "stream_id": 20306,
            "subject": "Reasoned Schemer 4:68-72",
            "submessages": [],
            "timestamp": 1490712775,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/c21944a6a1d816666759e8c37fbdff15441a590b?x=x&version=1",
            "client": "website",
            "content": "<p>^^ activating the byrd signal <span class=\"user-mention\" data-user-email=\"webyrd@gmail.com\" data-user-id=\"2419\">@Will Byrd</span></p>",
            "content_type": "text/html",
            "display_recipient": "minikanren",
            "flags": [
                "read",
                "historical"
            ],
            "id": 108890208,
            "is_me_message": false,
            "reactions": [
                {
                    "emoji_code": "1f606",
                    "emoji_name": "laughing",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "scott@scott.mn",
                        "full_name": "Scott Feeney (W'13)",
                        "id": 825
                    },
                    "user_id": 825
                },
                {
                    "emoji_code": "1f44d",
                    "emoji_name": "+1",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "lindsey@composition.al",
                        "full_name": "Lindsey Kuper (she)",
                        "id": 2170
                    },
                    "user_id": 2170
                },
                {
                    "emoji_code": "1f44d",
                    "emoji_name": "+1",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "iain@mccoy.id.au",
                        "full_name": "Iain McCoy (he) (SP2'17)",
                        "id": 100806
                    },
                    "user_id": 100806
                }
            ],
            "recipient_id": 22681,
            "sender_email": "kyle.littler@gmail.com",
            "sender_full_name": "Kyle Littler (F'13)",
            "sender_id": 2857,
            "sender_realm_str": "recurse",
            "stream_id": 20306,
            "subject": "Reasoned Schemer 4:68-72",
            "submessages": [],
            "timestamp": 1490712912,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/4140d5654a0f8d10811c31ea9a659a6d?d=identicon&version=1",
            "client": "website",
            "content": "<p>Good question!  You are probably referring to disequality constraints: (=/= 'foo x) expresses that the variable 'x' cannot be the symbol 'foo.  This does indeed require extension to core miniKanren.  We hope to write a followup book, The Constrained Schemer, that will explain these extensions.  Alas, the implementation of the constraints is rather complex--we've never been able to figure out how to include these constraints within The Reasoned Schemer without doing damage to the \"littleness\" of the book.</p>\n<p>Thanks for the question!  :)</p>",
            "content_type": "text/html",
            "display_recipient": "minikanren",
            "flags": [
                "read",
                "historical"
            ],
            "id": 108914068,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 22681,
            "sender_email": "webyrd@gmail.com",
            "sender_full_name": "Will Byrd",
            "sender_id": 2419,
            "sender_realm_str": "recurse",
            "stream_id": 20306,
            "subject": "Reasoned Schemer 4:68-72",
            "submessages": [],
            "timestamp": 1490756599,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/c21944a6a1d816666759e8c37fbdff15441a590b?x=x&version=1",
            "client": "website",
            "content": "<p>thanks! I also found a relevant section in your thesis focusing on just this question. the approach seemed to be pretty much what I expected from having written a few toy abstract interpreters.</p>",
            "content_type": "text/html",
            "display_recipient": "minikanren",
            "flags": [
                "read",
                "historical"
            ],
            "id": 108952473,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 22681,
            "sender_email": "kyle.littler@gmail.com",
            "sender_full_name": "Kyle Littler (F'13)",
            "sender_id": 2857,
            "sender_realm_str": "recurse",
            "stream_id": 20306,
            "subject": "Reasoned Schemer 4:68-72",
            "submessages": [],
            "timestamp": 1490835558,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/8f3e3f13689ac077fe4ae537e33bde345a57cb22?x=x&version=2",
            "client": "website",
            "content": "<p><span class=\"user-mention\" data-user-email=\"paul@paulwmorris.com\" data-user-id=\"100524\">@Paul Morris (SP1'17)</span> <span class=\"user-mention\" data-user-email=\"montecristoh@gmail.com\" data-user-id=\"100509\">@Alberto Zaccagni (SP1'17)</span> I vote we do Wednesday at 4</p>",
            "content_type": "text/html",
            "display_recipient": "minikanren",
            "flags": [
                "read",
                "historical"
            ],
            "id": 109756581,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 22681,
            "sender_email": "recurse@ardent.nebcorp.com",
            "sender_full_name": "Joe Ardent (he) (SP1'17)",
            "sender_id": 9097,
            "sender_realm_str": "recurse",
            "stream_id": 20306,
            "subject": "Video series",
            "submessages": [],
            "timestamp": 1492528194,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/f9168c90ac77e5592118339e9859e5f3?d=identicon&version=1",
            "client": "website",
            "content": "<p>Fine with me</p>",
            "content_type": "text/html",
            "display_recipient": "minikanren",
            "flags": [
                "read",
                "historical"
            ],
            "id": 109756660,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 22681,
            "sender_email": "montecristoh@gmail.com",
            "sender_full_name": "Alberto Zaccagni (SP1'17)",
            "sender_id": 100509,
            "sender_realm_str": "recurse",
            "stream_id": 20306,
            "subject": "Video series",
            "submessages": [],
            "timestamp": 1492528278,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/f9168c90ac77e5592118339e9859e5f3?d=identicon&version=1",
            "client": "website",
            "content": "<p>So we arrive to the session having already watched the video and we discuss it?</p>",
            "content_type": "text/html",
            "display_recipient": "minikanren",
            "flags": [
                "read",
                "historical"
            ],
            "id": 109756668,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 22681,
            "sender_email": "montecristoh@gmail.com",
            "sender_full_name": "Alberto Zaccagni (SP1'17)",
            "sender_id": 100509,
            "sender_realm_str": "recurse",
            "stream_id": 20306,
            "subject": "Video series",
            "submessages": [],
            "timestamp": 1492528315,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/f9168c90ac77e5592118339e9859e5f3?d=identicon&version=1",
            "client": "website",
            "content": "<p>It would be nice to also show something written in minikanren, for every one for us</p>",
            "content_type": "text/html",
            "display_recipient": "minikanren",
            "flags": [
                "read",
                "historical"
            ],
            "id": 109756712,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 22681,
            "sender_email": "montecristoh@gmail.com",
            "sender_full_name": "Alberto Zaccagni (SP1'17)",
            "sender_id": 100509,
            "sender_realm_str": "recurse",
            "stream_id": 20306,
            "subject": "Video series",
            "submessages": [],
            "timestamp": 1492528337,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/ac25c0f0dbfaa3e0d68634873943e63bdd41139c?x=x&version=1",
            "client": "website",
            "content": "<p>Sounds good to me.</p>",
            "content_type": "text/html",
            "display_recipient": "minikanren",
            "flags": [
                "read",
                "historical"
            ],
            "id": 109756729,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 22681,
            "sender_email": "paul@paulwmorris.com",
            "sender_full_name": "Paul Morris (he) (SP1'17)",
            "sender_id": 100524,
            "sender_realm_str": "recurse",
            "stream_id": 20306,
            "subject": "Video series",
            "submessages": [],
            "timestamp": 1492528426,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/ac25c0f0dbfaa3e0d68634873943e63bdd41139c?x=x&version=1",
            "client": "website",
            "content": "<p>Looks like beginner's club (databases) has moved to wed 3:30 - 4:30, and I'd like to go to that.  How about 2:30 - 3:30?  (or 30 min slot 4:30 - 5:00 ?)</p>",
            "content_type": "text/html",
            "display_recipient": "minikanren",
            "flags": [
                "read",
                "historical"
            ],
            "id": 109773230,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 22681,
            "sender_email": "paul@paulwmorris.com",
            "sender_full_name": "Paul Morris (he) (SP1'17)",
            "sender_id": 100524,
            "sender_realm_str": "recurse",
            "stream_id": 20306,
            "subject": "Video series",
            "submessages": [],
            "timestamp": 1492554919,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/ac25c0f0dbfaa3e0d68634873943e63bdd41139c?x=x&version=1",
            "client": "website",
            "content": "<p><span class=\"user-mention\" data-user-email=\"montecristoh@gmail.com\" data-user-id=\"100509\">@Alberto Zaccagni (SP1'17)</span> <span class=\"user-mention\" data-user-email=\"recurse@ardent.nebcorp.com\" data-user-id=\"9097\">@Joe Ardent (SP1'17)</span>  ^^</p>",
            "content_type": "text/html",
            "display_recipient": "minikanren",
            "flags": [
                "read",
                "historical"
            ],
            "id": 109773234,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 22681,
            "sender_email": "paul@paulwmorris.com",
            "sender_full_name": "Paul Morris (he) (SP1'17)",
            "sender_id": 100524,
            "sender_realm_str": "recurse",
            "stream_id": 20306,
            "subject": "Video series",
            "submessages": [],
            "timestamp": 1492554937,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/8f3e3f13689ac077fe4ae537e33bde345a57cb22?x=x&version=2",
            "client": "website",
            "content": "<p>I'd rather take an hour, so I'm down with 2:30, but am also cool with 6:00</p>",
            "content_type": "text/html",
            "display_recipient": "minikanren",
            "flags": [
                "read",
                "historical"
            ],
            "id": 109773515,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 22681,
            "sender_email": "recurse@ardent.nebcorp.com",
            "sender_full_name": "Joe Ardent (he) (SP1'17)",
            "sender_id": 9097,
            "sender_realm_str": "recurse",
            "stream_id": 20306,
            "subject": "Video series",
            "submessages": [],
            "timestamp": 1492555420,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/f9168c90ac77e5592118339e9859e5f3?d=identicon&version=1",
            "client": "website",
            "content": "<p>I'm ok with both</p>",
            "content_type": "text/html",
            "display_recipient": "minikanren",
            "flags": [
                "read",
                "historical"
            ],
            "id": 109773650,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 22681,
            "sender_email": "montecristoh@gmail.com",
            "sender_full_name": "Alberto Zaccagni (SP1'17)",
            "sender_id": 100509,
            "sender_realm_str": "recurse",
            "stream_id": 20306,
            "subject": "Video series",
            "submessages": [],
            "timestamp": 1492555571,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/ac25c0f0dbfaa3e0d68634873943e63bdd41139c?x=x&version=1",
            "client": "website",
            "content": "<p>Both work for me too.</p>",
            "content_type": "text/html",
            "display_recipient": "minikanren",
            "flags": [
                "read",
                "historical"
            ],
            "id": 109773793,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 22681,
            "sender_email": "paul@paulwmorris.com",
            "sender_full_name": "Paul Morris (he) (SP1'17)",
            "sender_id": 100524,
            "sender_realm_str": "recurse",
            "stream_id": 20306,
            "subject": "Video series",
            "submessages": [],
            "timestamp": 1492555821,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/8f3e3f13689ac077fe4ae537e33bde345a57cb22?x=x&version=2",
            "client": "website",
            "content": "<p>then I vote 6:00</p>",
            "content_type": "text/html",
            "display_recipient": "minikanren",
            "flags": [
                "read",
                "historical"
            ],
            "id": 109773859,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 22681,
            "sender_email": "recurse@ardent.nebcorp.com",
            "sender_full_name": "Joe Ardent (he) (SP1'17)",
            "sender_id": 9097,
            "sender_realm_str": "recurse",
            "stream_id": 20306,
            "subject": "Video series",
            "submessages": [],
            "timestamp": 1492555939,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/ac25c0f0dbfaa3e0d68634873943e63bdd41139c?x=x&version=1",
            "client": "website",
            "content": "<p>I vote for 6:00 too.  <br>\nI took a look at the first video (first 20 min or so, it's 2 hours) and the summary page[0] on github and the first video appears to cover Scheme, but not miniKanren per se.  I'm familiar with Scheme at this point (thanks to LilyPond and SICP) so I probably won't watch the rest...  might try to read some more of the Reasoned Schemer instead? (I made it through ch. 1-2 a few weeks ago.)  Or possibly start the second video?<br>\n[0] <a href=\"https://github.com/webyrd/miniKanren-hangout-summaries\" target=\"_blank\" title=\"https://github.com/webyrd/miniKanren-hangout-summaries\">https://github.com/webyrd/miniKanren-hangout-summaries</a><br>\n<span class=\"user-mention\" data-user-email=\"montecristoh@gmail.com\" data-user-id=\"100509\">@Alberto Zaccagni (SP1'17)</span> <span class=\"user-mention\" data-user-email=\"recurse@ardent.nebcorp.com\" data-user-id=\"9097\">@Joe Ardent (SP1'17)</span></p>",
            "content_type": "text/html",
            "display_recipient": "minikanren",
            "flags": [
                "read",
                "historical"
            ],
            "id": 109781499,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 22681,
            "sender_email": "paul@paulwmorris.com",
            "sender_full_name": "Paul Morris (he) (SP1'17)",
            "sender_id": 100524,
            "sender_realm_str": "recurse",
            "stream_id": 20306,
            "subject": "Video series",
            "submessages": [],
            "timestamp": 1492572493,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/f9168c90ac77e5592118339e9859e5f3?d=identicon&version=1",
            "client": "website",
            "content": "<p>Yeah if the first one covers just Scheme then I will do the same</p>",
            "content_type": "text/html",
            "display_recipient": "minikanren",
            "flags": [
                "read",
                "historical"
            ],
            "id": 109781560,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 22681,
            "sender_email": "montecristoh@gmail.com",
            "sender_full_name": "Alberto Zaccagni (SP1'17)",
            "sender_id": 100509,
            "sender_realm_str": "recurse",
            "stream_id": 20306,
            "subject": "Video series",
            "submessages": [],
            "timestamp": 1492572684,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/8f3e3f13689ac077fe4ae537e33bde345a57cb22?x=x&version=2",
            "client": "website",
            "content": "<p>I'll watch the second lecture, then</p>",
            "content_type": "text/html",
            "display_recipient": "minikanren",
            "flags": [
                "read",
                "historical"
            ],
            "id": 109782007,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 22681,
            "sender_email": "recurse@ardent.nebcorp.com",
            "sender_full_name": "Joe Ardent (he) (SP1'17)",
            "sender_id": 9097,
            "sender_realm_str": "recurse",
            "stream_id": 20306,
            "subject": "Video series",
            "submessages": [],
            "timestamp": 1492573800,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/8f3e3f13689ac077fe4ae537e33bde345a57cb22?x=x&version=2",
            "client": "website",
            "content": "<p>thanks for the heads up!</p>",
            "content_type": "text/html",
            "display_recipient": "minikanren",
            "flags": [
                "read",
                "historical"
            ],
            "id": 109782052,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 22681,
            "sender_email": "recurse@ardent.nebcorp.com",
            "sender_full_name": "Joe Ardent (he) (SP1'17)",
            "sender_id": 9097,
            "sender_realm_str": "recurse",
            "stream_id": 20306,
            "subject": "Video series",
            "submessages": [],
            "timestamp": 1492573840,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/8f3e3f13689ac077fe4ae537e33bde345a57cb22?x=x&version=2",
            "client": "website",
            "content": "<p>I need to go back to NJ to get my power supply, so I think I'm going to just stay there and work from home, so I'm out for the discussion today. Sorry about that!</p>",
            "content_type": "text/html",
            "display_recipient": "minikanren",
            "flags": [
                "read",
                "historical"
            ],
            "id": 109803291,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 22681,
            "sender_email": "recurse@ardent.nebcorp.com",
            "sender_full_name": "Joe Ardent (he) (SP1'17)",
            "sender_id": 9097,
            "sender_realm_str": "recurse",
            "stream_id": 20306,
            "subject": "Video series",
            "submessages": [],
            "timestamp": 1492619038,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/f9168c90ac77e5592118339e9859e5f3?d=identicon&version=1",
            "client": "website",
            "content": "<p>Do you want to postpone <span class=\"user-mention\" data-user-email=\"paul@paulwmorris.com\" data-user-id=\"100524\">@Paul Morris (SP1'17)</span>, I don't know miniKanren so I don't know how much I can contribute to the discussion :D</p>",
            "content_type": "text/html",
            "display_recipient": "minikanren",
            "flags": [
                "read",
                "historical"
            ],
            "id": 109804917,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 22681,
            "sender_email": "montecristoh@gmail.com",
            "sender_full_name": "Alberto Zaccagni (SP1'17)",
            "sender_id": 100509,
            "sender_realm_str": "recurse",
            "stream_id": 20306,
            "subject": "Video series",
            "submessages": [],
            "timestamp": 1492621341,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/8f3e3f13689ac077fe4ae537e33bde345a57cb22?x=x&version=2",
            "client": "website",
            "content": "<p>Or I'm an idiot who left my power supply at rc last night and didn't check my cubby for it before coming home today. I'm not sure.</p>",
            "content_type": "text/html",
            "display_recipient": "minikanren",
            "flags": [
                "read",
                "historical"
            ],
            "id": 109807959,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 22681,
            "sender_email": "recurse@ardent.nebcorp.com",
            "sender_full_name": "Joe Ardent (he) (SP1'17)",
            "sender_id": 9097,
            "sender_realm_str": "recurse",
            "stream_id": 20306,
            "subject": "Video series",
            "submessages": [],
            "timestamp": 1492625954,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/ac25c0f0dbfaa3e0d68634873943e63bdd41139c?x=x&version=1",
            "client": "website",
            "content": "<p><span class=\"user-mention\" data-user-email=\"recurse@ardent.nebcorp.com\" data-user-id=\"9097\">@Joe Ardent (SP1'17)</span> Well, I just took a look at your cubby and no power supply in it...</p>",
            "content_type": "text/html",
            "display_recipient": "minikanren",
            "flags": [
                "read",
                "historical"
            ],
            "id": 109808115,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 22681,
            "sender_email": "paul@paulwmorris.com",
            "sender_full_name": "Paul Morris (he) (SP1'17)",
            "sender_id": 100524,
            "sender_realm_str": "recurse",
            "stream_id": 20306,
            "subject": "Video series",
            "submessages": [],
            "timestamp": 1492626205,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/8f3e3f13689ac077fe4ae537e33bde345a57cb22?x=x&version=2",
            "client": "website",
            "content": "<p>Huh ! Thank  you  for that</p>",
            "content_type": "text/html",
            "display_recipient": "minikanren",
            "flags": [
                "read",
                "historical"
            ],
            "id": 109808374,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 22681,
            "sender_email": "recurse@ardent.nebcorp.com",
            "sender_full_name": "Joe Ardent (he) (SP1'17)",
            "sender_id": 9097,
            "sender_realm_str": "recurse",
            "stream_id": 20306,
            "subject": "Video series",
            "submessages": [],
            "timestamp": 1492626580,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/8f3e3f13689ac077fe4ae537e33bde345a57cb22?x=x&version=2",
            "client": "website",
            "content": "<p>I'll redouble my local search effort</p>",
            "content_type": "text/html",
            "display_recipient": "minikanren",
            "flags": [
                "read",
                "historical"
            ],
            "id": 109808436,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 22681,
            "sender_email": "recurse@ardent.nebcorp.com",
            "sender_full_name": "Joe Ardent (he) (SP1'17)",
            "sender_id": 9097,
            "sender_realm_str": "recurse",
            "stream_id": 20306,
            "subject": "Video series",
            "submessages": [],
            "timestamp": 1492626621,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/8f3e3f13689ac077fe4ae537e33bde345a57cb22?x=x&version=2",
            "client": "website",
            "content": "<p>(I've given up on searching locally, and bought a charger from Best Buy; I'm pretty sure I just left the powerbrick at RC last night near where I had been sitting.)</p>",
            "content_type": "text/html",
            "display_recipient": "minikanren",
            "flags": [
                "read",
                "historical"
            ],
            "id": 109811007,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 22681,
            "sender_email": "recurse@ardent.nebcorp.com",
            "sender_full_name": "Joe Ardent (he) (SP1'17)",
            "sender_id": 9097,
            "sender_realm_str": "recurse",
            "stream_id": 20306,
            "subject": "Video series",
            "submessages": [],
            "timestamp": 1492630460,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/ac25c0f0dbfaa3e0d68634873943e63bdd41139c?x=x&version=1",
            "client": "website",
            "content": "<p>This week the SICP reading group is reading the sections about writing a scheme interpreter in scheme, feel free to join us for the reading and/or discussion:<br>\n<a href=\"https://recurse.zulipchat.com/#narrow/stream/SICP.20SP1.202017/topic/Last.20two.20weeks.20of.20SICP\" target=\"_blank\" title=\"https://recurse.zulipchat.com/#narrow/stream/SICP.20SP1.202017/topic/Last.20two.20weeks.20of.20SICP\">https://recurse.zulipchat.com/#narrow/stream/SICP.20SP1.202017/topic/Last.20two.20weeks.20of.20SICP</a><br>\n<span class=\"user-mention\" data-user-email=\"montecristoh@gmail.com\" data-user-id=\"100509\">@Alberto Zaccagni (SP1'17)</span> , <span class=\"user-mention\" data-user-email=\"recurse@ardent.nebcorp.com\" data-user-id=\"9097\">@Joe Ardent (SP1'17)</span></p>",
            "content_type": "text/html",
            "display_recipient": "minikanren",
            "flags": [
                "read",
                "historical"
            ],
            "id": 109817894,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 22681,
            "sender_email": "paul@paulwmorris.com",
            "sender_full_name": "Paul Morris (he) (SP1'17)",
            "sender_id": 100524,
            "sender_realm_str": "recurse",
            "stream_id": 20306,
            "subject": "Video series",
            "submessages": [],
            "timestamp": 1492641571,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/8f3e3f13689ac077fe4ae537e33bde345a57cb22?x=x&version=2",
            "client": "website",
            "content": "<p>ooh</p>",
            "content_type": "text/html",
            "display_recipient": "minikanren",
            "flags": [
                "read",
                "historical"
            ],
            "id": 109817950,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 22681,
            "sender_email": "recurse@ardent.nebcorp.com",
            "sender_full_name": "Joe Ardent (he) (SP1'17)",
            "sender_id": 9097,
            "sender_realm_str": "recurse",
            "stream_id": 20306,
            "subject": "Video series",
            "submessages": [],
            "timestamp": 1492641671,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/ac25c0f0dbfaa3e0d68634873943e63bdd41139c?x=x&version=1",
            "client": "website",
            "content": "<p>So, <span class=\"user-mention\" data-user-email=\"ark.email@gmail.com\" data-user-id=\"100532\">@Adam Kaye (SP1'17)</span> and I are meeting at 2-3pm today to discuss the SICP section, location TBD.<br>\nFeel free to join us, <span class=\"user-mention\" data-user-email=\"montecristoh@gmail.com\" data-user-id=\"100509\">@Alberto Zaccagni (SP1'17)</span> <span class=\"user-mention\" data-user-email=\"recurse@ardent.nebcorp.com\" data-user-id=\"9097\">@Joe Ardent (SP1'17)</span></p>",
            "content_type": "text/html",
            "display_recipient": "minikanren",
            "flags": [
                "read",
                "historical"
            ],
            "id": 110082353,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 22681,
            "sender_email": "paul@paulwmorris.com",
            "sender_full_name": "Paul Morris (he) (SP1'17)",
            "sender_id": 100524,
            "sender_realm_str": "recurse",
            "stream_id": 20306,
            "subject": "Video series",
            "submessages": [],
            "timestamp": 1493215190,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/f9168c90ac77e5592118339e9859e5f3?d=identicon&version=1",
            "client": "website",
            "content": "<p>Thanks for the reminder!</p>",
            "content_type": "text/html",
            "display_recipient": "minikanren",
            "flags": [
                "read",
                "historical"
            ],
            "id": 110082405,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 22681,
            "sender_email": "montecristoh@gmail.com",
            "sender_full_name": "Alberto Zaccagni (SP1'17)",
            "sender_id": 100509,
            "sender_realm_str": "recurse",
            "stream_id": 20306,
            "subject": "Video series",
            "submessages": [],
            "timestamp": 1493215242,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/8f3e3f13689ac077fe4ae537e33bde345a57cb22?x=x&version=2",
            "client": "website",
            "content": "<p>I shall!</p>",
            "content_type": "text/html",
            "display_recipient": "minikanren",
            "flags": [
                "read",
                "historical"
            ],
            "id": 110086036,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 22681,
            "sender_email": "recurse@ardent.nebcorp.com",
            "sender_full_name": "Joe Ardent (he) (SP1'17)",
            "sender_id": 9097,
            "sender_realm_str": "recurse",
            "stream_id": 20306,
            "subject": "Video series",
            "submessages": [],
            "timestamp": 1493221627,
            "topic_links": [],
            "type": "stream"
        }
    ],
    "msg": "",
    "result": "success"
}
