{
    "anchor": 0,
    "found_anchor": false,
    "found_newest": true,
    "found_oldest": true,
    "history_limited": false,
    "messages": [
        {
            "avatar_url": "https://secure.gravatar.com/avatar/d96d4baab5c40af1eda5fd533d650f25?d=identicon&version=1",
            "client": "desktop app Mac 0.3.10",
            "content": "<p>I really just started this stream because <a href=\"https://www.gimbal.com/#beaconGiveawayPanel\" target=\"_blank\" title=\"https://www.gimbal.com/#beaconGiveawayPanel\">Gimbal is giving away free beacons</a> compatible with iOS's new Bluetooth Low Energy profile called <a href=\"http://www.theverge.com/2013/9/11/4718082/ios-7-ibeacons-could-solve-indoor-mapping-make-shopping-better\" target=\"_blank\" title=\"http://www.theverge.com/2013/9/11/4718082/ios-7-ibeacons-could-solve-indoor-mapping-make-shopping-better\">iBeacon</a>. If anyone's interested in hacking on this stuff, this will save you $50 or so.</p>",
            "content_type": "text/html",
            "display_recipient": "objective-c",
            "flags": [
                "read",
                "historical"
            ],
            "id": 12885669,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 27979,
            "sender_email": "jeffblagdon@gmail.com",
            "sender_full_name": "Jeff Blagdon (F'13)",
            "sender_id": 2878,
            "sender_realm_str": "recurse",
            "stream_id": 23243,
            "subject": "Free iBeacons",
            "submessages": [],
            "timestamp": 1384632226,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/dcdc2ca985b30fd80e086eda1fe1a018e89e77b5?x=x&version=3",
            "client": "website",
            "content": "<p>Woah, awesome. Thanks for the heads-up!</p>",
            "content_type": "text/html",
            "display_recipient": "objective-c",
            "flags": [
                "read",
                "historical"
            ],
            "id": 12887978,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 27979,
            "sender_email": "michael@lazerwalker.com",
            "sender_full_name": "Em Lazer-Walker (she/they) (m1'18)",
            "sender_id": 2854,
            "sender_realm_str": "recurse",
            "stream_id": 23243,
            "subject": "Free iBeacons",
            "submessages": [],
            "timestamp": 1384637748,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/d96d4baab5c40af1eda5fd533d650f25?d=identicon&version=1",
            "client": "desktop app Mac 0.4.1",
            "content": "<p>This looks nuts. (via hn)<br>\n<a href=\"http://objective-cloud.com/video/\" target=\"_blank\" title=\"http://objective-cloud.com/video/\">http://objective-cloud.com/video/</a></p>",
            "content_type": "text/html",
            "display_recipient": "objective-c",
            "flags": [
                "read",
                "historical"
            ],
            "id": 14232077,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 27979,
            "sender_email": "jeffblagdon@gmail.com",
            "sender_full_name": "Jeff Blagdon (F'13)",
            "sender_id": 2878,
            "sender_realm_str": "recurse",
            "stream_id": 23243,
            "subject": "Objective Cloud",
            "submessages": [],
            "timestamp": 1387299346,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/f0ec11be62f8c5fefb9ffe4497c81bac?d=identicon&version=1",
            "client": "website",
            "content": "<p>Things I do not want to do: </p>\n<ul>\n<li>Write more objective C</li>\n</ul>",
            "content_type": "text/html",
            "display_recipient": "objective-c",
            "flags": [
                "read",
                "historical"
            ],
            "id": 14232144,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 27979,
            "sender_email": "lfranchi@kde.org",
            "sender_full_name": "Leo Franchi (he) (F'12)",
            "sender_id": 806,
            "sender_realm_str": "recurse",
            "stream_id": 23243,
            "subject": "Objective Cloud",
            "submessages": [],
            "timestamp": 1387299401,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/d96d4baab5c40af1eda5fd533d650f25?d=identicon&version=1",
            "client": "desktop app Mac 0.4.1",
            "content": "<p>lol</p>",
            "content_type": "text/html",
            "display_recipient": "objective-c",
            "flags": [
                "read",
                "historical"
            ],
            "id": 14232184,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 27979,
            "sender_email": "jeffblagdon@gmail.com",
            "sender_full_name": "Jeff Blagdon (F'13)",
            "sender_id": 2878,
            "sender_realm_str": "recurse",
            "stream_id": 23243,
            "subject": "Objective Cloud",
            "submessages": [],
            "timestamp": 1387299449,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/dcdc2ca985b30fd80e086eda1fe1a018e89e77b5?x=x&version=3",
            "client": "desktop app Mac 0.4.1",
            "content": "<p>Haha, hey now.</p>",
            "content_type": "text/html",
            "display_recipient": "objective-c",
            "flags": [
                "read",
                "historical"
            ],
            "id": 14232247,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 27979,
            "sender_email": "michael@lazerwalker.com",
            "sender_full_name": "Em Lazer-Walker (she/they) (m1'18)",
            "sender_id": 2854,
            "sender_realm_str": "recurse",
            "stream_id": 23243,
            "subject": "Objective Cloud",
            "submessages": [],
            "timestamp": 1387299520,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/f0ec11be62f8c5fefb9ffe4497c81bac?d=identicon&version=1",
            "client": "website",
            "content": "<p>If a language requires a <span class=\"user-mention\" data-user-email=\"michael@lazerwalker.com\">@Mike Walker (F'13)</span>  to write <a href=\"http://fuckingblocksyntax.com/\" target=\"_blank\" title=\"http://fuckingblocksyntax.com/\">http://fuckingblocksyntax.com/</a>.... ;)</p>",
            "content_type": "text/html",
            "display_recipient": "objective-c",
            "flags": [
                "read",
                "historical"
            ],
            "id": 14232358,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 27979,
            "sender_email": "lfranchi@kde.org",
            "sender_full_name": "Leo Franchi (he) (F'12)",
            "sender_id": 806,
            "sender_realm_str": "recurse",
            "stream_id": 23243,
            "subject": "Objective Cloud",
            "submessages": [],
            "timestamp": 1387299669,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/dcdc2ca985b30fd80e086eda1fe1a018e89e77b5?x=x&version=3",
            "client": "desktop app Mac 0.4.1",
            "content": "<p>It's like JavaScript. There are parts that are really elegant and beautiful and fantastic, and there are things that we just shouldn't talk about.</p>",
            "content_type": "text/html",
            "display_recipient": "objective-c",
            "flags": [
                "read",
                "historical"
            ],
            "id": 14232374,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 27979,
            "sender_email": "michael@lazerwalker.com",
            "sender_full_name": "Em Lazer-Walker (she/they) (m1'18)",
            "sender_id": 2854,
            "sender_realm_str": "recurse",
            "stream_id": 23243,
            "subject": "Objective Cloud",
            "submessages": [],
            "timestamp": 1387299704,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/f0ec11be62f8c5fefb9ffe4497c81bac?d=identicon&version=1",
            "client": "website",
            "content": "<p>(i would also not want to write js for webservices <strong>cough</strong>nodejs<strong>cough</strong> ;)</p>",
            "content_type": "text/html",
            "display_recipient": "objective-c",
            "flags": [
                "read",
                "historical"
            ],
            "id": 14232434,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 27979,
            "sender_email": "lfranchi@kde.org",
            "sender_full_name": "Leo Franchi (he) (F'12)",
            "sender_id": 806,
            "sender_realm_str": "recurse",
            "stream_id": 23243,
            "subject": "Objective Cloud",
            "submessages": [],
            "timestamp": 1387299802,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/dcdc2ca985b30fd80e086eda1fe1a018e89e77b5?x=x&version=3",
            "client": "desktop app Mac 0.4.1",
            "content": "<p>It's almost like languages that are good for front-end development aren't necessarily good for back-end development :)</p>",
            "content_type": "text/html",
            "display_recipient": "objective-c",
            "flags": [
                "read",
                "historical"
            ],
            "id": 14232658,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 27979,
            "sender_email": "michael@lazerwalker.com",
            "sender_full_name": "Em Lazer-Walker (she/they) (m1'18)",
            "sender_id": 2854,
            "sender_realm_str": "recurse",
            "stream_id": 23243,
            "subject": "Objective Cloud",
            "submessages": [],
            "timestamp": 1387300094,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/d96d4baab5c40af1eda5fd533d650f25?d=identicon&version=1",
            "client": "desktop app Mac 0.4.2",
            "content": "<p>I'm using ALAssetsLibrary to present a list of thumbnail images to the user \u2014 tapping an unselected image should select it (in this case by reducing the alpha) and tapping a selected image should unselect it (bringing alpha back up to 1). Once the user has finished the selection I need to send the list of selected assets to another controller for processing.</p>\n<p>The problem is that CollectionViewCells are reused, so I can't count on the data (whether or not the cell is selected) being stored in the cell / view itself. Is there a standard idiom for doing this? I was thinking about keeping an NSOrderedSet of something \u2014 maybe the asset URLs \u2014 and then checking against it in CellForItemAtIndexPath. Is there a better way? (Note: UICollectionView has a built-in mechanism for managing multiple selected cells but it really sucks)</p>",
            "content_type": "text/html",
            "display_recipient": "objective-c",
            "flags": [
                "read",
                "historical"
            ],
            "id": 15424468,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 27979,
            "sender_email": "jeffblagdon@gmail.com",
            "sender_full_name": "Jeff Blagdon (F'13)",
            "sender_id": 2878,
            "sender_realm_str": "recurse",
            "stream_id": 23243,
            "subject": "Idiom for selecting multiple CollectionView cells",
            "submessages": [],
            "timestamp": 1389803767,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/d96d4baab5c40af1eda5fd533d650f25?d=identicon&version=1",
            "client": "desktop app Mac 0.4.2",
            "content": "<p>Actually, NSIndexPath is probably better than NSURL for keeping track of assets.</p>",
            "content_type": "text/html",
            "display_recipient": "objective-c",
            "flags": [
                "read",
                "historical"
            ],
            "id": 15425363,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 27979,
            "sender_email": "jeffblagdon@gmail.com",
            "sender_full_name": "Jeff Blagdon (F'13)",
            "sender_id": 2878,
            "sender_realm_str": "recurse",
            "stream_id": 23243,
            "subject": "Idiom for selecting multiple CollectionView cells",
            "submessages": [],
            "timestamp": 1389804958,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/dcdc2ca985b30fd80e086eda1fe1a018e89e77b5?x=x&version=3",
            "client": "desktop app Mac 0.4.2",
            "content": "<p>How is your collection view data source populating the cells (e.g. in <code>cellForItemAtIndexPath</code>)? The typical pattern is to have some sort of collection model (could be as simple as an NSArray of objects), where cellForItemAtIndexPath grabs the data it needs out of it using the index path.</p>",
            "content_type": "text/html",
            "display_recipient": "objective-c",
            "flags": [
                "read",
                "historical"
            ],
            "id": 15425727,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 27979,
            "sender_email": "michael@lazerwalker.com",
            "sender_full_name": "Em Lazer-Walker (she/they) (m1'18)",
            "sender_id": 2854,
            "sender_realm_str": "recurse",
            "stream_id": 23243,
            "subject": "Idiom for selecting multiple CollectionView cells",
            "submessages": [],
            "timestamp": 1389805405,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/dcdc2ca985b30fd80e086eda1fe1a018e89e77b5?x=x&version=3",
            "client": "desktop app Mac 0.4.2",
            "content": "<p>If that's the case, you should be able to just store the selected index paths and use that to grab the appropriate asset content from your data source when you need to do something with it.</p>",
            "content_type": "text/html",
            "display_recipient": "objective-c",
            "flags": [
                "read",
                "historical"
            ],
            "id": 15425743,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 27979,
            "sender_email": "michael@lazerwalker.com",
            "sender_full_name": "Em Lazer-Walker (she/they) (m1'18)",
            "sender_id": 2854,
            "sender_realm_str": "recurse",
            "stream_id": 23243,
            "subject": "Idiom for selecting multiple CollectionView cells",
            "submessages": [],
            "timestamp": 1389805439,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/d96d4baab5c40af1eda5fd533d650f25?d=identicon&version=1",
            "client": "website",
            "content": "<p>In order to get rid of some duplicate code, I decided to add tap-to-zoom to a UIScrollView subclass and just use it everywhere. I can't get gesture recognizers added in code to fire, so I tried to create as simple an example as possible and it still doesn't work. Does anything jump out at anyone?</p>\n<div class=\"codehilite\"><pre><span class=\"k\">@implementation</span> <span class=\"nc\">TappingView</span>\n\n<span class=\"k\">-</span> <span class=\"p\">(</span><span class=\"kt\">id</span><span class=\"p\">)</span><span class=\"nf\">initWithFrame:</span><span class=\"p\">(</span><span class=\"n\">CGRect</span><span class=\"p\">)</span><span class=\"nv\">frame</span>\n<span class=\"p\">{</span>\n    <span class=\"n\">self</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">super</span> <span class=\"nl\">initWithFrame:</span><span class=\"n\">frame</span><span class=\"p\">];</span>\n    <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"n\">self</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n        <span class=\"n\">UITapGestureRecognizer</span> <span class=\"o\">*</span><span class=\"n\">TGR</span> <span class=\"o\">=</span> <span class=\"p\">[[</span><span class=\"n\">UITapGestureRecognizer</span> <span class=\"n\">alloc</span><span class=\"p\">]</span><span class=\"nl\">initWithTarget:</span><span class=\"n\">self</span> <span class=\"nl\">action:</span><span class=\"k\">@selector</span><span class=\"p\">(</span><span class=\"n\">blah</span><span class=\"p\">)];</span>\n        <span class=\"p\">[</span><span class=\"n\">TGR</span> <span class=\"nl\">setNumberOfTouchesRequired:</span><span class=\"mi\">1</span><span class=\"p\">];</span>\n        <span class=\"p\">[</span><span class=\"n\">self</span> <span class=\"nl\">addGestureRecognizer:</span><span class=\"n\">TGR</span><span class=\"p\">];</span>\n        <span class=\"n\">self</span><span class=\"p\">.</span><span class=\"n\">userInteractionEnabled</span> <span class=\"o\">=</span> <span class=\"n\">YES</span><span class=\"p\">;</span>\n    <span class=\"p\">}</span>\n    <span class=\"k\">return</span> <span class=\"n\">self</span><span class=\"p\">;</span>\n<span class=\"p\">}</span>\n\n<span class=\"k\">-</span><span class=\"p\">(</span><span class=\"kt\">void</span><span class=\"p\">)</span><span class=\"nf\">blah</span><span class=\"p\">{</span>\n    <span class=\"n\">NSLog</span><span class=\"p\">(</span><span class=\"s\">@&quot;taptap&quot;</span><span class=\"p\">);</span>\n<span class=\"p\">}</span>\n</pre></div>\n\n\n<p>The view's class is set properly in Interface Builder, but no tap response. \u00bfPor qu\u00e9?</p>",
            "content_type": "text/html",
            "display_recipient": "objective-c",
            "flags": [
                "read",
                "historical"
            ],
            "id": 16312247,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 27979,
            "sender_email": "jeffblagdon@gmail.com",
            "sender_full_name": "Jeff Blagdon (F'13)",
            "sender_id": 2878,
            "sender_realm_str": "recurse",
            "stream_id": 23243,
            "subject": "Adding gesture recognizers in code",
            "submessages": [],
            "timestamp": 1391357270,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/dcdc2ca985b30fd80e086eda1fe1a018e89e77b5?x=x&version=3",
            "client": "desktop app Mac 0.4.2",
            "content": "<p>Not knowing how this object gets instantiated, are you sure that <code>initWithFrame:</code> is the constructor being called? Might be worth throwing a breakpoint to confirm it's not being created with <code>initWithCoder:</code> or something else.</p>",
            "content_type": "text/html",
            "display_recipient": "objective-c",
            "flags": [
                "read",
                "historical"
            ],
            "id": 16312335,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 27979,
            "sender_email": "michael@lazerwalker.com",
            "sender_full_name": "Em Lazer-Walker (she/they) (m1'18)",
            "sender_id": 2854,
            "sender_realm_str": "recurse",
            "stream_id": 23243,
            "subject": "Adding gesture recognizers in code",
            "submessages": [],
            "timestamp": 1391357467,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/d96d4baab5c40af1eda5fd533d650f25?d=identicon&version=1",
            "client": "website",
            "content": "<p>Ha, that's it! How do you know how it's going to be instantiated? I've never seen anything but initWithFrame to this point.</p>",
            "content_type": "text/html",
            "display_recipient": "objective-c",
            "flags": [
                "read",
                "historical"
            ],
            "id": 16312441,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 27979,
            "sender_email": "jeffblagdon@gmail.com",
            "sender_full_name": "Jeff Blagdon (F'13)",
            "sender_id": 2878,
            "sender_realm_str": "recurse",
            "stream_id": 23243,
            "subject": "Adding gesture recognizers in code",
            "submessages": [],
            "timestamp": 1391357678,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/dcdc2ca985b30fd80e086eda1fe1a018e89e77b5?x=x&version=3",
            "client": "desktop app Mac 0.4.2",
            "content": "<p>I believe if it's being loaded as a sub-view of a file being loaded from a NIB, it'll be initialized with <code>initWithCoder:</code></p>",
            "content_type": "text/html",
            "display_recipient": "objective-c",
            "flags": [
                "read",
                "historical"
            ],
            "id": 16312453,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 27979,
            "sender_email": "michael@lazerwalker.com",
            "sender_full_name": "Em Lazer-Walker (she/they) (m1'18)",
            "sender_id": 2854,
            "sender_realm_str": "recurse",
            "stream_id": 23243,
            "subject": "Adding gesture recognizers in code",
            "submessages": [],
            "timestamp": 1391357742,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/d96d4baab5c40af1eda5fd533d650f25?d=identicon&version=1",
            "client": "website",
            "content": "<p>Awesome! Much appreciated, as always.</p>",
            "content_type": "text/html",
            "display_recipient": "objective-c",
            "flags": [
                "read",
                "historical"
            ],
            "id": 16312493,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 27979,
            "sender_email": "jeffblagdon@gmail.com",
            "sender_full_name": "Jeff Blagdon (F'13)",
            "sender_id": 2878,
            "sender_realm_str": "recurse",
            "stream_id": 23243,
            "subject": "Adding gesture recognizers in code",
            "submessages": [],
            "timestamp": 1391357774,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/d96d4baab5c40af1eda5fd533d650f25?d=identicon&version=1",
            "client": "website",
            "content": "<p>I have a view controller with a single property \u2014 a UIButton wired up as an IBOutlet. I'm following along with <a href=\"http://www.youtube.com/watch?v=MgVEmq5Z1pk\" target=\"_blank\" title=\"http://www.youtube.com/watch?v=MgVEmq5Z1pk\">this tutorial</a>, initializing my controller's view to ensure that the outlets get set, but for some reason the property is still nil.</p>\n<div class=\"codehilite\"><pre><span class=\"n\">SpecBegin</span><span class=\"p\">(</span><span class=\"n\">MainViewController</span><span class=\"p\">)</span>\n\n<span class=\"n\">describe</span><span class=\"p\">(</span><span class=\"s\">@&quot;starting up&quot;</span><span class=\"p\">,</span> <span class=\"o\">^</span><span class=\"p\">{</span>\n    <span class=\"n\">__block</span> <span class=\"n\">MainViewController</span> <span class=\"o\">*</span><span class=\"n\">_mvc</span><span class=\"p\">;</span>\n    <span class=\"n\">beforeEach</span><span class=\"p\">(</span><span class=\"o\">^</span><span class=\"p\">{</span>\n        <span class=\"n\">_mvc</span> <span class=\"o\">=</span> <span class=\"p\">[[</span><span class=\"n\">MainViewController</span> <span class=\"n\">alloc</span><span class=\"p\">]</span><span class=\"n\">init</span><span class=\"p\">];</span>\n        <span class=\"n\">UIView</span> <span class=\"o\">*</span><span class=\"n\">view</span> <span class=\"o\">=</span> <span class=\"n\">_mvc</span><span class=\"p\">.</span><span class=\"n\">view</span><span class=\"p\">;</span>    <span class=\"c1\">// necessary for outlets to get set</span>\n        <span class=\"n\">expect</span><span class=\"p\">(</span><span class=\"n\">view</span><span class=\"p\">).</span><span class=\"n\">toNot</span><span class=\"p\">.</span><span class=\"n\">beNil</span><span class=\"p\">();</span>    <span class=\"c1\">// no problem</span>\n    <span class=\"p\">});</span>\n    <span class=\"n\">it</span><span class=\"p\">(</span><span class=\"s\">@&quot;should have a derpButton&quot;</span><span class=\"p\">,</span> <span class=\"o\">^</span><span class=\"p\">{</span>\n        <span class=\"n\">expect</span><span class=\"p\">(</span><span class=\"n\">_mvc</span><span class=\"p\">.</span><span class=\"n\">derpButton</span><span class=\"p\">).</span><span class=\"n\">toNot</span><span class=\"p\">.</span><span class=\"n\">beNil</span><span class=\"p\">();</span>    <span class=\"c1\">// outlets not set though</span>\n        <span class=\"n\">expect</span><span class=\"p\">(</span><span class=\"n\">_mvc</span><span class=\"p\">.</span><span class=\"n\">derpButton</span><span class=\"p\">.</span><span class=\"n\">currentTitle</span><span class=\"p\">).</span><span class=\"n\">to</span><span class=\"p\">.</span><span class=\"n\">equal</span><span class=\"p\">(</span><span class=\"s\">@&quot;Derp&quot;</span><span class=\"p\">);</span> \n    <span class=\"p\">});</span>\n<span class=\"p\">});</span>\n\n<span class=\"n\">SpecEnd</span>\n</pre></div>\n\n\n<p>The outlet isn't nil when I run the app on its own, only for the tests. What's the deal?</p>\n<div class=\"message_inline_image\"><a href=\"http://www.youtube.com/watch?v=MgVEmq5Z1pk\" target=\"_blank\" title=\"http://www.youtube.com/watch?v=MgVEmq5Z1pk\"><img src=\"https://i.ytimg.com/vi/MgVEmq5Z1pk/default.jpg\"></a></div>",
            "content_type": "text/html",
            "display_recipient": "objective-c",
            "flags": [
                "read",
                "historical"
            ],
            "id": 16837232,
            "is_me_message": false,
            "last_edit_timestamp": 1392179109,
            "reactions": [],
            "recipient_id": 27979,
            "sender_email": "jeffblagdon@gmail.com",
            "sender_full_name": "Jeff Blagdon (F'13)",
            "sender_id": 2878,
            "sender_realm_str": "recurse",
            "stream_id": 23243,
            "subject": "IBOutlets not getting set when testing with Specta / Expecta",
            "submessages": [],
            "timestamp": 1392179037,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/dcdc2ca985b30fd80e086eda1fe1a018e89e77b5?x=x&version=3",
            "client": "desktop app Mac 0.4.2",
            "content": "<p>When your view controller is alloc/init'ted in the production code, do you know for sure that <code>init</code> is the designated initializer that gets called? If the outlet is defined in a nib or storyboard, the initializer you call needs to load the nib/storyboard.</p>",
            "content_type": "text/html",
            "display_recipient": "objective-c",
            "flags": [
                "read",
                "historical"
            ],
            "id": 16837496,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 27979,
            "sender_email": "michael@lazerwalker.com",
            "sender_full_name": "Em Lazer-Walker (she/they) (m1'18)",
            "sender_id": 2854,
            "sender_realm_str": "recurse",
            "stream_id": 23243,
            "subject": "IBOutlets not getting set when testing with Specta / Expecta",
            "submessages": [],
            "timestamp": 1392179549,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/dcdc2ca985b30fd80e086eda1fe1a018e89e77b5?x=x&version=3",
            "client": "desktop app Mac 0.4.2",
            "content": "<p>A pattern I like to use is if a VC needs to be initialized from a nib, set up your custom initializers to manually do that. (e.g. in <code>init</code>, instead of <code>self = [super init]</code>, use <code>self = [super initWithNibName:NSStringFromClass([self class]) bundle:[NSBundle mainBundle]])</code> (assuming you're using a nib instead of a storyboard, and the nib name is the same as the class name)</p>",
            "content_type": "text/html",
            "display_recipient": "objective-c",
            "flags": [
                "read",
                "historical"
            ],
            "id": 16837545,
            "is_me_message": false,
            "last_edit_timestamp": 1392180609,
            "reactions": [],
            "recipient_id": 27979,
            "sender_email": "michael@lazerwalker.com",
            "sender_full_name": "Em Lazer-Walker (she/they) (m1'18)",
            "sender_id": 2854,
            "sender_realm_str": "recurse",
            "stream_id": 23243,
            "subject": "IBOutlets not getting set when testing with Specta / Expecta",
            "submessages": [],
            "timestamp": 1392179653,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/d96d4baab5c40af1eda5fd533d650f25?d=identicon&version=1",
            "client": "website",
            "content": "<p>I owe you so many beers. So many.</p>",
            "content_type": "text/html",
            "display_recipient": "objective-c",
            "flags": [
                "read",
                "historical"
            ],
            "id": 16837906,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 27979,
            "sender_email": "jeffblagdon@gmail.com",
            "sender_full_name": "Jeff Blagdon (F'13)",
            "sender_id": 2878,
            "sender_realm_str": "recurse",
            "stream_id": 23243,
            "subject": "IBOutlets not getting set when testing with Specta / Expecta",
            "submessages": [],
            "timestamp": 1392180465,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/d96d4baab5c40af1eda5fd533d650f25?d=identicon&version=1",
            "client": "website",
            "content": "<div class=\"codehilite\"><pre><span class=\"k\">-</span><span class=\"p\">(</span><span class=\"n\">MainViewController</span> <span class=\"o\">*</span><span class=\"p\">)</span><span class=\"nf\">init</span><span class=\"p\">{</span>\n    <span class=\"n\">UIStoryboard</span> <span class=\"o\">*</span><span class=\"n\">sb</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">UIStoryboard</span> <span class=\"nl\">storyboardWithName:</span><span class=\"s\">@&quot;iPhoneMain&quot;</span> <span class=\"nl\">bundle:</span><span class=\"nb\">nil</span><span class=\"p\">];</span>\n    <span class=\"n\">MainViewController</span> <span class=\"o\">*</span><span class=\"n\">mvc</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">sb</span> <span class=\"nl\">instantiateViewControllerWithIdentifier:</span><span class=\"s\">@&quot;MainViewController&quot;</span><span class=\"p\">];</span>\n    <span class=\"k\">return</span> <span class=\"n\">mvc</span><span class=\"p\">;</span>\n<span class=\"p\">}</span>\n</pre></div>",
            "content_type": "text/html",
            "display_recipient": "objective-c",
            "flags": [
                "read",
                "historical"
            ],
            "id": 16837943,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 27979,
            "sender_email": "jeffblagdon@gmail.com",
            "sender_full_name": "Jeff Blagdon (F'13)",
            "sender_id": 2878,
            "sender_realm_str": "recurse",
            "stream_id": 23243,
            "subject": "IBOutlets not getting set when testing with Specta / Expecta",
            "submessages": [],
            "timestamp": 1392180504,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/dcdc2ca985b30fd80e086eda1fe1a018e89e77b5?x=x&version=3",
            "client": "desktop app Mac 0.4.2",
            "content": "<p><img alt=\":thumbsup:\" class=\"emoji\" src=\"static/third/gemoji/images/emoji/thumbsup.png\" title=\":thumbsup:\"></p>",
            "content_type": "text/html",
            "display_recipient": "objective-c",
            "flags": [
                "read",
                "historical"
            ],
            "id": 16838013,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 27979,
            "sender_email": "michael@lazerwalker.com",
            "sender_full_name": "Em Lazer-Walker (she/they) (m1'18)",
            "sender_id": 2854,
            "sender_realm_str": "recurse",
            "stream_id": 23243,
            "subject": "IBOutlets not getting set when testing with Specta / Expecta",
            "submessages": [],
            "timestamp": 1392180640,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/dcdc2ca985b30fd80e086eda1fe1a018e89e77b5?x=x&version=3",
            "client": "desktop app Mac 0.4.2",
            "content": "<p>(Also, as a minor point, there's no reason to have your <code>init</code> method signature have a return type of anything other than <code>id</code>. Any method name that starts with \u201cinit\" has its return type overridden by the compiler to be <code>instancetype</code>, so it's probably best to follow Apple's convention and just use <code>id</code>)</p>",
            "content_type": "text/html",
            "display_recipient": "objective-c",
            "flags": [
                "read",
                "historical"
            ],
            "id": 16838066,
            "is_me_message": false,
            "last_edit_timestamp": 1392180983,
            "reactions": [],
            "recipient_id": 27979,
            "sender_email": "michael@lazerwalker.com",
            "sender_full_name": "Em Lazer-Walker (she/they) (m1'18)",
            "sender_id": 2854,
            "sender_realm_str": "recurse",
            "stream_id": 23243,
            "subject": "IBOutlets not getting set when testing with Specta / Expecta",
            "submessages": [],
            "timestamp": 1392180749,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/d96d4baab5c40af1eda5fd533d650f25?d=identicon&version=1",
            "client": "website",
            "content": "<p>Oh, awesome. Thanks!</p>",
            "content_type": "text/html",
            "display_recipient": "objective-c",
            "flags": [
                "read",
                "historical"
            ],
            "id": 16838074,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 27979,
            "sender_email": "jeffblagdon@gmail.com",
            "sender_full_name": "Jeff Blagdon (F'13)",
            "sender_id": 2878,
            "sender_realm_str": "recurse",
            "stream_id": 23243,
            "subject": "IBOutlets not getting set when testing with Specta / Expecta",
            "submessages": [],
            "timestamp": 1392180791,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/d96d4baab5c40af1eda5fd533d650f25?d=identicon&version=1",
            "client": "website",
            "content": "<p>In the past two hours I've had two really annoying issues creep up. The first was Xcode complaining about an invalid key on a view controller that had every outlet and every reference to the object in question removed.  After wrestling with it for an hour I finally resorted to copying all my code into a new project. Now, Xcode is complaining that there's no implementation for <code>[myproject testExample]</code> (i.e., the built-in test template) even though the file has been deleted, along with every reference I can find to it.</p>\n<p>I'm Cmd + K and Cmd + Shift + King all over the place, Resetting content and settings in the simulator, and deleting derived data in the organizer, but still getting this weirdness. Does anyone have any other tips for keeping the sketchiness at bay?</p>",
            "content_type": "text/html",
            "display_recipient": "objective-c",
            "flags": [
                "read",
                "historical"
            ],
            "id": 16891784,
            "is_me_message": false,
            "last_edit_timestamp": 1392259975,
            "reactions": [],
            "recipient_id": 27979,
            "sender_email": "jeffblagdon@gmail.com",
            "sender_full_name": "Jeff Blagdon (F'13)",
            "sender_id": 2878,
            "sender_realm_str": "recurse",
            "stream_id": 23243,
            "subject": "general Specta / Cocoapods sketchiness",
            "submessages": [],
            "timestamp": 1392259959,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/dcdc2ca985b30fd80e086eda1fe1a018e89e77b5?x=x&version=3",
            "client": "desktop app Mac 0.4.3",
            "content": "<p><span class=\"user-mention\" data-user-email=\"jeffblagdon@gmail.com\">@Jeff Blagdon (F'13)</span> The only low-hanging fruit I can think of (without looking at the project myself) is clearing out derived data (window -&gt; organizer).</p>",
            "content_type": "text/html",
            "display_recipient": "objective-c",
            "flags": [
                "read",
                "historical"
            ],
            "id": 16917561,
            "is_me_message": false,
            "last_edit_timestamp": 1392307472,
            "reactions": [],
            "recipient_id": 27979,
            "sender_email": "michael@lazerwalker.com",
            "sender_full_name": "Em Lazer-Walker (she/they) (m1'18)",
            "sender_id": 2854,
            "sender_realm_str": "recurse",
            "stream_id": 23243,
            "subject": "general Specta / Cocoapods sketchiness",
            "submessages": [],
            "timestamp": 1392307460,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/dcdc2ca985b30fd80e086eda1fe1a018e89e77b5?x=x&version=3",
            "client": "desktop app Mac 0.4.3",
            "content": "<p>If you get lucky and that does fix it, I use <a href=\"http://watchdogforxcode.com\" target=\"_blank\" title=\"http://watchdogforxcode.com\">Watchdog</a> to automatically clean up derived data and such whenever I clean from within Xcode (since it's stupid they don't do it automatically)</p>",
            "content_type": "text/html",
            "display_recipient": "objective-c",
            "flags": [
                "read",
                "historical"
            ],
            "id": 16917589,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 27979,
            "sender_email": "michael@lazerwalker.com",
            "sender_full_name": "Em Lazer-Walker (she/they) (m1'18)",
            "sender_id": 2854,
            "sender_realm_str": "recurse",
            "stream_id": 23243,
            "subject": "general Specta / Cocoapods sketchiness",
            "submessages": [],
            "timestamp": 1392307498,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/d96d4baab5c40af1eda5fd533d650f25?d=identicon&version=1",
            "client": "website",
            "content": "<p>Thanks for the link. Everything's working now, but the entire thing just seems really fragile. I'm reading the <a href=\"http://objc.io\" target=\"_blank\" title=\"http://objc.io\">objc.io</a> issue on the build system now so maybe that will help with debugging in the future. Just wish that everything was more robust.</p>",
            "content_type": "text/html",
            "display_recipient": "objective-c",
            "flags": [
                "read",
                "historical"
            ],
            "id": 16917803,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 27979,
            "sender_email": "jeffblagdon@gmail.com",
            "sender_full_name": "Jeff Blagdon (F'13)",
            "sender_id": 2878,
            "sender_realm_str": "recurse",
            "stream_id": 23243,
            "subject": "general Specta / Cocoapods sketchiness",
            "submessages": [],
            "timestamp": 1392307710,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/dcdc2ca985b30fd80e086eda1fe1a018e89e77b5?x=x&version=3",
            "client": "desktop app Mac 0.4.3",
            "content": "<p>Yeah...</p>",
            "content_type": "text/html",
            "display_recipient": "objective-c",
            "flags": [
                "read",
                "historical"
            ],
            "id": 16918287,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 27979,
            "sender_email": "michael@lazerwalker.com",
            "sender_full_name": "Em Lazer-Walker (she/they) (m1'18)",
            "sender_id": 2854,
            "sender_realm_str": "recurse",
            "stream_id": 23243,
            "subject": "general Specta / Cocoapods sketchiness",
            "submessages": [],
            "timestamp": 1392308225,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/dcdc2ca985b30fd80e086eda1fe1a018e89e77b5?x=x&version=3",
            "client": "desktop app Mac 0.4.3",
            "content": "<p>There was a hilarious minor kerfuffle a week or so ago when one of the engineers on Facebook's Paper made some comment about how \"Xcode can't handle their scale\".</p>",
            "content_type": "text/html",
            "display_recipient": "objective-c",
            "flags": [
                "read",
                "historical"
            ],
            "id": 16918370,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 27979,
            "sender_email": "michael@lazerwalker.com",
            "sender_full_name": "Em Lazer-Walker (she/they) (m1'18)",
            "sender_id": 2854,
            "sender_realm_str": "recurse",
            "stream_id": 23243,
            "subject": "general Specta / Cocoapods sketchiness",
            "submessages": [],
            "timestamp": 1392308300,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/d96d4baab5c40af1eda5fd533d650f25?d=identicon&version=1",
            "client": "website",
            "content": "<p>lol</p>",
            "content_type": "text/html",
            "display_recipient": "objective-c",
            "flags": [
                "read",
                "historical"
            ],
            "id": 16922372,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 27979,
            "sender_email": "jeffblagdon@gmail.com",
            "sender_full_name": "Jeff Blagdon (F'13)",
            "sender_id": 2878,
            "sender_realm_str": "recurse",
            "stream_id": 23243,
            "subject": "general Specta / Cocoapods sketchiness",
            "submessages": [],
            "timestamp": 1392311777,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/d96d4baab5c40af1eda5fd533d650f25?d=identicon&version=1",
            "client": "website",
            "content": "<p>Perfect example: went to sleep last night, tests were running fine. Changed some code, and now not only are tests broken, I get a string of Mach-O linker errors. 90 minutes of Googling and trying everything under the sun to find out, accidentally, that libPods.a wasn't linked in my *test target's* build phases. I didn't change any project settings between going to bed last night and waking up this morning, and I definitely didn't remove libs. WTF, Xcode?</p>",
            "content_type": "text/html",
            "display_recipient": "objective-c",
            "flags": [
                "read",
                "historical"
            ],
            "id": 16925247,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 27979,
            "sender_email": "jeffblagdon@gmail.com",
            "sender_full_name": "Jeff Blagdon (F'13)",
            "sender_id": 2878,
            "sender_realm_str": "recurse",
            "stream_id": 23243,
            "subject": "general Specta / Cocoapods sketchiness",
            "submessages": [],
            "timestamp": 1392315076,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/d96d4baab5c40af1eda5fd533d650f25?d=identicon&version=1",
            "client": "website",
            "content": "<p>In your header file, you can use <code>@class MyClass</code> instead of <code>#import MyClass</code>and move the <code>#import</code> to the implementation file. Every explanation of this I've seen essentially says that this just allows you to move the <code>#import</code> to your implementation file, which leads one to ask the question \u2014 why do you care where the <code>#import</code> shows up? Does this have something to do with reducing redundant imports during the build?</p>",
            "content_type": "text/html",
            "display_recipient": "objective-c",
            "flags": [
                "read",
                "historical"
            ],
            "id": 17056462,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 27979,
            "sender_email": "jeffblagdon@gmail.com",
            "sender_full_name": "Jeff Blagdon (F'13)",
            "sender_id": 2878,
            "sender_realm_str": "recurse",
            "stream_id": 23243,
            "subject": "What's the point of forward declarations?",
            "submessages": [],
            "timestamp": 1392571474,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/f0ec11be62f8c5fefb9ffe4497c81bac?d=identicon&version=1",
            "client": "website",
            "content": "<p><span class=\"user-mention\" data-user-email=\"jeffblagdon@gmail.com\">@Jeff Blagdon (F'13)</span> Sometimes you can get into a situation where you have two files that mutually reference each other</p>",
            "content_type": "text/html",
            "display_recipient": "objective-c",
            "flags": [
                "read",
                "historical"
            ],
            "id": 17058535,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 27979,
            "sender_email": "lfranchi@kde.org",
            "sender_full_name": "Leo Franchi (he) (F'12)",
            "sender_id": 806,
            "sender_realm_str": "recurse",
            "stream_id": 23243,
            "subject": "What's the point of forward declarations?",
            "submessages": [],
            "timestamp": 1392590143,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/f0ec11be62f8c5fefb9ffe4497c81bac?d=identicon&version=1",
            "client": "website",
            "content": "<p>usually not directly (but sometimes even that) but through some 3rd header. If you #import in the header, you won't be able to compile the code---using forward declarations lets you \"break the cycle\"</p>",
            "content_type": "text/html",
            "display_recipient": "objective-c",
            "flags": [
                "read",
                "historical"
            ],
            "id": 17058543,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 27979,
            "sender_email": "lfranchi@kde.org",
            "sender_full_name": "Leo Franchi (he) (F'12)",
            "sender_id": 806,
            "sender_realm_str": "recurse",
            "stream_id": 23243,
            "subject": "What's the point of forward declarations?",
            "submessages": [],
            "timestamp": 1392590176,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/f0ec11be62f8c5fefb9ffe4497c81bac?d=identicon&version=1",
            "client": "website",
            "content": "<p>also, the more #imports you have in a header, the more files you have to recompile when you change just one file. if you include file A in 300 files, and make a modification to file A, all 300 files are recompiled. if you forward include @class A and import file A in the .m files, when you change A you won't have to recompile everything</p>",
            "content_type": "text/html",
            "display_recipient": "objective-c",
            "flags": [
                "read",
                "historical"
            ],
            "id": 17058551,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 27979,
            "sender_email": "lfranchi@kde.org",
            "sender_full_name": "Leo Franchi (he) (F'12)",
            "sender_id": 806,
            "sender_realm_str": "recurse",
            "stream_id": 23243,
            "subject": "What's the point of forward declarations?",
            "submessages": [],
            "timestamp": 1392590252,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/d96d4baab5c40af1eda5fd533d650f25?d=identicon&version=1",
            "client": "website",
            "content": "<p><span class=\"user-mention\" data-user-email=\"lfranchi@kde.org\">@Leo Franchi (F'12)</span> Thanks for breaking that down. This is the part I don't understand, though.</p>\n<blockquote>\n<p>if you include file A in 300 files, and make a modification to file A, all 300 files are recompiled. if you forward include @class A and import file A in the .m files, when you change A you won't have to recompile everything</p>\n</blockquote>\n<p>This is probably me not understanding how compiling works, but why wouldn't the contents of the header have to be recompiled just because they're imported in the <code>.m</code> rather than the <code>.h</code>? It still has to be imported somewhere. They touch on something similar in <a href=\"http://www.objc.io/issue-6/compiler.html\" target=\"_blank\" title=\"http://www.objc.io/issue-6/compiler.html\">Objc.io</a> but I still don't get it.</p>\n<blockquote>\n<p>\"We can run the command again, and see that our file has expanded to a whopping 89,839 lines.\"</p>\n</blockquote>\n<p>Does <code>#import</code> function differently when it shows up in an implementation file? The same code has to be imported regardless, doesn't it?</p>",
            "content_type": "text/html",
            "display_recipient": "objective-c",
            "flags": [
                "read",
                "historical"
            ],
            "id": 17058916,
            "is_me_message": false,
            "last_edit_timestamp": 1392592863,
            "reactions": [],
            "recipient_id": 27979,
            "sender_email": "jeffblagdon@gmail.com",
            "sender_full_name": "Jeff Blagdon (F'13)",
            "sender_id": 2878,
            "sender_realm_str": "recurse",
            "stream_id": 23243,
            "subject": "What's the point of forward declarations?",
            "submessages": [],
            "timestamp": 1392592796,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/b4d94d953db52e1e7cfc3724b95a6dc906fa9d58?x=x&version=2",
            "client": "website",
            "content": "<p>Here's my limited understanding: A file needs to be recompiled if any of the source has changed. <code>@class MyClass</code>is just some text that says \"MyClass is a pointer to a class,\" but `#include may cause an entire header file to be added to this file, so that file has now changed. </p>\n<p>Changing headers is worse, because they're what end up being <code>import</code>-ed in other files - and every file that imports it will need to be recompiled. The key difference is that headers are what you include/import in other files (vs implementations which aren't), so of needing to recompile one is greater.</p>",
            "content_type": "text/html",
            "display_recipient": "objective-c",
            "flags": [
                "read",
                "historical"
            ],
            "id": 17059498,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 27979,
            "sender_email": "me@ballingt.com",
            "sender_full_name": "Tom Ballinger (he) (W'12)",
            "sender_id": 807,
            "sender_realm_str": "recurse",
            "stream_id": 23243,
            "subject": "What's the point of forward declarations?",
            "submessages": [],
            "timestamp": 1392594044,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/b4d94d953db52e1e7cfc3724b95a6dc906fa9d58?x=x&version=2",
            "client": "website",
            "content": "<p>(I'd love to be corrected by any c/objective c folks that know better)</p>",
            "content_type": "text/html",
            "display_recipient": "objective-c",
            "flags": [
                "read",
                "historical"
            ],
            "id": 17059508,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 27979,
            "sender_email": "me@ballingt.com",
            "sender_full_name": "Tom Ballinger (he) (W'12)",
            "sender_id": 807,
            "sender_realm_str": "recurse",
            "stream_id": 23243,
            "subject": "What's the point of forward declarations?",
            "submessages": [],
            "timestamp": 1392594084,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/d96d4baab5c40af1eda5fd533d650f25?d=identicon&version=1",
            "client": "website",
            "content": "<p><span class=\"user-mention\" data-user-email=\"tom@hackerschool.com\">@Tom Ballinger</span> So cascading imports \u2014 if <code>C.h</code> imports <code>B.h</code> imports <code>A.h</code> then changing <code>A.h</code> would mean all three have to be recompiled? That would make sense.</p>",
            "content_type": "text/html",
            "display_recipient": "objective-c",
            "flags": [
                "read",
                "historical"
            ],
            "id": 17059950,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 27979,
            "sender_email": "jeffblagdon@gmail.com",
            "sender_full_name": "Jeff Blagdon (F'13)",
            "sender_id": 2878,
            "sender_realm_str": "recurse",
            "stream_id": 23243,
            "subject": "What's the point of forward declarations?",
            "submessages": [],
            "timestamp": 1392594962,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/b4d94d953db52e1e7cfc3724b95a6dc906fa9d58?x=x&version=2",
            "client": "website",
            "content": "<p>Import basically means \"copy and paste the source of that file here\" (actually that's what <code>#include</code> means, <code>#import</code> is \"copy and paste if that file isn't already copied and pasted here.\") So yes, if you change <code>A.h</code>, you've changed <code>B.h</code> and <code>C.h</code>.</p>",
            "content_type": "text/html",
            "display_recipient": "objective-c",
            "flags": [
                "read",
                "historical"
            ],
            "id": 17060284,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 27979,
            "sender_email": "me@ballingt.com",
            "sender_full_name": "Tom Ballinger (he) (W'12)",
            "sender_id": 807,
            "sender_realm_str": "recurse",
            "stream_id": 23243,
            "subject": "What's the point of forward declarations?",
            "submessages": [],
            "timestamp": 1392595506,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/f0ec11be62f8c5fefb9ffe4497c81bac?d=identicon&version=1",
            "client": "website",
            "content": "<p>Yeah, <span class=\"user-mention\" data-user-email=\"jeffblagdon@gmail.com\">@Jeff Blagdon (F'13)</span>  that is correct</p>",
            "content_type": "text/html",
            "display_recipient": "objective-c",
            "flags": [
                "read",
                "historical"
            ],
            "id": 17060512,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 27979,
            "sender_email": "lfranchi@kde.org",
            "sender_full_name": "Leo Franchi (he) (F'12)",
            "sender_id": 806,
            "sender_realm_str": "recurse",
            "stream_id": 23243,
            "subject": "What's the point of forward declarations?",
            "submessages": [],
            "timestamp": 1392595889,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/f0ec11be62f8c5fefb9ffe4497c81bac?d=identicon&version=1",
            "client": "website",
            "content": "<p>#include/#import is basically copy/pasting the contents of the file in place</p>",
            "content_type": "text/html",
            "display_recipient": "objective-c",
            "flags": [
                "read",
                "historical"
            ],
            "id": 17060519,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 27979,
            "sender_email": "lfranchi@kde.org",
            "sender_full_name": "Leo Franchi (he) (F'12)",
            "sender_id": 806,
            "sender_realm_str": "recurse",
            "stream_id": 23243,
            "subject": "What's the point of forward declarations?",
            "submessages": [],
            "timestamp": 1392595904,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/f0ec11be62f8c5fefb9ffe4497c81bac?d=identicon&version=1",
            "client": "website",
            "content": "<p>That's also why in c/c++ you have these \"include guards\", each .h file has</p>\n<div class=\"codehilite\"><pre><span class=\"cp\">#ifndef FILE_NAME_H</span>\n<span class=\"cp\">#define FILE_NAME_H</span>\n\n<span class=\"o\">&lt;</span><span class=\"n\">file</span> <span class=\"n\">here</span><span class=\"o\">&gt;</span>\n\n<span class=\"cp\">#endif</span>\n</pre></div>\n\n\n<p>because you don't want a file to be copied twice (causing duplicate symbols) when it's #import'ed multiple times in a file (because A imports B and C, and B imports C). #import basically gives you that \"safety\" for free</p>",
            "content_type": "text/html",
            "display_recipient": "objective-c",
            "flags": [
                "read",
                "historical"
            ],
            "id": 17060583,
            "is_me_message": false,
            "last_edit_timestamp": 1392596214,
            "reactions": [],
            "recipient_id": 27979,
            "sender_email": "lfranchi@kde.org",
            "sender_full_name": "Leo Franchi (he) (F'12)",
            "sender_id": 806,
            "sender_realm_str": "recurse",
            "stream_id": 23243,
            "subject": "What's the point of forward declarations?",
            "submessages": [],
            "timestamp": 1392595991,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/d96d4baab5c40af1eda5fd533d650f25?d=identicon&version=1",
            "client": "website",
            "content": "<p>Got it. Thanks, fellas.</p>",
            "content_type": "text/html",
            "display_recipient": "objective-c",
            "flags": [
                "read",
                "historical"
            ],
            "id": 17061034,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 27979,
            "sender_email": "jeffblagdon@gmail.com",
            "sender_full_name": "Jeff Blagdon (F'13)",
            "sender_id": 2878,
            "sender_realm_str": "recurse",
            "stream_id": 23243,
            "subject": "What's the point of forward declarations?",
            "submessages": [],
            "timestamp": 1392596836,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/d96d4baab5c40af1eda5fd533d650f25?d=identicon&version=1",
            "client": "website",
            "content": "<p>I want to expose an enumerated type between two classes, ideally without putting it in a separate header. It doesn't look like I can use <code>FOUNDATION_EXPORT</code> with enums. Is there a better way to do this?</p>",
            "content_type": "text/html",
            "display_recipient": "objective-c",
            "flags": [
                "read",
                "historical"
            ],
            "id": 19002243,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 27979,
            "sender_email": "jeffblagdon@gmail.com",
            "sender_full_name": "Jeff Blagdon (F'13)",
            "sender_id": 2878,
            "sender_realm_str": "recurse",
            "stream_id": 23243,
            "subject": "Making public enums",
            "submessages": [],
            "timestamp": 1395843383,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/b4d94d953db52e1e7cfc3724b95a6dc906fa9d58?x=x&version=2",
            "client": "website",
            "content": "<p>Without putting it in a separate header, because it's annoying to have yet another file?</p>",
            "content_type": "text/html",
            "display_recipient": "objective-c",
            "flags": [
                "read",
                "historical"
            ],
            "id": 19002520,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 27979,
            "sender_email": "me@ballingt.com",
            "sender_full_name": "Tom Ballinger (he) (W'12)",
            "sender_id": 807,
            "sender_realm_str": "recurse",
            "stream_id": 23243,
            "subject": "Making public enums",
            "submessages": [],
            "timestamp": 1395843727,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/b4d94d953db52e1e7cfc3724b95a6dc906fa9d58?x=x&version=2",
            "client": "website",
            "content": "<p>(I don't know the answer, but curious about your motivation; have been dealing with similar problems in Java recently)</p>",
            "content_type": "text/html",
            "display_recipient": "objective-c",
            "flags": [
                "read",
                "historical"
            ],
            "id": 19002550,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 27979,
            "sender_email": "me@ballingt.com",
            "sender_full_name": "Tom Ballinger (he) (W'12)",
            "sender_id": 807,
            "sender_realm_str": "recurse",
            "stream_id": 23243,
            "subject": "Making public enums",
            "submessages": [],
            "timestamp": 1395843770,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/d96d4baab5c40af1eda5fd533d650f25?d=identicon&version=1",
            "client": "website",
            "content": "<p>Yeah, exactly. There are no other header files containing just constants / enums in the project so far so I'm reluctant to move in that direction if there are other options.</p>",
            "content_type": "text/html",
            "display_recipient": "objective-c",
            "flags": [
                "read",
                "historical"
            ],
            "id": 19005022,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 27979,
            "sender_email": "jeffblagdon@gmail.com",
            "sender_full_name": "Jeff Blagdon (F'13)",
            "sender_id": 2878,
            "sender_realm_str": "recurse",
            "stream_id": 23243,
            "subject": "Making public enums",
            "submessages": [],
            "timestamp": 1395846626,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/f95fc62f1b37448400276876731d3675?d=identicon&version=1",
            "client": "desktop app Mac 0.4.4",
            "content": "<p>Is anyone in the space available to help with a quick ARC question?</p>",
            "content_type": "text/html",
            "display_recipient": "objective-c",
            "flags": [
                "read",
                "historical"
            ],
            "id": 21852924,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 27979,
            "sender_email": "sidney@s4y.us",
            "sender_full_name": "Sidney San Mart\u00edn (W'12)",
            "sender_id": 928,
            "sender_realm_str": "recurse",
            "stream_id": 23243,
            "subject": "help",
            "submessages": [],
            "timestamp": 1400270604,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/f95fc62f1b37448400276876731d3675?d=identicon&version=1",
            "client": "desktop app Mac 0.4.4",
            "content": "<p>It's a little easier to show in person.</p>",
            "content_type": "text/html",
            "display_recipient": "objective-c",
            "flags": [
                "read",
                "historical"
            ],
            "id": 21852932,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 27979,
            "sender_email": "sidney@s4y.us",
            "sender_full_name": "Sidney San Mart\u00edn (W'12)",
            "sender_id": 928,
            "sender_realm_str": "recurse",
            "stream_id": 23243,
            "subject": "help",
            "submessages": [],
            "timestamp": 1400270609,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/3f4785d95e43ecfb2f20d49e6ec824dc?d=identicon&version=1",
            "client": "website",
            "content": "<p>Paging <span class=\"user-mention\" data-user-email=\"michael@lazerwalker.com\">@Mike Walker (F'13)</span> or <span class=\"user-mention\" data-user-email=\"george.w.king@gmail.com\">@George King (S'13)</span> :)</p>",
            "content_type": "text/html",
            "display_recipient": "objective-c",
            "flags": [
                "read",
                "historical"
            ],
            "id": 21853025,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 27979,
            "sender_email": "nick@recurse.com",
            "sender_full_name": "Nick Bergson-Shilcock (he)",
            "sender_id": 811,
            "sender_realm_str": "recurse",
            "stream_id": 23243,
            "subject": "help",
            "submessages": [],
            "timestamp": 1400270675,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/f95fc62f1b37448400276876731d3675?d=identicon&version=1",
            "client": "desktop app Mac 0.4.4",
            "content": "<p><span class=\"user-mention\" data-user-email=\"nick@hackerschool.com\">@Nick Bergson-Shilcock</span> :)</p>",
            "content_type": "text/html",
            "display_recipient": "objective-c",
            "flags": [
                "read",
                "historical"
            ],
            "id": 21853126,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 27979,
            "sender_email": "sidney@s4y.us",
            "sender_full_name": "Sidney San Mart\u00edn (W'12)",
            "sender_id": 928,
            "sender_realm_str": "recurse",
            "stream_id": 23243,
            "subject": "help",
            "submessages": [],
            "timestamp": 1400270857,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/d84e3106fff0d257cc5a95ca9ea44405?d=identicon&version=1",
            "client": "desktop app Mac 0.4.4",
            "content": "<p><span class=\"user-mention\" data-user-email=\"nick@hackerschool.com\">@Nick Bergson-Shilcock</span> hi!</p>",
            "content_type": "text/html",
            "display_recipient": "objective-c",
            "flags": [
                "read",
                "historical"
            ],
            "id": 21855137,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 27979,
            "sender_email": "george.w.king@gmail.com",
            "sender_full_name": "George King (he) (S'13)",
            "sender_id": 2153,
            "sender_realm_str": "recurse",
            "stream_id": 23243,
            "subject": "help",
            "submessages": [],
            "timestamp": 1400273247,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/d84e3106fff0d257cc5a95ca9ea44405?d=identicon&version=1",
            "client": "desktop app Mac 0.4.4",
            "content": "<p><span class=\"user-mention\" data-user-email=\"sidney@s4y.us\">@Sidney San Mart\u00edn (W'12)</span> can i help?</p>",
            "content_type": "text/html",
            "display_recipient": "objective-c",
            "flags": [
                "read",
                "historical"
            ],
            "id": 21855147,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 27979,
            "sender_email": "george.w.king@gmail.com",
            "sender_full_name": "George King (he) (S'13)",
            "sender_id": 2153,
            "sender_realm_str": "recurse",
            "stream_id": 23243,
            "subject": "help",
            "submessages": [],
            "timestamp": 1400273271,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/bf9b55c19b8e106292986a655b6a423b?d=identicon&version=1",
            "client": "desktop app Mac 0.4.4",
            "content": "<p>Does anyone have experience using firebase from ios?  I'm looking for a simple way to instrument some code and see the results as they happen.  Would love to hear suggestions or pair on a solution.</p>",
            "content_type": "text/html",
            "display_recipient": "objective-c",
            "flags": [
                "read",
                "historical"
            ],
            "id": 23057458,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 27979,
            "sender_email": "kyle.beyer@gmail.com",
            "sender_full_name": "Kyle Beyer (S1'14)",
            "sender_id": 5870,
            "sender_realm_str": "recurse",
            "stream_id": 23243,
            "subject": "firebase",
            "submessages": [],
            "timestamp": 1402422447,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/bf9b55c19b8e106292986a655b6a423b?d=identicon&version=1",
            "client": "desktop app Mac 0.4.4",
            "content": "<p><span class=\"user-mention\" data-user-email=\"lauraeskelton@gmail.com\">@Laura Skelton (S'14)</span> <span class=\"user-mention\" data-user-email=\"jorge@izqui.me\">@Jorge Izquierdo (S'14)</span>  initial version of repository pushed <a href=\"https://github.com/kbeyer/Multipeer.Instrument\" target=\"_blank\" title=\"https://github.com/kbeyer/Multipeer.Instrument\">https://github.com/kbeyer/Multipeer.Instrument</a></p>",
            "content_type": "text/html",
            "display_recipient": "objective-c",
            "flags": [
                "read",
                "historical"
            ],
            "id": 23076301,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 27979,
            "sender_email": "kyle.beyer@gmail.com",
            "sender_full_name": "Kyle Beyer (S1'14)",
            "sender_id": 5870,
            "sender_realm_str": "recurse",
            "stream_id": 23243,
            "subject": "multipeer instrumentation",
            "submessages": [],
            "timestamp": 1402442303,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/b850936c0011b8c05e23dc6289b55c7e5c2dfd7e?x=x&version=1",
            "client": "website",
            "content": "<p><span class=\"user-mention\" data-user-email=\"lauraeskelton@gmail.com\">@Laura Skelton (S'14)</span> <span class=\"user-mention\" data-user-email=\"kyle.beyer@gmail.com\">@Kyle Beyer (S'14)</span> want to meet after lunch to pair on yesterday's project?</p>",
            "content_type": "text/html",
            "display_recipient": "objective-c",
            "flags": [
                "read",
                "historical"
            ],
            "id": 23108043,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 27979,
            "sender_email": "jorge@izqui.me",
            "sender_full_name": "Jorge Izquierdo (S1'14)",
            "sender_id": 5873,
            "sender_realm_str": "recurse",
            "stream_id": 23243,
            "subject": "multipeer instrumentation",
            "submessages": [],
            "timestamp": 1402501183,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/d96d4baab5c40af1eda5fd533d650f25?d=identicon&version=1",
            "client": "website",
            "content": "<p>For some reason, AFNetworking's AFHTTPSessionManager and associated objects are refusing to cache certain images, despite the fact that the cache-control header is set and I've set both the max disk and max memory sizes to 400MB.</p>",
            "content_type": "text/html",
            "display_recipient": "objective-c",
            "flags": [
                "read",
                "historical"
            ],
            "id": 23162355,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 27979,
            "sender_email": "jeffblagdon@gmail.com",
            "sender_full_name": "Jeff Blagdon (F'13)",
            "sender_id": 2878,
            "sender_realm_str": "recurse",
            "stream_id": 23243,
            "subject": "Caching and AFNetworking",
            "submessages": [],
            "timestamp": 1402585085,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/d96d4baab5c40af1eda5fd533d650f25?d=identicon&version=1",
            "client": "website",
            "content": "<p>If I was just using NSURLSession I could handle caching on my own in the delegate method, but I'm not sure what the best way is to force AFNetworking to cache stuff. So far, the only difference I can find between a file that isn't being cached and one that is is file size \u2014 say 2MB vs 50K. As far as I can tell, there's no maximum size for individual responses in NSURLCache though, so not sure why the big image isn't getting saved.</p>",
            "content_type": "text/html",
            "display_recipient": "objective-c",
            "flags": [
                "read",
                "historical"
            ],
            "id": 23162612,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 27979,
            "sender_email": "jeffblagdon@gmail.com",
            "sender_full_name": "Jeff Blagdon (F'13)",
            "sender_id": 2878,
            "sender_realm_str": "recurse",
            "stream_id": 23243,
            "subject": "Caching and AFNetworking",
            "submessages": [],
            "timestamp": 1402585358,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/d96d4baab5c40af1eda5fd533d650f25?d=identicon&version=1",
            "client": "website",
            "content": "<p>For its <code>AFNetworking+UIImageView</code> category, the AF guys use a separate NSCache instance (AFImageCache) keyed to the image's URL. As far as I can tell, this is only to keep the images from hitting the disk, since <code>NSCache</code> is in-memory only.</p>",
            "content_type": "text/html",
            "display_recipient": "objective-c",
            "flags": [
                "read",
                "historical"
            ],
            "id": 23162737,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 27979,
            "sender_email": "jeffblagdon@gmail.com",
            "sender_full_name": "Jeff Blagdon (F'13)",
            "sender_id": 2878,
            "sender_realm_str": "recurse",
            "stream_id": 23243,
            "subject": "Caching and AFNetworking",
            "submessages": [],
            "timestamp": 1402585491,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/dcdc2ca985b30fd80e086eda1fe1a018e89e77b5?x=x&version=3",
            "client": "website",
            "content": "<p><span class=\"user-mention\" data-user-email=\"jeffblagdon@gmail.com\">@Jeff Blagdon (F'13)</span> For what it's worth, when I need async image downloading + caching, I tend to use <a href=\"https://github.com/rs/SDWebImage\" target=\"_blank\" title=\"https://github.com/rs/SDWebImage\">SDWebImage</a>.</p>",
            "content_type": "text/html",
            "display_recipient": "objective-c",
            "flags": [
                "read",
                "historical"
            ],
            "id": 23164508,
            "is_me_message": false,
            "last_edit_timestamp": 1402587639,
            "reactions": [],
            "recipient_id": 27979,
            "sender_email": "michael@lazerwalker.com",
            "sender_full_name": "Em Lazer-Walker (she/they) (m1'18)",
            "sender_id": 2854,
            "sender_realm_str": "recurse",
            "stream_id": 23243,
            "subject": "Caching and AFNetworking",
            "submessages": [],
            "timestamp": 1402587528,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/d96d4baab5c40af1eda5fd533d650f25?d=identicon&version=1",
            "client": "website",
            "content": "<p><span class=\"user-mention\" data-user-email=\"michael@lazerwalker.com\">@Mike Walker (F'13)</span> Thanks. We were using SDWebImage for some stuff, but we ditched it for a few different reasons. It shouldn't be that hard to work around, just having a hard time understanding the model \u2014 specifically getting a hook in at the point AFNetworking is deciding whether to cache or not.</p>",
            "content_type": "text/html",
            "display_recipient": "objective-c",
            "flags": [
                "read",
                "historical"
            ],
            "id": 23164716,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 27979,
            "sender_email": "jeffblagdon@gmail.com",
            "sender_full_name": "Jeff Blagdon (F'13)",
            "sender_id": 2878,
            "sender_realm_str": "recurse",
            "stream_id": 23243,
            "subject": "Caching and AFNetworking",
            "submessages": [],
            "timestamp": 1402587761,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/dcdc2ca985b30fd80e086eda1fe1a018e89e77b5?x=x&version=3",
            "client": "website",
            "content": "<p>Hm. I wouldn't hesitate to open an issue if something seems wonky. I don't use AFNetworking personally so I can't really help, but my understanding is they're pretty responsive.</p>",
            "content_type": "text/html",
            "display_recipient": "objective-c",
            "flags": [
                "read",
                "historical"
            ],
            "id": 23164742,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 27979,
            "sender_email": "michael@lazerwalker.com",
            "sender_full_name": "Em Lazer-Walker (she/they) (m1'18)",
            "sender_id": 2854,
            "sender_realm_str": "recurse",
            "stream_id": 23243,
            "subject": "Caching and AFNetworking",
            "submessages": [],
            "timestamp": 1402587805,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/d96d4baab5c40af1eda5fd533d650f25?d=identicon&version=1",
            "client": "website",
            "content": "<p>Cool, will do.</p>",
            "content_type": "text/html",
            "display_recipient": "objective-c",
            "flags": [
                "read",
                "historical"
            ],
            "id": 23167464,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 27979,
            "sender_email": "jeffblagdon@gmail.com",
            "sender_full_name": "Jeff Blagdon (F'13)",
            "sender_id": 2878,
            "sender_realm_str": "recurse",
            "stream_id": 23243,
            "subject": "Caching and AFNetworking",
            "submessages": [],
            "timestamp": 1402591116,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/bf9b55c19b8e106292986a655b6a423b?d=identicon&version=1",
            "client": "desktop app Mac 0.4.4",
            "content": "<p>Curious what style guide others recommend for Obj-C.  Read this and looked at a few referenced: <a href=\"http://www.quora.com/Objective-C-programming-language/What-is-the-best-style-guide-for-Objective-C\" target=\"_blank\" title=\"http://www.quora.com/Objective-C-programming-language/What-is-the-best-style-guide-for-Objective-C\">http://www.quora.com/Objective-C-programming-language/What-is-the-best-style-guide-for-Objective-C</a>  The NYTimes is most approachable so far and seems solid: <a href=\"https://github.com/NYTimes/objective-c-style-guide\" target=\"_blank\" title=\"https://github.com/NYTimes/objective-c-style-guide\">https://github.com/NYTimes/objective-c-style-guide</a>  Suggestions?</p>",
            "content_type": "text/html",
            "display_recipient": "objective-c",
            "flags": [
                "read",
                "historical"
            ],
            "id": 23392828,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 27979,
            "sender_email": "kyle.beyer@gmail.com",
            "sender_full_name": "Kyle Beyer (S1'14)",
            "sender_id": 5870,
            "sender_realm_str": "recurse",
            "stream_id": 23243,
            "subject": "style guide",
            "submessages": [],
            "timestamp": 1403012283,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/604a47894fedac4d2a5dd64df3da9e92?d=identicon&version=1",
            "client": "desktop app Mac 0.4.4",
            "content": "<p>this is helpful if only just to inspire consistency! thanks for sharing</p>",
            "content_type": "text/html",
            "display_recipient": "objective-c",
            "flags": [
                "read",
                "historical"
            ],
            "id": 23396438,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 27979,
            "sender_email": "lauraeskelton@gmail.com",
            "sender_full_name": "Laura Skelton (she) (S1'14)",
            "sender_id": 5878,
            "sender_realm_str": "recurse",
            "stream_id": 23243,
            "subject": "style guide",
            "submessages": [],
            "timestamp": 1403017276,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/dcdc2ca985b30fd80e086eda1fe1a018e89e77b5?x=x&version=3",
            "client": "website",
            "content": "<p><a href=\"https://github.com/github/objective-c-conventions\" target=\"_blank\" title=\"https://github.com/github/objective-c-conventions\">GitHub's style guide</a> gels a little more with my personal Obj-C preferences, although I do like how the NYT one is more exhaustive. </p>\n<p>Big-picture, though, I'd say the most important part of a style guide is simply having one at all; it's consistency that's more important than most specific stylistic choices.</p>",
            "content_type": "text/html",
            "display_recipient": "objective-c",
            "flags": [
                "read",
                "historical"
            ],
            "id": 23396648,
            "is_me_message": false,
            "last_edit_timestamp": 1403017572,
            "reactions": [],
            "recipient_id": 27979,
            "sender_email": "michael@lazerwalker.com",
            "sender_full_name": "Em Lazer-Walker (she/they) (m1'18)",
            "sender_id": 2854,
            "sender_realm_str": "recurse",
            "stream_id": 23243,
            "subject": "style guide",
            "submessages": [],
            "timestamp": 1403017522,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/bf9b55c19b8e106292986a655b6a423b?d=identicon&version=1",
            "client": "desktop app Mac 0.4.4",
            "content": "<p>Thanks for the feedback</p>",
            "content_type": "text/html",
            "display_recipient": "objective-c",
            "flags": [
                "read",
                "historical"
            ],
            "id": 23397360,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 27979,
            "sender_email": "kyle.beyer@gmail.com",
            "sender_full_name": "Kyle Beyer (S1'14)",
            "sender_id": 5870,
            "sender_realm_str": "recurse",
            "stream_id": 23243,
            "subject": "style guide",
            "submessages": [],
            "timestamp": 1403018374,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/b850936c0011b8c05e23dc6289b55c7e5c2dfd7e?x=x&version=1",
            "client": "desktop app Mac 0.4.4",
            "content": "<p>i'm using this ObjC class from Swift (GDCAsyncSocket) and I initialize it setting the delegate to self in my swift class and this happens<a href=\"/user_uploads/13/vpu2DFudWS27KdnF0DX8YNUm/screen-shot-2014-06-18-at-124555.png\" target=\"_blank\" title=\"screen-shot-2014-06-18-at-124555.png\">screen-shot-2014-06-18-at-124555.png</a> <br>\nAnyone has any clue why this might be happening?</p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/13/vpu2DFudWS27KdnF0DX8YNUm/screen-shot-2014-06-18-at-124555.png\" target=\"_blank\" title=\"screen-shot-2014-06-18-at-124555.png\"><img src=\"/user_uploads/13/vpu2DFudWS27KdnF0DX8YNUm/screen-shot-2014-06-18-at-124555.png\"></a></div>",
            "content_type": "text/html",
            "display_recipient": "objective-c",
            "flags": [
                "read",
                "historical"
            ],
            "id": 23457749,
            "is_me_message": false,
            "last_edit_timestamp": 1403110235,
            "reactions": [],
            "recipient_id": 27979,
            "sender_email": "jorge@izqui.me",
            "sender_full_name": "Jorge Izquierdo (S1'14)",
            "sender_id": 5873,
            "sender_realm_str": "recurse",
            "stream_id": 23243,
            "subject": "wtf delegate",
            "submessages": [],
            "timestamp": 1403110201,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/b850936c0011b8c05e23dc6289b55c7e5c2dfd7e?x=x&version=1",
            "client": "desktop app Mac 0.4.4",
            "content": "<p><a href=\"/user_uploads/13/VhfRrBMi9xQAYItt2WAV0ivz/screen-shot-2014-06-18-at-124936.png\" target=\"_blank\" title=\"screen-shot-2014-06-18-at-124936.png\">screen-shot-2014-06-18-at-124936.png</a> </p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/13/VhfRrBMi9xQAYItt2WAV0ivz/screen-shot-2014-06-18-at-124936.png\" target=\"_blank\" title=\"screen-shot-2014-06-18-at-124936.png\"><img src=\"/user_uploads/13/VhfRrBMi9xQAYItt2WAV0ivz/screen-shot-2014-06-18-at-124936.png\"></a></div>",
            "content_type": "text/html",
            "display_recipient": "objective-c",
            "flags": [
                "read",
                "historical"
            ],
            "id": 23457809,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 27979,
            "sender_email": "jorge@izqui.me",
            "sender_full_name": "Jorge Izquierdo (S1'14)",
            "sender_id": 5873,
            "sender_realm_str": "recurse",
            "stream_id": 23243,
            "subject": "wtf delegate",
            "submessages": [],
            "timestamp": 1403110247,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/604a47894fedac4d2a5dd64df3da9e92?d=identicon&version=1",
            "client": "desktop app Mac 0.4.4",
            "content": "<p>Still figuring this out, but could it have something to do with the new optional variables ?<br>\n<code>var delegate: ClassDelegate?</code> </p>",
            "content_type": "text/html",
            "display_recipient": "objective-c",
            "flags": [
                "read",
                "historical"
            ],
            "id": 23458307,
            "is_me_message": false,
            "last_edit_timestamp": 1403110955,
            "reactions": [],
            "recipient_id": 27979,
            "sender_email": "lauraeskelton@gmail.com",
            "sender_full_name": "Laura Skelton (she) (S1'14)",
            "sender_id": 5878,
            "sender_realm_str": "recurse",
            "stream_id": 23243,
            "subject": "wtf delegate",
            "submessages": [],
            "timestamp": 1403110930,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/604a47894fedac4d2a5dd64df3da9e92?d=identicon&version=1",
            "client": "desktop app Mac 0.4.4",
            "content": "<p>I wrote a delegate for a custom class in Swift and it worked a little bit differently because instead of checking if the delegate was nil, you had to work with the new optional variables. So maybe it doesn't like <code>!delegate</code> on an optional variable?</p>",
            "content_type": "text/html",
            "display_recipient": "objective-c",
            "flags": [
                "read",
                "historical"
            ],
            "id": 23458371,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 27979,
            "sender_email": "lauraeskelton@gmail.com",
            "sender_full_name": "Laura Skelton (she) (S1'14)",
            "sender_id": 5878,
            "sender_realm_str": "recurse",
            "stream_id": 23243,
            "subject": "wtf delegate",
            "submessages": [],
            "timestamp": 1403111027,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/b850936c0011b8c05e23dc6289b55c7e5c2dfd7e?x=x&version=1",
            "client": "desktop app Mac 0.4.4",
            "content": "<p>I already figured it out, in order to correctly set the delegate, the Swift class must me a child of NSObject <span class=\"user-mention\" data-user-email=\"lauraeskelton@gmail.com\">@Laura Skelton (S'14)</span> </p>",
            "content_type": "text/html",
            "display_recipient": "objective-c",
            "flags": [
                "read",
                "historical"
            ],
            "id": 23458523,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 27979,
            "sender_email": "jorge@izqui.me",
            "sender_full_name": "Jorge Izquierdo (S1'14)",
            "sender_id": 5873,
            "sender_realm_str": "recurse",
            "stream_id": 23243,
            "subject": "wtf delegate",
            "submessages": [],
            "timestamp": 1403111208,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/604a47894fedac4d2a5dd64df3da9e92?d=identicon&version=1",
            "client": "desktop app Mac 0.4.4",
            "content": "<p>cool, good to know</p>",
            "content_type": "text/html",
            "display_recipient": "objective-c",
            "flags": [
                "read",
                "historical"
            ],
            "id": 23458541,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 27979,
            "sender_email": "lauraeskelton@gmail.com",
            "sender_full_name": "Laura Skelton (she) (S1'14)",
            "sender_id": 5878,
            "sender_realm_str": "recurse",
            "stream_id": 23243,
            "subject": "wtf delegate",
            "submessages": [],
            "timestamp": 1403111254,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/048837dd1707e891a4e916295440c13a?d=identicon&version=1",
            "client": "desktop app Mac 0.4.4",
            "content": "<p>Pretty neat post on how introspection works in obj-c: <a href=\"https://stackoverflow.com/questions/2299841/objective-c-introspection-reflection\" target=\"_blank\" title=\"https://stackoverflow.com/questions/2299841/objective-c-introspection-reflection\">https://stackoverflow.com/questions/2299841/objective-c-introspection-reflection</a></p>",
            "content_type": "text/html",
            "display_recipient": "objective-c",
            "flags": [
                "read",
                "historical"
            ],
            "id": 23756983,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 27979,
            "sender_email": "jdennis@gmail.com",
            "sender_full_name": "James Dennis (S'11)",
            "sender_id": 971,
            "sender_realm_str": "recurse",
            "stream_id": 23243,
            "subject": "introspection",
            "submessages": [],
            "timestamp": 1403646268,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/dcdc2ca985b30fd80e086eda1fe1a018e89e77b5?x=x&version=3",
            "client": "website",
            "content": "<p>Yeah, the Obj-C runtime is amazing. Apple's runtime reference manual is also surprisingly helpful and informative.</p>",
            "content_type": "text/html",
            "display_recipient": "objective-c",
            "flags": [
                "read",
                "historical"
            ],
            "id": 23759345,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 27979,
            "sender_email": "michael@lazerwalker.com",
            "sender_full_name": "Em Lazer-Walker (she/they) (m1'18)",
            "sender_id": 2854,
            "sender_realm_str": "recurse",
            "stream_id": 23243,
            "subject": "introspection",
            "submessages": [],
            "timestamp": 1403649359,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/bf9b55c19b8e106292986a655b6a423b?d=identicon&version=1",
            "client": "desktop app Mac 0.4.4",
            "content": "<p>Nice!  Thanks for sharing.  <span class=\"user-mention\" data-user-email=\"bgmuthalaly@gmail.com\">@Bert Muthalaly (S'14)</span> may want to check this out for dynamic rendering of UI</p>",
            "content_type": "text/html",
            "display_recipient": "objective-c",
            "flags": [
                "read",
                "historical"
            ],
            "id": 23790934,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 27979,
            "sender_email": "kyle.beyer@gmail.com",
            "sender_full_name": "Kyle Beyer (S1'14)",
            "sender_id": 5870,
            "sender_realm_str": "recurse",
            "stream_id": 23243,
            "subject": "introspection",
            "submessages": [],
            "timestamp": 1403700983,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/3ad220596b601687b8785b5fbfa8ecbe?d=identicon&version=1",
            "client": "website",
            "content": "<p>every time I see <code>#import &lt;objc/runtime.h&gt;</code>my brain processes it as <code>black magicks follow, beware</code>!</p>",
            "content_type": "text/html",
            "display_recipient": "objective-c",
            "flags": [
                "read",
                "historical"
            ],
            "id": 23794501,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 27979,
            "sender_email": "bgmuthalaly@gmail.com",
            "sender_full_name": "Bert Muthalaly (S1'14)",
            "sender_id": 5871,
            "sender_realm_str": "recurse",
            "stream_id": 23243,
            "subject": "introspection",
            "submessages": [],
            "timestamp": 1403706718,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/dcdc2ca985b30fd80e086eda1fe1a018e89e77b5?x=x&version=3",
            "client": "website",
            "content": "<p>Yeah. The general sentiment in most of the Objective-C community is that you should only use the runtime if there's absolutely no other way to accomplish what you're trying to do. And if that's the case, you should treat that as a code smell and think long and hard about whether what you're trying to do is the right thing or not.</p>",
            "content_type": "text/html",
            "display_recipient": "objective-c",
            "flags": [
                "read",
                "historical"
            ],
            "id": 23794561,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 27979,
            "sender_email": "michael@lazerwalker.com",
            "sender_full_name": "Em Lazer-Walker (she/they) (m1'18)",
            "sender_id": 2854,
            "sender_realm_str": "recurse",
            "stream_id": 23243,
            "subject": "introspection",
            "submessages": [],
            "timestamp": 1403706794,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/dcdc2ca985b30fd80e086eda1fe1a018e89e77b5?x=x&version=3",
            "client": "website",
            "content": "<p>The only times I've ended up using it in production-level code were all testing frameworks.</p>",
            "content_type": "text/html",
            "display_recipient": "objective-c",
            "flags": [
                "read",
                "historical"
            ],
            "id": 23794569,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 27979,
            "sender_email": "michael@lazerwalker.com",
            "sender_full_name": "Em Lazer-Walker (she/they) (m1'18)",
            "sender_id": 2854,
            "sender_realm_str": "recurse",
            "stream_id": 23243,
            "subject": "introspection",
            "submessages": [],
            "timestamp": 1403706806,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/048837dd1707e891a4e916295440c13a?d=identicon&version=1",
            "client": "desktop app Mac 0.4.4",
            "content": "<p>does introspection not come up frequently in obj-c?</p>",
            "content_type": "text/html",
            "display_recipient": "objective-c",
            "flags": [
                "read",
                "historical"
            ],
            "id": 23794642,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 27979,
            "sender_email": "jdennis@gmail.com",
            "sender_full_name": "James Dennis (S'11)",
            "sender_id": 971,
            "sender_realm_str": "recurse",
            "stream_id": 23243,
            "subject": "introspection",
            "submessages": [],
            "timestamp": 1403706895,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/dcdc2ca985b30fd80e086eda1fe1a018e89e77b5?x=x&version=3",
            "client": "website",
            "content": "<p>There are a fair number of ways to do introspection for more everyday use cases that still give you some level of compile-time safety and have more idiomatically Objective-C APIs.</p>",
            "content_type": "text/html",
            "display_recipient": "objective-c",
            "flags": [
                "read",
                "historical"
            ],
            "id": 23794969,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 27979,
            "sender_email": "michael@lazerwalker.com",
            "sender_full_name": "Em Lazer-Walker (she/they) (m1'18)",
            "sender_id": 2854,
            "sender_realm_str": "recurse",
            "stream_id": 23243,
            "subject": "introspection",
            "submessages": [],
            "timestamp": 1403707293,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/3ad220596b601687b8785b5fbfa8ecbe?d=identicon&version=1",
            "client": "website",
            "content": "<p>So I\u2019m trying to dynamically render views of different types based on some user input (context: making an interface builder for the iPad), and I don\u2019t see any way to dispatch functions based on values determined at runtime in Swift. Is there some way to get the constructor of a class from outside that class in Objective-C? I\u2019d love to be able to do something like this: </p>\n<div class=\"codehilite\"><pre><span class=\"k\">+</span> <span class=\"p\">(</span><span class=\"kt\">id</span><span class=\"p\">)</span> <span class=\"nf\">instantiateViewFromClass:</span><span class=\"p\">(</span><span class=\"n\">Class</span><span class=\"p\">)</span><span class=\"nv\">klass</span> <span class=\"p\">{</span>\n    <span class=\"k\">return</span> <span class=\"p\">[[</span><span class=\"n\">klass</span> <span class=\"n\">alloc</span><span class=\"p\">]</span> <span class=\"n\">init</span><span class=\"p\">];</span>\n<span class=\"p\">}</span>\n</pre></div>",
            "content_type": "text/html",
            "display_recipient": "objective-c",
            "flags": [
                "read",
                "historical"
            ],
            "id": 23860919,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 27979,
            "sender_email": "bgmuthalaly@gmail.com",
            "sender_full_name": "Bert Muthalaly (S1'14)",
            "sender_id": 5871,
            "sender_realm_str": "recurse",
            "stream_id": 23243,
            "subject": "(no topic)",
            "submessages": [],
            "timestamp": 1403806448,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/048837dd1707e891a4e916295440c13a?d=identicon&version=1",
            "client": "desktop app Mac 0.4.4",
            "content": "<p>I'm not sure I follow... why doesn't the code you wrote work?</p>",
            "content_type": "text/html",
            "display_recipient": "objective-c",
            "flags": [
                "read",
                "historical"
            ],
            "id": 23861456,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 27979,
            "sender_email": "jdennis@gmail.com",
            "sender_full_name": "James Dennis (S'11)",
            "sender_id": 971,
            "sender_realm_str": "recurse",
            "stream_id": 23243,
            "subject": "(no topic)",
            "submessages": [],
            "timestamp": 1403806876,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/048837dd1707e891a4e916295440c13a?d=identicon&version=1",
            "client": "desktop app Mac 0.4.4",
            "content": "<p>Oh my mistake, you said swift but I read \"objective-c\" in the channel name.</p>",
            "content_type": "text/html",
            "display_recipient": "objective-c",
            "flags": [
                "read",
                "historical"
            ],
            "id": 23861615,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 27979,
            "sender_email": "jdennis@gmail.com",
            "sender_full_name": "James Dennis (S'11)",
            "sender_id": 971,
            "sender_realm_str": "recurse",
            "stream_id": 23243,
            "subject": "(no topic)",
            "submessages": [],
            "timestamp": 1403807014,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/048837dd1707e891a4e916295440c13a?d=identicon&version=1",
            "client": "desktop app Mac 0.4.4",
            "content": "<p>What about type.printClassName() ?</p>",
            "content_type": "text/html",
            "display_recipient": "objective-c",
            "flags": [
                "read",
                "historical"
            ],
            "id": 23861624,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 27979,
            "sender_email": "jdennis@gmail.com",
            "sender_full_name": "James Dennis (S'11)",
            "sender_id": 971,
            "sender_realm_str": "recurse",
            "stream_id": 23243,
            "subject": "(no topic)",
            "submessages": [],
            "timestamp": 1403807020,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/048837dd1707e891a4e916295440c13a?d=identicon&version=1",
            "client": "desktop app Mac 0.4.4",
            "content": "<p>here is a stackoverflow saying something similar, but elaborating: <a href=\"https://stackoverflow.com/questions/24101450/how-do-you-find-out-the-type-of-an-object-in-swift\" target=\"_blank\" title=\"https://stackoverflow.com/questions/24101450/how-do-you-find-out-the-type-of-an-object-in-swift\">https://stackoverflow.com/questions/24101450/how-do-you-find-out-the-type-of-an-object-in-swift</a></p>",
            "content_type": "text/html",
            "display_recipient": "objective-c",
            "flags": [
                "read",
                "historical"
            ],
            "id": 23861707,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 27979,
            "sender_email": "jdennis@gmail.com",
            "sender_full_name": "James Dennis (S'11)",
            "sender_id": 971,
            "sender_realm_str": "recurse",
            "stream_id": 23243,
            "subject": "(no topic)",
            "submessages": [],
            "timestamp": 1403807077,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/3ad220596b601687b8785b5fbfa8ecbe?d=identicon&version=1",
            "client": "website",
            "content": "<p>Interesting. So I tried</p>\n<div class=\"codehilite\"><pre>let mt = NSView()\nmt.dynamicType().className // prints \u201cNSView&quot;\nNSView.self.className() // also prints \u201cNSView&quot;\n</pre></div>\n\n\n<p>And that works, but if I pass a string to the objective-c code above, I need a way to go from String -&gt; Class. Trying to find a way to look that up in the runtime</p>",
            "content_type": "text/html",
            "display_recipient": "objective-c",
            "flags": [
                "read",
                "historical"
            ],
            "id": 23862151,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 27979,
            "sender_email": "bgmuthalaly@gmail.com",
            "sender_full_name": "Bert Muthalaly (S1'14)",
            "sender_id": 5871,
            "sender_realm_str": "recurse",
            "stream_id": 23243,
            "subject": "(no topic)",
            "submessages": [],
            "timestamp": 1403807457,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/3ad220596b601687b8785b5fbfa8ecbe?d=identicon&version=1",
            "client": "website",
            "content": "<p>Oh cool. <code>objc_lookUpClass</code> does the trick</p>",
            "content_type": "text/html",
            "display_recipient": "objective-c",
            "flags": [
                "read",
                "historical"
            ],
            "id": 23862233,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 27979,
            "sender_email": "bgmuthalaly@gmail.com",
            "sender_full_name": "Bert Muthalaly (S1'14)",
            "sender_id": 5871,
            "sender_realm_str": "recurse",
            "stream_id": 23243,
            "subject": "(no topic)",
            "submessages": [],
            "timestamp": 1403807533,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/3ad220596b601687b8785b5fbfa8ecbe?d=identicon&version=1",
            "client": "website",
            "content": "<p><a href=\"https://developer.apple.com/library/mac/documentation/Cocoa/Reference/ObjCRuntimeRef/Reference/reference.html#//apple_ref/doc/uid/TP40001418-CH1g-TPXREF104\" target=\"_blank\" title=\"https://developer.apple.com/library/mac/documentation/Cocoa/Reference/ObjCRuntimeRef/Reference/reference.html#//apple_ref/doc/uid/TP40001418-CH1g-TPXREF104\">https://developer.apple.com/library/mac/documentation/Cocoa/Reference/ObjCRuntimeRef/Reference/reference.html#//apple_ref/doc/uid/TP40001418-CH1g-TPXREF104</a></p>",
            "content_type": "text/html",
            "display_recipient": "objective-c",
            "flags": [
                "read",
                "historical"
            ],
            "id": 23862242,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 27979,
            "sender_email": "bgmuthalaly@gmail.com",
            "sender_full_name": "Bert Muthalaly (S1'14)",
            "sender_id": 5871,
            "sender_realm_str": "recurse",
            "stream_id": 23243,
            "subject": "(no topic)",
            "submessages": [],
            "timestamp": 1403807544,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/048837dd1707e891a4e916295440c13a?d=identicon&version=1",
            "client": "desktop app Mac 0.4.4",
            "content": "<p>or NSClassFromString</p>",
            "content_type": "text/html",
            "display_recipient": "objective-c",
            "flags": [
                "read",
                "historical"
            ],
            "id": 23862267,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 27979,
            "sender_email": "jdennis@gmail.com",
            "sender_full_name": "James Dennis (S'11)",
            "sender_id": 971,
            "sender_realm_str": "recurse",
            "stream_id": 23243,
            "subject": "(no topic)",
            "submessages": [],
            "timestamp": 1403807573,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/048837dd1707e891a4e916295440c13a?d=identicon&version=1",
            "client": "desktop app Mac 0.4.4",
            "content": "<p><a href=\"https://developer.apple.com/library/prerelease/ios/documentation/Cocoa/Reference/Foundation/Miscellaneous/Foundation_Functions/#//apple_ref/c/func/NSClassFromString\" target=\"_blank\" title=\"https://developer.apple.com/library/prerelease/ios/documentation/Cocoa/Reference/Foundation/Miscellaneous/Foundation_Functions/#//apple_ref/c/func/NSClassFromString\">https://developer.apple.com/library/prerelease/ios/documentation/Cocoa/Reference/Foundation/Miscellaneous/Foundation_Functions/#//apple_ref/c/func/NSClassFromString</a></p>",
            "content_type": "text/html",
            "display_recipient": "objective-c",
            "flags": [
                "read",
                "historical"
            ],
            "id": 23862274,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 27979,
            "sender_email": "jdennis@gmail.com",
            "sender_full_name": "James Dennis (S'11)",
            "sender_id": 971,
            "sender_realm_str": "recurse",
            "stream_id": 23243,
            "subject": "(no topic)",
            "submessages": [],
            "timestamp": 1403807585,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/3ad220596b601687b8785b5fbfa8ecbe?d=identicon&version=1",
            "client": "website",
            "content": "<p>!!!!</p>",
            "content_type": "text/html",
            "display_recipient": "objective-c",
            "flags": [
                "read",
                "historical"
            ],
            "id": 23862292,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 27979,
            "sender_email": "bgmuthalaly@gmail.com",
            "sender_full_name": "Bert Muthalaly (S1'14)",
            "sender_id": 5871,
            "sender_realm_str": "recurse",
            "stream_id": 23243,
            "subject": "(no topic)",
            "submessages": [],
            "timestamp": 1403807612,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/3ad220596b601687b8785b5fbfa8ecbe?d=identicon&version=1",
            "client": "website",
            "content": "<p>Thank you! </p>",
            "content_type": "text/html",
            "display_recipient": "objective-c",
            "flags": [
                "read",
                "historical"
            ],
            "id": 23862296,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 27979,
            "sender_email": "bgmuthalaly@gmail.com",
            "sender_full_name": "Bert Muthalaly (S1'14)",
            "sender_id": 5871,
            "sender_realm_str": "recurse",
            "stream_id": 23243,
            "subject": "(no topic)",
            "submessages": [],
            "timestamp": 1403807617,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/3ad220596b601687b8785b5fbfa8ecbe?d=identicon&version=1",
            "client": "website",
            "content": "<p>Awesome, that lets me do the lookup on the Swift side of the bridge</p>",
            "content_type": "text/html",
            "display_recipient": "objective-c",
            "flags": [
                "read",
                "historical"
            ],
            "id": 23862310,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 27979,
            "sender_email": "bgmuthalaly@gmail.com",
            "sender_full_name": "Bert Muthalaly (S1'14)",
            "sender_id": 5871,
            "sender_realm_str": "recurse",
            "stream_id": 23243,
            "subject": "(no topic)",
            "submessages": [],
            "timestamp": 1403807637,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/048837dd1707e891a4e916295440c13a?d=identicon&version=1",
            "client": "desktop app Mac 0.4.4",
            "content": "<p>great!</p>",
            "content_type": "text/html",
            "display_recipient": "objective-c",
            "flags": [
                "read",
                "historical"
            ],
            "id": 23862387,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 27979,
            "sender_email": "jdennis@gmail.com",
            "sender_full_name": "James Dennis (S'11)",
            "sender_id": 971,
            "sender_realm_str": "recurse",
            "stream_id": 23243,
            "subject": "(no topic)",
            "submessages": [],
            "timestamp": 1403807697,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/d96d4baab5c40af1eda5fd533d650f25?d=identicon&version=1",
            "client": "website",
            "content": "<p>Most of our project users auto layout, but there are a few view controllers that need custom landscape interfaces. To do this, <a href=\"https://developer.apple.com/library/ios/featuredarticles/ViewControllerPGforiPhoneOS/RespondingtoDeviceOrientationChanges/RespondingtoDeviceOrientationChanges.html#//apple_ref/doc/uid/TP40007457-CH7-SW14\" target=\"_blank\" title=\"https://developer.apple.com/library/ios/featuredarticles/ViewControllerPGforiPhoneOS/RespondingtoDeviceOrientationChanges/RespondingtoDeviceOrientationChanges.html#//apple_ref/doc/uid/TP40007457-CH7-SW14\">Apple recommends</a> that you use a separate view controller that only supports landscape, then present it modally. So far so good. One inconvenience is that the app uses a UINavigationController so we need to push the new landscape controller onto the nav stack, then remove the portrait one from <code>navController.subviews</code>. No problem so far.</p>\n<p>My question is this: what do people do here when they need to manage state between portrait and landscape versions of the same controller? Do you pass it around every time you rotate? Or do you leave the portrait controller in charge and pass messages to the landscape one? If the latter, does the landscape controller keep a strong pointer to the portrait one? And if so, how do you avoid retain cycles? Or do you have some other class keep track of all the state and keep the view controllers thin?</p>\n<p>I know that this is kind of all over the place, but I'm sure people have run into this before and can't seem to find a best practice anywhere.</p>",
            "content_type": "text/html",
            "display_recipient": "objective-c",
            "flags": [
                "read",
                "historical"
            ],
            "id": 23904922,
            "is_me_message": false,
            "last_edit_timestamp": 1403881712,
            "reactions": [],
            "recipient_id": 27979,
            "sender_email": "jeffblagdon@gmail.com",
            "sender_full_name": "Jeff Blagdon (F'13)",
            "sender_id": 2878,
            "sender_realm_str": "recurse",
            "stream_id": 23243,
            "subject": "Custom landscape interfaces inside UINavigationController",
            "submessages": [],
            "timestamp": 1403881380,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/bf9b55c19b8e106292986a655b6a423b?d=identicon&version=1",
            "client": "desktop app Mac 0.4.4",
            "content": "<p>Given following chunk of code \u2026</p>\n<div class=\"codehilite\"><pre><span class=\"k\">-</span> <span class=\"p\">(</span><span class=\"kt\">void</span><span class=\"p\">)</span><span class=\"nf\">start</span>\n<span class=\"p\">{</span>\n    <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"o\">!</span><span class=\"p\">[[</span><span class=\"n\">NSThread</span> <span class=\"n\">currentThread</span><span class=\"p\">]</span> <span class=\"nl\">isEqual:</span><span class=\"p\">[</span><span class=\"n\">NSThread</span> <span class=\"n\">mainThread</span><span class=\"p\">]])</span> <span class=\"p\">{</span>\n        <span class=\"k\">return</span> <span class=\"p\">[</span><span class=\"n\">self</span> <span class=\"nl\">performSelectorOnMainThread:</span><span class=\"k\">@selector</span><span class=\"p\">(</span><span class=\"n\">start</span><span class=\"p\">)</span> <span class=\"nl\">withObject:</span><span class=\"nb\">nil</span> <span class=\"nl\">waitUntilDone:</span><span class=\"n\">YES</span><span class=\"p\">];</span>\n    <span class=\"p\">}</span>\n\n    <span class=\"n\">self</span><span class=\"p\">.</span><span class=\"n\">audioStreamerThread</span> <span class=\"o\">=</span> <span class=\"p\">[[</span><span class=\"n\">NSThread</span> <span class=\"n\">alloc</span><span class=\"p\">]</span> <span class=\"nl\">initWithTarget:</span><span class=\"n\">self</span> <span class=\"nl\">selector:</span><span class=\"k\">@selector</span><span class=\"p\">(</span><span class=\"n\">run</span><span class=\"p\">)</span> <span class=\"nl\">object:</span><span class=\"nb\">nil</span><span class=\"p\">];</span>\n    <span class=\"p\">[</span><span class=\"n\">self</span><span class=\"p\">.</span><span class=\"n\">audioStreamerThread</span> <span class=\"n\">start</span><span class=\"p\">];</span>\n<span class=\"p\">}</span>\n\n<span class=\"k\">-</span> <span class=\"p\">(</span><span class=\"kt\">void</span><span class=\"p\">)</span><span class=\"nf\">run</span>\n<span class=\"p\">{</span>\n    <span class=\"err\">@</span><span class=\"n\">autoreleasepool</span> <span class=\"p\">{</span>\n        <span class=\"p\">[</span><span class=\"n\">self</span><span class=\"p\">.</span><span class=\"n\">audioStream</span> <span class=\"n\">open</span><span class=\"p\">];</span>\n\n        <span class=\"n\">self</span><span class=\"p\">.</span><span class=\"n\">isPlaying</span> <span class=\"o\">=</span> <span class=\"n\">YES</span><span class=\"p\">;</span>\n\n        <span class=\"k\">while</span> <span class=\"p\">(</span><span class=\"n\">self</span><span class=\"p\">.</span><span class=\"n\">isPlaying</span> <span class=\"o\">&amp;&amp;</span> <span class=\"p\">[[</span><span class=\"n\">NSRunLoop</span> <span class=\"n\">currentRunLoop</span><span class=\"p\">]</span> <span class=\"nl\">runMode:</span><span class=\"n\">NSDefaultRunLoopMode</span> <span class=\"nl\">beforeDate:</span><span class=\"p\">[</span><span class=\"n\">NSDate</span> <span class=\"n\">distantFuture</span><span class=\"p\">]])</span> <span class=\"p\">;</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n</pre></div>",
            "content_type": "text/html",
            "display_recipient": "objective-c",
            "flags": [
                "read",
                "historical"
            ],
            "id": 24047388,
            "is_me_message": false,
            "last_edit_timestamp": 1404165768,
            "reactions": [],
            "recipient_id": 27979,
            "sender_email": "kyle.beyer@gmail.com",
            "sender_full_name": "Kyle Beyer (S1'14)",
            "sender_id": 5870,
            "sender_realm_str": "recurse",
            "stream_id": 23243,
            "subject": "threading",
            "submessages": [],
            "timestamp": 1404164999,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/bf9b55c19b8e106292986a655b6a423b?d=identicon&version=1",
            "client": "desktop app Mac 0.4.4",
            "content": "<p>when [self.audioStreamerThread start] is called ... why would run not be called?</p>",
            "content_type": "text/html",
            "display_recipient": "objective-c",
            "flags": [
                "read",
                "historical"
            ],
            "id": 24047463,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 27979,
            "sender_email": "kyle.beyer@gmail.com",
            "sender_full_name": "Kyle Beyer (S1'14)",
            "sender_id": 5870,
            "sender_realm_str": "recurse",
            "stream_id": 23243,
            "subject": "threading",
            "submessages": [],
            "timestamp": 1404165083,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/048837dd1707e891a4e916295440c13a?d=identicon&version=1",
            "client": "desktop app Mac 0.4.4",
            "content": "<p>Can you provide more context? For example, is the main thread stopping before that finishes?</p>",
            "content_type": "text/html",
            "display_recipient": "objective-c",
            "flags": [
                "read",
                "historical"
            ],
            "id": 24047718,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 27979,
            "sender_email": "jdennis@gmail.com",
            "sender_full_name": "James Dennis (S'11)",
            "sender_id": 971,
            "sender_realm_str": "recurse",
            "stream_id": 23243,
            "subject": "threading",
            "submessages": [],
            "timestamp": 1404165402,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/bf9b55c19b8e106292986a655b6a423b?d=identicon&version=1",
            "client": "desktop app Mac 0.4.4",
            "content": "<p>Here's what I see ... <br>\n1 - I can set a breakpoint at line 9 (start thread)<br>\n2 - Playing through breakpoint does not activate breakpoint on line 15<br>\n3 - App continues to run with functional UI, etc</p>",
            "content_type": "text/html",
            "display_recipient": "objective-c",
            "flags": [
                "read",
                "historical"
            ],
            "id": 24047790,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 27979,
            "sender_email": "kyle.beyer@gmail.com",
            "sender_full_name": "Kyle Beyer (S1'14)",
            "sender_id": 5870,
            "sender_realm_str": "recurse",
            "stream_id": 23243,
            "subject": "threading",
            "submessages": [],
            "timestamp": 1404165500,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/048837dd1707e891a4e916295440c13a?d=identicon&version=1",
            "client": "desktop app Mac 0.4.4",
            "content": "<p>Is line 15 in the gist you pasted?</p>",
            "content_type": "text/html",
            "display_recipient": "objective-c",
            "flags": [
                "read",
                "historical"
            ],
            "id": 24047869,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 27979,
            "sender_email": "jdennis@gmail.com",
            "sender_full_name": "James Dennis (S'11)",
            "sender_id": 971,
            "sender_realm_str": "recurse",
            "stream_id": 23243,
            "subject": "threading",
            "submessages": [],
            "timestamp": 1404165665,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/bf9b55c19b8e106292986a655b6a423b?d=identicon&version=1",
            "client": "desktop app Mac 0.4.4",
            "content": "<p>Yes - the @autoreleasepool in run</p>",
            "content_type": "text/html",
            "display_recipient": "objective-c",
            "flags": [
                "read",
                "historical"
            ],
            "id": 24047959,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 27979,
            "sender_email": "kyle.beyer@gmail.com",
            "sender_full_name": "Kyle Beyer (S1'14)",
            "sender_id": 5870,
            "sender_realm_str": "recurse",
            "stream_id": 23243,
            "subject": "threading",
            "submessages": [],
            "timestamp": 1404165815,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/dcdc2ca985b30fd80e086eda1fe1a018e89e77b5?x=x&version=3",
            "client": "website",
            "content": "<p>Have you tried the equivalent code with either GCD or an NSOperationQueue? At least in the iOS world, using either of them is generally considered more idiomatic. Unless you have a concrete reason for using NSThread, you might have better luck with one of them, either in terms of it working or just finding more helpful online resources.</p>",
            "content_type": "text/html",
            "display_recipient": "objective-c",
            "flags": [
                "read",
                "historical"
            ],
            "id": 24048114,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 27979,
            "sender_email": "michael@lazerwalker.com",
            "sender_full_name": "Em Lazer-Walker (she/they) (m1'18)",
            "sender_id": 2854,
            "sender_realm_str": "recurse",
            "stream_id": 23243,
            "subject": "threading",
            "submessages": [],
            "timestamp": 1404166066,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/bf9b55c19b8e106292986a655b6a423b?d=identicon&version=1",
            "client": "desktop app Mac 0.4.4",
            "content": "<p>Have not - thanks for the suggestion.  I'm an Obj-C newb</p>",
            "content_type": "text/html",
            "display_recipient": "objective-c",
            "flags": [
                "read",
                "historical"
            ],
            "id": 24048166,
            "is_me_message": false,
            "last_edit_timestamp": 1404166135,
            "reactions": [],
            "recipient_id": 27979,
            "sender_email": "kyle.beyer@gmail.com",
            "sender_full_name": "Kyle Beyer (S1'14)",
            "sender_id": 5870,
            "sender_realm_str": "recurse",
            "stream_id": 23243,
            "subject": "threading",
            "submessages": [],
            "timestamp": 1404166126,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/dcdc2ca985b30fd80e086eda1fe1a018e89e77b5?x=x&version=3",
            "client": "website",
            "content": "<p>NSOperationQueue is built on top of Grand Central Dispatch, so either is a fine choice. I personally tend towards GCD, except for when I'm using Apple's APIs that require an operation queue.</p>",
            "content_type": "text/html",
            "display_recipient": "objective-c",
            "flags": [
                "read",
                "historical"
            ],
            "id": 24048191,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 27979,
            "sender_email": "michael@lazerwalker.com",
            "sender_full_name": "Em Lazer-Walker (she/they) (m1'18)",
            "sender_id": 2854,
            "sender_realm_str": "recurse",
            "stream_id": 23243,
            "subject": "threading",
            "submessages": [],
            "timestamp": 1404166202,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/048837dd1707e891a4e916295440c13a?d=identicon&version=1",
            "client": "desktop app Mac 0.4.4",
            "content": "<p>There are things in NSOperationQueue that GCD doesn't do, like being able to pause operations, that are worth looking into too.</p>",
            "content_type": "text/html",
            "display_recipient": "objective-c",
            "flags": [
                "read",
                "historical"
            ],
            "id": 24048316,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 27979,
            "sender_email": "jdennis@gmail.com",
            "sender_full_name": "James Dennis (S'11)",
            "sender_id": 971,
            "sender_realm_str": "recurse",
            "stream_id": 23243,
            "subject": "threading",
            "submessages": [],
            "timestamp": 1404166361,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/048837dd1707e891a4e916295440c13a?d=identicon&version=1",
            "client": "desktop app Mac 0.4.4",
            "content": "<p>GCD *can* do that, but you don't get it for free like with NSOperationQueue</p>",
            "content_type": "text/html",
            "display_recipient": "objective-c",
            "flags": [
                "read",
                "historical"
            ],
            "id": 24048326,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 27979,
            "sender_email": "jdennis@gmail.com",
            "sender_full_name": "James Dennis (S'11)",
            "sender_id": 971,
            "sender_realm_str": "recurse",
            "stream_id": 23243,
            "subject": "threading",
            "submessages": [],
            "timestamp": 1404166373,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/d84e3106fff0d257cc5a95ca9ea44405?d=identicon&version=1",
            "client": "website",
            "content": "<p><span class=\"user-mention\" data-user-email=\"kyle.beyer@gmail.com\">@Kyle Beyer (S'14)</span> if you are still interested in debugging your threading code, here's how i would start. first, a minor point: everywhere that you can, if you think you are always on a main or background thread, assert that. i wrote an ASSERT_MAIN_THREAD macro to make it easy. i think this is healthier than the 'if on wrong thread call self on write thread approach' because it simplifies the mental model.</p>",
            "content_type": "text/html",
            "display_recipient": "objective-c",
            "flags": [
                "read",
                "historical"
            ],
            "id": 24082813,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 27979,
            "sender_email": "george.w.king@gmail.com",
            "sender_full_name": "George King (he) (S'13)",
            "sender_id": 2153,
            "sender_realm_str": "recurse",
            "stream_id": 23243,
            "subject": "threading",
            "submessages": [],
            "timestamp": 1404230813,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/d84e3106fff0d257cc5a95ca9ea44405?d=identicon&version=1",
            "client": "website",
            "content": "<p>second, check that your runloop code is really doing what you think it is doing. i recall writing loops like that and then finding out that they were only going through one cycle.</p>",
            "content_type": "text/html",
            "display_recipient": "objective-c",
            "flags": [
                "read",
                "historical"
            ],
            "id": 24082837,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 27979,
            "sender_email": "george.w.king@gmail.com",
            "sender_full_name": "George King (he) (S'13)",
            "sender_id": 2153,
            "sender_realm_str": "recurse",
            "stream_id": 23243,
            "subject": "threading",
            "submessages": [],
            "timestamp": 1404230863,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/d84e3106fff0d257cc5a95ca9ea44405?d=identicon&version=1",
            "client": "website",
            "content": "<p>neither of these tips addresses your question though; if run really never gets called then the runloop is not to blame.</p>",
            "content_type": "text/html",
            "display_recipient": "objective-c",
            "flags": [
                "read",
                "historical"
            ],
            "id": 24082984,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 27979,
            "sender_email": "george.w.king@gmail.com",
            "sender_full_name": "George King (he) (S'13)",
            "sender_id": 2153,
            "sender_realm_str": "recurse",
            "stream_id": 23243,
            "subject": "threading",
            "submessages": [],
            "timestamp": 1404231026,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/bf9b55c19b8e106292986a655b6a423b?d=identicon&version=1",
            "client": "desktop app Mac 0.4.4",
            "content": "<p><span class=\"user-mention\" data-user-email=\"george.w.king@gmail.com\">@George King (S'14)</span> Thanks for the tip.  While doing some research on approaches to implement your suggestion, I ran accross this gist: <a href=\"https://gist.github.com/steipete/5664345\" target=\"_blank\" title=\"https://gist.github.com/steipete/5664345\">https://gist.github.com/steipete/5664345</a>  I assume line 58 is similar to your ASSERT_MAIN_THREAD?</p>",
            "content_type": "text/html",
            "display_recipient": "objective-c",
            "flags": [
                "read",
                "historical"
            ],
            "id": 24092432,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 27979,
            "sender_email": "kyle.beyer@gmail.com",
            "sender_full_name": "Kyle Beyer (S1'14)",
            "sender_id": 5870,
            "sender_realm_str": "recurse",
            "stream_id": 23243,
            "subject": "threading",
            "submessages": [],
            "timestamp": 1404243248,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/d84e3106fff0d257cc5a95ca9ea44405?d=identicon&version=1",
            "client": "website",
            "content": "<p>sure #define ASSERT_MAIN_THREAD NSCAssert(NSThread.isMainThread, @\"expected main thread.\")</p>",
            "content_type": "text/html",
            "display_recipient": "objective-c",
            "flags": [
                "read",
                "historical"
            ],
            "id": 24092685,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 27979,
            "sender_email": "george.w.king@gmail.com",
            "sender_full_name": "George King (he) (S'13)",
            "sender_id": 2153,
            "sender_realm_str": "recurse",
            "stream_id": 23243,
            "subject": "threading",
            "submessages": [],
            "timestamp": 1404243503,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/d84e3106fff0d257cc5a95ca9ea44405?d=identicon&version=1",
            "client": "website",
            "content": "<p>i'm a big believer in making error checking as convenient as possible, otherwise it tends not to get done. also, i didn't know you could call class methods with dot syntax!</p>",
            "content_type": "text/html",
            "display_recipient": "objective-c",
            "flags": [
                "read",
                "historical"
            ],
            "id": 24092714,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 27979,
            "sender_email": "george.w.king@gmail.com",
            "sender_full_name": "George King (he) (S'13)",
            "sender_id": 2153,
            "sender_realm_str": "recurse",
            "stream_id": 23243,
            "subject": "threading",
            "submessages": [],
            "timestamp": 1404243555,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/d84e3106fff0d257cc5a95ca9ea44405?d=identicon&version=1",
            "client": "website",
            "content": "<p>did you ever solve your problem?</p>",
            "content_type": "text/html",
            "display_recipient": "objective-c",
            "flags": [
                "read",
                "historical"
            ],
            "id": 24092732,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 27979,
            "sender_email": "george.w.king@gmail.com",
            "sender_full_name": "George King (he) (S'13)",
            "sender_id": 2153,
            "sender_realm_str": "recurse",
            "stream_id": 23243,
            "subject": "threading",
            "submessages": [],
            "timestamp": 1404243584,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/bf9b55c19b8e106292986a655b6a423b?d=identicon&version=1",
            "client": "desktop app Mac 0.4.4",
            "content": "<p>The thread is running now ... but I'm cleaning up and trying to make sure I understand the nuances</p>",
            "content_type": "text/html",
            "display_recipient": "objective-c",
            "flags": [
                "read",
                "historical"
            ],
            "id": 24093108,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 27979,
            "sender_email": "kyle.beyer@gmail.com",
            "sender_full_name": "Kyle Beyer (S1'14)",
            "sender_id": 5870,
            "sender_realm_str": "recurse",
            "stream_id": 23243,
            "subject": "threading",
            "submessages": [],
            "timestamp": 1404244025,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/604a47894fedac4d2a5dd64df3da9e92?d=identicon&version=1",
            "client": "desktop app Mac 0.4.4",
            "content": "<p>I'm trying so hard to get CocoaPods to work in my new app, and it is the same hell I always run into. Some of the pods are depending on each other, which is causing duplicate symbols, they aren't uninstalling when they should, and now it can't find the library for -lPods.</p>\n<p>I've tried everything suggestion I can find on the internet- can anyone look over my setup and get me up and running with this?</p>",
            "content_type": "text/html",
            "display_recipient": "objective-c",
            "flags": [
                "read",
                "historical"
            ],
            "id": 24416105,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 27979,
            "sender_email": "lauraeskelton@gmail.com",
            "sender_full_name": "Laura Skelton (she) (S1'14)",
            "sender_id": 5878,
            "sender_realm_str": "recurse",
            "stream_id": 23243,
            "subject": "CocoaPods Hell",
            "submessages": [],
            "timestamp": 1404830541,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/dcdc2ca985b30fd80e086eda1fe1a018e89e77b5?x=x&version=3",
            "client": "website",
            "content": "<p><span class=\"user-mention\" data-user-email=\"lauraeskelton@gmail.com\">@Laura Skelton (S'14)</span>  Hopefully you'll figure it out before then, but worse case scenario I'm happy to take a peek on Thursday.</p>",
            "content_type": "text/html",
            "display_recipient": "objective-c",
            "flags": [
                "read",
                "historical"
            ],
            "id": 24416313,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 27979,
            "sender_email": "michael@lazerwalker.com",
            "sender_full_name": "Em Lazer-Walker (she/they) (m1'18)",
            "sender_id": 2854,
            "sender_realm_str": "recurse",
            "stream_id": 23243,
            "subject": "CocoaPods Hell",
            "submessages": [],
            "timestamp": 1404830812,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/604a47894fedac4d2a5dd64df3da9e92?d=identicon&version=1",
            "client": "desktop app Mac 0.4.4",
            "content": "<p>Thanks <span class=\"user-mention\" data-user-email=\"michael@lazerwalker.com\">@Mike Walker (F'13)</span> ! Hopefully I'll figure it out by then, but not looking good so far...</p>",
            "content_type": "text/html",
            "display_recipient": "objective-c",
            "flags": [
                "read",
                "historical"
            ],
            "id": 24446397,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 27979,
            "sender_email": "lauraeskelton@gmail.com",
            "sender_full_name": "Laura Skelton (she) (S1'14)",
            "sender_id": 5878,
            "sender_realm_str": "recurse",
            "stream_id": 23243,
            "subject": "CocoaPods Hell",
            "submessages": [],
            "timestamp": 1404849850,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/048837dd1707e891a4e916295440c13a?d=identicon&version=1",
            "client": "desktop app Mac 0.4.4",
            "content": "<p><span class=\"user-mention\" data-user-email=\"lauraeskelton@gmail.com\">@Laura Skelton (S'14)</span> Mind elaborating on the issue you're facing? I've been using cocoapods too, but only for a few things, so my dependencies are mostly straight forwrd</p>",
            "content_type": "text/html",
            "display_recipient": "objective-c",
            "flags": [
                "read",
                "historical"
            ],
            "id": 24448838,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 27979,
            "sender_email": "jdennis@gmail.com",
            "sender_full_name": "James Dennis (S'11)",
            "sender_id": 971,
            "sender_realm_str": "recurse",
            "stream_id": 23243,
            "subject": "CocoaPods Hell",
            "submessages": [],
            "timestamp": 1404850710,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/604a47894fedac4d2a5dd64df3da9e92?d=identicon&version=1",
            "client": "desktop app Mac 0.4.4",
            "content": "<p><span class=\"user-mention\" data-user-email=\"jdennis@gmail.com\">@James Dennis (S'11)</span>  I seem to have CocoaPods working now, after clearing it from the project, reinstalling it, adding it back to the project, and adding pods in one by one.</p>",
            "content_type": "text/html",
            "display_recipient": "objective-c",
            "flags": [
                "read",
                "historical"
            ],
            "id": 24462349,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 27979,
            "sender_email": "lauraeskelton@gmail.com",
            "sender_full_name": "Laura Skelton (she) (S1'14)",
            "sender_id": 5878,
            "sender_realm_str": "recurse",
            "stream_id": 23243,
            "subject": "CocoaPods Hell",
            "submessages": [],
            "timestamp": 1404858511,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/604a47894fedac4d2a5dd64df3da9e92?d=identicon&version=1",
            "client": "desktop app Mac 0.4.4",
            "content": "<p>I'm trying to have different pods for my main target and my testing target (Specta, Expecta, and OCMockito), and it was causing some nasty compiler errors where AFNetworking was somehow installed twice.</p>",
            "content_type": "text/html",
            "display_recipient": "objective-c",
            "flags": [
                "read",
                "historical"
            ],
            "id": 24462759,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 27979,
            "sender_email": "lauraeskelton@gmail.com",
            "sender_full_name": "Laura Skelton (she) (S1'14)",
            "sender_id": 5878,
            "sender_realm_str": "recurse",
            "stream_id": 23243,
            "subject": "CocoaPods Hell",
            "submessages": [],
            "timestamp": 1404858579,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/048837dd1707e891a4e916295440c13a?d=identicon&version=1",
            "client": "desktop app Mac 0.4.4",
            "content": "<p>Cripes... sounds arduous.</p>",
            "content_type": "text/html",
            "display_recipient": "objective-c",
            "flags": [
                "read",
                "historical"
            ],
            "id": 24462854,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 27979,
            "sender_email": "jdennis@gmail.com",
            "sender_full_name": "James Dennis (S'11)",
            "sender_id": 971,
            "sender_realm_str": "recurse",
            "stream_id": 23243,
            "subject": "CocoaPods Hell",
            "submessages": [],
            "timestamp": 1404858594,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/048837dd1707e891a4e916295440c13a?d=identicon&version=1",
            "client": "desktop app Mac 0.4.4",
            "content": "<p>Was it two separate versions of AFNetworking</p>",
            "content_type": "text/html",
            "display_recipient": "objective-c",
            "flags": [
                "read",
                "historical"
            ],
            "id": 24462889,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 27979,
            "sender_email": "jdennis@gmail.com",
            "sender_full_name": "James Dennis (S'11)",
            "sender_id": 971,
            "sender_realm_str": "recurse",
            "stream_id": 23243,
            "subject": "CocoaPods Hell",
            "submessages": [],
            "timestamp": 1404858600,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/604a47894fedac4d2a5dd64df3da9e92?d=identicon&version=1",
            "client": "desktop app Mac 0.4.4",
            "content": "<p>I have no idea what was going on. It wouldn't let me delete AFNetworking- it was still there twice even when I removed it from the podfile.</p>",
            "content_type": "text/html",
            "display_recipient": "objective-c",
            "flags": [
                "read",
                "historical"
            ],
            "id": 24463132,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 27979,
            "sender_email": "lauraeskelton@gmail.com",
            "sender_full_name": "Laura Skelton (she) (S1'14)",
            "sender_id": 5878,
            "sender_realm_str": "recurse",
            "stream_id": 23243,
            "subject": "CocoaPods Hell",
            "submessages": [],
            "timestamp": 1404858639,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/604a47894fedac4d2a5dd64df3da9e92?d=identicon&version=1",
            "client": "desktop app Mac 0.4.4",
            "content": "<p>It seems to be running now though! I have Travis CI building both targets successfully, which is pretty exciting after struggling for hours with screwy configuration.</p>",
            "content_type": "text/html",
            "display_recipient": "objective-c",
            "flags": [
                "read",
                "historical"
            ],
            "id": 24463158,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 27979,
            "sender_email": "lauraeskelton@gmail.com",
            "sender_full_name": "Laura Skelton (she) (S1'14)",
            "sender_id": 5878,
            "sender_realm_str": "recurse",
            "stream_id": 23243,
            "subject": "CocoaPods Hell",
            "submessages": [],
            "timestamp": 1404858716,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/048837dd1707e891a4e916295440c13a?d=identicon&version=1",
            "client": "desktop app Mac 0.4.4",
            "content": "<p>nice!</p>",
            "content_type": "text/html",
            "display_recipient": "objective-c",
            "flags": [
                "read",
                "historical"
            ],
            "id": 24463182,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 27979,
            "sender_email": "jdennis@gmail.com",
            "sender_full_name": "James Dennis (S'11)",
            "sender_id": 971,
            "sender_realm_str": "recurse",
            "stream_id": 23243,
            "subject": "CocoaPods Hell",
            "submessages": [],
            "timestamp": 1404858726,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/048837dd1707e891a4e916295440c13a?d=identicon&version=1",
            "client": "desktop app Mac 0.4.4",
            "content": "<p>I think cocoapods is a cool idea and possibly necessary, but it's def still an early thing and might have bugs</p>",
            "content_type": "text/html",
            "display_recipient": "objective-c",
            "flags": [
                "read",
                "historical"
            ],
            "id": 24463206,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 27979,
            "sender_email": "jdennis@gmail.com",
            "sender_full_name": "James Dennis (S'11)",
            "sender_id": 971,
            "sender_realm_str": "recurse",
            "stream_id": 23243,
            "subject": "CocoaPods Hell",
            "submessages": [],
            "timestamp": 1404858751,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/dcdc2ca985b30fd80e086eda1fe1a018e89e77b5?x=x&version=3",
            "client": "ZulipiOS",
            "content": "<p>Just to clarify with a dumb question: you did run pod install after removing AFNetworking from the Podfile, right?</p>",
            "content_type": "text/html",
            "display_recipient": "objective-c",
            "flags": [
                "read",
                "historical"
            ],
            "id": 24464255,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 27979,
            "sender_email": "michael@lazerwalker.com",
            "sender_full_name": "Em Lazer-Walker (she/they) (m1'18)",
            "sender_id": 2854,
            "sender_realm_str": "recurse",
            "stream_id": 23243,
            "subject": "CocoaPods Hell",
            "submessages": [],
            "timestamp": 1404860266,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/dcdc2ca985b30fd80e086eda1fe1a018e89e77b5?x=x&version=3",
            "client": "ZulipiOS",
            "content": "<p>If so, that's definitely a bug -- I'd love to peek at it and/or help you file a bug.</p>",
            "content_type": "text/html",
            "display_recipient": "objective-c",
            "flags": [
                "read",
                "historical"
            ],
            "id": 24464287,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 27979,
            "sender_email": "michael@lazerwalker.com",
            "sender_full_name": "Em Lazer-Walker (she/they) (m1'18)",
            "sender_id": 2854,
            "sender_realm_str": "recurse",
            "stream_id": 23243,
            "subject": "CocoaPods Hell",
            "submessages": [],
            "timestamp": 1404860286,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/604a47894fedac4d2a5dd64df3da9e92?d=identicon&version=1",
            "client": "desktop app Mac 0.4.4",
            "content": "<p><span class=\"user-mention\" data-user-email=\"michael@lazerwalker.com\">@Mike Walker (F'13)</span>  looking at the commit/build history it seems that the duplicate symbols bug went away after I removed the pods, but I don't know what was going on with that in the first place. I think I read a bad tutorial on setting up the .travis.yml file and somehow that made it double-load afnetworking.</p>",
            "content_type": "text/html",
            "display_recipient": "objective-c",
            "flags": [
                "read",
                "historical"
            ],
            "id": 24475476,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 27979,
            "sender_email": "lauraeskelton@gmail.com",
            "sender_full_name": "Laura Skelton (she) (S1'14)",
            "sender_id": 5878,
            "sender_realm_str": "recurse",
            "stream_id": 23243,
            "subject": "CocoaPods Hell",
            "submessages": [],
            "timestamp": 1404868299,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/604a47894fedac4d2a5dd64df3da9e92?d=identicon&version=1",
            "client": "desktop app Mac 0.4.4",
            "content": "<p>Here is the build with all of the duplicate symbol warnings- not sure if it is a bug in CocoaPods. If so I'd love help filing a bug! <a href=\"https://travis-ci.org/lauraskelton/beerchooser/builds/29380774\" target=\"_blank\" title=\"https://travis-ci.org/lauraskelton/beerchooser/builds/29380774\">https://travis-ci.org/lauraskelton/beerchooser/builds/29380774</a></p>",
            "content_type": "text/html",
            "display_recipient": "objective-c",
            "flags": [
                "read",
                "historical"
            ],
            "id": 24475520,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 27979,
            "sender_email": "lauraeskelton@gmail.com",
            "sender_full_name": "Laura Skelton (she) (S1'14)",
            "sender_id": 5878,
            "sender_realm_str": "recurse",
            "stream_id": 23243,
            "subject": "CocoaPods Hell",
            "submessages": [],
            "timestamp": 1404868331,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/604a47894fedac4d2a5dd64df3da9e92?d=identicon&version=1",
            "client": "desktop app Mac 0.4.4",
            "content": "<p>I think CocoaPods just doesn't like me. I got excited that I finally figured out the right configuration and added it to another project, but somehow libPods doesn't have the correct architectures. Maybe CocoaPods is building itself in the XCode beta instead of the stable XCode and is running into problems that way.</p>",
            "content_type": "text/html",
            "display_recipient": "objective-c",
            "flags": [
                "read",
                "historical"
            ],
            "id": 24475597,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 27979,
            "sender_email": "lauraeskelton@gmail.com",
            "sender_full_name": "Laura Skelton (she) (S1'14)",
            "sender_id": 5878,
            "sender_realm_str": "recurse",
            "stream_id": 23243,
            "subject": "CocoaPods Hell",
            "submessages": [],
            "timestamp": 1404868539,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/604a47894fedac4d2a5dd64df3da9e92?d=identicon&version=1",
            "client": "desktop app Mac 0.4.4",
            "content": "<p><span class=\"user-mention\" data-user-email=\"michael@lazerwalker.com\">@Mike Walker (F'13)</span> Do you have a good system for using secure strings (like API keys) with Travis / public GitHub repository? Or, have you ever gotten travis's encrypt variables to work?</p>",
            "content_type": "text/html",
            "display_recipient": "objective-c",
            "flags": [
                "read",
                "historical"
            ],
            "id": 24564472,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 27979,
            "sender_email": "lauraeskelton@gmail.com",
            "sender_full_name": "Laura Skelton (she) (S1'14)",
            "sender_id": 5878,
            "sender_realm_str": "recurse",
            "stream_id": 23243,
            "subject": "CocoaPods Hell",
            "submessages": [],
            "timestamp": 1405004421,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/bf9b55c19b8e106292986a655b6a423b?d=identicon&version=1",
            "client": "desktop app Mac 0.4.4",
            "content": "<p>has anyone at HS already downloaded beta3?  if not, i'll download ... if so, may I put on USB drive?</p>",
            "content_type": "text/html",
            "display_recipient": "objective-c",
            "flags": [
                "read",
                "historical"
            ],
            "id": 24564941,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 27979,
            "sender_email": "kyle.beyer@gmail.com",
            "sender_full_name": "Kyle Beyer (S1'14)",
            "sender_id": 5870,
            "sender_realm_str": "recurse",
            "stream_id": 23243,
            "subject": "Xcode Beta 3",
            "submessages": [],
            "timestamp": 1405004956,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/dcdc2ca985b30fd80e086eda1fe1a018e89e77b5?x=x&version=3",
            "client": "website",
            "content": "<p>In fact, I even have a blog post about it! <a href=\"http://blog.lazerwalker.com/blog/2014/05/14/handling-private-api-keys-in-open-source-ios-apps/\" target=\"_blank\" title=\"http://blog.lazerwalker.com/blog/2014/05/14/handling-private-api-keys-in-open-source-ios-apps/\">http://blog.lazerwalker.com/blog/2014/05/14/handling-private-api-keys-in-open-source-ios-apps/</a></p>",
            "content_type": "text/html",
            "display_recipient": "objective-c",
            "flags": [
                "read",
                "historical"
            ],
            "id": 24565354,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 27979,
            "sender_email": "michael@lazerwalker.com",
            "sender_full_name": "Em Lazer-Walker (she/they) (m1'18)",
            "sender_id": 2854,
            "sender_realm_str": "recurse",
            "stream_id": 23243,
            "subject": "CocoaPods Hell",
            "submessages": [],
            "timestamp": 1405005373,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/dcdc2ca985b30fd80e086eda1fe1a018e89e77b5?x=x&version=3",
            "client": "website",
            "content": "<p>(the code in question has since been extracted out into a standalone Configuration object: <a href=\"https://github.com/lazerwalker/Theseus/blob/master/Theseus/Interfaces/Configuration.m\" target=\"_blank\" title=\"https://github.com/lazerwalker/Theseus/blob/master/Theseus/Interfaces/Configuration.m\">https://github.com/lazerwalker/Theseus/blob/master/Theseus/Interfaces/Configuration.m</a>)</p>",
            "content_type": "text/html",
            "display_recipient": "objective-c",
            "flags": [
                "read",
                "historical"
            ],
            "id": 24565378,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 27979,
            "sender_email": "michael@lazerwalker.com",
            "sender_full_name": "Em Lazer-Walker (she/they) (m1'18)",
            "sender_id": 2854,
            "sender_realm_str": "recurse",
            "stream_id": 23243,
            "subject": "CocoaPods Hell",
            "submessages": [],
            "timestamp": 1405005422,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/dcdc2ca985b30fd80e086eda1fe1a018e89e77b5?x=x&version=3",
            "client": "website",
            "content": "<p>I don't think you're not going to be able to get travis's encrypted variables to work with Objective-C \u2014 accessing ENV variables from within code compiled by Xcode isn't easy (I can think of some ways that are theoretically possible, but more trouble than they're worth)</p>",
            "content_type": "text/html",
            "display_recipient": "objective-c",
            "flags": [
                "read",
                "historical"
            ],
            "id": 24565428,
            "is_me_message": false,
            "last_edit_timestamp": 1405005524,
            "reactions": [],
            "recipient_id": 27979,
            "sender_email": "michael@lazerwalker.com",
            "sender_full_name": "Em Lazer-Walker (she/they) (m1'18)",
            "sender_id": 2854,
            "sender_realm_str": "recurse",
            "stream_id": 23243,
            "subject": "CocoaPods Hell",
            "submessages": [],
            "timestamp": 1405005483,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/dcdc2ca985b30fd80e086eda1fe1a018e89e77b5?x=x&version=3",
            "client": "website",
            "content": "<p><span class=\"user-mention\" data-user-email=\"lauraeskelton@gmail.com\">@Laura Skelton (S'14)</span> It's also worth mentioning that if you find yourself absolutely needing to use actual production API keys in Travis (as opposed to either dummy values or a second API key created explicitly for tests), there might be a simpler way to accomplish what you're trying to do. Happy to chat about it!</p>",
            "content_type": "text/html",
            "display_recipient": "objective-c",
            "flags": [
                "read",
                "historical"
            ],
            "id": 24565695,
            "is_me_message": false,
            "last_edit_timestamp": 1405005897,
            "reactions": [],
            "recipient_id": 27979,
            "sender_email": "michael@lazerwalker.com",
            "sender_full_name": "Em Lazer-Walker (she/they) (m1'18)",
            "sender_id": 2854,
            "sender_realm_str": "recurse",
            "stream_id": 23243,
            "subject": "CocoaPods Hell",
            "submessages": [],
            "timestamp": 1405005766,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/604a47894fedac4d2a5dd64df3da9e92?d=identicon&version=1",
            "client": "desktop app Mac 0.4.4",
            "content": "<p><span class=\"user-mention\" data-user-email=\"michael@lazerwalker.com\">@Mike Walker (F'13)</span> Thanks, this is super helpful! I managed to get ENV variables to work after much frustration yesterday- I have some dummy ENV variables set in the travis.yml file, and real ones in a <a href=\"http://config.sh\" target=\"_blank\" title=\"http://config.sh\">config.sh</a> file that I can run before a command line build, with preprocessor macros set in the Build Settings like <code>kMyClientID='${HS_CLIENT_ID}'</code>, where <code>HS_CLIENT_ID</code> is the ENV variable, and kMyClientID is what I refer to in my code.</p>",
            "content_type": "text/html",
            "display_recipient": "objective-c",
            "flags": [
                "read",
                "historical"
            ],
            "id": 24565967,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 27979,
            "sender_email": "lauraeskelton@gmail.com",
            "sender_full_name": "Laura Skelton (she) (S1'14)",
            "sender_id": 5878,
            "sender_realm_str": "recurse",
            "stream_id": 23243,
            "subject": "CocoaPods Hell",
            "submessages": [],
            "timestamp": 1405006086,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/604a47894fedac4d2a5dd64df3da9e92?d=identicon&version=1",
            "client": "desktop app Mac 0.4.4",
            "content": "<p>It actually works, but I don't like having to use the command line, and it breaks building in-xcode, because the kMyClientID is not set properly until the bash config script is run.</p>",
            "content_type": "text/html",
            "display_recipient": "objective-c",
            "flags": [
                "read",
                "historical"
            ],
            "id": 24566010,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 27979,
            "sender_email": "lauraeskelton@gmail.com",
            "sender_full_name": "Laura Skelton (she) (S1'14)",
            "sender_id": 5878,
            "sender_realm_str": "recurse",
            "stream_id": 23243,
            "subject": "CocoaPods Hell",
            "submessages": [],
            "timestamp": 1405006134,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/dcdc2ca985b30fd80e086eda1fe1a018e89e77b5?x=x&version=3",
            "client": "website",
            "content": "<p>Exactly. I don't consider being unable to build from Xcode a viable solution :)</p>",
            "content_type": "text/html",
            "display_recipient": "objective-c",
            "flags": [
                "read",
                "historical"
            ],
            "id": 24566023,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 27979,
            "sender_email": "michael@lazerwalker.com",
            "sender_full_name": "Em Lazer-Walker (she/they) (m1'18)",
            "sender_id": 2854,
            "sender_realm_str": "recurse",
            "stream_id": 23243,
            "subject": "CocoaPods Hell",
            "submessages": [],
            "timestamp": 1405006161,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/604a47894fedac4d2a5dd64df3da9e92?d=identicon&version=1",
            "client": "desktop app Mac 0.4.4",
            "content": "<p>If there were a way to run the <a href=\"http://config.sh\" target=\"_blank\" title=\"http://config.sh\">config.sh</a> file as part of an xcode build it would work. And if I could get the travis secure variables to work I could actually run the production code on Travis and set up auto-deploying to TestFlight and stuff. But that part isn't really necessary.</p>",
            "content_type": "text/html",
            "display_recipient": "objective-c",
            "flags": [
                "read",
                "historical"
            ],
            "id": 24566071,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 27979,
            "sender_email": "lauraeskelton@gmail.com",
            "sender_full_name": "Laura Skelton (she) (S1'14)",
            "sender_id": 5878,
            "sender_realm_str": "recurse",
            "stream_id": 23243,
            "subject": "CocoaPods Hell",
            "submessages": [],
            "timestamp": 1405006211,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/604a47894fedac4d2a5dd64df3da9e92?d=identicon&version=1",
            "client": "desktop app Mac 0.4.4",
            "content": "<p>Oh I see, so you can actually set Travis to rename the configuration.plist.example as configuration.plist, and run with the fake variables? That is perfect!</p>",
            "content_type": "text/html",
            "display_recipient": "objective-c",
            "flags": [
                "read",
                "historical"
            ],
            "id": 24566210,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 27979,
            "sender_email": "lauraeskelton@gmail.com",
            "sender_full_name": "Laura Skelton (she) (S1'14)",
            "sender_id": 5878,
            "sender_realm_str": "recurse",
            "stream_id": 23243,
            "subject": "CocoaPods Hell",
            "submessages": [],
            "timestamp": 1405006338,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/dcdc2ca985b30fd80e086eda1fe1a018e89e77b5?x=x&version=3",
            "client": "website",
            "content": "<p>If you're using a paid/private Travis account hooked up to a private git repo, having plaintext keys wouldn't be the end of the world. The other similar setup you see fairly often in the iOS world is a Jenkins instance set up on a physical Mac Mini or something like MacMiniColo, but that's way more work.</p>",
            "content_type": "text/html",
            "display_recipient": "objective-c",
            "flags": [
                "read",
                "historical"
            ],
            "id": 24566218,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 27979,
            "sender_email": "michael@lazerwalker.com",
            "sender_full_name": "Em Lazer-Walker (she/they) (m1'18)",
            "sender_id": 2854,
            "sender_realm_str": "recurse",
            "stream_id": 23243,
            "subject": "CocoaPods Hell",
            "submessages": [],
            "timestamp": 1405006348,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/dcdc2ca985b30fd80e086eda1fe1a018e89e77b5?x=x&version=3",
            "client": "website",
            "content": "<p>yup, exactly: <a href=\"https://github.com/lazerwalker/Theseus/blob/master/.travis.yml\" target=\"_blank\" title=\"https://github.com/lazerwalker/Theseus/blob/master/.travis.yml\">https://github.com/lazerwalker/Theseus/blob/master/.travis.yml</a></p>",
            "content_type": "text/html",
            "display_recipient": "objective-c",
            "flags": [
                "read",
                "historical"
            ],
            "id": 24566245,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 27979,
            "sender_email": "michael@lazerwalker.com",
            "sender_full_name": "Em Lazer-Walker (she/they) (m1'18)",
            "sender_id": 2854,
            "sender_realm_str": "recurse",
            "stream_id": 23243,
            "subject": "CocoaPods Hell",
            "submessages": [],
            "timestamp": 1405006378,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/604a47894fedac4d2a5dd64df3da9e92?d=identicon&version=1",
            "client": "desktop app Mac 0.4.4",
            "content": "<p>Oh that is awesome. Thank you so much! I'm not trying to be fancy, just knowing how to get a simple setup working with the Travis build tests is perfect. Love your solution- this bash script thing is way too hacky.</p>",
            "content_type": "text/html",
            "display_recipient": "objective-c",
            "flags": [
                "read",
                "historical"
            ],
            "id": 24566339,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 27979,
            "sender_email": "lauraeskelton@gmail.com",
            "sender_full_name": "Laura Skelton (she) (S1'14)",
            "sender_id": 5878,
            "sender_realm_str": "recurse",
            "stream_id": 23243,
            "subject": "CocoaPods Hell",
            "submessages": [],
            "timestamp": 1405006461,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/dcdc2ca985b30fd80e086eda1fe1a018e89e77b5?x=x&version=3",
            "client": "website",
            "content": "<p><img alt=\":thumbsup:\" class=\"emoji\" src=\"static/third/gemoji/images/emoji/thumbsup.png\" title=\":thumbsup:\"></p>",
            "content_type": "text/html",
            "display_recipient": "objective-c",
            "flags": [
                "read",
                "historical"
            ],
            "id": 24566369,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 27979,
            "sender_email": "michael@lazerwalker.com",
            "sender_full_name": "Em Lazer-Walker (she/they) (m1'18)",
            "sender_id": 2854,
            "sender_realm_str": "recurse",
            "stream_id": 23243,
            "subject": "CocoaPods Hell",
            "submessages": [],
            "timestamp": 1405006513,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/bf9b55c19b8e106292986a655b6a423b?d=identicon&version=1",
            "client": "desktop app Mac 0.4.4",
            "content": "<p>downloading...</p>",
            "content_type": "text/html",
            "display_recipient": "objective-c",
            "flags": [
                "read",
                "historical"
            ],
            "id": 24567392,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 27979,
            "sender_email": "kyle.beyer@gmail.com",
            "sender_full_name": "Kyle Beyer (S1'14)",
            "sender_id": 5870,
            "sender_realm_str": "recurse",
            "stream_id": 23243,
            "subject": "Xcode Beta 3",
            "submessages": [],
            "timestamp": 1405007750,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/bf9b55c19b8e106292986a655b6a423b?d=identicon&version=1",
            "client": "desktop app Mac 0.4.4",
            "content": "<p>On my hard drive.</p>",
            "content_type": "text/html",
            "display_recipient": "objective-c",
            "flags": [
                "read",
                "historical"
            ],
            "id": 24570978,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 27979,
            "sender_email": "kyle.beyer@gmail.com",
            "sender_full_name": "Kyle Beyer (S1'14)",
            "sender_id": 5870,
            "sender_realm_str": "recurse",
            "stream_id": 23243,
            "subject": "Xcode Beta 3",
            "submessages": [],
            "timestamp": 1405012683,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/d96d4baab5c40af1eda5fd533d650f25?d=identicon&version=1",
            "client": "website",
            "content": "<p>I'm trying to use a CATransform3D in an interactive transition to mimic <code>transitionFromView:toView:</code> with the flip transition. Problem is once I get to pi radians (i.e., the \"from\" view is perpendicular to the window) I can't get the \"to\" view to become visible. If anyone's done this before or has a good understanding of CA I'd love to talk. Here's what I have now:</p>\n<div class=\"codehilite\"><pre>        <span class=\"n\">CATransform3D</span> <span class=\"n\">inRotation</span> <span class=\"o\">=</span> <span class=\"n\">CATransform3DMakeRotation</span><span class=\"p\">(</span><span class=\"n\">M_PI</span><span class=\"p\">,</span> <span class=\"mf\">0.0</span><span class=\"p\">,</span> <span class=\"mf\">1.0</span><span class=\"p\">,</span> <span class=\"mf\">0.0</span><span class=\"p\">);</span>\n        <span class=\"n\">inRotation</span><span class=\"p\">.</span><span class=\"n\">m34</span> <span class=\"o\">=</span> <span class=\"o\">-</span><span class=\"mf\">0.02</span><span class=\"p\">;</span>\n        <span class=\"p\">[</span><span class=\"n\">toViewController</span><span class=\"p\">.</span><span class=\"n\">view</span><span class=\"p\">.</span><span class=\"n\">layer</span> <span class=\"nl\">setTransform:</span><span class=\"n\">inRotation</span><span class=\"p\">];</span>\n        <span class=\"p\">[</span><span class=\"n\">container</span> <span class=\"nl\">addSubview:</span><span class=\"n\">toViewController</span><span class=\"p\">.</span><span class=\"n\">view</span><span class=\"p\">];</span>\n\n        <span class=\"n\">CATransform3D</span> <span class=\"n\">outRotation</span> <span class=\"o\">=</span> <span class=\"n\">CATransform3DMakeRotation</span><span class=\"p\">(</span><span class=\"o\">-</span><span class=\"mf\">0.01</span><span class=\"p\">,</span> <span class=\"mf\">0.0</span><span class=\"p\">,</span> <span class=\"mf\">1.0</span><span class=\"p\">,</span> <span class=\"mf\">0.0</span><span class=\"p\">);</span>\n        <span class=\"n\">outRotation</span><span class=\"p\">.</span><span class=\"n\">m34</span> <span class=\"o\">=</span> <span class=\"o\">-</span><span class=\"mf\">0.02</span><span class=\"p\">;</span>\n\n        <span class=\"p\">[</span><span class=\"n\">UIView</span> <span class=\"nl\">animateKeyframesWithDuration:</span><span class=\"p\">[</span><span class=\"n\">self</span> <span class=\"nl\">transitionDuration:</span><span class=\"n\">transitionContext</span><span class=\"p\">]</span> <span class=\"nl\">delay:</span><span class=\"mf\">0.0</span> <span class=\"nl\">options:</span><span class=\"mi\">0</span> <span class=\"nl\">animations:</span><span class=\"o\">^</span><span class=\"p\">{</span>\n            <span class=\"p\">[</span><span class=\"n\">UIView</span> <span class=\"nl\">addKeyframeWithRelativeStartTime:</span><span class=\"mf\">0.0</span>\n                                    <span class=\"nl\">relativeDuration:</span><span class=\"mf\">0.5</span>\n                                          <span class=\"nl\">animations:</span><span class=\"o\">^</span><span class=\"p\">{</span>\n                                              <span class=\"n\">fromViewController</span><span class=\"p\">.</span><span class=\"n\">view</span><span class=\"p\">.</span><span class=\"n\">layer</span><span class=\"p\">.</span><span class=\"n\">transform</span> <span class=\"o\">=</span> <span class=\"n\">inRotation</span><span class=\"p\">;</span>\n                                          <span class=\"p\">}];</span>\n            <span class=\"p\">[</span><span class=\"n\">UIView</span> <span class=\"nl\">addKeyframeWithRelativeStartTime:</span><span class=\"mf\">0.5</span>\n                                    <span class=\"nl\">relativeDuration:</span><span class=\"mf\">0.5</span>\n                                          <span class=\"nl\">animations:</span><span class=\"o\">^</span><span class=\"p\">{</span>\n                                              <span class=\"n\">toViewController</span><span class=\"p\">.</span><span class=\"n\">view</span><span class=\"p\">.</span><span class=\"n\">layer</span><span class=\"p\">.</span><span class=\"n\">transform</span> <span class=\"o\">=</span> <span class=\"n\">outRotation</span><span class=\"p\">;</span>\n                                          <span class=\"p\">}];</span>\n        <span class=\"p\">}</span> <span class=\"nl\">completion:</span><span class=\"o\">^</span><span class=\"p\">(</span><span class=\"kt\">BOOL</span> <span class=\"n\">finished</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n            <span class=\"p\">[</span><span class=\"n\">transitionContext</span> <span class=\"nl\">completeTransition:</span><span class=\"o\">!</span><span class=\"p\">[</span><span class=\"n\">transitionContext</span> <span class=\"n\">transitionWasCancelled</span><span class=\"p\">]];</span>\n        <span class=\"p\">}];</span>\n</pre></div>",
            "content_type": "text/html",
            "display_recipient": "objective-c",
            "flags": [
                "read",
                "historical"
            ],
            "id": 24573843,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 27979,
            "sender_email": "jeffblagdon@gmail.com",
            "sender_full_name": "Jeff Blagdon (F'13)",
            "sender_id": 2878,
            "sender_realm_str": "recurse",
            "stream_id": 23243,
            "subject": "Core Animation \"flipping card\"",
            "submessages": [],
            "timestamp": 1405015876,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/dcdc2ca985b30fd80e086eda1fe1a018e89e77b5?x=x&version=3",
            "client": "website",
            "content": "<p>To bump this topic, <a href=\"https://github.com/objc-zen/objc-zen-book\" target=\"_blank\" title=\"https://github.com/objc-zen/objc-zen-book\">this</a> was linked to in this week's  iOS Dev Weekly. I'm really digging it.</p>",
            "content_type": "text/html",
            "display_recipient": "objective-c",
            "flags": [
                "read",
                "historical"
            ],
            "id": 24625607,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 27979,
            "sender_email": "michael@lazerwalker.com",
            "sender_full_name": "Em Lazer-Walker (she/they) (m1'18)",
            "sender_id": 2854,
            "sender_realm_str": "recurse",
            "stream_id": 23243,
            "subject": "style guide",
            "submessages": [],
            "timestamp": 1405099154,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/dcdc2ca985b30fd80e086eda1fe1a018e89e77b5?x=x&version=3",
            "client": "website",
            "content": "<p>(also, if you're not already, you should subscribe to <a href=\"http://iosdevweekly.com\" target=\"_blank\" title=\"http://iosdevweekly.com\">iOS Dev Weekly</a>. Significantly better than any other \"[X] Weekly\" programming email newsletter I've ever seen)</p>",
            "content_type": "text/html",
            "display_recipient": "objective-c",
            "flags": [
                "read",
                "historical"
            ],
            "id": 24625624,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 27979,
            "sender_email": "michael@lazerwalker.com",
            "sender_full_name": "Em Lazer-Walker (she/they) (m1'18)",
            "sender_id": 2854,
            "sender_realm_str": "recurse",
            "stream_id": 23243,
            "subject": "style guide",
            "submessages": [],
            "timestamp": 1405099182,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/604a47894fedac4d2a5dd64df3da9e92?d=identicon&version=1",
            "client": "desktop app Mac 0.4.4",
            "content": "<p>This is great, thanks!</p>",
            "content_type": "text/html",
            "display_recipient": "objective-c",
            "flags": [
                "read",
                "historical"
            ],
            "id": 24625808,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 27979,
            "sender_email": "lauraeskelton@gmail.com",
            "sender_full_name": "Laura Skelton (she) (S1'14)",
            "sender_id": 5878,
            "sender_realm_str": "recurse",
            "stream_id": 23243,
            "subject": "style guide",
            "submessages": [],
            "timestamp": 1405099379,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/bf9b55c19b8e106292986a655b6a423b?d=identicon&version=1",
            "client": "desktop app Mac 0.4.4",
            "content": "<p><img alt=\":thumbsup:\" class=\"emoji\" src=\"static/third/gemoji/images/emoji/thumbsup.png\" title=\":thumbsup:\"> thanks for the tips <span class=\"user-mention\" data-user-email=\"michael@lazerwalker.com\">@Mike Walker (F'13)</span> </p>",
            "content_type": "text/html",
            "display_recipient": "objective-c",
            "flags": [
                "read",
                "historical"
            ],
            "id": 24738623,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 27979,
            "sender_email": "kyle.beyer@gmail.com",
            "sender_full_name": "Kyle Beyer (S1'14)",
            "sender_id": 5870,
            "sender_realm_str": "recurse",
            "stream_id": 23243,
            "subject": "style guide",
            "submessages": [],
            "timestamp": 1405347433,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/048837dd1707e891a4e916295440c13a?d=identicon&version=1",
            "client": "desktop app Mac 0.4.4",
            "content": "<p>Might be old news to seasoned obj-c hackers, but I found this read on metaprogramming pretty interesting: <a href=\"http://www.cocoawithlove.com/2010/01/what-is-meta-class-in-objective-c.html\" target=\"_blank\" title=\"http://www.cocoawithlove.com/2010/01/what-is-meta-class-in-objective-c.html\">http://www.cocoawithlove.com/2010/01/what-is-meta-class-in-objective-c.html</a></p>",
            "content_type": "text/html",
            "display_recipient": "objective-c",
            "flags": [
                "read",
                "historical"
            ],
            "id": 24959814,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 27979,
            "sender_email": "jdennis@gmail.com",
            "sender_full_name": "James Dennis (S'11)",
            "sender_id": 971,
            "sender_realm_str": "recurse",
            "stream_id": 23243,
            "subject": "meta programming",
            "submessages": [],
            "timestamp": 1405697861,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/b850936c0011b8c05e23dc6289b55c7e5c2dfd7e?x=x&version=1",
            "client": "website",
            "content": "<p>I'm sure <span class=\"user-mention\" data-user-email=\"bgmuthalaly@gmail.com\">@Bert Muthalaly (S'14)</span> is going to be very interested about that</p>",
            "content_type": "text/html",
            "display_recipient": "objective-c",
            "flags": [
                "read",
                "historical"
            ],
            "id": 24985838,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 27979,
            "sender_email": "jorge@izqui.me",
            "sender_full_name": "Jorge Izquierdo (S1'14)",
            "sender_id": 5873,
            "sender_realm_str": "recurse",
            "stream_id": 23243,
            "subject": "meta programming",
            "submessages": [],
            "timestamp": 1405736466,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/6bb95fa4cb3295206caa32d95143261d63f85836?x=x&version=1",
            "client": "website",
            "content": "<p>I'm interested in learning reactive cocoa. does anyone know of any specific books/blogs/guides that come to mind? I have been playing around with it for the past week or so so I have a general idea of it, but I think now I need to read something that will put it all together for me. </p>",
            "content_type": "text/html",
            "display_recipient": "objective-c",
            "flags": [
                "read",
                "historical"
            ],
            "id": 25128209,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 27979,
            "sender_email": "leahsteinberg1@gmail.com",
            "sender_full_name": "Leah Steinberg (F2'15)",
            "sender_id": 5050,
            "sender_realm_str": "recurse",
            "stream_id": 23243,
            "subject": "reactive cocoa",
            "submessages": [],
            "timestamp": 1406037941,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/8ce701620beda7e03fcc64b1bb823ef15284365a?x=x&version=1",
            "client": "website",
            "content": "<p>does anyone on this list know much about spritekit? I'm trying to figure out how to get it to give me a correct viewport size.</p>",
            "content_type": "text/html",
            "display_recipient": "objective-c",
            "flags": [
                "read",
                "historical"
            ],
            "id": 25262789,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 27979,
            "sender_email": "amit@bansil.org",
            "sender_full_name": "Amit Deep (Th-EE-Ph) Bansil (We/Our (Royal)) (S2'14)",
            "sender_id": 6192,
            "sender_realm_str": "recurse",
            "stream_id": 23243,
            "subject": "SpriteKit",
            "submessages": [],
            "timestamp": 1406233333,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/bf9b55c19b8e106292986a655b6a423b?d=identicon&version=1",
            "client": "desktop app Mac 0.4.4",
            "content": "<p>I'm working on iOS app that uses a C++ library and would like to understand safe ways to bridge classes and maintain control of memory.  Anyone have a few minutes to pair / chat about some specific examples?</p>",
            "content_type": "text/html",
            "display_recipient": "objective-c",
            "flags": [
                "read",
                "historical"
            ],
            "id": 25583243,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 27979,
            "sender_email": "kyle.beyer@gmail.com",
            "sender_full_name": "Kyle Beyer (S1'14)",
            "sender_id": 5870,
            "sender_realm_str": "recurse",
            "stream_id": 23243,
            "subject": "bridging between c++ and obj-c",
            "submessages": [],
            "timestamp": 1406823042,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/3ad220596b601687b8785b5fbfa8ecbe?d=identicon&version=1",
            "client": "website",
            "content": "<p><a href=\"http://khanlou.com/2014/08/metaprogramming-isnt-a-scary-word-not-even-in-objective-c/\" target=\"_blank\" title=\"http://khanlou.com/2014/08/metaprogramming-isnt-a-scary-word-not-even-in-objective-c/\">http://khanlou.com/2014/08/metaprogramming-isnt-a-scary-word-not-even-in-objective-c/</a></p>",
            "content_type": "text/html",
            "display_recipient": "objective-c",
            "flags": [
                "read",
                "historical"
            ],
            "id": 26882590,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 27979,
            "sender_email": "bgmuthalaly@gmail.com",
            "sender_full_name": "Bert Muthalaly (S1'14)",
            "sender_id": 5871,
            "sender_realm_str": "recurse",
            "stream_id": 23243,
            "subject": "meta programming",
            "submessages": [],
            "timestamp": 1409186485,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/d96d4baab5c40af1eda5fd533d650f25?d=identicon&version=1",
            "client": "website",
            "content": "<p>When you configure Wi-Fi settings on an iPhone you can configure a static IP, with fields for IP Address, Subnet Mask, Router, DNS, and Search Domains. I know how to get the device's IP address programmatically, but is it possible to get this other stuff? What framework should I be looking at? The obvious choice is System Configuration but there doesn't seem to be anything in there.</p>",
            "content_type": "text/html",
            "display_recipient": "objective-c",
            "flags": [
                "read",
                "historical"
            ],
            "id": 28271492,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 27979,
            "sender_email": "jeffblagdon@gmail.com",
            "sender_full_name": "Jeff Blagdon (F'13)",
            "sender_id": 2878,
            "sender_realm_str": "recurse",
            "stream_id": 23243,
            "subject": "Getting the device's subnet mask and DNS settings",
            "submessages": [],
            "timestamp": 1411743828,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/dcdc2ca985b30fd80e086eda1fe1a018e89e77b5?x=x&version=3",
            "client": "website",
            "content": "<p>I don't actually know what I'm talking about, but my suspicion would be that if it's not obviously in System Configuration it might not be possible to get with public APIs.</p>",
            "content_type": "text/html",
            "display_recipient": "objective-c",
            "flags": [
                "read",
                "historical"
            ],
            "id": 28271542,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 27979,
            "sender_email": "michael@lazerwalker.com",
            "sender_full_name": "Em Lazer-Walker (she/they) (m1'18)",
            "sender_id": 2854,
            "sender_realm_str": "recurse",
            "stream_id": 23243,
            "subject": "Getting the device's subnet mask and DNS settings",
            "submessages": [],
            "timestamp": 1411743874,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/dcdc2ca985b30fd80e086eda1fe1a018e89e77b5?x=x&version=3",
            "client": "website",
            "content": "<p>I ran into similar issues related to how you can't get any data about WiFi networks other than just the SSID of the one you're currently connected to.</p>",
            "content_type": "text/html",
            "display_recipient": "objective-c",
            "flags": [
                "read",
                "historical"
            ],
            "id": 28271562,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 27979,
            "sender_email": "michael@lazerwalker.com",
            "sender_full_name": "Em Lazer-Walker (she/they) (m1'18)",
            "sender_id": 2854,
            "sender_realm_str": "recurse",
            "stream_id": 23243,
            "subject": "Getting the device's subnet mask and DNS settings",
            "submessages": [],
            "timestamp": 1411743926,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/d96d4baab5c40af1eda5fd533d650f25?d=identicon&version=1",
            "client": "website",
            "content": "<p>Ugh, worst. Thanks.</p>",
            "content_type": "text/html",
            "display_recipient": "objective-c",
            "flags": [
                "read",
                "historical"
            ],
            "id": 28271692,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 27979,
            "sender_email": "jeffblagdon@gmail.com",
            "sender_full_name": "Jeff Blagdon (F'13)",
            "sender_id": 2878,
            "sender_realm_str": "recurse",
            "stream_id": 23243,
            "subject": "Getting the device's subnet mask and DNS settings",
            "submessages": [],
            "timestamp": 1411744118,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/dcdc2ca985b30fd80e086eda1fe1a018e89e77b5?x=x&version=3",
            "client": "website",
            "content": "<p>(I assume you've already checked and feel silly for suggesting, but I found a lot of REALLY great info on my WiFi stuff on StackOverflow. Wouldn't surprise me if there are some good threads about other network settings stuff there as well)</p>",
            "content_type": "text/html",
            "display_recipient": "objective-c",
            "flags": [
                "read",
                "historical"
            ],
            "id": 28271720,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 27979,
            "sender_email": "michael@lazerwalker.com",
            "sender_full_name": "Em Lazer-Walker (she/they) (m1'18)",
            "sender_id": 2854,
            "sender_realm_str": "recurse",
            "stream_id": 23243,
            "subject": "Getting the device's subnet mask and DNS settings",
            "submessages": [],
            "timestamp": 1411744201,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/d96d4baab5c40af1eda5fd533d650f25?d=identicon&version=1",
            "client": "website",
            "content": "<p>Yeah, just asked the same question there. I spent a lot of time trolling through and couldn't get anything that addressed the specific issue.</p>",
            "content_type": "text/html",
            "display_recipient": "objective-c",
            "flags": [
                "read",
                "historical"
            ],
            "id": 28271840,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 27979,
            "sender_email": "jeffblagdon@gmail.com",
            "sender_full_name": "Jeff Blagdon (F'13)",
            "sender_id": 2878,
            "sender_realm_str": "recurse",
            "stream_id": 23243,
            "subject": "Getting the device's subnet mask and DNS settings",
            "submessages": [],
            "timestamp": 1411744400,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/21287dfce6dddb90a8ed414cc54a27e57eb3ed09?x=x&version=2",
            "client": "desktop app Mac 0.4.4",
            "content": "<p><span class=\"user-mention\" data-user-email=\"dalequi@gmail.com\">@David Lech\u00f3n Qui\u00f1ones</span> </p>",
            "content_type": "text/html",
            "display_recipient": "objective-c",
            "flags": [
                "read",
                "historical"
            ],
            "id": 44662104,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 27979,
            "sender_email": "jasdev@jasdev.me",
            "sender_full_name": "Jasdev Singh (he) (SP2'20)",
            "sender_id": 8474,
            "sender_realm_str": "recurse",
            "stream_id": 23243,
            "subject": "hello world!",
            "submessages": [],
            "timestamp": 1439828910,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/28427e9335cecebc2d8cadc90c1bd46516bd589f?x=x&version=3",
            "client": "desktop app Mac 0.4.4",
            "content": "<p>Just as a heads up, this stream seems to be pretty dead. The last time someone posted here was September 26. Hopefully new batchlings will bring it back to life. <img alt=\":smile:\" class=\"emoji\" src=\"static/third/gemoji/images/emoji/smile.png\" title=\":smile:\"> </p>",
            "content_type": "text/html",
            "display_recipient": "objective-c",
            "flags": [
                "read",
                "historical"
            ],
            "id": 44662166,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 27979,
            "sender_email": "darthmincho@gmail.com",
            "sender_full_name": "Carlos Rey (SP2'15)",
            "sender_id": 7875,
            "sender_realm_str": "recurse",
            "stream_id": 23243,
            "subject": "hello world!",
            "submessages": [],
            "timestamp": 1439828961,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/21287dfce6dddb90a8ed414cc54a27e57eb3ed09?x=x&version=2",
            "client": "desktop app Mac 0.4.4",
            "content": "<p>aww yiss</p>",
            "content_type": "text/html",
            "display_recipient": "objective-c",
            "flags": [
                "read",
                "historical"
            ],
            "id": 44662331,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 27979,
            "sender_email": "jasdev@jasdev.me",
            "sender_full_name": "Jasdev Singh (he) (SP2'20)",
            "sender_id": 8474,
            "sender_realm_str": "recurse",
            "stream_id": 23243,
            "subject": "hello world!",
            "submessages": [],
            "timestamp": 1439829071,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/92962cba326ba8580d840d84e67a8818c2d8ff39?x=x&version=2",
            "client": "website",
            "content": "<p>/me plays evanescence's bring me to life</p>",
            "content_type": "text/html",
            "display_recipient": "objective-c",
            "flags": [
                "read",
                "historical"
            ],
            "id": 120077718,
            "is_me_message": true,
            "reactions": [],
            "recipient_id": 27979,
            "sender_email": "modocache@gmail.com",
            "sender_full_name": "Brian Gesiak (he) (m1'18)",
            "sender_id": 105041,
            "sender_realm_str": "recurse",
            "stream_id": 23243,
            "subject": "hello world!",
            "submessages": [],
            "timestamp": 1513890153,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/8d1f7aeaf058d6d3aa3e994930e19bb893097c61?x=x&version=4",
            "client": "ZulipElectron",
            "content": "<p>Hey everyone,</p>\n<p>I'm running into a bit of snag while trying to encode a class to JSON (in swift, not objc). The class itself has a few normal properties (ints, strings, etc.) but is becoming problematic with one field, entitled <code>data</code>, which is of type <code>Dictionary&lt;String, Any&gt;</code>. This property is an open-ended store which changes schema depending on another flag in the class (I know this sounds ugly but it's for a personal project so <span aria-label=\"shrug\" class=\"emoji emoji-1f937\" role=\"img\" title=\"shrug\">:shrug:</span>).</p>\n<p>anyways, I'm struggling to get this <code>Dictionary&lt;String, Any&gt;</code> to conform to encodable in order to encode the class into JSON with SwiftyJSON. I'm getting this error in Xcode: <a href=\"/user_uploads/13/cKRTwYO_Z4_yKEFz18CD8lVo/Screen-Shot-2019-05-30-at-10.53.53.png\" target=\"_blank\" title=\"Screen-Shot-2019-05-30-at-10.53.53.png\">Screen-Shot-2019-05-30-at-10.53.53.png</a> </p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/13/cKRTwYO_Z4_yKEFz18CD8lVo/Screen-Shot-2019-05-30-at-10.53.53.png\" target=\"_blank\" title=\"Screen-Shot-2019-05-30-at-10.53.53.png\"><img src=\"/user_uploads/13/cKRTwYO_Z4_yKEFz18CD8lVo/Screen-Shot-2019-05-30-at-10.53.53.png\"></a></div><p>Any ideas as to what might be going awry?</p>",
            "content_type": "text/html",
            "display_recipient": "objective-c",
            "flags": [
                "read",
                "historical"
            ],
            "id": 166914588,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 27979,
            "sender_email": "steve@stevegattuso.me",
            "sender_full_name": "Steve Gattuso (he) (S1'19)",
            "sender_id": 221911,
            "sender_realm_str": "recurse",
            "stream_id": 23243,
            "subject": "making a dict conform to encodable",
            "submessages": [],
            "timestamp": 1559228058,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/282da691709f4715fc3e0ff6bebd278b?d=identicon&version=1",
            "client": "website",
            "content": "<p>I'd need to think some more about that type error, but how would you like this to work? For example, what if one of the values in that dictionary were something weird, like a function/closure? That's gonna be tricky to encode into JSON in any kind of sensible way.</p>",
            "content_type": "text/html",
            "display_recipient": "objective-c",
            "flags": [
                "read",
                "historical"
            ],
            "id": 166956117,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 27979,
            "sender_email": "alan.m.odonnell@gmail.com",
            "sender_full_name": "Alan O'Donnell (he) (S1'19)",
            "sender_id": 813,
            "sender_realm_str": "recurse",
            "stream_id": 23243,
            "subject": "making a dict conform to encodable",
            "submessages": [],
            "timestamp": 1559260830,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/282da691709f4715fc3e0ff6bebd278b?d=identicon&version=1",
            "client": "website",
            "content": "<p>If the nature of that open-ended store changes based on a flag, that sounds like it might be a good use case for an Enum: one case for each version of the flag. You can have each variant of the Enum be some more descriptive, easily-encodable type.</p>",
            "content_type": "text/html",
            "display_recipient": "objective-c",
            "flags": [
                "read",
                "historical"
            ],
            "id": 166956154,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 27979,
            "sender_email": "alan.m.odonnell@gmail.com",
            "sender_full_name": "Alan O'Donnell (he) (S1'19)",
            "sender_id": 813,
            "sender_realm_str": "recurse",
            "stream_id": 23243,
            "subject": "making a dict conform to encodable",
            "submessages": [],
            "timestamp": 1559260919,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/282da691709f4715fc3e0ff6bebd278b?d=identicon&version=1",
            "client": "website",
            "content": "<p>I suppose you could also just do a type cast based on the flag, since then I think you'd give Swift enough type info to figure out how to do the encoding (my Swift is a little stale at this point though).</p>",
            "content_type": "text/html",
            "display_recipient": "objective-c",
            "flags": [
                "read",
                "historical"
            ],
            "id": 166956305,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 27979,
            "sender_email": "alan.m.odonnell@gmail.com",
            "sender_full_name": "Alan O'Donnell (he) (S1'19)",
            "sender_id": 813,
            "sender_realm_str": "recurse",
            "stream_id": 23243,
            "subject": "making a dict conform to encodable",
            "submessages": [],
            "timestamp": 1559261056,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/8d1f7aeaf058d6d3aa3e994930e19bb893097c61?x=x&version=4",
            "client": "ZulipElectron",
            "content": "<p>yeah I think I'm going to go down the enum path</p>",
            "content_type": "text/html",
            "display_recipient": "objective-c",
            "flags": [
                "read",
                "historical"
            ],
            "id": 167010054,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 27979,
            "sender_email": "steve@stevegattuso.me",
            "sender_full_name": "Steve Gattuso (he) (S1'19)",
            "sender_id": 221911,
            "sender_realm_str": "recurse",
            "stream_id": 23243,
            "subject": "making a dict conform to encodable",
            "submessages": [],
            "timestamp": 1559318961,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/8d1f7aeaf058d6d3aa3e994930e19bb893097c61?x=x&version=4",
            "client": "ZulipElectron",
            "content": "<p>honestly I designed it this way to make things quick and dirty but it sounds to me like I'm trying to warp the type system into doing something it really doesn't want to do</p>",
            "content_type": "text/html",
            "display_recipient": "objective-c",
            "flags": [
                "read",
                "historical"
            ],
            "id": 167010073,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 27979,
            "sender_email": "steve@stevegattuso.me",
            "sender_full_name": "Steve Gattuso (he) (S1'19)",
            "sender_id": 221911,
            "sender_realm_str": "recurse",
            "stream_id": 23243,
            "subject": "making a dict conform to encodable",
            "submessages": [],
            "timestamp": 1559318989,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/8d1f7aeaf058d6d3aa3e994930e19bb893097c61?x=x&version=4",
            "client": "ZulipElectron",
            "content": "<p>which will take me more time than it would if I were to just do things the right way and use a union type for each data type haha</p>",
            "content_type": "text/html",
            "display_recipient": "objective-c",
            "flags": [
                "read",
                "historical"
            ],
            "id": 167010154,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 27979,
            "sender_email": "steve@stevegattuso.me",
            "sender_full_name": "Steve Gattuso (he) (S1'19)",
            "sender_id": 221911,
            "sender_realm_str": "recurse",
            "stream_id": 23243,
            "subject": "making a dict conform to encodable",
            "submessages": [],
            "timestamp": 1559319015,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/8d1f7aeaf058d6d3aa3e994930e19bb893097c61?x=x&version=4",
            "client": "ZulipElectron",
            "content": "<p>once again, type systems save the world from a lazy developer :)</p>",
            "content_type": "text/html",
            "display_recipient": "objective-c",
            "flags": [
                "read",
                "historical"
            ],
            "id": 167010173,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 27979,
            "sender_email": "steve@stevegattuso.me",
            "sender_full_name": "Steve Gattuso (he) (S1'19)",
            "sender_id": 221911,
            "sender_realm_str": "recurse",
            "stream_id": 23243,
            "subject": "making a dict conform to encodable",
            "submessages": [],
            "timestamp": 1559319036,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/8f97b480b0f8de1fad66c1c1fc81ff73?d=identicon&version=1",
            "client": "website",
            "content": "<p>Hello everyone,<br>\nI am implementing a shellsort in C. However I am not able to view the output. I know it works as I placed it in a visualizer. Not sure what I am missing. The function was a void before. Thank you.</p>\n<div class=\"codehilite\"><pre><span></span><code>#include &lt;stdio.h&gt;\n\n/* shellsort: sort v[0]...v[n-1] into increasing order */\n\nint shellsort(int v[], int n)\n{\n    int gap, i, j, temp;\n\n    for (gap = n/2; gap &gt; 0; gap /= 2) {\n        for (i = gap; i &lt; n; i ++) {\n            for (j = i - gap; j&gt;= 0 &amp;&amp; v[j]&gt; v[j+gap]; j -= gap) {\n                temp = v[j];\n                v[j] = v[j+gap];\n                v[j+gap] = temp;\n            }\n        }\n    }\n}\n\nint main(){\n    int arr[]={5,3,6,2,6,9,8};\n    int newList = shellsort(arr,7);\n    printf(&quot;%d\\n&quot;,newList);\n}\n</code></pre></div>",
            "content_type": "text/html",
            "display_recipient": "objective-c",
            "flags": [
                "read",
                "historical"
            ],
            "id": 198843695,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 27979,
            "sender_email": "jhilene@gmail.com",
            "sender_full_name": "Jhilene Walker (F2'16)",
            "sender_id": 100190,
            "sender_realm_str": "recurse",
            "stream_id": 23243,
            "subject": "Shellsort in C",
            "submessages": [],
            "timestamp": 1590546040,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/5c76b2c555785c8a87577bc81fe538bc03a8b463?x=x&version=2",
            "client": "website",
            "content": "<p>Hi <span class=\"user-mention\" data-user-id=\"100190\">@Jhilene Walker (F2'16)</span>! <br>\nI think you're missing a return statement :) What does the return value represent?</p>",
            "content_type": "text/html",
            "display_recipient": "objective-c",
            "flags": [
                "read",
                "historical"
            ],
            "id": 198887731,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 27979,
            "sender_email": "c@chirag.io",
            "sender_full_name": "Chirag Dav\u00e9 (he) (F1'19)",
            "sender_id": 234049,
            "sender_realm_str": "recurse",
            "stream_id": 23243,
            "subject": "Shellsort in C",
            "submessages": [],
            "timestamp": 1590584985,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/8f97b480b0f8de1fad66c1c1fc81ff73?d=identicon&version=1",
            "client": "website",
            "content": "<p><span class=\"user-mention\" data-user-id=\"234049\">@Chirag Dav\u00e9 (he) (F1'19)</span>  Thank you so much Chirag. I solved the issue. Sorry I am just seeing this.</p>",
            "content_type": "text/html",
            "display_recipient": "objective-c",
            "flags": [
                "read",
                "historical"
            ],
            "id": 199231365,
            "is_me_message": false,
            "reactions": [
                {
                    "emoji_code": "1f419",
                    "emoji_name": "octopus",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "c@chirag.io",
                        "full_name": "Chirag Dav\u00e9 (he) (F1'19)",
                        "id": 234049
                    },
                    "user_id": 234049
                }
            ],
            "recipient_id": 27979,
            "sender_email": "jhilene@gmail.com",
            "sender_full_name": "Jhilene Walker (F2'16)",
            "sender_id": 100190,
            "sender_realm_str": "recurse",
            "stream_id": 23243,
            "subject": "Shellsort in C",
            "submessages": [],
            "timestamp": 1590802813,
            "topic_links": [],
            "type": "stream"
        }
    ],
    "msg": "",
    "result": "success"
}
