{
    "anchor": 0,
    "found_anchor": false,
    "found_newest": true,
    "found_oldest": true,
    "history_limited": false,
    "messages": [
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/15cc6e65f5cb0faac87d0b88dae865281ba57899?x=x&version=2",
            "client": "website",
            "content": "<p>Here's the code from the whiteboard.</p>\n<div class=\"codehilite\"><pre><span></span>: FACTORIAL ( n -- n! )\n    DUP \\ n n\n    BEGIN\n        1 -    \\ n n-1\n        TUCK   \\ n-1 n n-1\n        *      \\ n-1 acc\n        SWAP   \\ acc i\n        DUP 2 &lt; IF\n            DROP\n            EXIT\n        THEN\n    AGAIN ;\n</pre></div>\n\n\n<p>I did put that in to a file named <code>factorial.forth</code> and then ran it with <code>gforth facorial.forth</code>.<br>\nThen you could call factorial with <code>. 5 FACTORIAL</code>.</p>",
            "content_type": "text/html",
            "display_recipient": "forth",
            "flags": [
                "read",
                "historical"
            ],
            "id": 109610489,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 103267,
            "sender_email": "moritz.neeb@posteo.net",
            "sender_full_name": "Moritz Neeb (he) (SP1'17)",
            "sender_id": 100515,
            "sender_realm_str": "recurse",
            "stream_id": 100727,
            "subject": "forth workshop 04/14/2017",
            "submessages": [],
            "timestamp": 1492194758,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/15cc6e65f5cb0faac87d0b88dae865281ba57899?x=x&version=2",
            "client": "website",
            "content": "<p>ah no the last thing is wrong. I'm not quite sure...</p>",
            "content_type": "text/html",
            "display_recipient": "forth",
            "flags": [
                "read",
                "historical"
            ],
            "id": 109610550,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 103267,
            "sender_email": "moritz.neeb@posteo.net",
            "sender_full_name": "Moritz Neeb (he) (SP1'17)",
            "sender_id": 100515,
            "sender_realm_str": "recurse",
            "stream_id": 100727,
            "subject": "forth workshop 04/14/2017",
            "submessages": [],
            "timestamp": 1492194844,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/15cc6e65f5cb0faac87d0b88dae865281ba57899?x=x&version=2",
            "client": "website",
            "content": "<div class=\"codehilite\"><pre><span></span>5 FACTORIAL\n.S\n</pre></div>\n\n\n<p>seems to work.</p>",
            "content_type": "text/html",
            "display_recipient": "forth",
            "flags": [
                "read",
                "historical"
            ],
            "id": 109610562,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 103267,
            "sender_email": "moritz.neeb@posteo.net",
            "sender_full_name": "Moritz Neeb (he) (SP1'17)",
            "sender_id": 100515,
            "sender_realm_str": "recurse",
            "stream_id": 100727,
            "subject": "forth workshop 04/14/2017",
            "submessages": [],
            "timestamp": 1492194888,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/15cc6e65f5cb0faac87d0b88dae865281ba57899?x=x&version=2",
            "client": "website",
            "content": "<p><a href=\"/user_uploads/13/-ouWMuMUM2kr6Euds8Yf4Lkw/sqrt.forth\" target=\"_blank\" title=\"sqrt.forth\">sqrt.forth</a></p>",
            "content_type": "text/html",
            "display_recipient": "forth",
            "flags": [
                "read",
                "historical"
            ],
            "id": 109610784,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 103267,
            "sender_email": "moritz.neeb@posteo.net",
            "sender_full_name": "Moritz Neeb (he) (SP1'17)",
            "sender_id": 100515,
            "sender_realm_str": "recurse",
            "stream_id": 100727,
            "subject": "forth workshop 04/14/2017",
            "submessages": [],
            "timestamp": 1492195284,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/840b0106bf4b64a91f222c05f43054358db93f2d?x=x&version=2",
            "client": "website",
            "content": "<p>A webpage with an interactive stack for better visualization: <a href=\"https://skilldrick.github.io/easyforth/\" target=\"_blank\" title=\"https://skilldrick.github.io/easyforth/\">https://skilldrick.github.io/easyforth/</a></p>",
            "content_type": "text/html",
            "display_recipient": "forth",
            "flags": [
                "read",
                "historical"
            ],
            "id": 109611437,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 103267,
            "sender_email": "code@saul.pw",
            "sender_full_name": "Saul Pwanson (SP2'17)",
            "sender_id": 100791,
            "sender_realm_str": "recurse",
            "stream_id": 100727,
            "subject": "forth workshop 04/14/2017",
            "submessages": [],
            "timestamp": 1492196503,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/ac25c0f0dbfaa3e0d68634873943e63bdd41139c?x=x&version=1",
            "client": "website",
            "content": "<p>I recently skimmed this blog post about some other forth-ish stack-based languages (from Christopher Webber of GNU Media Goblin and Guile Scheme).  Thought it might be of interest.<br>\nGush: A stack based language eventually for genetic programming<br>\n<a href=\"https://dustycloud.org/blog/gush-intro/\" target=\"_blank\" title=\"https://dustycloud.org/blog/gush-intro/\">https://dustycloud.org/blog/gush-intro/</a><br>\n\"Push itself is kind of like Lisp meets Forth\"</p>",
            "content_type": "text/html",
            "display_recipient": "forth",
            "flags": [
                "read",
                "historical"
            ],
            "id": 109616352,
            "is_me_message": false,
            "reactions": [
                {
                    "emoji_code": "1f606",
                    "emoji_name": "laughing",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "code@saul.pw",
                        "full_name": "Saul Pwanson (SP2'17)",
                        "id": 100791
                    },
                    "user_id": 100791
                }
            ],
            "recipient_id": 103267,
            "sender_email": "paul@paulwmorris.com",
            "sender_full_name": "Paul Morris (he) (SP1'17)",
            "sender_id": 100524,
            "sender_realm_str": "recurse",
            "stream_id": 100727,
            "subject": "Gush & Push, stack-based langs",
            "submessages": [],
            "timestamp": 1492205275,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/ac848f10b247c86de777f1ddd97851a1?d=identicon&version=1",
            "client": "website",
            "content": "<p><a href=\"https://sourceforge.net/projects/thinking-forth/?source=typ_redirect\" target=\"_blank\" title=\"https://sourceforge.net/projects/thinking-forth/?source=typ_redirect\">https://sourceforge.net/projects/thinking-forth/?source=typ_redirect</a></p>",
            "content_type": "text/html",
            "display_recipient": "forth",
            "flags": [
                "read",
                "historical"
            ],
            "id": 109616886,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 103267,
            "sender_email": "nabuhunaina@protonmail.com",
            "sender_full_name": "Nasreen Abu-Hunaina (they) (SP1'17)",
            "sender_id": 100533,
            "sender_realm_str": "recurse",
            "stream_id": 100727,
            "subject": "Gush & Push, stack-based langs",
            "submessages": [],
            "timestamp": 1492206129,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/840b0106bf4b64a91f222c05f43054358db93f2d?x=x&version=2",
            "client": "website",
            "content": "<p><a href=\"https://arxiv.org/abs/1605.06640\" target=\"_blank\" title=\"https://arxiv.org/abs/1605.06640\">Programming with a Differentiable Forth Interpreter</a>, a paper about machine learning of Forth programs (the Forth programs themselves are evolved from rough templates).</p>",
            "content_type": "text/html",
            "display_recipient": "forth",
            "flags": [
                "read",
                "historical"
            ],
            "id": 109628548,
            "is_me_message": false,
            "last_edit_timestamp": 1492232072,
            "reactions": [],
            "recipient_id": 103267,
            "sender_email": "code@saul.pw",
            "sender_full_name": "Saul Pwanson (SP2'17)",
            "sender_id": 100791,
            "sender_realm_str": "recurse",
            "stream_id": 100727,
            "subject": "Interesting Forth items",
            "submessages": [],
            "timestamp": 1492232048,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/840b0106bf4b64a91f222c05f43054358db93f2d?x=x&version=2",
            "client": "website",
            "content": "<p>I've read this primer before, and this guy gets it: <a href=\"http://galileo.phys.virginia.edu/classes/551.jvn.fall01/primer.htm\" target=\"_blank\" title=\"http://galileo.phys.virginia.edu/classes/551.jvn.fall01/primer.htm\">http://galileo.phys.virginia.edu/classes/551.jvn.fall01/primer.htm</a></p>",
            "content_type": "text/html",
            "display_recipient": "forth",
            "flags": [
                "read",
                "historical"
            ],
            "id": 109628593,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 103267,
            "sender_email": "code@saul.pw",
            "sender_full_name": "Saul Pwanson (SP2'17)",
            "sender_id": 100791,
            "sender_realm_str": "recurse",
            "stream_id": 100727,
            "subject": "Interesting Forth items",
            "submessages": [],
            "timestamp": 1492232172,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/840b0106bf4b64a91f222c05f43054358db93f2d?x=x&version=2",
            "client": "website",
            "content": "<p>Brad Rodriguez has <a href=\"http://www.bradrodriguez.com/papers/\" target=\"_blank\" title=\"http://www.bradrodriguez.com/papers/\">the most complete article series on implementing Forth</a> that I've found.</p>",
            "content_type": "text/html",
            "display_recipient": "forth",
            "flags": [
                "read",
                "historical"
            ],
            "id": 109628599,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 103267,
            "sender_email": "code@saul.pw",
            "sender_full_name": "Saul Pwanson (SP2'17)",
            "sender_id": 100791,
            "sender_realm_str": "recurse",
            "stream_id": 100727,
            "subject": "Interesting Forth items",
            "submessages": [],
            "timestamp": 1492232250,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/840b0106bf4b64a91f222c05f43054358db93f2d?x=x&version=2",
            "client": "website",
            "content": "<p>I'm thinking maybe we should implement some kind of simple machine learning DSL on Sunday.  Does anyone who is interested in Forth understand neural networks enough to make them simple?  Or maybe another algorithm/data structure?</p>",
            "content_type": "text/html",
            "display_recipient": "forth",
            "flags": [
                "read",
                "historical"
            ],
            "id": 109629027,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 103267,
            "sender_email": "code@saul.pw",
            "sender_full_name": "Saul Pwanson (SP2'17)",
            "sender_id": 100791,
            "sender_realm_str": "recurse",
            "stream_id": 100727,
            "subject": "Forth workshop part 2, 2017-04-16",
            "submessages": [],
            "timestamp": 1492233356,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/15cc6e65f5cb0faac87d0b88dae865281ba57899?x=x&version=2",
            "client": "website",
            "content": "<p>I think it's a choice that could work. I have some knowledge there, I'm not sure though if I have time to help preparing something. I will check my scripts/homeworks from Uni.</p>\n<p>Another DSL might be to clone SQL (not sure how complicated it is to build up a table) or to implement a little drawing language (towards GUI)?</p>",
            "content_type": "text/html",
            "display_recipient": "forth",
            "flags": [
                "read",
                "historical"
            ],
            "id": 109643345,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 103267,
            "sender_email": "moritz.neeb@posteo.net",
            "sender_full_name": "Moritz Neeb (he) (SP1'17)",
            "sender_id": 100515,
            "sender_realm_str": "recurse",
            "stream_id": 100727,
            "subject": "Forth workshop part 2, 2017-04-16",
            "submessages": [],
            "timestamp": 1492270924,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/840b0106bf4b64a91f222c05f43054358db93f2d?x=x&version=2",
            "client": "website",
            "content": "<p>The only problem is that I know so little about NNs, so it would be hard to design on the fly like that. I love the other suggestions though, and we'll use them if no one is able to distill NNs into a simple enough concept for me to understand. Thanks a lot for the suggestions!</p>",
            "content_type": "text/html",
            "display_recipient": "forth",
            "flags": [
                "read",
                "historical"
            ],
            "id": 109643596,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 103267,
            "sender_email": "code@saul.pw",
            "sender_full_name": "Saul Pwanson (SP2'17)",
            "sender_id": 100791,
            "sender_realm_str": "recurse",
            "stream_id": 100727,
            "subject": "Forth workshop part 2, 2017-04-16",
            "submessages": [],
            "timestamp": 1492271524,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/15cc6e65f5cb0faac87d0b88dae865281ba57899?x=x&version=2",
            "client": "website",
            "content": "<p>I don't really have time today, but I will try to come to RC tomorrow morning and come up with a simple version. the only problem could be that we need quite some math -- which can be very error prone I guess. <a href=\"/user_uploads/13/B27-FMb92PHuqyyNAkTXL3Tw/2017-04-15-120256_444x216_scrot.png\" target=\"_blank\" title=\"2017-04-15-120256_444x216_scrot.png\">backpropagation.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/13/B27-FMb92PHuqyyNAkTXL3Tw/2017-04-15-120256_444x216_scrot.png\" target=\"_blank\" title=\"backpropagation.png\"><img src=\"/user_uploads/13/B27-FMb92PHuqyyNAkTXL3Tw/2017-04-15-120256_444x216_scrot.png\"></a></div>",
            "content_type": "text/html",
            "display_recipient": "forth",
            "flags": [
                "read",
                "historical"
            ],
            "id": 109643884,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 103267,
            "sender_email": "moritz.neeb@posteo.net",
            "sender_full_name": "Moritz Neeb (he) (SP1'17)",
            "sender_id": 100515,
            "sender_realm_str": "recurse",
            "stream_id": 100727,
            "subject": "Forth workshop part 2, 2017-04-16",
            "submessages": [],
            "timestamp": 1492272202,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/840b0106bf4b64a91f222c05f43054358db93f2d?x=x&version=2",
            "client": "website",
            "content": "<p>right, that math is pretty complicated :/</p>",
            "content_type": "text/html",
            "display_recipient": "forth",
            "flags": [
                "read",
                "historical"
            ],
            "id": 109644010,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 103267,
            "sender_email": "code@saul.pw",
            "sender_full_name": "Saul Pwanson (SP2'17)",
            "sender_id": 100791,
            "sender_realm_str": "recurse",
            "stream_id": 100727,
            "subject": "Forth workshop part 2, 2017-04-16",
            "submessages": [],
            "timestamp": 1492272460,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/216dd445a46512212fb170dd7574e740416478c2?x=x&version=1",
            "client": "website",
            "content": "<p>I built a <a href=\"https://en.wikipedia.org/wiki/Hopfield_network\" target=\"_blank\" title=\"https://en.wikipedia.org/wiki/Hopfield_network\">Hopfield Neural Network</a> in Python once: it's the simplest I know of so that might be an option.</p>",
            "content_type": "text/html",
            "display_recipient": "forth",
            "flags": [
                "read",
                "historical"
            ],
            "id": 109647670,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 103267,
            "sender_email": "joseph.yiasemides13@alumni.imperial.ac.uk",
            "sender_full_name": "Joseph George Yiasemides (he) (SP1'17)",
            "sender_id": 100508,
            "sender_realm_str": "recurse",
            "stream_id": 100727,
            "subject": "Forth workshop part 2, 2017-04-16",
            "submessages": [],
            "timestamp": 1492281332,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/216dd445a46512212fb170dd7574e740416478c2?x=x&version=1",
            "client": "website",
            "content": "<p>We're we thinking 1300 for tomorrow?</p>",
            "content_type": "text/html",
            "display_recipient": "forth",
            "flags": [
                "read",
                "historical"
            ],
            "id": 109647710,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 103267,
            "sender_email": "joseph.yiasemides13@alumni.imperial.ac.uk",
            "sender_full_name": "Joseph George Yiasemides (he) (SP1'17)",
            "sender_id": 100508,
            "sender_realm_str": "recurse",
            "stream_id": 100727,
            "subject": "Forth workshop part 2, 2017-04-16",
            "submessages": [],
            "timestamp": 1492281373,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/6f98ca998d9256ebef017bdcdb1a338ca4a2dc9a?x=x&version=5",
            "client": "website",
            "content": "<p>Is there an RSVP for this?</p>",
            "content_type": "text/html",
            "display_recipient": "forth",
            "flags": [
                "read",
                "historical"
            ],
            "id": 109650083,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 103267,
            "sender_email": "norchard24@gmail.com",
            "sender_full_name": "Nicole Orchard (SP2'17)",
            "sender_id": 100814,
            "sender_realm_str": "recurse",
            "stream_id": 100727,
            "subject": "Forth workshop part 2, 2017-04-16",
            "submessages": [],
            "timestamp": 1492287061,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/95eb11b4d11f06cdb3001ff6e17d64de5f38bb28?x=x&version=12",
            "client": "website",
            "content": "<p>I found <a href=\"https://colah.github.io/posts/2015-08-Backprop/\" target=\"_blank\" title=\"https://colah.github.io/posts/2015-08-Backprop/\">Chris Olah's writeup on backpropagation helpful</a>. I agree with Joseph that the Hopfield network <em>seems</em> to be the \"easiest\" to implement. If anyone could help simplify neural nets or figure out which would be best to practice with, it is <span class=\"user-mention\" data-user-email=\"n.saphra@ed.ac.uk\" data-user-id=\"100801\">@Naomi Saphra (SP2'17)</span>.</p>",
            "content_type": "text/html",
            "display_recipient": "forth",
            "flags": [
                "read",
                "historical"
            ],
            "id": 109653955,
            "is_me_message": false,
            "last_edit_timestamp": 1492298414,
            "reactions": [],
            "recipient_id": 103267,
            "sender_email": "anja.kefala@gmail.com",
            "sender_full_name": "Anja Boskovic (SP1'17)",
            "sender_id": 100514,
            "sender_realm_str": "recurse",
            "stream_id": 100727,
            "subject": "Forth workshop part 2, 2017-04-16",
            "submessages": [],
            "timestamp": 1492296433,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/840b0106bf4b64a91f222c05f43054358db93f2d?x=x&version=2",
            "client": "website",
            "content": "<p><span class=\"user-mention\" data-user-email=\"norchard24@gmail.com\" data-user-id=\"100814\">@Nicole Orchard (SP2'17)</span> Not yet, sorry, I'm not doing a great job of organizing this thing.</p>\n<p>Yes, the workshop is at 1300/1pm tomorrow (Sun Apr 16).</p>",
            "content_type": "text/html",
            "display_recipient": "forth",
            "flags": [
                "read",
                "historical"
            ],
            "id": 109660170,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 103267,
            "sender_email": "code@saul.pw",
            "sender_full_name": "Saul Pwanson (SP2'17)",
            "sender_id": 100791,
            "sender_realm_str": "recurse",
            "stream_id": 100727,
            "subject": "Forth workshop part 2, 2017-04-16",
            "submessages": [],
            "timestamp": 1492311425,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/216dd445a46512212fb170dd7574e740416478c2?x=x&version=1",
            "client": "website",
            "content": "<p>In fact, the link above makes the Hopfield NN seem pretty complicated, but I know it's intuitive + less than a _screen_ of Python <img alt=\":smile_cat:\" class=\"emoji\" src=\"/static/generated/emoji/images/emoji/unicode/1f638.png\" title=\":smile_cat:\"></p>",
            "content_type": "text/html",
            "display_recipient": "forth",
            "flags": [
                "read",
                "historical"
            ],
            "id": 109665161,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 103267,
            "sender_email": "joseph.yiasemides13@alumni.imperial.ac.uk",
            "sender_full_name": "Joseph George Yiasemides (he) (SP1'17)",
            "sender_id": 100508,
            "sender_realm_str": "recurse",
            "stream_id": 100727,
            "subject": "Forth workshop part 2, 2017-04-16",
            "submessages": [],
            "timestamp": 1492324054,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/15cc6e65f5cb0faac87d0b88dae865281ba57899?x=x&version=2",
            "client": "website",
            "content": "<p><a href=\"https://github.com/recursecenter/wiki/wiki/Forth-Extensions\" target=\"_blank\" title=\"https://github.com/recursecenter/wiki/wiki/Forth-Extensions\">https://github.com/recursecenter/wiki/wiki/Forth-Extensions</a></p>",
            "content_type": "text/html",
            "display_recipient": "forth",
            "flags": [
                "read",
                "historical"
            ],
            "id": 109680556,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 103267,
            "sender_email": "moritz.neeb@posteo.net",
            "sender_full_name": "Moritz Neeb (he) (SP1'17)",
            "sender_id": 100515,
            "sender_realm_str": "recurse",
            "stream_id": 100727,
            "subject": "Forth workshop part 2, 2017-04-16",
            "submessages": [],
            "timestamp": 1492363089,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/95eb11b4d11f06cdb3001ff6e17d64de5f38bb28?x=x&version=12",
            "client": "website",
            "content": "<div class=\"codehilite\"><pre><span></span>see WORD\n    : word\n          sword here place bl here count + c! here ; ok\n</pre></div>\n\n\n<p>I am not sure what <code>sword</code> is but I thought this was pretty.</p>",
            "content_type": "text/html",
            "display_recipient": "forth",
            "flags": [
                "read",
                "historical"
            ],
            "id": 109680676,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 103267,
            "sender_email": "anja.kefala@gmail.com",
            "sender_full_name": "Anja Boskovic (SP1'17)",
            "sender_id": 100514,
            "sender_realm_str": "recurse",
            "stream_id": 100727,
            "subject": "Forth workshop part 2, 2017-04-16",
            "submessages": [],
            "timestamp": 1492363351,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/95eb11b4d11f06cdb3001ff6e17d64de5f38bb28?x=x&version=12",
            "client": "website",
            "content": "<p>I want to figure out what</p>\n<div class=\"codehilite\"><pre><span></span>sword here place\n</pre></div>\n\n\n<p>does. It evokes a feeling of King Arthur. : )</p>",
            "content_type": "text/html",
            "display_recipient": "forth",
            "flags": [
                "read",
                "historical"
            ],
            "id": 109681273,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 103267,
            "sender_email": "anja.kefala@gmail.com",
            "sender_full_name": "Anja Boskovic (SP1'17)",
            "sender_id": 100514,
            "sender_realm_str": "recurse",
            "stream_id": 100727,
            "subject": "Forth workshop part 2, 2017-04-16",
            "submessages": [],
            "timestamp": 1492364693,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/95eb11b4d11f06cdb3001ff6e17d64de5f38bb28?x=x&version=12",
            "client": "website",
            "content": "<p><a href=\"/user_uploads/13/4KslbEDROznmoBIgmtOlAJor/IMG_20170416_1424327.jpg\" target=\"_blank\" title=\"IMG_20170416_1424327.jpg\">IMG_20170416_1424327.jpg</a> <a href=\"/user_uploads/13/pYCqOoA0YsqcafS9_FK-uhzb/IMG_20170416_1424411.jpg\" target=\"_blank\" title=\"IMG_20170416_1424411.jpg\">IMG_20170416_1424411.jpg</a> <a href=\"/user_uploads/13/NEQXyL_5nO2cOLmrI0aByIdr/IMG_20170416_1424146.jpg\" target=\"_blank\" title=\"IMG_20170416_1424146.jpg\">IMG_20170416_1424146.jpg</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/13/4KslbEDROznmoBIgmtOlAJor/IMG_20170416_1424327.jpg\" target=\"_blank\" title=\"IMG_20170416_1424327.jpg\"><img src=\"/user_uploads/13/4KslbEDROznmoBIgmtOlAJor/IMG_20170416_1424327.jpg\"></a></div><div class=\"message_inline_image\"><a href=\"/user_uploads/13/pYCqOoA0YsqcafS9_FK-uhzb/IMG_20170416_1424411.jpg\" target=\"_blank\" title=\"IMG_20170416_1424411.jpg\"><img src=\"/user_uploads/13/pYCqOoA0YsqcafS9_FK-uhzb/IMG_20170416_1424411.jpg\"></a></div><div class=\"message_inline_image\"><a href=\"/user_uploads/13/NEQXyL_5nO2cOLmrI0aByIdr/IMG_20170416_1424146.jpg\" target=\"_blank\" title=\"IMG_20170416_1424146.jpg\"><img src=\"/user_uploads/13/NEQXyL_5nO2cOLmrI0aByIdr/IMG_20170416_1424146.jpg\"></a></div>",
            "content_type": "text/html",
            "display_recipient": "forth",
            "flags": [
                "read",
                "historical"
            ],
            "id": 109682350,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 103267,
            "sender_email": "anja.kefala@gmail.com",
            "sender_full_name": "Anja Boskovic (SP1'17)",
            "sender_id": 100514,
            "sender_realm_str": "recurse",
            "stream_id": 100727,
            "subject": "Forth workshop part 2, 2017-04-16",
            "submessages": [],
            "timestamp": 1492367265,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/95eb11b4d11f06cdb3001ff6e17d64de5f38bb28?x=x&version=12",
            "client": "website",
            "content": "<p><a href=\"/user_uploads/13/Ph4NtOdub2rXVwAcNyrz3x39/IMG_20170416_1428114.jpg\" target=\"_blank\" title=\"IMG_20170416_1428114.jpg\">IMG_20170416_1428114.jpg</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/13/Ph4NtOdub2rXVwAcNyrz3x39/IMG_20170416_1428114.jpg\" target=\"_blank\" title=\"IMG_20170416_1428114.jpg\"><img src=\"/user_uploads/13/Ph4NtOdub2rXVwAcNyrz3x39/IMG_20170416_1428114.jpg\"></a></div>",
            "content_type": "text/html",
            "display_recipient": "forth",
            "flags": [
                "read",
                "historical"
            ],
            "id": 109682397,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 103267,
            "sender_email": "anja.kefala@gmail.com",
            "sender_full_name": "Anja Boskovic (SP1'17)",
            "sender_id": 100514,
            "sender_realm_str": "recurse",
            "stream_id": 100727,
            "subject": "Forth workshop part 2, 2017-04-16",
            "submessages": [],
            "timestamp": 1492367394,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/15cc6e65f5cb0faac87d0b88dae865281ba57899?x=x&version=2",
            "client": "website",
            "content": "<p>I looked at the struct example. This is pretty cool but feels very hacky. Is that the default for Forth?<br>\nI think that's why you said, you need good programmers. If everything is hacky, you need to have all of the hacks in you mind when you create new ones.</p>\n<p>Is it possible to create some kind of namespace? Or how do you prevent that <code>day/month/year</code> pollute the global namespace? What if I want to create another structure with only <code>month/year</code> or so?</p>",
            "content_type": "text/html",
            "display_recipient": "forth",
            "flags": [
                "read",
                "historical"
            ],
            "id": 109689866,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 103267,
            "sender_email": "moritz.neeb@posteo.net",
            "sender_full_name": "Moritz Neeb (he) (SP1'17)",
            "sender_id": 100515,
            "sender_realm_str": "recurse",
            "stream_id": 100727,
            "subject": "Forth workshop part 2, 2017-04-16",
            "submessages": [],
            "timestamp": 1492385356,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/15cc6e65f5cb0faac87d0b88dae865281ba57899?x=x&version=2",
            "client": "website",
            "content": "<p>I wrote a <a href=\"https://github.com/zormit/forth-workshop/blob/master/conversion.fth\" target=\"_blank\" title=\"https://github.com/zormit/forth-workshop/blob/master/conversion.fth\">decimal to binary converter</a>. It feels like I do too much.<br>\nI'm using the stack to collect my result, because I did not want to learn about string concatenation or something like that... I would be happy to see simplifications of my code.</p>",
            "content_type": "text/html",
            "display_recipient": "forth",
            "flags": [
                "read",
                "historical"
            ],
            "id": 109692685,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 103267,
            "sender_email": "moritz.neeb@posteo.net",
            "sender_full_name": "Moritz Neeb (he) (SP1'17)",
            "sender_id": 100515,
            "sender_realm_str": "recurse",
            "stream_id": 100727,
            "subject": ".bin",
            "submessages": [],
            "timestamp": 1492392427,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/95eb11b4d11f06cdb3001ff6e17d64de5f38bb28?x=x&version=12",
            "client": "website",
            "content": "<p>In the wiki, there is this line:</p>\n<div class=\"codehilite\"><pre><span></span> WORD ( ch &quot;token&quot; -- str ) consumes the input stream *until and* pushes a pointer to the token.\n</pre></div>\n\n\n<p>Until <em>what</em>? \"Token\"? (Trying to look up the word WORD in other sources is proving impossible. :p</p>",
            "content_type": "text/html",
            "display_recipient": "forth",
            "flags": [
                "read",
                "historical"
            ],
            "id": 109712134,
            "is_me_message": false,
            "last_edit_timestamp": 1492440307,
            "reactions": [],
            "recipient_id": 103267,
            "sender_email": "anja.kefala@gmail.com",
            "sender_full_name": "Anja Boskovic (SP1'17)",
            "sender_id": 100514,
            "sender_realm_str": "recurse",
            "stream_id": 100727,
            "subject": "Forth workshop part 2, 2017-04-16",
            "submessages": [],
            "timestamp": 1492440285,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/840b0106bf4b64a91f222c05f43054358db93f2d?x=x&version=2",
            "client": "website",
            "content": "<p>It's a bug in the wiki page.  If you look at the source there is something like &lt;ch&gt; that I forgot to escape. (should be \\&lt;ch\\&gt;)</p>",
            "content_type": "text/html",
            "display_recipient": "forth",
            "flags": [
                "read",
                "historical"
            ],
            "id": 109712154,
            "is_me_message": false,
            "reactions": [
                {
                    "emoji_code": "1f41d",
                    "emoji_name": "bee",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "anja.kefala@gmail.com",
                        "full_name": "Anja Boskovic (SP1'17)",
                        "id": 100514
                    },
                    "user_id": 100514
                }
            ],
            "recipient_id": 103267,
            "sender_email": "code@saul.pw",
            "sender_full_name": "Saul Pwanson (SP2'17)",
            "sender_id": 100791,
            "sender_realm_str": "recurse",
            "stream_id": 100727,
            "subject": "Forth workshop part 2, 2017-04-16",
            "submessages": [],
            "timestamp": 1492440342,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/840b0106bf4b64a91f222c05f43054358db93f2d?x=x&version=2",
            "client": "website",
            "content": "<p><span class=\"user-mention\" data-user-email=\"moritz.neeb@posteo.net\" data-user-id=\"100515\">@Moritz Neeb (SP1'17)</span> Hacky is the way of Forth.  But it's hard enough to get something to work, so if it works at all, it's probably correct.  The bigger problem is that people are scared to try their own hacks, so they put together extremely messy/large/complicated code just so they can stay with what they already know.  Which is definitely not the Forth way :)</p>",
            "content_type": "text/html",
            "display_recipient": "forth",
            "flags": [
                "read",
                "historical"
            ],
            "id": 109713921,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 103267,
            "sender_email": "code@saul.pw",
            "sender_full_name": "Saul Pwanson (SP2'17)",
            "sender_id": 100791,
            "sender_realm_str": "recurse",
            "stream_id": 100727,
            "subject": "Forth workshop part 2, 2017-04-16",
            "submessages": [],
            "timestamp": 1492443519,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/216dd445a46512212fb170dd7574e740416478c2?x=x&version=1",
            "client": "website",
            "content": "<p>So... we have telescopes, ESA space probes, and wrist watches with Forth on them. Those are so exciting + I'm seeing resource constrained and embedded machines everywhere. I found <a href=\"https://www.electricobjects.com/\" target=\"_blank\" title=\"https://www.electricobjects.com/\">Electronic Objects</a> through an Elixir post, but, wouldn't Forth be great on their digital displays?</p>",
            "content_type": "text/html",
            "display_recipient": "forth",
            "flags": [
                "read",
                "historical"
            ],
            "id": 109770540,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 103267,
            "sender_email": "joseph.yiasemides13@alumni.imperial.ac.uk",
            "sender_full_name": "Joseph George Yiasemides (he) (SP1'17)",
            "sender_id": 100508,
            "sender_realm_str": "recurse",
            "stream_id": 100727,
            "subject": "Forth Everywhere",
            "submessages": [],
            "timestamp": 1492549943,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/216dd445a46512212fb170dd7574e740416478c2?x=x&version=1",
            "client": "website",
            "content": "<p>Hey! Nasreen + I didn't collect the result at all even though that's what we wanted at first coz we hadn't learnt how to do it (wanting to master just what Saul had taught us) and becuase the exercise said <em>print</em> rather than output. This is what we wrote:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"kn\">:</span> <span class=\"nc\">RAISE</span> <span class=\"c1\">( base power -- result )</span>\n  <span class=\"k\">DUP</span>\n  <span class=\"k\">IF</span>\n    <span class=\"mi\">1</span> <span class=\"nf\">-ROT</span>\n    <span class=\"mi\">0</span>\n    <span class=\"k\">DO</span>\n      <span class=\"k\">TUCK * SWAP</span>\n    <span class=\"k\">LOOP</span>\n    <span class=\"k\">DROP</span>\n  <span class=\"k\">ELSE</span>\n    <span class=\"k\">DROP</span>\n    <span class=\"k\">DROP</span>\n    <span class=\"mi\">1</span>\n  <span class=\"k\">THEN</span>\n  <span class=\"k\">;</span>\n\n<span class=\"kn\">:</span> <span class=\"nc\">.BIN</span> <span class=\"c1\">( n -- )</span>\n  <span class=\"mi\">0</span>\n  <span class=\"mi\">3</span>\n  <span class=\"k\">DO</span>\n    <span class=\"mi\">2</span>\n    <span class=\"k\">I</span>\n    <span class=\"nf\">RAISE</span>\n    <span class=\"k\">2DUP</span>\n    <span class=\"k\">&lt;</span>\n    <span class=\"k\">INVERT</span>\n    <span class=\"k\">IF</span>\n      <span class=\"k\">-</span>\n      <span class=\"s\">.&quot;</span> <span class=\"s\">1</span><span class=\"nf\">&quot;</span>\n    <span class=\"k\">ELSE</span>\n      <span class=\"k\">DROP</span>\n      <span class=\"s\">.&quot;</span> <span class=\"s\">0</span><span class=\"nf\">&quot;</span>\n    <span class=\"k\">THEN</span>\n    <span class=\"mi\">-1</span>\n  <span class=\"k\">+LOOP</span>\n  <span class=\"k\">;</span>\n</pre></div>\n\n\n<p>We know, far from perfect, but we'll make it sweet someday soon.</p>\n<p>P.S.: credit for the algorithm in <code>RAISE</code> goes to Nasreen (had I been on my own who knows what Rabbit hole I'd have jumped into).</p>",
            "content_type": "text/html",
            "display_recipient": "forth",
            "flags": [
                "read",
                "historical"
            ],
            "id": 109770864,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 103267,
            "sender_email": "joseph.yiasemides13@alumni.imperial.ac.uk",
            "sender_full_name": "Joseph George Yiasemides (he) (SP1'17)",
            "sender_id": 100508,
            "sender_realm_str": "recurse",
            "stream_id": 100727,
            "subject": ".bin",
            "submessages": [],
            "timestamp": 1492550440,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/840b0106bf4b64a91f222c05f43054358db93f2d?x=x&version=2",
            "client": "website",
            "content": "<p>It looks like they do simple animations already, and I could conceive of an SDK that would allow arbitrary generated images.  At $299 price point though they probably have enough power to run Linux and Python, so they could allow the user to upload custom Python code (which I don't think they even do).  But if they scaled down the hardware enough to make a portable version for $50-$100, they wouldn't be able to run Linux/Python anymore, so they'd write a few generative animations in C and the user wouldn't be able to change them (reflashing devices is beyond almost any user's ability and OTA update is too tricky to bother for a cheapo product).  But in that portable/cheaper version, they could totally put a tiny Forth implementation, which would allow a user to upload Forth code to make their own generative animation.</p>\n<p>So, in the spirit of designing a product around a technology, imagine a $50 T-shirt that could display animations and was programmable from your phone in Forth, such that you could make the T-shirt display an infinitely zooming fractal of your own design.</p>",
            "content_type": "text/html",
            "display_recipient": "forth",
            "flags": [
                "read",
                "historical"
            ],
            "id": 109771200,
            "is_me_message": false,
            "reactions": [
                {
                    "emoji_code": "1f638",
                    "emoji_name": "smile_cat",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "joseph.yiasemides13@alumni.imperial.ac.uk",
                        "full_name": "Joseph George Yiasemides (he) (SP1'17)",
                        "id": 100508
                    },
                    "user_id": 100508
                }
            ],
            "recipient_id": 103267,
            "sender_email": "code@saul.pw",
            "sender_full_name": "Saul Pwanson (SP2'17)",
            "sender_id": 100791,
            "sender_realm_str": "recurse",
            "stream_id": 100727,
            "subject": "Forth Everywhere",
            "submessages": [],
            "timestamp": 1492551062,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/ac25c0f0dbfaa3e0d68634873943e63bdd41139c?x=x&version=1",
            "client": "website",
            "content": "<p>In SICP they argue (in section 1.1) that when learning a programming language you should ask: <br>\n 1. What are the primitive expressions?  (the simple elements)<br>\n 2. What are the means of combination? (how compound elements are built from simpler ones)<br>\n 3. What are the means of abstraction? (how compound elements can be named and manipulated as units)<br>\nAlthough this may be a dated and/or scheme-centric way of looking at things...  I'm wondering what the answers are for Forth?  I have some vague thoughts, but I think I'll just pose the questions for consideration, before I forget about it entirely...</p>",
            "content_type": "text/html",
            "display_recipient": "forth",
            "flags": [
                "read",
                "historical"
            ],
            "id": 109819073,
            "is_me_message": false,
            "reactions": [
                {
                    "emoji_code": "1f4af",
                    "emoji_name": "100",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "david.isaac.lee@gmail.com",
                        "full_name": "David Isaac Lee (SP2'17)",
                        "id": 100541
                    },
                    "user_id": 100541
                }
            ],
            "recipient_id": 103267,
            "sender_email": "paul@paulwmorris.com",
            "sender_full_name": "Paul Morris (he) (SP1'17)",
            "sender_id": 100524,
            "sender_realm_str": "recurse",
            "stream_id": 100727,
            "subject": "Elements of Forth",
            "submessages": [],
            "timestamp": 1492643774,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/15cc6e65f5cb0faac87d0b88dae865281ba57899?x=x&version=2",
            "client": "website",
            "content": "<p>I'd say (as far as I understood):</p>\n<blockquote>\n<p>1. What are the primitive expressions?  (the simple elements)</p>\n</blockquote>\n<p>Words. These can be numbers or named things.</p>\n<blockquote>\n<p>2. What are the means of combination? (how compound elements are built from simpler ones)</p>\n</blockquote>\n<p>Not sure if I understand the difference between 2 and 3. For 2 I'd say: Words can consume several elements from the stack, thus combine them.</p>\n<blockquote>\n<p>3. What are the means of abstraction? (how compound elements can be named and manipulated as units)</p>\n</blockquote>\n<p>Creating new words, mainly via <code>:</code>.</p>",
            "content_type": "text/html",
            "display_recipient": "forth",
            "flags": [
                "read",
                "historical"
            ],
            "id": 109822699,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 103267,
            "sender_email": "moritz.neeb@posteo.net",
            "sender_full_name": "Moritz Neeb (he) (SP1'17)",
            "sender_id": 100515,
            "sender_realm_str": "recurse",
            "stream_id": 100727,
            "subject": "Elements of Forth",
            "submessages": [],
            "timestamp": 1492651178,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/216dd445a46512212fb170dd7574e740416478c2?x=x&version=1",
            "client": "website",
            "content": "<p>Currently I'd say...</p>\n<p>1. The primitive expressions are about stack manipulation. I.e. <code>SWAP</code>, <code>TUCK</code>, and <code>ROTATE</code>.<br>\n2. The means of combination are about writing words (I guess): that'd be <code>:</code>.<br>\n3. I don't know.</p>\n<p>Well: it was worth a try. Nice to look at Forth from this perspective + looking forward to coming back to this sometime when the Forth is with me.</p>",
            "content_type": "text/html",
            "display_recipient": "forth",
            "flags": [
                "read",
                "historical"
            ],
            "id": 109842844,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 103267,
            "sender_email": "joseph.yiasemides13@alumni.imperial.ac.uk",
            "sender_full_name": "Joseph George Yiasemides (he) (SP1'17)",
            "sender_id": 100508,
            "sender_realm_str": "recurse",
            "stream_id": 100727,
            "subject": "Elements of Forth",
            "submessages": [],
            "timestamp": 1492698269,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/ac25c0f0dbfaa3e0d68634873943e63bdd41139c?x=x&version=1",
            "client": "website",
            "content": "<p>I realized I'm not even sure what the explicit answers would be for lisp/scheme.  If they spell it out in SICP I missed it, so I tried the lecture series and took this screenshot from the first lecture/video: <a href=\"/user_uploads/13/hqG4YewPs7K61duGqX0PwRmp/SICP-black-box-abstraction.png\" target=\"_blank\" title=\"SICP-black-box-abstraction.png\">SICP-black-box-abstraction.png</a> From:<br>\n<a href=\"https://ocw.mit.edu/courses/electrical-engineering-and-computer-science/6-001-structure-and-interpretation-of-computer-programs-spring-2005/video-lectures/1a-overview-and-introduction-to-lisp/\" target=\"_blank\" title=\"https://ocw.mit.edu/courses/electrical-engineering-and-computer-science/6-001-structure-and-interpretation-of-computer-programs-spring-2005/video-lectures/1a-overview-and-introduction-to-lisp/\">https://ocw.mit.edu/courses/electrical-engineering-and-computer-science/6-001-structure-and-interpretation-of-computer-programs-spring-2005/video-lectures/1a-overview-and-introduction-to-lisp/</a><br>\nSo that makes it somewhat clearer what they have in mind.</p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/13/hqG4YewPs7K61duGqX0PwRmp/SICP-black-box-abstraction.png\" target=\"_blank\" title=\"SICP-black-box-abstraction.png\"><img src=\"/user_uploads/13/hqG4YewPs7K61duGqX0PwRmp/SICP-black-box-abstraction.png\"></a></div>",
            "content_type": "text/html",
            "display_recipient": "forth",
            "flags": [
                "read",
                "historical"
            ],
            "id": 109893834,
            "is_me_message": false,
            "last_edit_timestamp": 1492798823,
            "reactions": [],
            "recipient_id": 103267,
            "sender_email": "paul@paulwmorris.com",
            "sender_full_name": "Paul Morris (he) (SP1'17)",
            "sender_id": 100524,
            "sender_realm_str": "recurse",
            "stream_id": 100727,
            "subject": "Elements of Forth",
            "submessages": [],
            "timestamp": 1492798747,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/205b6a22420f600794922440ff01fea3840aa0d8?x=x&version=2",
            "client": "website",
            "content": "<p>really love this question! here's my stab at it:</p>\n<blockquote>\n<p>1. What are the primitive expressions? (the simple elements)</p>\n</blockquote>\n<p>Words &amp; values (numbers). (I liked stack manipulation as an answer, but then I asked myself: how would you use stack manipulation primitives to construct an \"add one\" function?)</p>\n<blockquote>\n<p>2. What are the means of combination? (how compound elements are built from simpler ones)</p>\n</blockquote>\n<p>If the parallel here is function composition in Scheme, then for Forth, this would be something about how the stack persists between word invocations, and allows you to transform data iteratively. (So that <code>2 3 + 4 +</code> is a combination of <code>2 3 +</code> and <code>4 +</code>. In Scheme, this would be the composition <code>(+ (+ 2 3) 4)</code>. Enjoying a pleasant thought about traversing a Scheme AST in a way that produces a Forth-like program.)</p>\n<blockquote>\n<p>3. What are the means of abstraction? (how compound elements can be named and manipulated as units)</p>\n</blockquote>\n<p>Word definition; and, more specifically, the dictionary. (Thought: In order for abstraction to occur, the user needs to \"teach\" the machine about the abstraction. The only [commonly useful] places where \"teaching\" [aka storage] can occur are the stack and the dictionary.)</p>",
            "content_type": "text/html",
            "display_recipient": "forth",
            "flags": [
                "read",
                "historical"
            ],
            "id": 109894656,
            "is_me_message": false,
            "last_edit_timestamp": 1492800377,
            "reactions": [],
            "recipient_id": 103267,
            "sender_email": "david.isaac.lee@gmail.com",
            "sender_full_name": "David Isaac Lee (SP2'17)",
            "sender_id": 100541,
            "sender_realm_str": "recurse",
            "stream_id": 100727,
            "subject": "Elements of Forth",
            "submessages": [],
            "timestamp": 1492800346,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/840b0106bf4b64a91f222c05f43054358db93f2d?x=x&version=2",
            "client": "website",
            "content": "<p>It's supposed to be 80F and sunny on Saturday, so how about we do the same Fri/Sun split as the last workshop?  I'll have to be gone 2-4pm on Friday but if we start in the morning, we can make that work.</p>",
            "content_type": "text/html",
            "display_recipient": "forth",
            "flags": [
                "read",
                "historical"
            ],
            "id": 110052896,
            "is_me_message": false,
            "last_edit_timestamp": 1493151886,
            "reactions": [],
            "recipient_id": 103267,
            "sender_email": "code@saul.pw",
            "sender_full_name": "Saul Pwanson (SP2'17)",
            "sender_id": 100791,
            "sender_realm_str": "recurse",
            "stream_id": 100727,
            "subject": "Forth implementation workshop",
            "submessages": [],
            "timestamp": 1493151868,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/8f3e3f13689ac077fe4ae537e33bde345a57cb22?x=x&version=2",
            "client": "website",
            "content": "<p>that works for me</p>",
            "content_type": "text/html",
            "display_recipient": "forth",
            "flags": [
                "read",
                "historical"
            ],
            "id": 110052991,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 103267,
            "sender_email": "recurse@ardent.nebcorp.com",
            "sender_full_name": "Joe Ardent (he) (SP1'17)",
            "sender_id": 9097,
            "sender_realm_str": "recurse",
            "stream_id": 100727,
            "subject": "Forth implementation workshop",
            "submessages": [],
            "timestamp": 1493151997,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/95eb11b4d11f06cdb3001ff6e17d64de5f38bb28?x=x&version=12",
            "client": "website",
            "content": "<p>James told me that on Friday there will be mock interviews being done in Hopper, Lovelace and Babbage.</p>",
            "content_type": "text/html",
            "display_recipient": "forth",
            "flags": [
                "read",
                "historical"
            ],
            "id": 110053540,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 103267,
            "sender_email": "anja.kefala@gmail.com",
            "sender_full_name": "Anja Boskovic (SP1'17)",
            "sender_id": 100514,
            "sender_realm_str": "recurse",
            "stream_id": 100727,
            "subject": "Forth implementation workshop",
            "submessages": [],
            "timestamp": 1493152856,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/95eb11b4d11f06cdb3001ff6e17d64de5f38bb28?x=x&version=12",
            "client": "website",
            "content": "<p>I am going to verify with him what time they are taking place and see if we can maybe book Turing if there is a conflict.</p>",
            "content_type": "text/html",
            "display_recipient": "forth",
            "flags": [
                "read",
                "historical"
            ],
            "id": 110053620,
            "is_me_message": false,
            "last_edit_timestamp": 1493152946,
            "reactions": [],
            "recipient_id": 103267,
            "sender_email": "anja.kefala@gmail.com",
            "sender_full_name": "Anja Boskovic (SP1'17)",
            "sender_id": 100514,
            "sender_realm_str": "recurse",
            "stream_id": 100727,
            "subject": "Forth implementation workshop",
            "submessages": [],
            "timestamp": 1493152927,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/95eb11b4d11f06cdb3001ff6e17d64de5f38bb28?x=x&version=12",
            "client": "website",
            "content": "<p>The mock interviews are from 12:00 to 3pm.</p>",
            "content_type": "text/html",
            "display_recipient": "forth",
            "flags": [
                "read",
                "historical"
            ],
            "id": 110053660,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 103267,
            "sender_email": "anja.kefala@gmail.com",
            "sender_full_name": "Anja Boskovic (SP1'17)",
            "sender_id": 100514,
            "sender_realm_str": "recurse",
            "stream_id": 100727,
            "subject": "Forth implementation workshop",
            "submessages": [],
            "timestamp": 1493153041,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/95eb11b4d11f06cdb3001ff6e17d64de5f38bb28?x=x&version=12",
            "client": "website",
            "content": "<p>I updated <a href=\"https://recurse.zulipchat.com/#narrow/stream/RSVPs/topic/Forth.20Implementation.20Workshop\" target=\"_blank\" title=\"https://recurse.zulipchat.com/#narrow/stream/RSVPs/topic/Forth.20Implementation.20Workshop\">the rsvp</a>. We will use Hopper until noon and then move to the main space.</p>",
            "content_type": "text/html",
            "display_recipient": "forth",
            "flags": [
                "read",
                "historical"
            ],
            "id": 110054137,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 103267,
            "sender_email": "anja.kefala@gmail.com",
            "sender_full_name": "Anja Boskovic (SP1'17)",
            "sender_id": 100514,
            "sender_realm_str": "recurse",
            "stream_id": 100727,
            "subject": "Forth implementation workshop",
            "submessages": [],
            "timestamp": 1493153731,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/95eb11b4d11f06cdb3001ff6e17d64de5f38bb28?x=x&version=12",
            "client": "website",
            "content": "<p>And here is the rsvp for <a href=\"https://recurse.zulipchat.com/#narrow/stream/RSVPs/topic/Forth.20Implementation.20Workshop.20Part.20II\" target=\"_blank\" title=\"https://recurse.zulipchat.com/#narrow/stream/RSVPs/topic/Forth.20Implementation.20Workshop.20Part.20II\">part II</a>.</p>",
            "content_type": "text/html",
            "display_recipient": "forth",
            "flags": [
                "read",
                "historical"
            ],
            "id": 110054207,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 103267,
            "sender_email": "anja.kefala@gmail.com",
            "sender_full_name": "Anja Boskovic (SP1'17)",
            "sender_id": 100514,
            "sender_realm_str": "recurse",
            "stream_id": 100727,
            "subject": "Forth implementation workshop",
            "submessages": [],
            "timestamp": 1493153803,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/15cc6e65f5cb0faac87d0b88dae865281ba57899?x=x&version=2",
            "client": "website",
            "content": "<p>I'm ok with the split and it's actually good to have a day of break I think, to have the option to catch up.<br>\nThanks <span class=\"user-mention\" data-user-email=\"anja.kefala@gmail.com\" data-user-id=\"100514\">@Anja Boskovic (SP1'17)</span> for checking for conflicts, that's very helpful. I think Hopper/Main space should be fine?</p>",
            "content_type": "text/html",
            "display_recipient": "forth",
            "flags": [
                "read",
                "historical"
            ],
            "id": 110054306,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 103267,
            "sender_email": "moritz.neeb@posteo.net",
            "sender_full_name": "Moritz Neeb (he) (SP1'17)",
            "sender_id": 100515,
            "sender_realm_str": "recurse",
            "stream_id": 100727,
            "subject": "Forth implementation workshop",
            "submessages": [],
            "timestamp": 1493153959,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/840b0106bf4b64a91f222c05f43054358db93f2d?x=x&version=2",
            "client": "website",
            "content": "<p>Here is a very well-documented and straightforward Forth implementation: <a href=\"https://github.com/AlexandreAbreu/jonesforth/blob/master/jonesforth.S\" target=\"_blank\" title=\"https://github.com/AlexandreAbreu/jonesforth/blob/master/jonesforth.S\">https://github.com/AlexandreAbreu/jonesforth/blob/master/jonesforth.S</a></p>",
            "content_type": "text/html",
            "display_recipient": "forth",
            "flags": [
                "read",
                "historical"
            ],
            "id": 110251110,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 103267,
            "sender_email": "code@saul.pw",
            "sender_full_name": "Saul Pwanson (SP2'17)",
            "sender_id": 100791,
            "sender_realm_str": "recurse",
            "stream_id": 100727,
            "subject": "Forth implementation workshop",
            "submessages": [],
            "timestamp": 1493576556,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/15cc6e65f5cb0faac87d0b88dae865281ba57899?x=x&version=2",
            "client": "website",
            "content": "<p>I like writing useful commit messages:</p>\n<blockquote>\n<p>df148f6.. - implement word word (as cword, because word is reserved word) (41 seconds ago) - Moritz Neeb</p>\n</blockquote>\n<p>Ok ^^ I changed it to</p>\n<blockquote>\n<p>implement word word (as cword, because word is reserved nasm instruction)</p>\n</blockquote>",
            "content_type": "text/html",
            "display_recipient": "forth",
            "flags": [
                "read",
                "historical"
            ],
            "id": 110252027,
            "is_me_message": false,
            "last_edit_timestamp": 1493578915,
            "reactions": [],
            "recipient_id": 103267,
            "sender_email": "moritz.neeb@posteo.net",
            "sender_full_name": "Moritz Neeb (he) (SP1'17)",
            "sender_id": 100515,
            "sender_realm_str": "recurse",
            "stream_id": 100727,
            "subject": "Forth implementation workshop",
            "submessages": [],
            "timestamp": 1493578907,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/c52df4d54166ed7db0141bdb21c7935e502d6ddc?x=x&version=1",
            "client": "website",
            "content": "<p>Hi folks, there's something I'm wondering about <a href=\"https://github.com/recursecenter/wiki/wiki/Forth-Compiler-Implementation\" target=\"_blank\" title=\"https://github.com/recursecenter/wiki/wiki/Forth-Compiler-Implementation\">https://github.com/recursecenter/wiki/wiki/Forth-Compiler-Implementation</a></p>\n<p>For background, I had a summer job at FORTH Inc. long ago where I got to read their Forth implementation.  The way they did compile vs. interpret mode was not with a mode flag -- instead the ] word was the loop that read words from the input and compiled them, and ; would exit that loop with R&gt; DROP or something like that. What are the reasons to abandon that hack and add the STATE variable?</p>",
            "content_type": "text/html",
            "display_recipient": "forth",
            "flags": [
                "read",
                "historical"
            ],
            "id": 110256690,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 103267,
            "sender_email": "darius@wry.me",
            "sender_full_name": "Darius Bacon (W1'16)",
            "sender_id": 902,
            "sender_realm_str": "recurse",
            "stream_id": 100727,
            "subject": "Forth implementation workshop",
            "submessages": [],
            "timestamp": 1493590036,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/840b0106bf4b64a91f222c05f43054358db93f2d?x=x&version=2",
            "client": "website",
            "content": "<p>Hey Darius!  Thanks for the question; I didn't know anyone else was looking at my little wiki pages for these.  With that hack, how does <code>[</code> work to temporarily end compilation mode?  I could never figure that out on my last project  (in which an embedded C RTOS called Forth words to drive the algorithm engine), and anyway a toplevel INTERPRET loop worked better in that system.  So it seemed to me like <code>STATE</code> provided a cleaner and more flexible implementation, even if <code>]</code> is the more classic method.  In these workshops, I am trying to hit the highlights in a very limited amount of time, so I am explaining the Forth that I know worked well for me.  Hopefully I'm not offending some Forth guru's sensibilities with my design choices :)</p>",
            "content_type": "text/html",
            "display_recipient": "forth",
            "flags": [
                "read",
                "historical"
            ],
            "id": 110258397,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 103267,
            "sender_email": "code@saul.pw",
            "sender_full_name": "Saul Pwanson (SP2'17)",
            "sender_id": 100791,
            "sender_realm_str": "recurse",
            "stream_id": 100727,
            "subject": "Forth implementation workshop",
            "submessages": [],
            "timestamp": 1493594145,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/c52df4d54166ed7db0141bdb21c7935e502d6ddc?x=x&version=1",
            "client": "website",
            "content": "<p>Not at all. :)<br>\nI just always wondered why STATE seems to have taken over, and since I never made a classical Forth system of my own I never looked into it closely. I think <code>[</code> was</p>\n<div class=\"codehilite\"><pre><span></span>: [ R&gt; DROP ; IMMEDIATE\n</pre></div>\n\n\n<p>though it's been a very long time. You look at this and say \"gosh, that seems fragile\" but I vaguely remember Leo Brodie complaining about problems with STATE as well.</p>",
            "content_type": "text/html",
            "display_recipient": "forth",
            "flags": [
                "read",
                "historical"
            ],
            "id": 110269335,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 103267,
            "sender_email": "darius@wry.me",
            "sender_full_name": "Darius Bacon (W1'16)",
            "sender_id": 902,
            "sender_realm_str": "recurse",
            "stream_id": 100727,
            "subject": "Forth implementation workshop",
            "submessages": [],
            "timestamp": 1493620574,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/840b0106bf4b64a91f222c05f43054358db93f2d?x=x&version=2",
            "client": "website",
            "content": "<p>The work you all have been doing has inspired me to start work on my own x86 implementation following the same general plan from this weekend's workshop: <a href=\"https://github.com/saulpw/spwforth.git\" target=\"_blank\" title=\"https://github.com/saulpw/spwforth.git\">https://github.com/saulpw/spwforth.git</a>  and of course I'm stealing the best ideas I've seen from everyone else already!</p>",
            "content_type": "text/html",
            "display_recipient": "forth",
            "flags": [
                "read",
                "historical"
            ],
            "id": 110293289,
            "is_me_message": false,
            "reactions": [
                {
                    "emoji_code": "26f0",
                    "emoji_name": "mountain",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "anja.kefala@gmail.com",
                        "full_name": "Anja Boskovic (SP1'17)",
                        "id": 100514
                    },
                    "user_id": 100514
                }
            ],
            "recipient_id": 103267,
            "sender_email": "code@saul.pw",
            "sender_full_name": "Saul Pwanson (SP2'17)",
            "sender_id": 100791,
            "sender_realm_str": "recurse",
            "stream_id": 100727,
            "subject": "Forth implementation workshop",
            "submessages": [],
            "timestamp": 1493668969,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/15cc6e65f5cb0faac87d0b88dae865281ba57899?x=x&version=2",
            "client": "website",
            "content": "<p>cool. It think the process should be called collabomasteration or something.</p>\n<p>My  (currently unfinished implementation.) is called smorth and lives <a href=\"https://github.com/zormit/smorth\" target=\"_blank\" title=\"https://github.com/zormit/smorth\">here</a></p>",
            "content_type": "text/html",
            "display_recipient": "forth",
            "flags": [
                "read",
                "historical"
            ],
            "id": 110293456,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 103267,
            "sender_email": "moritz.neeb@posteo.net",
            "sender_full_name": "Moritz Neeb (he) (SP1'17)",
            "sender_id": 100515,
            "sender_realm_str": "recurse",
            "stream_id": 100727,
            "subject": "Forth implementation workshop",
            "submessages": [],
            "timestamp": 1493669253,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/c52df4d54166ed7db0141bdb21c7935e502d6ddc?x=x&version=1",
            "client": "website",
            "content": "<p>I pulled out my old sort-of-Forth the other night and started hacking at it again: <a href=\"https://github.com/darius/tusl\" target=\"_blank\" title=\"https://github.com/darius/tusl\">https://github.com/darius/tusl</a><br>\nI'd like to move functionality out of C, which wasn't a priority originally.</p>",
            "content_type": "text/html",
            "display_recipient": "forth",
            "flags": [
                "read",
                "historical"
            ],
            "id": 110301724,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 103267,
            "sender_email": "darius@wry.me",
            "sender_full_name": "Darius Bacon (W1'16)",
            "sender_id": 902,
            "sender_realm_str": "recurse",
            "stream_id": 100727,
            "subject": "Forth implementation workshop",
            "submessages": [],
            "timestamp": 1493683812,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/ac25c0f0dbfaa3e0d68634873943e63bdd41139c?x=x&version=1",
            "client": "website",
            "content": "<p>Sum the prime numbers between two numbers -- forth implementation that <span class=\"user-mention\" data-user-email=\"nabuhunaina@protonmail.com\" data-user-id=\"100533\">@Nasreen Abu-Hunaina (SP1'17)</span>  and I did for code dojo today:  <a href=\"https://pastebin.com/CgvTBLQx\" target=\"_blank\" title=\"https://pastebin.com/CgvTBLQx\">https://pastebin.com/CgvTBLQx</a></p>",
            "content_type": "text/html",
            "display_recipient": "forth",
            "flags": [
                "read",
                "historical"
            ],
            "id": 110345604,
            "is_me_message": false,
            "reactions": [
                {
                    "emoji_code": "1f642",
                    "emoji_name": "simple_smile",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "nabuhunaina@protonmail.com",
                        "full_name": "Nasreen Abu-Hunaina (they) (SP1'17)",
                        "id": 100533
                    },
                    "user_id": 100533
                },
                {
                    "emoji_code": "1f4af",
                    "emoji_name": "100",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "code@saul.pw",
                        "full_name": "Saul Pwanson (SP2'17)",
                        "id": 100791
                    },
                    "user_id": 100791
                }
            ],
            "recipient_id": 103267,
            "sender_email": "paul@paulwmorris.com",
            "sender_full_name": "Paul Morris (he) (SP1'17)",
            "sender_id": 100524,
            "sender_realm_str": "recurse",
            "stream_id": 100727,
            "subject": "sum prime numbers",
            "submessages": [],
            "timestamp": 1493772755,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/840b0106bf4b64a91f222c05f43054358db93f2d?x=x&version=2",
            "client": "website",
            "content": "<p>I was invited to the <a href=\"https://github.com/ForthHub\" target=\"_blank\" title=\"https://github.com/ForthHub\">ForthHub</a>, a GitHub group for Forth users.  I don't know how they found me :)</p>",
            "content_type": "text/html",
            "display_recipient": "forth",
            "flags": [
                "read",
                "historical"
            ],
            "id": 110376426,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 103267,
            "sender_email": "code@saul.pw",
            "sender_full_name": "Saul Pwanson (SP2'17)",
            "sender_id": 100791,
            "sender_realm_str": "recurse",
            "stream_id": 100727,
            "subject": "ForthHub",
            "submessages": [],
            "timestamp": 1493837153,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/15cc6e65f5cb0faac87d0b88dae865281ba57899?x=x&version=2",
            "client": "website",
            "content": "<p>maybe a fellow recurser? or they have a bot scraping for forth projects.</p>",
            "content_type": "text/html",
            "display_recipient": "forth",
            "flags": [
                "read",
                "historical"
            ],
            "id": 110461451,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 103267,
            "sender_email": "moritz.neeb@posteo.net",
            "sender_full_name": "Moritz Neeb (he) (SP1'17)",
            "sender_id": 100515,
            "sender_realm_str": "recurse",
            "stream_id": 100727,
            "subject": "ForthHub",
            "submessages": [],
            "timestamp": 1494007966,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/15cc6e65f5cb0faac87d0b88dae865281ba57899?x=x&version=2",
            "client": "website",
            "content": "<blockquote>\n<p>It's like a half-solved cryptogram where the solution is a piece of FORTH code written by someone who doesn't know FORTH.</p>\n</blockquote>\n<p><a href=\"https://xkcd.com/1833/\" target=\"_blank\" title=\"https://xkcd.com/1833/\">https://xkcd.com/1833/</a></p>",
            "content_type": "text/html",
            "display_recipient": "forth",
            "flags": [
                "read",
                "historical"
            ],
            "id": 110461466,
            "is_me_message": false,
            "reactions": [
                {
                    "emoji_code": "1f606",
                    "emoji_name": "laughing",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "joseph.yiasemides13@alumni.imperial.ac.uk",
                        "full_name": "Joseph George Yiasemides (he) (SP1'17)",
                        "id": 100508
                    },
                    "user_id": 100508
                },
                {
                    "emoji_code": "1f601",
                    "emoji_name": "grin",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "nabuhunaina@protonmail.com",
                        "full_name": "Nasreen Abu-Hunaina (they) (SP1'17)",
                        "id": 100533
                    },
                    "user_id": 100533
                },
                {
                    "emoji_code": "1f606",
                    "emoji_name": "laughing",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "nabuhunaina@protonmail.com",
                        "full_name": "Nasreen Abu-Hunaina (they) (SP1'17)",
                        "id": 100533
                    },
                    "user_id": 100533
                }
            ],
            "recipient_id": 103267,
            "sender_email": "moritz.neeb@posteo.net",
            "sender_full_name": "Moritz Neeb (he) (SP1'17)",
            "sender_id": 100515,
            "sender_realm_str": "recurse",
            "stream_id": 100727,
            "subject": "xkcd: code quality 3",
            "submessages": [],
            "timestamp": 1494008017,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/8f076e5e03c30a36d598445308926598?d=identicon&version=1",
            "client": "website",
            "content": "<p><span class=\"user-mention\" data-user-email=\"code@saul.pw\" data-user-id=\"100791\">@Saul Pwanson (SP2'17)</span> xkcd mentioned Forth last Friday and I <em>immediately</em> thought of you: <a href=\"https://xkcd.com/1833/\" target=\"_blank\" title=\"https://xkcd.com/1833/\">https://xkcd.com/1833/</a></p>",
            "content_type": "text/html",
            "display_recipient": "forth",
            "flags": [
                "read",
                "historical"
            ],
            "id": 110586941,
            "is_me_message": false,
            "reactions": [
                {
                    "emoji_code": "1f49c",
                    "emoji_name": "purple_heart",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "joseph.yiasemides13@alumni.imperial.ac.uk",
                        "full_name": "Joseph George Yiasemides (he) (SP1'17)",
                        "id": 100508
                    },
                    "user_id": 100508
                },
                {
                    "emoji_code": "1f49c",
                    "emoji_name": "purple_heart",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "code@saul.pw",
                        "full_name": "Saul Pwanson (SP2'17)",
                        "id": 100791
                    },
                    "user_id": 100791
                },
                {
                    "emoji_code": "1f49c",
                    "emoji_name": "purple_heart",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "moritz.neeb@posteo.net",
                        "full_name": "Moritz Neeb (he) (SP1'17)",
                        "id": 100515
                    },
                    "user_id": 100515
                },
                {
                    "emoji_code": "1f49c",
                    "emoji_name": "purple_heart",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "anja.kefala@gmail.com",
                        "full_name": "Anja Boskovic (SP1'17)",
                        "id": 100514
                    },
                    "user_id": 100514
                }
            ],
            "recipient_id": 103267,
            "sender_email": "alex@strugee.net",
            "sender_full_name": "AJ Jordan (he/they) (SP2'17)",
            "sender_id": 100461,
            "sender_realm_str": "recurse",
            "stream_id": 100727,
            "subject": "xkcd",
            "submessages": [],
            "timestamp": 1494293834,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/8f076e5e03c30a36d598445308926598?d=identicon&version=1",
            "client": "website",
            "content": "<p>&lt;3</p>",
            "content_type": "text/html",
            "display_recipient": "forth",
            "flags": [
                "read",
                "historical"
            ],
            "id": 110586943,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 103267,
            "sender_email": "alex@strugee.net",
            "sender_full_name": "AJ Jordan (he/they) (SP2'17)",
            "sender_id": 100461,
            "sender_realm_str": "recurse",
            "stream_id": 100727,
            "subject": "xkcd",
            "submessages": [],
            "timestamp": 1494293836,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/216dd445a46512212fb170dd7574e740416478c2?x=x&version=1",
            "client": "website",
            "content": "<p>I can't see the Forth in there: am I blind?</p>",
            "content_type": "text/html",
            "display_recipient": "forth",
            "flags": [
                "read",
                "historical"
            ],
            "id": 110598609,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 103267,
            "sender_email": "joseph.yiasemides13@alumni.imperial.ac.uk",
            "sender_full_name": "Joseph George Yiasemides (he) (SP1'17)",
            "sender_id": 100508,
            "sender_realm_str": "recurse",
            "stream_id": 100727,
            "subject": "xkcd",
            "submessages": [],
            "timestamp": 1494321571,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/15cc6e65f5cb0faac87d0b88dae865281ba57899?x=x&version=2",
            "client": "website",
            "content": "<p>it's hidden in the mouseover text</p>",
            "content_type": "text/html",
            "display_recipient": "forth",
            "flags": [
                "read",
                "historical"
            ],
            "id": 110603361,
            "is_me_message": false,
            "reactions": [
                {
                    "emoji_code": "1f638",
                    "emoji_name": "smile_cat",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "joseph.yiasemides13@alumni.imperial.ac.uk",
                        "full_name": "Joseph George Yiasemides (he) (SP1'17)",
                        "id": 100508
                    },
                    "user_id": 100508
                }
            ],
            "recipient_id": 103267,
            "sender_email": "moritz.neeb@posteo.net",
            "sender_full_name": "Moritz Neeb (he) (SP1'17)",
            "sender_id": 100515,
            "sender_realm_str": "recurse",
            "stream_id": 100727,
            "subject": "xkcd",
            "submessages": [],
            "timestamp": 1494332068,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/8f076e5e03c30a36d598445308926598?d=identicon&version=1",
            "client": "website",
            "content": "<p>ah loll... just realized you posted this days before me <span class=\"user-mention\" data-user-email=\"moritz.neeb@posteo.net\" data-user-id=\"100515\">@Moritz Neeb (SP1'17)</span></p>",
            "content_type": "text/html",
            "display_recipient": "forth",
            "flags": [
                "read",
                "historical"
            ],
            "id": 110682048,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 103267,
            "sender_email": "alex@strugee.net",
            "sender_full_name": "AJ Jordan (he/they) (SP2'17)",
            "sender_id": 100461,
            "sender_realm_str": "recurse",
            "stream_id": 100727,
            "subject": "xkcd",
            "submessages": [],
            "timestamp": 1494487434,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/8f076e5e03c30a36d598445308926598?d=identicon&version=1",
            "client": "website",
            "content": "<p><em>and</em> with a better explanation :D</p>",
            "content_type": "text/html",
            "display_recipient": "forth",
            "flags": [
                "read",
                "historical"
            ],
            "id": 110682049,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 103267,
            "sender_email": "alex@strugee.net",
            "sender_full_name": "AJ Jordan (he/they) (SP2'17)",
            "sender_id": 100461,
            "sender_realm_str": "recurse",
            "stream_id": 100727,
            "subject": "xkcd",
            "submessages": [],
            "timestamp": 1494487441,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/15cc6e65f5cb0faac87d0b88dae865281ba57899?x=x&version=2",
            "client": "website",
            "content": "<p>In my forth implementation I am still one or two steps away from a nice interpreter loop.<br>\nCould someone have a look at my current attempt <a href=\"https://github.com/zormit/smorth/pull/1/\" target=\"_blank\" title=\"https://github.com/zormit/smorth/pull/1/\">https://github.com/zormit/smorth/pull/1/</a> and nudge me in the right direction?</p>",
            "content_type": "text/html",
            "display_recipient": "forth",
            "flags": [
                "read",
                "historical"
            ],
            "id": 111050214,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 103267,
            "sender_email": "moritz.neeb@posteo.net",
            "sender_full_name": "Moritz Neeb (he) (SP1'17)",
            "sender_id": 100515,
            "sender_realm_str": "recurse",
            "stream_id": 100727,
            "subject": "code review towards interpreter loop",
            "submessages": [],
            "timestamp": 1495202364,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/95eb11b4d11f06cdb3001ff6e17d64de5f38bb28?x=x&version=12",
            "client": "website",
            "content": "<p><span class=\"user-mention\" data-user-email=\"moritz.neeb@posteo.net\" data-user-id=\"100515\">@Moritz Neeb (SP1'17)</span>  You kept your stack operators as a series of pops and pushes. &lt;3333</p>\n<hr>\n<p>I am just going to move my other comment to your commit. xD</p>",
            "content_type": "text/html",
            "display_recipient": "forth",
            "flags": [
                "read",
                "historical"
            ],
            "id": 111052844,
            "is_me_message": false,
            "last_edit_timestamp": 1495208202,
            "reactions": [],
            "recipient_id": 103267,
            "sender_email": "anja.kefala@gmail.com",
            "sender_full_name": "Anja Boskovic (SP1'17)",
            "sender_id": 100514,
            "sender_realm_str": "recurse",
            "stream_id": 100727,
            "subject": "code review towards interpreter loop",
            "submessages": [],
            "timestamp": 1495207639,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/15cc6e65f5cb0faac87d0b88dae865281ba57899?x=x&version=2",
            "client": "website",
            "content": "<p>Thank you <span class=\"user-mention\" data-user-email=\"anja.kefala@gmail.com\" data-user-id=\"100514\">@Anja Boskovic (SP1'17)</span></p>",
            "content_type": "text/html",
            "display_recipient": "forth",
            "flags": [
                "read",
                "historical"
            ],
            "id": 111056354,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 103267,
            "sender_email": "moritz.neeb@posteo.net",
            "sender_full_name": "Moritz Neeb (he) (SP1'17)",
            "sender_id": 100515,
            "sender_realm_str": "recurse",
            "stream_id": 100727,
            "subject": "code review towards interpreter loop",
            "submessages": [],
            "timestamp": 1495214197,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/555d9fc8b9f9a919e308a050961eced4?d=identicon&version=1",
            "client": "website",
            "content": "<p>weird pseudo-checkin, but i've been working on implementing my forth compiler.</p>\n<p>a few days back i moved DOCOLON inside my word header macro for composite words. the problem  was in building the compiler, how do i copy DOCOLON's instructions into my dictionary?! instead of searching for one of the hundreds of ASM instructions that might handle this in particular (do these even exist?!) it occurred to me i could just copy another instance already located in memory.</p>\n<p>playing around in gdb and seeing how thing's get really weird when the instruction pointer gets lost in data (interpreting data as instructions), we can abuse this and copy instructions just like any old data!</p>",
            "content_type": "text/html",
            "display_recipient": "forth",
            "flags": [
                "read",
                "historical"
            ],
            "id": 111225723,
            "is_me_message": false,
            "reactions": [
                {
                    "emoji_code": "1f192",
                    "emoji_name": "cool",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "vivian.brown@gmail.com",
                        "full_name": "Vivian Brown (SP2'17)",
                        "id": 100931
                    },
                    "user_id": 100931
                }
            ],
            "recipient_id": 103267,
            "sender_email": "trent.gill@gmail.com",
            "sender_full_name": "Trent Gill (he) (SP2'17)",
            "sender_id": 100932,
            "sender_realm_str": "recurse",
            "stream_id": 100727,
            "subject": "instructions are just data",
            "submessages": [],
            "timestamp": 1495594262,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/15cc6e65f5cb0faac87d0b88dae865281ba57899?x=x&version=2",
            "client": "website",
            "content": "<p>sounds fascinating. Sounds like you're close to write the first virus in Forth ;-)</p>",
            "content_type": "text/html",
            "display_recipient": "forth",
            "flags": [
                "read",
                "historical"
            ],
            "id": 111233987,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 103267,
            "sender_email": "moritz.neeb@posteo.net",
            "sender_full_name": "Moritz Neeb (he) (SP1'17)",
            "sender_id": 100515,
            "sender_realm_str": "recurse",
            "stream_id": 100727,
            "subject": "instructions are just data",
            "submessages": [],
            "timestamp": 1495615107,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/840b0106bf4b64a91f222c05f43054358db93f2d?x=x&version=2",
            "client": "website",
            "content": "<p><code>: POSTPONE ( \"&lt;defined-word&gt;\" -- )  ' LITERAL ['] , , ;</code></p>",
            "content_type": "text/html",
            "display_recipient": "forth",
            "flags": [
                "read",
                "historical"
            ],
            "id": 111268782,
            "is_me_message": false,
            "reactions": [
                {
                    "emoji_code": "1f504",
                    "emoji_name": "arrows_counterclockwise",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "trent.gill@gmail.com",
                        "full_name": "Trent Gill (he) (SP2'17)",
                        "id": 100932
                    },
                    "user_id": 100932
                },
                {
                    "emoji_code": "1f504",
                    "emoji_name": "arrows_counterclockwise",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "anja.kefala@gmail.com",
                        "full_name": "Anja Boskovic (SP1'17)",
                        "id": 100514
                    },
                    "user_id": 100514
                }
            ],
            "recipient_id": 103267,
            "sender_email": "code@saul.pw",
            "sender_full_name": "Saul Pwanson (SP2'17)",
            "sender_id": 100791,
            "sender_realm_str": "recurse",
            "stream_id": 100727,
            "subject": "Definition of POSTPONE",
            "submessages": [],
            "timestamp": 1495682594,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/555d9fc8b9f9a919e308a050961eced4?d=identicon&version=1",
            "client": "website",
            "content": "<p>what in the actual fuck. that is so dumb. i hate forth.</p>",
            "content_type": "text/html",
            "display_recipient": "forth",
            "flags": [
                "read",
                "historical"
            ],
            "id": 111269136,
            "is_me_message": false,
            "reactions": [
                {
                    "emoji_code": "1f606",
                    "emoji_name": "laughing",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "ad@lamarque.fr",
                        "full_name": "Adrien Lamarque (they/he) (S1'16)",
                        "id": 9335
                    },
                    "user_id": 9335
                },
                {
                    "emoji_code": "1f606",
                    "emoji_name": "laughing",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "anja.kefala@gmail.com",
                        "full_name": "Anja Boskovic (SP1'17)",
                        "id": 100514
                    },
                    "user_id": 100514
                },
                {
                    "emoji_code": "1f606",
                    "emoji_name": "laughing",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "alex@strugee.net",
                        "full_name": "AJ Jordan (he/they) (SP2'17)",
                        "id": 100461
                    },
                    "user_id": 100461
                }
            ],
            "recipient_id": 103267,
            "sender_email": "trent.gill@gmail.com",
            "sender_full_name": "Trent Gill (he) (SP2'17)",
            "sender_id": 100932,
            "sender_realm_str": "recurse",
            "stream_id": 100727,
            "subject": "Definition of POSTPONE",
            "submessages": [],
            "timestamp": 1495683277,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/555d9fc8b9f9a919e308a050961eced4?d=identicon&version=1",
            "client": "website",
            "content": "<p>also. just to be clear. i love forth. (i hate forth)</p>",
            "content_type": "text/html",
            "display_recipient": "forth",
            "flags": [
                "read",
                "historical"
            ],
            "id": 111269144,
            "is_me_message": false,
            "reactions": [
                {
                    "emoji_code": "1f47d",
                    "emoji_name": "alien",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "ad@lamarque.fr",
                        "full_name": "Adrien Lamarque (they/he) (S1'16)",
                        "id": 9335
                    },
                    "user_id": 9335
                },
                {
                    "emoji_code": "1f47d",
                    "emoji_name": "alien",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "code@saul.pw",
                        "full_name": "Saul Pwanson (SP2'17)",
                        "id": 100791
                    },
                    "user_id": 100791
                }
            ],
            "recipient_id": 103267,
            "sender_email": "trent.gill@gmail.com",
            "sender_full_name": "Trent Gill (he) (SP2'17)",
            "sender_id": 100932,
            "sender_realm_str": "recurse",
            "stream_id": 100727,
            "subject": "Definition of POSTPONE",
            "submessages": [],
            "timestamp": 1495683341,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/555d9fc8b9f9a919e308a050961eced4?d=identicon&version=1",
            "client": "website",
            "content": "<p><span class=\"user-mention\" data-user-email=\"nabuhunaina@protonmail.com\" data-user-id=\"100533\">@Nasreen Abu-Hunaina (SP1'17)</span>  <span class=\"user-mention\" data-user-email=\"moritz.neeb@posteo.net\" data-user-id=\"100515\">@Moritz Neeb (SP1'17)</span> . hello my fellow forthers - just wanted to share a little victory that i got my forth compiling &amp; handling words w IF ELSE THEN! code is here <a href=\"https://github.com/trentgill/forthASM\" target=\"_blank\" title=\"https://github.com/trentgill/forthASM\">https://github.com/trentgill/forthASM</a> (on the antirestaurant branch) if u want to take a peek and discuss :)</p>\n<p>also hatching crazy forth plans w <span class=\"user-mention\" data-user-email=\"code@saul.pw\" data-user-id=\"100791\">@Saul Pwanson (SP2'17)</span> which i can't wait to share !</p>",
            "content_type": "text/html",
            "display_recipient": "forth",
            "flags": [
                "read",
                "historical"
            ],
            "id": 111352314,
            "is_me_message": false,
            "reactions": [
                {
                    "emoji_code": "1f388",
                    "emoji_name": "balloon",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "nabuhunaina@protonmail.com",
                        "full_name": "Nasreen Abu-Hunaina (they) (SP1'17)",
                        "id": 100533
                    },
                    "user_id": 100533
                },
                {
                    "emoji_code": "1f389",
                    "emoji_name": "tada",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "nabuhunaina@protonmail.com",
                        "full_name": "Nasreen Abu-Hunaina (they) (SP1'17)",
                        "id": 100533
                    },
                    "user_id": 100533
                },
                {
                    "emoji_code": "1f44d",
                    "emoji_name": "+1",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "paul@paulwmorris.com",
                        "full_name": "Paul Morris (he) (SP1'17)",
                        "id": 100524
                    },
                    "user_id": 100524
                }
            ],
            "recipient_id": 103267,
            "sender_email": "trent.gill@gmail.com",
            "sender_full_name": "Trent Gill (he) (SP2'17)",
            "sender_id": 100932,
            "sender_realm_str": "recurse",
            "stream_id": 100727,
            "subject": "compiling :)",
            "submessages": [],
            "timestamp": 1495856455,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/15cc6e65f5cb0faac87d0b88dae865281ba57899?x=x&version=2",
            "client": "website",
            "content": "<p>that is great, congratulations! control flow, wohoo! :) I'm really curious about those plans.</p>",
            "content_type": "text/html",
            "display_recipient": "forth",
            "flags": [
                "read",
                "historical"
            ],
            "id": 111358557,
            "is_me_message": false,
            "reactions": [
                {
                    "emoji_code": "1f388",
                    "emoji_name": "balloon",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "trent.gill@gmail.com",
                        "full_name": "Trent Gill (he) (SP2'17)",
                        "id": 100932
                    },
                    "user_id": 100932
                }
            ],
            "recipient_id": 103267,
            "sender_email": "moritz.neeb@posteo.net",
            "sender_full_name": "Moritz Neeb (he) (SP1'17)",
            "sender_id": 100515,
            "sender_realm_str": "recurse",
            "stream_id": 100727,
            "subject": "compiling :)",
            "submessages": [],
            "timestamp": 1495871876,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/36e38f07213a4459a526a3334d690aa09a75b04d?x=x&version=3",
            "client": "website",
            "content": "<p>a cool exercise <a href=\"https://rforth.wordpress.com/2017/03/30/30th-march-2017/\" target=\"_blank\" title=\"https://rforth.wordpress.com/2017/03/30/30th-march-2017/\">https://rforth.wordpress.com/2017/03/30/30th-march-2017/</a></p>",
            "content_type": "text/html",
            "display_recipient": "forth",
            "flags": [
                "read",
                "historical"
            ],
            "id": 111521734,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 103267,
            "sender_email": "dclau04@gmail.com",
            "sender_full_name": "Daniel Lau (he) (SP2'17)",
            "sender_id": 100522,
            "sender_realm_str": "recurse",
            "stream_id": 100727,
            "subject": "neural network",
            "submessages": [],
            "timestamp": 1496248235,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/216dd445a46512212fb170dd7574e740416478c2?x=x&version=1",
            "client": "website",
            "content": "<p>Yeah: it seems nice. Nasreen + I are considering a Hopfield Neural Network (it's the simplest I know of) after Saul suggested someting like that for one of the Forth workshops... we'll build one someday.</p>",
            "content_type": "text/html",
            "display_recipient": "forth",
            "flags": [
                "read",
                "historical"
            ],
            "id": 111704118,
            "is_me_message": false,
            "reactions": [
                {
                    "emoji_code": "1f431",
                    "emoji_name": "cat_face",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "trent.gill@gmail.com",
                        "full_name": "Trent Gill (he) (SP2'17)",
                        "id": 100932
                    },
                    "user_id": 100932
                }
            ],
            "recipient_id": 103267,
            "sender_email": "joseph.yiasemides13@alumni.imperial.ac.uk",
            "sender_full_name": "Joseph George Yiasemides (he) (SP1'17)",
            "sender_id": 100508,
            "sender_realm_str": "recurse",
            "stream_id": 100727,
            "subject": "neural network",
            "submessages": [],
            "timestamp": 1496657464,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/840b0106bf4b64a91f222c05f43054358db93f2d?x=x&version=2",
            "client": "website",
            "content": "<p>I've just been informed by <a href=\"https://github.com/ForthHub/discussion/issues/46\" target=\"_blank\" title=\"https://github.com/ForthHub/discussion/issues/46\">ForthHub</a> that the <a href=\"http://www.forth.org/Australia/Australia.html\" target=\"_blank\" title=\"http://www.forth.org/Australia/Australia.html\">Proceedings of the First Australian Forth Symposium</a> (1988) has just been added to the collection of scanned books.  Some interesting stuff in there.</p>",
            "content_type": "text/html",
            "display_recipient": "forth",
            "flags": [
                "read",
                "historical"
            ],
            "id": 111818931,
            "is_me_message": false,
            "reactions": [
                {
                    "emoji_code": "1f44d",
                    "emoji_name": "+1",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "nabuhunaina@protonmail.com",
                        "full_name": "Nasreen Abu-Hunaina (they) (SP1'17)",
                        "id": 100533
                    },
                    "user_id": 100533
                }
            ],
            "recipient_id": 103267,
            "sender_email": "code@saul.pw",
            "sender_full_name": "Saul Pwanson (SP2'17)",
            "sender_id": 100791,
            "sender_realm_str": "recurse",
            "stream_id": 100727,
            "subject": "(no topic)",
            "submessages": [],
            "timestamp": 1496888621,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/216dd445a46512212fb170dd7574e740416478c2?x=x&version=1",
            "client": "website",
            "content": "<p>Forth and Prolog in session IV... I'd like to read that one.</p>",
            "content_type": "text/html",
            "display_recipient": "forth",
            "flags": [
                "read",
                "historical"
            ],
            "id": 111827055,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 103267,
            "sender_email": "joseph.yiasemides13@alumni.imperial.ac.uk",
            "sender_full_name": "Joseph George Yiasemides (he) (SP1'17)",
            "sender_id": 100508,
            "sender_realm_str": "recurse",
            "stream_id": 100727,
            "subject": "(no topic)",
            "submessages": [],
            "timestamp": 1496908692,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/555d9fc8b9f9a919e308a050961eced4?d=identicon&version=1",
            "client": "website",
            "content": "<p>out of the blue i found myself starting to write a forth in haskell. i've found just thinking about how one implements forth in a language is such a great way to start to understand that language. all i've done so far is make the forth word <code>WORD</code>, but it felt super good.</p>\n<div class=\"codehilite\"><pre><span></span>fWORD :: Char -&gt; String -&gt; (String, String)\nfWORD delim inStr = (word, shortstr)\n  where word     = takeWhile (/= delim) (inStr)\n        shortstr = drop (1 + length word) inStr\n</pre></div>\n\n\n<p>this is just passing in values that should be on the stack directly, but I've got an idea for how to implement the stack in a functional way using nested tuples <code>(tos, restofstack)</code> where <code>restofstack = (tos-1, restofstack)</code> etc.</p>",
            "content_type": "text/html",
            "display_recipient": "forth",
            "flags": [
                "read",
                "historical"
            ],
            "id": 112072663,
            "is_me_message": false,
            "last_edit_timestamp": 1497425520,
            "reactions": [
                {
                    "emoji_code": "1f63a",
                    "emoji_name": "smiley_cat",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "nabuhunaina@protonmail.com",
                        "full_name": "Nasreen Abu-Hunaina (they) (SP1'17)",
                        "id": 100533
                    },
                    "user_id": 100533
                },
                {
                    "emoji_code": "1f389",
                    "emoji_name": "tada",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "nabuhunaina@protonmail.com",
                        "full_name": "Nasreen Abu-Hunaina (they) (SP1'17)",
                        "id": 100533
                    },
                    "user_id": 100533
                },
                {
                    "emoji_code": "1f4af",
                    "emoji_name": "100",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "vivian.brown@gmail.com",
                        "full_name": "Vivian Brown (SP2'17)",
                        "id": 100931
                    },
                    "user_id": 100931
                },
                {
                    "emoji_code": "1f4af",
                    "emoji_name": "100",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "code@saul.pw",
                        "full_name": "Saul Pwanson (SP2'17)",
                        "id": 100791
                    },
                    "user_id": 100791
                }
            ],
            "recipient_id": 103267,
            "sender_email": "trent.gill@gmail.com",
            "sender_full_name": "Trent Gill (he) (SP2'17)",
            "sender_id": 100932,
            "sender_realm_str": "recurse",
            "stream_id": 100727,
            "subject": "forth in haskell",
            "submessages": [],
            "timestamp": 1497422923,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/7bfb2e1e56050666b3e5973ea7df6ee4?d=identicon&version=1",
            "client": "website",
            "content": "<p>takeWhile!</p>",
            "content_type": "text/html",
            "display_recipient": "forth",
            "flags": [
                "read",
                "historical"
            ],
            "id": 112084113,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 103267,
            "sender_email": "vivian.brown@gmail.com",
            "sender_full_name": "Vivian Brown (SP2'17)",
            "sender_id": 100931,
            "sender_realm_str": "recurse",
            "stream_id": 100727,
            "subject": "forth in haskell",
            "submessages": [],
            "timestamp": 1497449539,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/555d9fc8b9f9a919e308a050961eced4?d=identicon&version=1",
            "client": "website",
            "content": "<p>continuing, i just got this working: </p>\n<div class=\"codehilite\"><pre><span></span>fSQUARED :: FStack -&gt; FStack\nfSQUARED stk = fSTAR . fDUP $ stk\n</pre></div>",
            "content_type": "text/html",
            "display_recipient": "forth",
            "flags": [
                "read",
                "historical"
            ],
            "id": 112335045,
            "is_me_message": false,
            "reactions": [
                {
                    "emoji_code": "1f389",
                    "emoji_name": "tada",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "nabuhunaina@protonmail.com",
                        "full_name": "Nasreen Abu-Hunaina (they) (SP1'17)",
                        "id": 100533
                    },
                    "user_id": 100533
                }
            ],
            "recipient_id": 103267,
            "sender_email": "trent.gill@gmail.com",
            "sender_full_name": "Trent Gill (he) (SP2'17)",
            "sender_id": 100932,
            "sender_realm_str": "recurse",
            "stream_id": 100727,
            "subject": "forth in haskell",
            "submessages": [],
            "timestamp": 1497977902,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/555d9fc8b9f9a919e308a050961eced4?d=identicon&version=1",
            "client": "website",
            "content": "<p>somewhat frustratingly, haskell composes functions right to left, and prints lists left(top) to right(bottom)...</p>",
            "content_type": "text/html",
            "display_recipient": "forth",
            "flags": [
                "read",
                "historical"
            ],
            "id": 112335070,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 103267,
            "sender_email": "trent.gill@gmail.com",
            "sender_full_name": "Trent Gill (he) (SP2'17)",
            "sender_id": 100932,
            "sender_realm_str": "recurse",
            "stream_id": 100727,
            "subject": "forth in haskell",
            "submessages": [],
            "timestamp": 1497977954,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/36e38f07213a4459a526a3334d690aa09a75b04d?x=x&version=3",
            "client": "website",
            "content": "<div class=\"codehilite\"><pre><span></span><span class=\"kr\">import</span> <span class=\"nn\">Control.Arrow</span>\n<span class=\"p\">(</span><span class=\"o\">*</span><span class=\"err\">2</span><span class=\"p\">)</span> <span class=\"o\">&gt;&gt;&gt;</span> <span class=\"p\">(</span><span class=\"o\">+</span><span class=\"mi\">1</span><span class=\"p\">)</span> <span class=\"o\">$</span> <span class=\"mi\">3</span>  <span class=\"c1\">-- 7</span>\n<span class=\"nf\">fDUP</span> <span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">fSTAR</span> <span class=\"o\">$</span> <span class=\"n\">stk</span>   <span class=\"c1\">-- is what u want?</span>\n<span class=\"nf\">fSQUARED</span>  <span class=\"ow\">=</span>  <span class=\"n\">fDUP</span> <span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">fSTAR</span>  <span class=\"c1\">-- is this more idiomatic?</span>\n</pre></div>\n\n\n<p><a href=\"https://stackoverflow.com/questions/7208538/function-composition-with-reverse-syntax\" target=\"_blank\" title=\"https://stackoverflow.com/questions/7208538/function-composition-with-reverse-syntax\">SO</a></p>",
            "content_type": "text/html",
            "display_recipient": "forth",
            "flags": [
                "read",
                "historical"
            ],
            "id": 112358901,
            "is_me_message": false,
            "last_edit_timestamp": 1498022114,
            "reactions": [
                {
                    "emoji_code": "1f3b1",
                    "emoji_name": "8ball",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "trent.gill@gmail.com",
                        "full_name": "Trent Gill (he) (SP2'17)",
                        "id": 100932
                    },
                    "user_id": 100932
                }
            ],
            "recipient_id": 103267,
            "sender_email": "dclau04@gmail.com",
            "sender_full_name": "Daniel Lau (he) (SP2'17)",
            "sender_id": 100522,
            "sender_realm_str": "recurse",
            "stream_id": 100727,
            "subject": "forth in haskell",
            "submessages": [],
            "timestamp": 1498022101,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/555d9fc8b9f9a919e308a050961eced4?d=identicon&version=1",
            "client": "website",
            "content": "<p>OOO that's great, and point-free style ftw!<br>\nreading all about the state monad to try and avoid having to pass the whole damn forth program through every forth word...</p>",
            "content_type": "text/html",
            "display_recipient": "forth",
            "flags": [
                "read",
                "historical"
            ],
            "id": 112377872,
            "is_me_message": false,
            "reactions": [
                {
                    "emoji_code": "1f44d",
                    "emoji_name": "+1",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "dclau04@gmail.com",
                        "full_name": "Daniel Lau (he) (SP2'17)",
                        "id": 100522
                    },
                    "user_id": 100522
                }
            ],
            "recipient_id": 103267,
            "sender_email": "trent.gill@gmail.com",
            "sender_full_name": "Trent Gill (he) (SP2'17)",
            "sender_id": 100932,
            "sender_realm_str": "recurse",
            "stream_id": 100727,
            "subject": "forth in haskell",
            "submessages": [],
            "timestamp": 1498061434,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/ac848f10b247c86de777f1ddd97851a1?d=identicon&version=1",
            "client": "website",
            "content": "<p>I read a bit of session 4 about names.  The author talks about changing 'SET-FILE' to 'USING' as in USING FILE - I thought it was neat!</p>",
            "content_type": "text/html",
            "display_recipient": "forth",
            "flags": [
                "read",
                "historical"
            ],
            "id": 112496465,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 103267,
            "sender_email": "nabuhunaina@protonmail.com",
            "sender_full_name": "Nasreen Abu-Hunaina (they) (SP1'17)",
            "sender_id": 100533,
            "sender_realm_str": "recurse",
            "stream_id": 100727,
            "subject": "(no topic)",
            "submessages": [],
            "timestamp": 1498234997,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/ac848f10b247c86de777f1ddd97851a1?d=identicon&version=1",
            "client": "website",
            "content": "<p><img alt=\":tada:\" class=\"emoji\" src=\"/static/generated/emoji/images/emoji/unicode/1f389.png\" title=\":tada:\"><img alt=\":tada:\" class=\"emoji\" src=\"/static/generated/emoji/images/emoji/unicode/1f389.png\" title=\":tada:\"><img alt=\":tada:\" class=\"emoji\" src=\"/static/generated/emoji/images/emoji/unicode/1f389.png\" title=\":tada:\"><img alt=\":tada:\" class=\"emoji\" src=\"/static/generated/emoji/images/emoji/unicode/1f389.png\" title=\":tada:\"><img alt=\":tada:\" class=\"emoji\" src=\"/static/generated/emoji/images/emoji/unicode/1f389.png\" title=\":tada:\"></p>",
            "content_type": "text/html",
            "display_recipient": "forth",
            "flags": [
                "read",
                "historical"
            ],
            "id": 112496587,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 103267,
            "sender_email": "nabuhunaina@protonmail.com",
            "sender_full_name": "Nasreen Abu-Hunaina (they) (SP1'17)",
            "sender_id": 100533,
            "sender_realm_str": "recurse",
            "stream_id": 100727,
            "subject": "compiling :)",
            "submessages": [],
            "timestamp": 1498235167,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/ac848f10b247c86de777f1ddd97851a1?d=identicon&version=1",
            "client": "website",
            "content": "<p><span class=\"user-mention\" data-user-email=\"trent.gill@gmail.com\" data-user-id=\"100932\">@Trent Gill (SP2'17)</span>  I got a version of IF ELSE THEN working in python after your beautiful explanation of branches ... in assembly it is soo elegant!</p>",
            "content_type": "text/html",
            "display_recipient": "forth",
            "flags": [
                "read",
                "historical"
            ],
            "id": 112496605,
            "is_me_message": false,
            "reactions": [
                {
                    "emoji_code": "1f3a8",
                    "emoji_name": "art",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "nick@recurse.com",
                        "full_name": "Nick Bergson-Shilcock (he)",
                        "id": 811
                    },
                    "user_id": 811
                },
                {
                    "emoji_code": "1f3a8",
                    "emoji_name": "art",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "trent.gill@gmail.com",
                        "full_name": "Trent Gill (he) (SP2'17)",
                        "id": 100932
                    },
                    "user_id": 100932
                }
            ],
            "recipient_id": 103267,
            "sender_email": "nabuhunaina@protonmail.com",
            "sender_full_name": "Nasreen Abu-Hunaina (they) (SP1'17)",
            "sender_id": 100533,
            "sender_realm_str": "recurse",
            "stream_id": 100727,
            "subject": "compiling :)",
            "submessages": [],
            "timestamp": 1498235264,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/555d9fc8b9f9a919e308a050961eced4?d=identicon&version=1",
            "client": "website",
            "content": "<p><em>tears of joy</em><br>\ni'd love to see the python in all it's inelegant glory :D :D</p>",
            "content_type": "text/html",
            "display_recipient": "forth",
            "flags": [
                "read",
                "historical"
            ],
            "id": 112498265,
            "is_me_message": false,
            "reactions": [
                {
                    "emoji_code": "1f601",
                    "emoji_name": "grin",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "nabuhunaina@protonmail.com",
                        "full_name": "Nasreen Abu-Hunaina (they) (SP1'17)",
                        "id": 100533
                    },
                    "user_id": 100533
                },
                {
                    "emoji_code": "1f40d",
                    "emoji_name": "snake",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "nabuhunaina@protonmail.com",
                        "full_name": "Nasreen Abu-Hunaina (they) (SP1'17)",
                        "id": 100533
                    },
                    "user_id": 100533
                }
            ],
            "recipient_id": 103267,
            "sender_email": "trent.gill@gmail.com",
            "sender_full_name": "Trent Gill (he) (SP2'17)",
            "sender_id": 100932,
            "sender_realm_str": "recurse",
            "stream_id": 100727,
            "subject": "compiling :)",
            "submessages": [],
            "timestamp": 1498238150,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/216dd445a46512212fb170dd7574e740416478c2?x=x&version=1",
            "client": "website",
            "content": "<p>Hey everyone!</p>\n<p>Nasreen + I just rewrote our naughts + crosses game in few hours: <a href=\"https://github.com/Dzol/czwarty/blob/master/oxo.4th\" target=\"_blank\" title=\"https://github.com/Dzol/czwarty/blob/master/oxo.4th\">https://github.com/Dzol/czwarty/blob/master/oxo.4th</a></p>\n<p>We know there's some repetition in there but we love it this time <img alt=\":smile_cat:\" class=\"emoji\" src=\"/static/generated/emoji/images/emoji/unicode/1f638.png\" title=\":smile_cat:\"> Have a read and give us feedback if you want.</p>",
            "content_type": "text/html",
            "display_recipient": "forth",
            "flags": [
                "read",
                "historical"
            ],
            "id": 112824092,
            "is_me_message": false,
            "reactions": [
                {
                    "emoji_code": "1f4af",
                    "emoji_name": "100",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "anja.kefala@gmail.com",
                        "full_name": "Anja Boskovic (SP1'17)",
                        "id": 100514
                    },
                    "user_id": 100514
                },
                {
                    "emoji_code": "1f4af",
                    "emoji_name": "100",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "code@saul.pw",
                        "full_name": "Saul Pwanson (SP2'17)",
                        "id": 100791
                    },
                    "user_id": 100791
                }
            ],
            "recipient_id": 103267,
            "sender_email": "joseph.yiasemides13@alumni.imperial.ac.uk",
            "sender_full_name": "Joseph George Yiasemides (he) (SP1'17)",
            "sender_id": 100508,
            "sender_realm_str": "recurse",
            "stream_id": 100727,
            "subject": "Naughts + Crosses",
            "submessages": [],
            "timestamp": 1498914564,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/36e38f07213a4459a526a3334d690aa09a75b04d?x=x&version=3",
            "client": "website",
            "content": "<p>cool! suggest: explain or make the readme clearly line up with (some part of) the program</p>",
            "content_type": "text/html",
            "display_recipient": "forth",
            "flags": [
                "read",
                "historical"
            ],
            "id": 112830275,
            "is_me_message": false,
            "reactions": [
                {
                    "emoji_code": "1f44d",
                    "emoji_name": "+1",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "nabuhunaina@protonmail.com",
                        "full_name": "Nasreen Abu-Hunaina (they) (SP1'17)",
                        "id": 100533
                    },
                    "user_id": 100533
                }
            ],
            "recipient_id": 103267,
            "sender_email": "dclau04@gmail.com",
            "sender_full_name": "Daniel Lau (he) (SP2'17)",
            "sender_id": 100522,
            "sender_realm_str": "recurse",
            "stream_id": 100727,
            "subject": "Naughts + Crosses",
            "submessages": [],
            "timestamp": 1498929674,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/216dd445a46512212fb170dd7574e740416478c2?x=x&version=1",
            "client": "website",
            "content": "<p>We'll do it Wednesday after a few changes <img alt=\":simple_smile:\" class=\"emoji\" src=\"/static/generated/emoji/images/emoji/unicode/1f642.png\" title=\":simple_smile:\"></p>",
            "content_type": "text/html",
            "display_recipient": "forth",
            "flags": [
                "read",
                "historical"
            ],
            "id": 112831892,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 103267,
            "sender_email": "joseph.yiasemides13@alumni.imperial.ac.uk",
            "sender_full_name": "Joseph George Yiasemides (he) (SP1'17)",
            "sender_id": 100508,
            "sender_realm_str": "recurse",
            "stream_id": 100727,
            "subject": "Naughts + Crosses",
            "submessages": [],
            "timestamp": 1498933580,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/ac848f10b247c86de777f1ddd97851a1?d=identicon&version=1",
            "client": "website",
            "content": "<p>I've been working on a python  forth, and I would really appreciate it if anyone has chance to give me  some feedback.  I tried to add comments so it's easier to follow.   It runs on python3<br>\n<a href=\"https://github.com/Nasreen123/Pyforth/blob/master/pyforth/pyforth.py\" target=\"_blank\" title=\"https://github.com/Nasreen123/Pyforth/blob/master/pyforth/pyforth.py\">https://github.com/Nasreen123/Pyforth/blob/master/pyforth/pyforth.py</a></p>",
            "content_type": "text/html",
            "display_recipient": "forth",
            "flags": [
                "read",
                "historical"
            ],
            "id": 112909360,
            "is_me_message": false,
            "reactions": [
                {
                    "emoji_code": "1f389",
                    "emoji_name": "tada",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "anja.kefala@gmail.com",
                        "full_name": "Anja Boskovic (SP1'17)",
                        "id": 100514
                    },
                    "user_id": 100514
                }
            ],
            "recipient_id": 103267,
            "sender_email": "nabuhunaina@protonmail.com",
            "sender_full_name": "Nasreen Abu-Hunaina (they) (SP1'17)",
            "sender_id": 100533,
            "sender_realm_str": "recurse",
            "stream_id": 100727,
            "subject": "code review request",
            "submessages": [],
            "timestamp": 1499118095,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/840b0106bf4b64a91f222c05f43054358db93f2d?x=x&version=2",
            "client": "website",
            "content": "<p>This is seriously awesome, <span class=\"user-mention\" data-user-email=\"nabuhunaina@protonmail.com\" data-user-id=\"100533\">@Nasreen Abu-Hunaina (SP1'17)</span> !  I'm going camping this weekend, but I'd love to give a more thorough review next week.  Maybe you can give me a tour via FaceTime?</p>\n<p>After a brief skim, I'm thinking that if you had an internal comma() (<code>_comma</code>?) that takes an argument, that would make some of the compiler code smaller and easier to read. Then the 'real' command is just <code>_comma(pop())</code>.</p>",
            "content_type": "text/html",
            "display_recipient": "forth",
            "flags": [
                "read",
                "historical"
            ],
            "id": 112976694,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 103267,
            "sender_email": "code@saul.pw",
            "sender_full_name": "Saul Pwanson (SP2'17)",
            "sender_id": 100791,
            "sender_realm_str": "recurse",
            "stream_id": 100727,
            "subject": "code review request",
            "submessages": [],
            "timestamp": 1499271492,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/95eb11b4d11f06cdb3001ff6e17d64de5f38bb28?x=x&version=12",
            "client": "website",
            "content": "<p><span class=\"user-mention\" data-user-email=\"nabuhunaina@protonmail.com\" data-user-id=\"100533\">@Nasreen Abu-Hunaina (SP1'17)</span> You wrote tests!!</p>",
            "content_type": "text/html",
            "display_recipient": "forth",
            "flags": [
                "read",
                "historical"
            ],
            "id": 112994190,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 103267,
            "sender_email": "anja.kefala@gmail.com",
            "sender_full_name": "Anja Boskovic (SP1'17)",
            "sender_id": 100514,
            "sender_realm_str": "recurse",
            "stream_id": 100727,
            "subject": "code review request",
            "submessages": [],
            "timestamp": 1499302427,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/ac848f10b247c86de777f1ddd97851a1?d=identicon&version=1",
            "client": "website",
            "content": "<p><span class=\"user-mention\" data-user-email=\"code@saul.pw\" data-user-id=\"100791\">@Saul Pwanson (SP2'17)</span>  thank you :) <br>\nI will look at putting  _comma,  and I'd love to give you a tour next week<br>\nhave fun camping :)</p>",
            "content_type": "text/html",
            "display_recipient": "forth",
            "flags": [
                "read",
                "historical"
            ],
            "id": 113054883,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 103267,
            "sender_email": "nabuhunaina@protonmail.com",
            "sender_full_name": "Nasreen Abu-Hunaina (they) (SP1'17)",
            "sender_id": 100533,
            "sender_realm_str": "recurse",
            "stream_id": 100727,
            "subject": "code review request",
            "submessages": [],
            "timestamp": 1499430370,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/ac848f10b247c86de777f1ddd97851a1?d=identicon&version=1",
            "client": "website",
            "content": "<p><span class=\"user-mention\" data-user-email=\"anja.kefala@gmail.com\" data-user-id=\"100514\">@Anja Boskovic (SP1'17)</span>  I did! Well I tried at least - mostly I just copy and pasted what I was doing to manually test things</p>",
            "content_type": "text/html",
            "display_recipient": "forth",
            "flags": [
                "read",
                "historical"
            ],
            "id": 113054896,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 103267,
            "sender_email": "nabuhunaina@protonmail.com",
            "sender_full_name": "Nasreen Abu-Hunaina (they) (SP1'17)",
            "sender_id": 100533,
            "sender_realm_str": "recurse",
            "stream_id": 100727,
            "subject": "code review request",
            "submessages": [],
            "timestamp": 1499430453,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/ac848f10b247c86de777f1ddd97851a1?d=identicon&version=1",
            "client": "website",
            "content": "<p>writing tests is hard!</p>",
            "content_type": "text/html",
            "display_recipient": "forth",
            "flags": [
                "read",
                "historical"
            ],
            "id": 113054899,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 103267,
            "sender_email": "nabuhunaina@protonmail.com",
            "sender_full_name": "Nasreen Abu-Hunaina (they) (SP1'17)",
            "sender_id": 100533,
            "sender_realm_str": "recurse",
            "stream_id": 100727,
            "subject": "code review request",
            "submessages": [],
            "timestamp": 1499430470,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/ac25c0f0dbfaa3e0d68634873943e63bdd41139c?x=x&version=1",
            "client": "website",
            "content": "<blockquote>\n<p>PumpkinDB is essentially a database programming environment, largely inspired by core ideas behind MUMPS. Instead of M, it has a Forth-inspired stack-based language, PumpkinScript. </p>\n</blockquote>\n<p><a href=\"http://pumpkindb.org/doc/script/\" target=\"_blank\" title=\"http://pumpkindb.org/doc/script/\">http://pumpkindb.org/doc/script/</a><br>\nJust something I came across.</p>",
            "content_type": "text/html",
            "display_recipient": "forth",
            "flags": [
                "read",
                "historical"
            ],
            "id": 113108967,
            "is_me_message": false,
            "last_edit_timestamp": 1499545033,
            "reactions": [
                {
                    "emoji_code": "1f601",
                    "emoji_name": "grin",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "code@saul.pw",
                        "full_name": "Saul Pwanson (SP2'17)",
                        "id": 100791
                    },
                    "user_id": 100791
                },
                {
                    "emoji_code": "1f601",
                    "emoji_name": "grin",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "nabuhunaina@protonmail.com",
                        "full_name": "Nasreen Abu-Hunaina (they) (SP1'17)",
                        "id": 100533
                    },
                    "user_id": 100533
                }
            ],
            "recipient_id": 103267,
            "sender_email": "paul@paulwmorris.com",
            "sender_full_name": "Paul Morris (he) (SP1'17)",
            "sender_id": 100524,
            "sender_realm_str": "recurse",
            "stream_id": 100727,
            "subject": "PumpkinDB",
            "submessages": [],
            "timestamp": 1499544991,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/840b0106bf4b64a91f222c05f43054358db93f2d?x=x&version=2",
            "client": "website",
            "content": "<p><a href=\"https://github.com/ForthHub/discussion/issues/43\" target=\"_blank\" title=\"https://github.com/ForthHub/discussion/issues/43\">https://github.com/ForthHub/discussion/issues/43</a></p>",
            "content_type": "text/html",
            "display_recipient": "forth",
            "flags": [
                "read",
                "historical"
            ],
            "id": 113540943,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 103267,
            "sender_email": "code@saul.pw",
            "sender_full_name": "Saul Pwanson (SP2'17)",
            "sender_id": 100791,
            "sender_realm_str": "recurse",
            "stream_id": 100727,
            "subject": "Forth file extension survey of github",
            "submessages": [],
            "timestamp": 1500481425,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/216dd445a46512212fb170dd7574e740416478c2?x=x&version=1",
            "client": "website",
            "content": "<p>I just love <code>.4th</code> <img alt=\":smile_cat:\" class=\"emoji\" src=\"/static/generated/emoji/images/emoji/unicode/1f638.png\" title=\":smile_cat:\"></p>",
            "content_type": "text/html",
            "display_recipient": "forth",
            "flags": [
                "read",
                "historical"
            ],
            "id": 113541551,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 103267,
            "sender_email": "joseph.yiasemides13@alumni.imperial.ac.uk",
            "sender_full_name": "Joseph George Yiasemides (he) (SP1'17)",
            "sender_id": 100508,
            "sender_realm_str": "recurse",
            "stream_id": 100727,
            "subject": "Forth file extension survey of github",
            "submessages": [],
            "timestamp": 1500482587,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/840b0106bf4b64a91f222c05f43054358db93f2d?x=x&version=2",
            "client": "website",
            "content": "<p><a href=\"http://euro.theforth.net/\" target=\"_blank\" title=\"http://euro.theforth.net/\">http://euro.theforth.net/</a></p>",
            "content_type": "text/html",
            "display_recipient": "forth",
            "flags": [
                "read",
                "historical"
            ],
            "id": 113541741,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 103267,
            "sender_email": "code@saul.pw",
            "sender_full_name": "Saul Pwanson (SP2'17)",
            "sender_id": 100791,
            "sender_realm_str": "recurse",
            "stream_id": 100727,
            "subject": "EuroForth Sept 8-10th in Austria",
            "submessages": [],
            "timestamp": 1500482899,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/555d9fc8b9f9a919e308a050961eced4?d=identicon&version=1",
            "client": "website",
            "content": "<p>omg don't tempt me</p>",
            "content_type": "text/html",
            "display_recipient": "forth",
            "flags": [
                "read",
                "historical"
            ],
            "id": 113542128,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 103267,
            "sender_email": "trent.gill@gmail.com",
            "sender_full_name": "Trent Gill (he) (SP2'17)",
            "sender_id": 100932,
            "sender_realm_str": "recurse",
            "stream_id": 100727,
            "subject": "EuroForth Sept 8-10th in Austria",
            "submessages": [],
            "timestamp": 1500483552,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/ac848f10b247c86de777f1ddd97851a1?d=identicon&version=1",
            "client": "website",
            "content": "<p>cool!!!</p>",
            "content_type": "text/html",
            "display_recipient": "forth",
            "flags": [
                "read",
                "historical"
            ],
            "id": 113549737,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 103267,
            "sender_email": "nabuhunaina@protonmail.com",
            "sender_full_name": "Nasreen Abu-Hunaina (they) (SP1'17)",
            "sender_id": 100533,
            "sender_realm_str": "recurse",
            "stream_id": 100727,
            "subject": "EuroForth Sept 8-10th in Austria",
            "submessages": [],
            "timestamp": 1500495769,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/ac848f10b247c86de777f1ddd97851a1?d=identicon&version=1",
            "client": "website",
            "content": "<p>i love the spam check at the bottom</p>",
            "content_type": "text/html",
            "display_recipient": "forth",
            "flags": [
                "read",
                "historical"
            ],
            "id": 113549739,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 103267,
            "sender_email": "nabuhunaina@protonmail.com",
            "sender_full_name": "Nasreen Abu-Hunaina (they) (SP1'17)",
            "sender_id": 100533,
            "sender_realm_str": "recurse",
            "stream_id": 100727,
            "subject": "EuroForth Sept 8-10th in Austria",
            "submessages": [],
            "timestamp": 1500495778,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/840b0106bf4b64a91f222c05f43054358db93f2d?x=x&version=2",
            "client": "website",
            "content": "<p>On HN today.  But why would you port something FROM Forth? :)  <a href=\"http://benhoyt.com/writings/python-pentomino/\" target=\"_blank\" title=\"http://benhoyt.com/writings/python-pentomino/\">http://benhoyt.com/writings/python-pentomino/</a></p>",
            "content_type": "text/html",
            "display_recipient": "forth",
            "flags": [
                "read",
                "historical"
            ],
            "id": 113553704,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 103267,
            "sender_email": "code@saul.pw",
            "sender_full_name": "Saul Pwanson (SP2'17)",
            "sender_id": 100791,
            "sender_realm_str": "recurse",
            "stream_id": 100727,
            "subject": "Pentomino algorithm in Forth",
            "submessages": [],
            "timestamp": 1500502583,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/555d9fc8b9f9a919e308a050961eced4?d=identicon&version=1",
            "client": "website",
            "content": "<p>should have just written a forth interpreter for python... was also fun(ny) to see the author seem surprised that forth was 5x faster than python!</p>",
            "content_type": "text/html",
            "display_recipient": "forth",
            "flags": [
                "read",
                "historical"
            ],
            "id": 113583011,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 103267,
            "sender_email": "trent.gill@gmail.com",
            "sender_full_name": "Trent Gill (he) (SP2'17)",
            "sender_id": 100932,
            "sender_realm_str": "recurse",
            "stream_id": 100727,
            "subject": "Pentomino algorithm in Forth",
            "submessages": [],
            "timestamp": 1500566752,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/555d9fc8b9f9a919e308a050961eced4?d=identicon&version=1",
            "client": "website",
            "content": "<p>forthian friends!<br>\ni've been slowly chipping away at a forth compiler in haskell, keeping the FP &amp; forth dream alive outside rc. currently have the interpreter and compiler working, though a lot of things have been implemented using native haskell approaches. this was super great when it started working, but now i'm struggling with conceptually how to implement branching using my given method.</p>\n<p>here's EXECUTE</p>\n<div class=\"codehilite\"><pre><span></span>fEXECUTE :: FState -&gt; FState\nfEXECUTE s@(FState {datastack = (FNum x:xs)}) = s\nfEXECUTE s@(FState {datastack = (FFn  x:xs)}) = x s {\n    datastack = stack_pop $ datastack s }\nfEXECUTE s@(FState {datastack = (FCFn x:xs)}) =\n    composite x s {datastack = stack_pop $ datastack s}\n    where composite :: [FStackItem] -&gt; FState -&gt; FState\n          composite ([])   st = st\n          composite (f:fs) st = composite fs $ fEXECUTE st {\n            datastack = f : datastack st }\n</pre></div>\n\n\n<p>There's 3 pattern matches here depending on what's on top of the stack:<br>\n1. If there's a number on stack, it just returns it (because my FIND actually does TONUM inside bc it comes for free in haskell)<br>\n2. If there's a forth word (FFn) on the stack, it pops it off and applies it directly.<br>\n3. If there's a composite word (FCFn) it recursively applies the contents of the composite word until it's exhausted</p>\n<p>nb: Composite words are just lists of 'FStackItem's which means a list of numbers, strings, and/or forth words.</p>\n<p>It felt super good to write the recursive composite word application, but I'm struggling to see how one can apply the QBRANCH and BRANCH technique to it as there's no concept of 'program counter' to move. i can imagine creating a list index to act as program counter and move through the composite word, but it seems very hacky (and would require explicit end-of-list / out-of-range tests). the FCFn is already essentially an AST so i guess i'm just not sure how to best navigate that.</p>\n<p>perhaps one of you with more functional experience has an idea of how to achieve this kind of thing without breaking into too much imperative thinking?!</p>\n<p>miss you all xx<br>\nnb: full project is here <a href=\"https://github.com/trentgill/hoth\" target=\"_blank\" title=\"https://github.com/trentgill/hoth\">https://github.com/trentgill/hoth</a></p>",
            "content_type": "text/html",
            "display_recipient": "forth",
            "flags": [
                "read",
                "historical"
            ],
            "id": 113584031,
            "is_me_message": false,
            "reactions": [
                {
                    "emoji_code": "1f386",
                    "emoji_name": "fireworks",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "code@saul.pw",
                        "full_name": "Saul Pwanson (SP2'17)",
                        "id": 100791
                    },
                    "user_id": 100791
                },
                {
                    "emoji_code": "1f386",
                    "emoji_name": "fireworks",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "nabuhunaina@protonmail.com",
                        "full_name": "Nasreen Abu-Hunaina (they) (SP1'17)",
                        "id": 100533
                    },
                    "user_id": 100533
                }
            ],
            "recipient_id": 103267,
            "sender_email": "trent.gill@gmail.com",
            "sender_full_name": "Trent Gill (he) (SP2'17)",
            "sender_id": 100932,
            "sender_realm_str": "recurse",
            "stream_id": 100727,
            "subject": "qbranch in haskell",
            "submessages": [],
            "timestamp": 1500568521,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/840b0106bf4b64a91f222c05f43054358db93f2d?x=x&version=2",
            "client": "website",
            "content": "<p>This came across <a href=\"https://github.com/ForthHub/discussion/issues/51\" target=\"_blank\" title=\"https://github.com/ForthHub/discussion/issues/51\">ForthHub</a>:</p>\n<blockquote>\n<p>I'm trying to compile a list of books where Forth or Forth-like constructs figure prominently, but where Forth is not in the title.</p>\n</blockquote>\n<p>It's interesting to see all the different places Forth is hiding..</p>",
            "content_type": "text/html",
            "display_recipient": "forth",
            "flags": [
                "read",
                "historical"
            ],
            "id": 114235217,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 103267,
            "sender_email": "code@saul.pw",
            "sender_full_name": "Saul Pwanson (SP2'17)",
            "sender_id": 100791,
            "sender_realm_str": "recurse",
            "stream_id": 100727,
            "subject": "from forthhub, books about forth",
            "submessages": [],
            "timestamp": 1501918892,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/840b0106bf4b64a91f222c05f43054358db93f2d?x=x&version=2",
            "client": "website",
            "content": "<p>Some <a href=\"http://wiki.laptop.org/go/Forth_Lessons\" target=\"_blank\" title=\"http://wiki.laptop.org/go/Forth_Lessons\">Forth Lessons</a> from the creator of Open Firmware (also a Forth, used in the One-Laptop-Per-Child project).</p>",
            "content_type": "text/html",
            "display_recipient": "forth",
            "flags": [
                "read",
                "historical"
            ],
            "id": 116107701,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 103267,
            "sender_email": "code@saul.pw",
            "sender_full_name": "Saul Pwanson (SP2'17)",
            "sender_id": 100791,
            "sender_realm_str": "recurse",
            "stream_id": 100727,
            "subject": "Forth Lessons",
            "submessages": [],
            "timestamp": 1505927027,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/216dd445a46512212fb170dd7574e740416478c2?x=x&version=1",
            "client": "website",
            "content": "<p>I like some of the stuff in the _Recipes_ chapter</p>",
            "content_type": "text/html",
            "display_recipient": "forth",
            "flags": [
                "read",
                "historical"
            ],
            "id": 116332416,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 103267,
            "sender_email": "joseph.yiasemides13@alumni.imperial.ac.uk",
            "sender_full_name": "Joseph George Yiasemides (he) (SP1'17)",
            "sender_id": 100508,
            "sender_realm_str": "recurse",
            "stream_id": 100727,
            "subject": "Forth Lessons",
            "submessages": [],
            "timestamp": 1506410643,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/81c6c8040fc0263607edd05c09dacf6b?d=identicon&version=1",
            "client": "website",
            "content": "<div class=\"codehilite\"><pre><span></span><span class=\"kn\">:</span> <span class=\"nc\">\u0434\u043e</span>    <span class=\"mi\">523</span> <span class=\"nf\">\u043d\u043e\u0442\u0430</span> <span class=\"k\">; </span>          <span class=\"kn\">:</span> <span class=\"nc\">\u0441\u043e\u043b\u044c</span>  <span class=\"mi\">784</span> <span class=\"nf\">\u043d\u043e\u0442\u0430</span> <span class=\"k\">;</span>\n<span class=\"kn\">:</span> <span class=\"nc\">\u0434\u043e#</span>   <span class=\"mi\">554</span> <span class=\"nf\">\u043d\u043e\u0442\u0430</span> <span class=\"k\">; </span>          <span class=\"kn\">:</span> <span class=\"nc\">\u0441\u043e\u043b\u044c#</span> <span class=\"mi\">830</span> <span class=\"nf\">\u043d\u043e\u0442\u0430</span> <span class=\"k\">;</span>\n<span class=\"kn\">:</span> <span class=\"nc\">\u0440\u0435</span>    <span class=\"mi\">587</span> <span class=\"nf\">\u043d\u043e\u0442\u0430</span> <span class=\"k\">; </span>          <span class=\"kn\">:</span> <span class=\"nc\">\u043b\u044f</span>    <span class=\"mi\">880</span> <span class=\"nf\">\u043d\u043e\u0442\u0430</span> <span class=\"k\">;</span>\n<span class=\"kn\">:</span> <span class=\"nc\">\u0440\u0435#</span>   <span class=\"mi\">622</span> <span class=\"nf\">\u043d\u043e\u0442\u0430</span> <span class=\"k\">; </span>          <span class=\"kn\">:</span> <span class=\"nc\">\u043b\u044f#</span>   <span class=\"mi\">932</span> <span class=\"nf\">\u043d\u043e\u0442\u0430</span> <span class=\"k\">;</span>\n<span class=\"kn\">:</span> <span class=\"nc\">\u043c\u0438</span>    <span class=\"mi\">659</span> <span class=\"nf\">\u043d\u043e\u0442\u0430</span> <span class=\"k\">; </span>          <span class=\"kn\">:</span> <span class=\"nc\">\u0441\u0438</span>    <span class=\"mi\">987</span> <span class=\"nf\">\u043d\u043e\u0442\u0430</span> <span class=\"k\">;</span>\n<span class=\"kn\">:</span> <span class=\"nc\">\u0444\u0430</span>    <span class=\"mi\">698</span> <span class=\"nf\">\u043d\u043e\u0442\u0430</span> <span class=\"k\">; </span>          <span class=\"kn\">:</span> <span class=\"nc\">\u0434\u043e2</span>   <span class=\"mi\">1046</span> <span class=\"nf\">\u043d\u043e\u0442\u0430</span> <span class=\"k\">;</span>\n<span class=\"kn\">:</span> <span class=\"nc\">\u0444\u0430#</span>   <span class=\"mi\">739</span> <span class=\"nf\">\u043d\u043e\u0442\u0430</span> <span class=\"k\">;</span>\n\n<span class=\"kn\">:</span> <span class=\"nc\">\u041416</span>   <span class=\"mi\">5</span> <span class=\"nf\">\u0434\u043b\u0438\u0442\u0435\u043b\u044c\u043d\u043e\u0441\u0442\u044c</span> <span class=\"k\">! ; </span>     <span class=\"kn\">:</span> <span class=\"nc\">\u041f16</span>  <span class=\"nf\">\u0434\u043b\u0438\u0442\u0435\u043b\u044c\u043d\u043e\u0441\u0442\u044c_\u043f\u0430\u0443\u0437\u044b</span>  <span class=\"mi\">2</span> <span class=\"k\">/ </span><span class=\"nf\">\u043f\u0430\u0443\u0437\u0430</span> <span class=\"k\">;</span>\n<span class=\"kn\">:</span> <span class=\"nc\">\u04148</span>   <span class=\"mi\">10</span> <span class=\"nf\">\u0434\u043b\u0438\u0442\u0435\u043b\u044c\u043d\u043e\u0441\u0442\u044c</span> <span class=\"k\">! ; </span>     <span class=\"kn\">:</span> <span class=\"nc\">\u041f8</span>   <span class=\"nf\">\u0434\u043b\u0438\u0442\u0435\u043b\u044c\u043d\u043e\u0441\u0442\u044c_\u043f\u0430\u0443\u0437\u044b</span>  <span class=\"nf\">\u043f\u0430\u0443\u0437\u0430</span> <span class=\"k\">;</span>\n<span class=\"kn\">:</span> <span class=\"nc\">\u04144</span>   <span class=\"mi\">20</span> <span class=\"nf\">\u0434\u043b\u0438\u0442\u0435\u043b\u044c\u043d\u043e\u0441\u0442\u044c</span> <span class=\"k\">! ; </span>     <span class=\"kn\">:</span> <span class=\"nc\">\u041f4</span>   <span class=\"nf\">\u041f8</span> <span class=\"nf\">\u041f8</span> <span class=\"k\">;</span>\n<span class=\"kn\">:</span> <span class=\"nc\">\u04142</span>   <span class=\"mi\">40</span> <span class=\"nf\">\u0434\u043b\u0438\u0442\u0435\u043b\u044c\u043d\u043e\u0441\u0442\u044c</span> <span class=\"k\">! ; </span>     <span class=\"kn\">:</span> <span class=\"nc\">\u041f2</span>   <span class=\"nf\">\u041f4</span> <span class=\"nf\">\u041f4</span> <span class=\"k\">;</span>\n<span class=\"kn\">:</span> <span class=\"nc\">\u0414</span>    <span class=\"mi\">80</span> <span class=\"nf\">\u0434\u043b\u0438\u0442\u0435\u043b\u044c\u043d\u043e\u0441\u0442\u044c</span> <span class=\"k\">! ; </span>     <span class=\"kn\">:</span> <span class=\"nc\">\u041f1</span>   <span class=\"nf\">\u041f2</span> <span class=\"nf\">\u041f2</span> <span class=\"k\">;</span>\n\n<span class=\"kn\">:</span> <span class=\"nc\">\u041c\u0435\u0434\u043b\u0435\u043d\u043d\u043e_\u043c\u0438\u043d\u0443\u0442\u044b_\u0443\u043f\u043b\u044b\u0432\u0430\u044e\u0442_\u0432\u0434\u0430\u043b\u044c</span>\n       <span class=\"nf\">\u04144</span> <span class=\"nf\">\u043c\u0438</span> <span class=\"nf\">\u043b\u044f</span> <span class=\"nf\">\u0441\u043e\u043b\u044c#</span> <span class=\"nf\">\u043b\u044f</span> <span class=\"nf\">\u0441\u0438</span> <span class=\"nf\">\u043b\u044f</span> <span class=\"nf\">\u0441\u043e\u043b\u044c</span> <span class=\"nf\">\u043b\u044f</span> <span class=\"nf\">\u04142</span> <span class=\"nf\">\u0441\u043e\u043b\u044c</span> <span class=\"nf\">\u0444\u0430</span> <span class=\"nf\">\u0444\u0430</span> <span class=\"nf\">\u041f2</span> <span class=\"k\">;</span>\n<span class=\"kn\">:</span> <span class=\"nc\">\u0412\u0441\u0442\u0440\u0435\u0447\u0438_\u0441_\u043d\u0438\u043c\u0438_\u0442\u044b_\u0443\u0436\u0435_\u043d\u0435_\u0436\u0434\u0438</span>\n       <span class=\"nf\">\u04144</span> <span class=\"nf\">\u0440\u0435</span> <span class=\"nf\">\u0441\u043e\u043b\u044c</span> <span class=\"nf\">\u0444\u0430#</span> <span class=\"nf\">\u0441\u043e\u043b\u044c</span> <span class=\"nf\">\u043b\u044f</span> <span class=\"nf\">\u0441\u043e\u043b\u044c</span>  <span class=\"nf\">\u0440\u0435</span> <span class=\"nf\">\u0444\u0430</span> <span class=\"nf\">\u0414</span> <span class=\"nf\">\u043c\u0438</span> <span class=\"nf\">\u041f1</span>  <span class=\"k\">;</span>\n<span class=\"kn\">:</span> <span class=\"nc\">\u0418_\u0445\u043e\u0442\u044f_\u043d\u0430\u043c_\u043f\u0440\u043e\u0448\u043b\u043e\u0433\u043e_\u043d\u0435\u043c\u043d\u043e\u0433\u043e_\u0436\u0430\u043b\u044c</span>\n       <span class=\"nf\">\u04144</span> <span class=\"nf\">\u043c\u0438</span> <span class=\"nf\">\u043b\u044f</span> <span class=\"nf\">\u0441\u043e\u043b\u044c#</span> <span class=\"nf\">\u043b\u044f</span> <span class=\"nf\">\u0441\u0438</span> <span class=\"nf\">\u043b\u044f</span> <span class=\"nf\">\u0441\u043e\u043b\u044c</span> <span class=\"nf\">\u0444\u0430</span> <span class=\"nf\">\u04142</span> <span class=\"nf\">\u043c\u0438</span> <span class=\"nf\">\u0440\u0435</span> <span class=\"nf\">\u043b\u044f</span> <span class=\"nf\">\u041f2</span> <span class=\"k\">;</span>\n<span class=\"kn\">:</span> <span class=\"nc\">\u041b\u0443\u0447\u0448\u0435\u0435_\u043a\u043e\u043d\u0435\u0447\u043d\u043e_\u0432\u043f\u0435\u0440\u0435\u0434\u0438</span>\n       <span class=\"nf\">\u04144</span> <span class=\"nf\">\u043c\u0438</span> <span class=\"nf\">\u0434\u043e2</span> <span class=\"nf\">\u0441\u0438</span> <span class=\"nf\">\u043b\u044f</span> <span class=\"nf\">\u0441\u043e\u043b\u044c#</span> <span class=\"nf\">\u043b\u044f</span> <span class=\"nf\">\u0441\u0438</span> <span class=\"nf\">\u0441\u043e\u043b\u044c#</span> <span class=\"nf\">\u0414</span> <span class=\"nf\">\u043b\u044f</span> <span class=\"nf\">\u041f1</span> <span class=\"k\">;</span>\n\n<span class=\"kn\">:</span> <span class=\"nc\">\u0413\u043e\u043b\u0443\u0431\u043e\u0439-\u0432\u0430\u0433\u043e\u043d</span>\n       <span class=\"nf\">\u041c\u0435\u0434\u043b\u0435\u043d\u043d\u043e_\u043c\u0438\u043d\u0443\u0442\u044b_\u0443\u043f\u043b\u044b\u0432\u0430\u044e\u0442_\u0432\u0434\u0430\u043b\u044c</span>\n       <span class=\"nf\">\u0412\u0441\u0442\u0440\u0435\u0447\u0438_\u0441_\u043d\u0438\u043c\u0438_\u0442\u044b_\u0443\u0436\u0435_\u043d\u0435_\u0436\u0434\u0438</span>\n       <span class=\"nf\">\u0418_\u0445\u043e\u0442\u044f_\u043d\u0430\u043c_\u043f\u0440\u043e\u0448\u043b\u043e\u0433\u043e_\u043d\u0435\u043c\u043d\u043e\u0433\u043e_\u0436\u0430\u043b\u044c</span>\n       <span class=\"nf\">\u041b\u0443\u0447\u0448\u0435\u0435_\u043a\u043e\u043d\u0435\u0447\u043d\u043e_\u0432\u043f\u0435\u0440\u0435\u0434\u0438</span>  <span class=\"k\">;</span>\n</pre></div>",
            "content_type": "text/html",
            "display_recipient": "forth",
            "flags": [
                "read",
                "historical"
            ],
            "id": 117354920,
            "is_me_message": false,
            "reactions": [
                {
                    "emoji_code": "1f3b6",
                    "emoji_name": "musical_notes",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "phoebe@slub.co",
                        "full_name": "phoebe beatrice jenkins (she) (m4'18)",
                        "id": 101991
                    },
                    "user_id": 101991
                },
                {
                    "emoji_code": "1f3b6",
                    "emoji_name": "musical_notes",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "code@saul.pw",
                        "full_name": "Saul Pwanson (SP2'17)",
                        "id": 100791
                    },
                    "user_id": 100791
                },
                {
                    "emoji_code": "1f3b6",
                    "emoji_name": "musical_notes",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "anja.kefala@gmail.com",
                        "full_name": "Anja Boskovic (SP1'17)",
                        "id": 100514
                    },
                    "user_id": 100514
                }
            ],
            "recipient_id": 103267,
            "sender_email": "julian@cipht.net",
            "sender_full_name": "Julian Squires (he) (F2'17)",
            "sender_id": 101992,
            "sender_realm_str": "recurse",
            "stream_id": 100727,
            "subject": "found object",
            "submessages": [],
            "timestamp": 1508373953,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/95eb11b4d11f06cdb3001ff6e17d64de5f38bb28?x=x&version=12",
            "client": "website",
            "content": "<p>\u043c\u0438\u043b\u044b\u0439 <span class=\"emoji emoji-1f3b5\" title=\"musical note\">:musical_note:</span></p>",
            "content_type": "text/html",
            "display_recipient": "forth",
            "flags": [
                "read",
                "historical"
            ],
            "id": 117355657,
            "is_me_message": false,
            "last_edit_timestamp": 1508375727,
            "reactions": [],
            "recipient_id": 103267,
            "sender_email": "anja.kefala@gmail.com",
            "sender_full_name": "Anja Boskovic (SP1'17)",
            "sender_id": 100514,
            "sender_realm_str": "recurse",
            "stream_id": 100727,
            "subject": "found object",
            "submessages": [],
            "timestamp": 1508375546,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/81c6c8040fc0263607edd05c09dacf6b?d=identicon&version=1",
            "client": "website",
            "content": "<p><span class=\"user-mention\" data-user-email=\"phoebe@slub.co\" data-user-id=\"101991\">@phoebe beatrice jenkins (F2'17)</span> informs me this is this song: <a href=\"https://www.youtube.com/watch?v=Gl1_uGW_Teo\" target=\"_blank\" title=\"https://www.youtube.com/watch?v=Gl1_uGW_Teo\">https://www.youtube.com/watch?v=Gl1_uGW_Teo</a> which is adorable</p>\n<div class=\"youtube-video message_inline_image\"><a data-id=\"Gl1_uGW_Teo\" href=\"https://www.youtube.com/watch?v=Gl1_uGW_Teo\" target=\"_blank\" title=\"https://www.youtube.com/watch?v=Gl1_uGW_Teo\"><img src=\"https://i.ytimg.com/vi/Gl1_uGW_Teo/default.jpg\"></a></div>",
            "content_type": "text/html",
            "display_recipient": "forth",
            "flags": [
                "read",
                "historical"
            ],
            "id": 117381643,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 103267,
            "sender_email": "julian@cipht.net",
            "sender_full_name": "Julian Squires (he) (F2'17)",
            "sender_id": 101992,
            "sender_realm_str": "recurse",
            "stream_id": 100727,
            "subject": "found object",
            "submessages": [],
            "timestamp": 1508427784,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/216dd445a46512212fb170dd7574e740416478c2?x=x&version=1",
            "client": "ZulipElectron",
            "content": "<p>What does it do?</p>",
            "content_type": "text/html",
            "display_recipient": "forth",
            "flags": [
                "read",
                "historical"
            ],
            "id": 117430490,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 103267,
            "sender_email": "joseph.yiasemides13@alumni.imperial.ac.uk",
            "sender_full_name": "Joseph George Yiasemides (he) (SP1'17)",
            "sender_id": 100508,
            "sender_realm_str": "recurse",
            "stream_id": 100727,
            "subject": "found object",
            "submessages": [],
            "timestamp": 1508524506,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/840b0106bf4b64a91f222c05f43054358db93f2d?x=x&version=2",
            "client": "website",
            "content": "<p>I'm guessing from what little I know about Cyrillic etc, that it's a system of musical notes.  \"\u043d\u043e\u0442\u0430\" is pronounced \"nota\", and \"\u0434\u043e\" is \"do\", \"\u0440\u0435\" is \"ray\".</p>",
            "content_type": "text/html",
            "display_recipient": "forth",
            "flags": [
                "read",
                "historical"
            ],
            "id": 117430940,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 103267,
            "sender_email": "code@saul.pw",
            "sender_full_name": "Saul Pwanson (SP2'17)",
            "sender_id": 100791,
            "sender_realm_str": "recurse",
            "stream_id": 100727,
            "subject": "found object",
            "submessages": [],
            "timestamp": 1508525264,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/95eb11b4d11f06cdb3001ff6e17d64de5f38bb28?x=x&version=12",
            "client": "website",
            "content": "<p>It is a musical representation of the song which Julian linked to :)</p>",
            "content_type": "text/html",
            "display_recipient": "forth",
            "flags": [
                "read",
                "historical"
            ],
            "id": 117438040,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 103267,
            "sender_email": "anja.kefala@gmail.com",
            "sender_full_name": "Anja Boskovic (SP1'17)",
            "sender_id": 100514,
            "sender_realm_str": "recurse",
            "stream_id": 100727,
            "subject": "found object",
            "submessages": [],
            "timestamp": 1508537701,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/95eb11b4d11f06cdb3001ff6e17d64de5f38bb28?x=x&version=12",
            "client": "website",
            "content": "<p>Saul is right about the do, ray, mi.<br>\nOther elements:<br>\n\u043d\u043e\u0442\u0430  -&gt; note    <br>\n\u043f\u0430\u0443\u0437\u0430 -&gt; rest<br>\n: \u041c\u0435\u0434\u043b\u0435\u043d\u043d\u043e_\u043c\u0438\u043d\u0443\u0442\u044b_\u0443\u043f\u043b\u044b\u0432\u0430\u044e\u0442_\u0432\u0434\u0430\u043b\u044c  -&gt; Lyrics for a line in the song<br>\n\u04144 \u043c\u0438 \u043b\u044f \u0441\u043e\u043b\u044c# \u043b\u044f \u0441\u0438 \u043b\u044f \u0441\u043e\u043b\u044c \u043b\u044f \u04142 \u0441\u043e\u043b\u044c \u0444\u0430 \u0444\u0430 \u041f2  -&gt; the notes that compose that line<br>\n: \u0413\u043e\u043b\u0443\u0431\u043e\u0439-\u0432\u0430\u0433\u043e\u043d -&gt; the full song</p>",
            "content_type": "text/html",
            "display_recipient": "forth",
            "flags": [
                "read",
                "historical"
            ],
            "id": 117438148,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 103267,
            "sender_email": "anja.kefala@gmail.com",
            "sender_full_name": "Anja Boskovic (SP1'17)",
            "sender_id": 100514,
            "sender_realm_str": "recurse",
            "stream_id": 100727,
            "subject": "found object",
            "submessages": [],
            "timestamp": 1508537893,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/216dd445a46512212fb170dd7574e740416478c2?x=x&version=1",
            "client": "ZulipElectron",
            "content": "<p>That's really sweet</p>",
            "content_type": "text/html",
            "display_recipient": "forth",
            "flags": [
                "read",
                "historical"
            ],
            "id": 117455051,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 103267,
            "sender_email": "joseph.yiasemides13@alumni.imperial.ac.uk",
            "sender_full_name": "Joseph George Yiasemides (he) (SP1'17)",
            "sender_id": 100508,
            "sender_realm_str": "recurse",
            "stream_id": 100727,
            "subject": "found object",
            "submessages": [],
            "timestamp": 1508579053,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/81c6c8040fc0263607edd05c09dacf6b?d=identicon&version=1",
            "client": "website",
            "content": "<blockquote>\n<p>Literary Justifications</p>\n<p>I come to Forthifize the 68HC11 not to praise it.</p>\n<p>Had we but memory enough and time, <br>\n    this wastefulness, Programmer, were no crime.<br>\nThe embedded system box is a private place and fine, <br>\n    but none should there, I think, megabyte ROMs enshrine.</p>\n</blockquote>\n<p>(from <a href=\"http://pages.cs.wisc.edu/~bolo/shipyard/3ins4th.html\" target=\"_blank\" title=\"http://pages.cs.wisc.edu/~bolo/shipyard/3ins4th.html\">http://pages.cs.wisc.edu/~bolo/shipyard/3ins4th.html</a>)</p>",
            "content_type": "text/html",
            "display_recipient": "forth",
            "flags": [
                "read",
                "historical"
            ],
            "id": 118050457,
            "is_me_message": false,
            "reactions": [
                {
                    "emoji_code": "1f600",
                    "emoji_name": "grinning",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "code@saul.pw",
                        "full_name": "Saul Pwanson (SP2'17)",
                        "id": 100791
                    },
                    "user_id": 100791
                }
            ],
            "recipient_id": 103267,
            "sender_email": "julian@cipht.net",
            "sender_full_name": "Julian Squires (he) (F2'17)",
            "sender_id": 101992,
            "sender_realm_str": "recurse",
            "stream_id": 100727,
            "subject": "literary justification of pygmyforth",
            "submessages": [],
            "timestamp": 1509813435,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/216dd445a46512212fb170dd7574e740416478c2?x=x&version=1",
            "client": "ZulipElectron",
            "content": "<p>That's interesting... I'm gonna read it tonight</p>",
            "content_type": "text/html",
            "display_recipient": "forth",
            "flags": [
                "read",
                "historical"
            ],
            "id": 118125259,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 103267,
            "sender_email": "joseph.yiasemides13@alumni.imperial.ac.uk",
            "sender_full_name": "Joseph George Yiasemides (he) (SP1'17)",
            "sender_id": 100508,
            "sender_realm_str": "recurse",
            "stream_id": 100727,
            "subject": "literary justification of pygmyforth",
            "submessages": [],
            "timestamp": 1509989742,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/8b685fc189f3b87e207614dbbed889148f6eda41?x=x&version=21",
            "client": "website",
            "content": "<p>is there a 'forth'y way to handle exceptions? was writing a routine in postscript that only has a defined output over a certain domain of inputs. i feel like the correct answer might just be to have the comment reflect the domain and assume that it'll always be obeyed</p>",
            "content_type": "text/html",
            "display_recipient": "forth",
            "flags": [
                "read",
                "historical"
            ],
            "id": 118169010,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 103267,
            "sender_email": "phoebe@slub.co",
            "sender_full_name": "phoebe beatrice jenkins (she) (m4'18)",
            "sender_id": 101991,
            "sender_realm_str": "recurse",
            "stream_id": 100727,
            "subject": "throwing exceptions, or whatever",
            "submessages": [],
            "timestamp": 1510074583,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/216dd445a46512212fb170dd7574e740416478c2?x=x&version=1",
            "client": "ZulipElectron",
            "content": "<p>I have no idea how to handle that kind of thing... I'd just bring the whole thing to a halt if something like that happens but there might be a better way. How would you handle the exception?</p>",
            "content_type": "text/html",
            "display_recipient": "forth",
            "flags": [
                "read",
                "historical"
            ],
            "id": 118169134,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 103267,
            "sender_email": "joseph.yiasemides13@alumni.imperial.ac.uk",
            "sender_full_name": "Joseph George Yiasemides (he) (SP1'17)",
            "sender_id": 100508,
            "sender_realm_str": "recurse",
            "stream_id": 100727,
            "subject": "throwing exceptions, or whatever",
            "submessages": [],
            "timestamp": 1510074750,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/8b685fc189f3b87e207614dbbed889148f6eda41?x=x&version=21",
            "client": "website",
            "content": "<p>i guess i generally meant what the preferred way to represent failure was. avoiding the baggage of exceptions would probably be good.</p>",
            "content_type": "text/html",
            "display_recipient": "forth",
            "flags": [
                "read",
                "historical"
            ],
            "id": 118169446,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 103267,
            "sender_email": "phoebe@slub.co",
            "sender_full_name": "phoebe beatrice jenkins (she) (m4'18)",
            "sender_id": 101991,
            "sender_realm_str": "recurse",
            "stream_id": 100727,
            "subject": "throwing exceptions, or whatever",
            "submessages": [],
            "timestamp": 1510075331,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/216dd445a46512212fb170dd7574e740416478c2?x=x&version=1",
            "client": "ZulipElectron",
            "content": "<p>I have no idea if or what it might be... the two things I might do is either use conditionals and assertions on the stuff that comes in (handle it there and then if I can) _or_ have a variable in the dictionary that signals if a failure has happened (set it then deal with it elsewhere)</p>",
            "content_type": "text/html",
            "display_recipient": "forth",
            "flags": [
                "read",
                "historical"
            ],
            "id": 118169693,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 103267,
            "sender_email": "joseph.yiasemides13@alumni.imperial.ac.uk",
            "sender_full_name": "Joseph George Yiasemides (he) (SP1'17)",
            "sender_id": 100508,
            "sender_realm_str": "recurse",
            "stream_id": 100727,
            "subject": "throwing exceptions, or whatever",
            "submessages": [],
            "timestamp": 1510075790,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/81c6c8040fc0263607edd05c09dacf6b?d=identicon&version=1",
            "client": "website",
            "content": "<p>There are exceptions in Forth.  They aren't too heavyweight.  See the implementation in jonesforth.  I think the usual philosophy is \"everything must be exactly correct always\".  See also yosefk's <a href=\"https://yosefk.com/blog/my-history-with-forth-stack-machines.html\" target=\"_blank\" title=\"https://yosefk.com/blog/my-history-with-forth-stack-machines.html\">My history with Forth and stack machines</a> which IIRC talks a bit about this philosophy.</p>",
            "content_type": "text/html",
            "display_recipient": "forth",
            "flags": [
                "read",
                "historical"
            ],
            "id": 118170686,
            "is_me_message": false,
            "reactions": [
                {
                    "emoji_code": "1f44d",
                    "emoji_name": "thumbs_up",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "phoebe@slub.co",
                        "full_name": "phoebe beatrice jenkins (she) (m4'18)",
                        "id": 101991
                    },
                    "user_id": 101991
                }
            ],
            "recipient_id": 103267,
            "sender_email": "julian@cipht.net",
            "sender_full_name": "Julian Squires (he) (F2'17)",
            "sender_id": 101992,
            "sender_realm_str": "recurse",
            "stream_id": 100727,
            "subject": "throwing exceptions, or whatever",
            "submessages": [],
            "timestamp": 1510077340,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/81c6c8040fc0263607edd05c09dacf6b?d=identicon&version=1",
            "client": "website",
            "content": "<p>(<a href=\"https://github.com/AlexandreAbreu/jonesforth/blob/ea66dd72848b59f2113da8f2da0db73d5130e407/jonesforth.f#L1193\" target=\"_blank\" title=\"https://github.com/AlexandreAbreu/jonesforth/blob/ea66dd72848b59f2113da8f2da0db73d5130e407/jonesforth.f#L1193\">the part of jonesforth I'm talking about</a>)</p>",
            "content_type": "text/html",
            "display_recipient": "forth",
            "flags": [
                "read",
                "historical"
            ],
            "id": 118170745,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 103267,
            "sender_email": "julian@cipht.net",
            "sender_full_name": "Julian Squires (he) (F2'17)",
            "sender_id": 101992,
            "sender_realm_str": "recurse",
            "stream_id": 100727,
            "subject": "throwing exceptions, or whatever",
            "submessages": [],
            "timestamp": 1510077425,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/840b0106bf4b64a91f222c05f43054358db93f2d?x=x&version=2",
            "client": "website",
            "content": "<p>Is there an <code>ABORT\"</code> word that you can use?  This will abort the entire current command with an error message, if you don't need to recover at all.</p>",
            "content_type": "text/html",
            "display_recipient": "forth",
            "flags": [
                "read",
                "historical"
            ],
            "id": 118171423,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 103267,
            "sender_email": "code@saul.pw",
            "sender_full_name": "Saul Pwanson (SP2'17)",
            "sender_id": 100791,
            "sender_realm_str": "recurse",
            "stream_id": 100727,
            "subject": "throwing exceptions, or whatever",
            "submessages": [],
            "timestamp": 1510078476,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/8b685fc189f3b87e207614dbbed889148f6eda41?x=x&version=21",
            "client": "website",
            "content": "<p><span class=\"user-mention\" data-user-email=\"julian@cipht.net\" data-user-id=\"101992\">@Julian Squires (F2'17)</span> cool! this is what i was looking for - was still working through the asm portion of jonesforth</p>",
            "content_type": "text/html",
            "display_recipient": "forth",
            "flags": [
                "read",
                "historical"
            ],
            "id": 118171566,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 103267,
            "sender_email": "phoebe@slub.co",
            "sender_full_name": "phoebe beatrice jenkins (she) (m4'18)",
            "sender_id": 101991,
            "sender_realm_str": "recurse",
            "stream_id": 100727,
            "subject": "throwing exceptions, or whatever",
            "submessages": [],
            "timestamp": 1510078723,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/8b685fc189f3b87e207614dbbed889148f6eda41?x=x&version=21",
            "client": "website",
            "content": "<p><span class=\"user-mention\" data-user-email=\"code@saul.pw\" data-user-id=\"100791\">@Saul Pwanson (SP2'17)</span> yeah, there's a 'quit' word, which is what i put in for now. postscript doesn't implement a lot of forth so i'll have to see what it's actually capable of</p>",
            "content_type": "text/html",
            "display_recipient": "forth",
            "flags": [
                "read",
                "historical"
            ],
            "id": 118171587,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 103267,
            "sender_email": "phoebe@slub.co",
            "sender_full_name": "phoebe beatrice jenkins (she) (m4'18)",
            "sender_id": 101991,
            "sender_realm_str": "recurse",
            "stream_id": 100727,
            "subject": "throwing exceptions, or whatever",
            "submessages": [],
            "timestamp": 1510078791,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/840b0106bf4b64a91f222c05f43054358db93f2d?x=x&version=2",
            "client": "website",
            "content": "<p>via HN: <a href=\"https://bitbucket.org/cowile/forsh\" target=\"_blank\" title=\"https://bitbucket.org/cowile/forsh\">forsh</a>  <span class=\"user-mention\" data-user-email=\"julian@cipht.net\" data-user-id=\"101992\">@Julian Squires (F2'17)</span> (ICYMI)</p>",
            "content_type": "text/html",
            "display_recipient": "forth",
            "flags": [
                "read",
                "historical"
            ],
            "id": 118557749,
            "is_me_message": false,
            "reactions": [
                {
                    "emoji_code": "1f44d",
                    "emoji_name": "thumbs_up",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "julian@cipht.net",
                        "full_name": "Julian Squires (he) (F2'17)",
                        "id": 101992
                    },
                    "user_id": 101992
                }
            ],
            "recipient_id": 103267,
            "sender_email": "code@saul.pw",
            "sender_full_name": "Saul Pwanson (SP2'17)",
            "sender_id": 100791,
            "sender_realm_str": "recurse",
            "stream_id": 100727,
            "subject": "forsh: a shell on gforth",
            "submessages": [],
            "timestamp": 1510825030,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/81c6c8040fc0263607edd05c09dacf6b?d=identicon&version=1",
            "client": "website",
            "content": "<p><a href=\"http://movingimage.nls.uk/film/1820\" target=\"_blank\" title=\"http://movingimage.nls.uk/film/1820\">FORTH - POWERHOUSE FOR INDUSTRY</a></p>",
            "content_type": "text/html",
            "display_recipient": "forth",
            "flags": [
                "read",
                "historical"
            ],
            "id": 119557851,
            "is_me_message": false,
            "reactions": [
                {
                    "emoji_code": "1f600",
                    "emoji_name": "grinning",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "phoebe@slub.co",
                        "full_name": "phoebe beatrice jenkins (she) (m4'18)",
                        "id": 101991
                    },
                    "user_id": 101991
                },
                {
                    "emoji_code": "1f600",
                    "emoji_name": "grinning",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "code@saul.pw",
                        "full_name": "Saul Pwanson (SP2'17)",
                        "id": 100791
                    },
                    "user_id": 100791
                }
            ],
            "recipient_id": 103267,
            "sender_email": "julian@cipht.net",
            "sender_full_name": "Julian Squires (he) (F2'17)",
            "sender_id": 101992,
            "sender_realm_str": "recurse",
            "stream_id": 100727,
            "subject": "inspiration for project names, puns",
            "submessages": [],
            "timestamp": 1512874594,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/8b685fc189f3b87e207614dbbed889148f6eda41?x=x&version=21",
            "client": "website",
            "content": "<p><a href=\"http://brokestream.com/fizzbuzz.html\" target=\"_blank\" title=\"http://brokestream.com/fizzbuzz.html\">http://brokestream.com/fizzbuzz.html</a></p>",
            "content_type": "text/html",
            "display_recipient": "forth",
            "flags": [
                "read",
                "historical"
            ],
            "id": 120896165,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 103267,
            "sender_email": "phoebe@slub.co",
            "sender_full_name": "phoebe beatrice jenkins (she) (m4'18)",
            "sender_id": 101991,
            "sender_realm_str": "recurse",
            "stream_id": 100727,
            "subject": "fizzbuzz without control structures",
            "submessages": [],
            "timestamp": 1515631172,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/216dd445a46512212fb170dd7574e740416478c2?x=x&version=1",
            "client": "ZulipElectron",
            "content": "<p>There's some nice stuff on there... like: <a href=\"http://brokestream.com/daf.txt\" target=\"_blank\" title=\"http://brokestream.com/daf.txt\">http://brokestream.com/daf.txt</a></p>",
            "content_type": "text/html",
            "display_recipient": "forth",
            "flags": [
                "read",
                "historical"
            ],
            "id": 120914447,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 103267,
            "sender_email": "joseph.yiasemides13@alumni.imperial.ac.uk",
            "sender_full_name": "Joseph George Yiasemides (he) (SP1'17)",
            "sender_id": 100508,
            "sender_realm_str": "recurse",
            "stream_id": 100727,
            "subject": "fizzbuzz without control structures",
            "submessages": [],
            "timestamp": 1515669039,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/840b0106bf4b64a91f222c05f43054358db93f2d?x=x&version=2",
            "client": "website",
            "content": "<p>forthers be cray cray</p>",
            "content_type": "text/html",
            "display_recipient": "forth",
            "flags": [
                "read",
                "historical"
            ],
            "id": 120987601,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 103267,
            "sender_email": "code@saul.pw",
            "sender_full_name": "Saul Pwanson (SP2'17)",
            "sender_id": 100791,
            "sender_realm_str": "recurse",
            "stream_id": 100727,
            "subject": "fizzbuzz without control structures",
            "submessages": [],
            "timestamp": 1515798894,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/95eb11b4d11f06cdb3001ff6e17d64de5f38bb28?x=x&version=12",
            "client": "website",
            "content": "<p><a href=\"https://github.com/mschuldt/forth_wizard\" target=\"_blank\" title=\"https://github.com/mschuldt/forth_wizard\">https://github.com/mschuldt/forth_wizard</a></p>\n<p>For posterity: \"The Forth Wizard finds the shortest sequence of forth instructions needed for a given stack manipulation.\"</p>",
            "content_type": "text/html",
            "display_recipient": "forth",
            "flags": [
                "read",
                "historical"
            ],
            "id": 121288094,
            "is_me_message": false,
            "reactions": [
                {
                    "emoji_code": "2764",
                    "emoji_name": "heart",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "code@saul.pw",
                        "full_name": "Saul Pwanson (SP2'17)",
                        "id": 100791
                    },
                    "user_id": 100791
                }
            ],
            "recipient_id": 103267,
            "sender_email": "anja.kefala@gmail.com",
            "sender_full_name": "Anja Boskovic (SP1'17)",
            "sender_id": 100514,
            "sender_realm_str": "recurse",
            "stream_id": 100727,
            "subject": "You're a wizard 'arry",
            "submessages": [],
            "timestamp": 1516402924,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/216dd445a46512212fb170dd7574e740416478c2?x=x&version=1",
            "client": "ZulipElectron",
            "content": "<p>Nice one! <span class=\"user-mention\" data-user-email=\"anja.kefala@gmail.com\" data-user-id=\"100514\">@Anja Boskovic (SP1'17)</span> Do you know how it does it? I guess it's an exhaustive search underneath</p>",
            "content_type": "text/html",
            "display_recipient": "forth",
            "flags": [
                "read",
                "historical"
            ],
            "id": 121318861,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 103267,
            "sender_email": "joseph.yiasemides13@alumni.imperial.ac.uk",
            "sender_full_name": "Joseph George Yiasemides (he) (SP1'17)",
            "sender_id": 100508,
            "sender_realm_str": "recurse",
            "stream_id": 100727,
            "subject": "You're a wizard 'arry",
            "submessages": [],
            "timestamp": 1516476519,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/555d9fc8b9f9a919e308a050961eced4?d=identicon&version=1",
            "client": "website",
            "content": "<p>I have a distinct memory of someone describing using <code>*/</code> to implement an approximation of pi which included 2 magic numbers in the definition. Have a feeling it was posted above but I just looked at <em>every</em> link in the forth stream.. haha. Would love to understand a bit more how to use <code>*/</code> but also thinking the page probably has a slew of other great hacks...</p>\n<p>Can anyone help me find it?!</p>",
            "content_type": "text/html",
            "display_recipient": "forth",
            "flags": [
                "read",
                "historical"
            ],
            "id": 133099901,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 103267,
            "sender_email": "trent.gill@gmail.com",
            "sender_full_name": "Trent Gill (he) (SP2'17)",
            "sender_id": 100932,
            "sender_realm_str": "recurse",
            "stream_id": 100727,
            "subject": "PI using */",
            "submessages": [],
            "timestamp": 1535684088,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/8f3e3f13689ac077fe4ae537e33bde345a57cb22?x=x&version=2",
            "client": "website",
            "content": "<p>Hey <span class=\"user-mention\" data-user-id=\"100932\">@Trent Gill (SP2'17)</span> ! Something like this:</p>\n<div class=\"codehilite\"><pre><span></span>Hi Jake,\n\nmy favorite is 355/113 it works for 16bit Forth and has an accuracy of\nabout 8.5E-8 i.e. it&#39;s much better than 16bit numbers.\n\nso I can use : Pi*   355 113 */  ;\n</pre></div>\n\n\n<p>from <a href=\"http://computer-programming-forum.com/22-forth/e3ff83bcae906841.htm\" target=\"_blank\" title=\"http://computer-programming-forum.com/22-forth/e3ff83bcae906841.htm\">http://computer-programming-forum.com/22-forth/e3ff83bcae906841.htm</a></p>",
            "content_type": "text/html",
            "display_recipient": "forth",
            "flags": [
                "read",
                "historical"
            ],
            "id": 133101457,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 103267,
            "sender_email": "recurse@ardent.nebcorp.com",
            "sender_full_name": "Joe Ardent (he) (SP1'17)",
            "sender_id": 9097,
            "sender_realm_str": "recurse",
            "stream_id": 100727,
            "subject": "PI using */",
            "submessages": [],
            "timestamp": 1535687288,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/8f3e3f13689ac077fe4ae537e33bde345a57cb22?x=x&version=2",
            "client": "website",
            "content": "<p>?</p>",
            "content_type": "text/html",
            "display_recipient": "forth",
            "flags": [
                "read",
                "historical"
            ],
            "id": 133101458,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 103267,
            "sender_email": "recurse@ardent.nebcorp.com",
            "sender_full_name": "Joe Ardent (he) (SP1'17)",
            "sender_id": 9097,
            "sender_realm_str": "recurse",
            "stream_id": 100727,
            "subject": "PI using */",
            "submessages": [],
            "timestamp": 1535687297,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/555d9fc8b9f9a919e308a050961eced4?d=identicon&version=1",
            "client": "website",
            "content": "<p>Perfect &amp; thank you Joe! My search skills were failing me :/</p>",
            "content_type": "text/html",
            "display_recipient": "forth",
            "flags": [
                "read",
                "historical"
            ],
            "id": 133101461,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 103267,
            "sender_email": "trent.gill@gmail.com",
            "sender_full_name": "Trent Gill (he) (SP2'17)",
            "sender_id": 100932,
            "sender_realm_str": "recurse",
            "stream_id": 100727,
            "subject": "PI using */",
            "submessages": [],
            "timestamp": 1535687329,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/8f3e3f13689ac077fe4ae537e33bde345a57cb22?x=x&version=2",
            "client": "website",
            "content": "<p>I feel like the google kami must favor me</p>",
            "content_type": "text/html",
            "display_recipient": "forth",
            "flags": [
                "read",
                "historical"
            ],
            "id": 133101477,
            "is_me_message": false,
            "reactions": [
                {
                    "emoji_code": "1f419",
                    "emoji_name": "octopus",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "trent.gill@gmail.com",
                        "full_name": "Trent Gill (he) (SP2'17)",
                        "id": 100932
                    },
                    "user_id": 100932
                }
            ],
            "recipient_id": 103267,
            "sender_email": "recurse@ardent.nebcorp.com",
            "sender_full_name": "Joe Ardent (he) (SP1'17)",
            "sender_id": 9097,
            "sender_realm_str": "recurse",
            "stream_id": 100727,
            "subject": "PI using */",
            "submessages": [],
            "timestamp": 1535687390,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/840b0106bf4b64a91f222c05f43054358db93f2d?x=x&version=2",
            "client": "website",
            "content": "<p>The subject of word naming came up in a recent discussion on ForthHub, and Lars posted a nice table summary: <a href=\"https://github.com/ForthHub/discussion/issues/73\" target=\"_blank\" title=\"https://github.com/ForthHub/discussion/issues/73\">https://github.com/ForthHub/discussion/issues/73</a></p>",
            "content_type": "text/html",
            "display_recipient": "forth",
            "flags": [
                "read",
                "historical"
            ],
            "id": 133105930,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 103267,
            "sender_email": "code@saul.pw",
            "sender_full_name": "Saul Pwanson (SP2'17)",
            "sender_id": 100791,
            "sender_realm_str": "recurse",
            "stream_id": 100727,
            "subject": "word names",
            "submessages": [],
            "timestamp": 1535696127,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/840b0106bf4b64a91f222c05f43054358db93f2d?x=x&version=2",
            "client": "website",
            "content": "<p>I'm starting to make a new small Forth for ARM (M4, \"microcontroller\", as used in many IoT wearables), mostly to learn the ins and outs of ARM at a low-level (since I'm doing a bunch of stuff on the nRF52 these days for work).  I just got the dev environment set up tonight and will probably start working on the basics this weekend.  If anyone wants to help or watch the process, I'd love to commiserate. <span class=\"user-mention\" data-user-id=\"100932\">@Trent Gill (SP2'17)</span> <span class=\"user-mention\" data-user-id=\"100931\">@Vivian Brown (SP2'17)</span> <span class=\"user-mention\" data-user-id=\"100830\">@Andrea Law (SP2'17)</span> <span class=\"user-mention\" data-user-id=\"100508\">@Joseph George Yiasemides (SP1'17)</span> <span class=\"user-mention\" data-user-id=\"100533\">@Nasreen Abu-Hunaina (SP1'17)</span></p>",
            "content_type": "text/html",
            "display_recipient": "forth",
            "flags": [
                "read",
                "historical"
            ],
            "id": 151167184,
            "is_me_message": false,
            "reactions": [
                {
                    "emoji_code": "1f44d",
                    "emoji_name": "+1",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "phoebe@slub.co",
                        "full_name": "phoebe beatrice jenkins (she) (m4'18)",
                        "id": 101991
                    },
                    "user_id": 101991
                },
                {
                    "emoji_code": "1f44d",
                    "emoji_name": "+1",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "julian@cipht.net",
                        "full_name": "Julian Squires (he) (F2'17)",
                        "id": 101992
                    },
                    "user_id": 101992
                }
            ],
            "recipient_id": 103267,
            "sender_email": "code@saul.pw",
            "sender_full_name": "Saul Pwanson (SP2'17)",
            "sender_id": 100791,
            "sender_realm_str": "recurse",
            "stream_id": 100727,
            "subject": "starting a new forth project",
            "submessages": [],
            "timestamp": 1544255325,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/840b0106bf4b64a91f222c05f43054358db93f2d?x=x&version=2",
            "client": "website",
            "content": "<p><span class=\"user-mention\" data-user-id=\"100515\">@Moritz Neeb (SP1'17)</span> <span class=\"user-mention\" data-user-id=\"101992\">@Julian Squires (F2'17)</span></p>",
            "content_type": "text/html",
            "display_recipient": "forth",
            "flags": [
                "read",
                "historical"
            ],
            "id": 151167191,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 103267,
            "sender_email": "code@saul.pw",
            "sender_full_name": "Saul Pwanson (SP2'17)",
            "sender_id": 100791,
            "sender_realm_str": "recurse",
            "stream_id": 100727,
            "subject": "starting a new forth project",
            "submessages": [],
            "timestamp": 1544255373,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/81c6c8040fc0263607edd05c09dacf6b?d=identicon&version=1",
            "client": "website",
            "content": "<p>Although I'm busy this weekend, I'm happy to commiserate plenty; I did a lot of ARM a long time ago, and need to do some again soon (restoring some GBA music playback routines I used some time ago).</p>\n<p>I think Forth on ARM should be enjoyable; I always found ARM to be maybe the most ergonomic assembly language to write by hand.  Will you be doing ARM or Thumb?  Would love to hear about other decisions regarding threading, register choices, et cetera.  I personally need to get back to a GBZ80 Forth I was working on last year.</p>",
            "content_type": "text/html",
            "display_recipient": "forth",
            "flags": [
                "read",
                "historical"
            ],
            "id": 151180369,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 103267,
            "sender_email": "julian@cipht.net",
            "sender_full_name": "Julian Squires (he) (F2'17)",
            "sender_id": 101992,
            "sender_realm_str": "recurse",
            "stream_id": 100727,
            "subject": "starting a new forth project",
            "submessages": [],
            "timestamp": 1544281776,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/8b685fc189f3b87e207614dbbed889148f6eda41?x=x&version=21",
            "client": "website",
            "content": "<p>julian, did BEAMForth ever come together? :)</p>",
            "content_type": "text/html",
            "display_recipient": "forth",
            "flags": [
                "read",
                "historical"
            ],
            "id": 151181183,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 103267,
            "sender_email": "phoebe@slub.co",
            "sender_full_name": "phoebe beatrice jenkins (she) (m4'18)",
            "sender_id": 101991,
            "sender_realm_str": "recurse",
            "stream_id": 100727,
            "subject": "starting a new forth project",
            "submessages": [],
            "timestamp": 1544283115,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/840b0106bf4b64a91f222c05f43054358db93f2d?x=x&version=2",
            "client": "website",
            "content": "<p><span class=\"user-mention\" data-user-id=\"101992\">@Julian Squires (F2'17)</span> Going with Thumb for the time being, though it seems like you can switch between them basically at will?  I've decided on indirect threading for the moment, because it's simplest and most fun :)  The last one I did used token threading for portability reasons (I could compile the dictionary on the desktop and run the code on a 64-bit computer, and then flash the same dictionary to the device and be confident that it would work the same).  So if this goes anywhere beyond a toy I may do something like that.  But I'm hoping to keep it in the side project realm for now :)</p>",
            "content_type": "text/html",
            "display_recipient": "forth",
            "flags": [
                "read",
                "historical"
            ],
            "id": 151189955,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 103267,
            "sender_email": "code@saul.pw",
            "sender_full_name": "Saul Pwanson (SP2'17)",
            "sender_id": 100791,
            "sender_realm_str": "recurse",
            "stream_id": 100727,
            "subject": "starting a new forth project",
            "submessages": [],
            "timestamp": 1544295887,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/81c6c8040fc0263607edd05c09dacf6b?d=identicon&version=1",
            "client": "website",
            "content": "<p><span class=\"user-mention\" data-user-id=\"101991\">@phoebe beatrice jenkins (m4'18)</span> soon maybe :-)</p>\n<p><span class=\"user-mention\" data-user-id=\"100791\">@Saul Pwanson (SP2'17)</span> You can switch back and forth freely between ARM and Thumb, but beware interrupt handlers.  I definitely think Thumb feels more like the kind of machine Forth usually lives on.</p>",
            "content_type": "text/html",
            "display_recipient": "forth",
            "flags": [
                "read",
                "historical"
            ],
            "id": 151190166,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 103267,
            "sender_email": "julian@cipht.net",
            "sender_full_name": "Julian Squires (he) (F2'17)",
            "sender_id": 101992,
            "sender_realm_str": "recurse",
            "stream_id": 100727,
            "subject": "starting a new forth project",
            "submessages": [],
            "timestamp": 1544296128,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/840b0106bf4b64a91f222c05f43054358db93f2d?x=x&version=2",
            "client": "website",
            "content": "<p>Here's the first functional bit, for anyone who wants to follow along!  <a href=\"https://github.com/saulpw/thumbforth\" target=\"_blank\" title=\"https://github.com/saulpw/thumbforth\">https://github.com/saulpw/thumbforth</a></p>",
            "content_type": "text/html",
            "display_recipient": "forth",
            "flags": [
                "read",
                "historical"
            ],
            "id": 151203945,
            "is_me_message": false,
            "reactions": [
                {
                    "emoji_code": "1f389",
                    "emoji_name": "tada",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "phoebe@slub.co",
                        "full_name": "phoebe beatrice jenkins (she) (m4'18)",
                        "id": 101991
                    },
                    "user_id": 101991
                }
            ],
            "recipient_id": 103267,
            "sender_email": "code@saul.pw",
            "sender_full_name": "Saul Pwanson (SP2'17)",
            "sender_id": 100791,
            "sender_realm_str": "recurse",
            "stream_id": 100727,
            "subject": "starting a new forth project",
            "submessages": [],
            "timestamp": 1544322420,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/840b0106bf4b64a91f222c05f43054358db93f2d?x=x&version=2",
            "client": "website",
            "content": "<p><span class=\"user-mention\" data-user-id=\"101992\">@Julian Squires (F2'17)</span> would love your code review if you have a chance</p>",
            "content_type": "text/html",
            "display_recipient": "forth",
            "flags": [
                "read",
                "historical"
            ],
            "id": 151204195,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 103267,
            "sender_email": "code@saul.pw",
            "sender_full_name": "Saul Pwanson (SP2'17)",
            "sender_id": 100791,
            "sender_realm_str": "recurse",
            "stream_id": 100727,
            "subject": "starting a new forth project",
            "submessages": [],
            "timestamp": 1544322989,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/840b0106bf4b64a91f222c05f43054358db93f2d?x=x&version=2",
            "client": "website",
            "content": "<p>Up to DOCONST; will work on CALLC tomorrow.  I haven't quite been able to figure out how the <code>bl reg</code> call sequence is supposed to go.</p>",
            "content_type": "text/html",
            "display_recipient": "forth",
            "flags": [
                "read",
                "historical"
            ],
            "id": 151216549,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 103267,
            "sender_email": "code@saul.pw",
            "sender_full_name": "Saul Pwanson (SP2'17)",
            "sender_id": 100791,
            "sender_realm_str": "recurse",
            "stream_id": 100727,
            "subject": "starting a new forth project",
            "submessages": [],
            "timestamp": 1544350503,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/555d9fc8b9f9a919e308a050961eced4?d=identicon&version=1",
            "client": "website",
            "content": "<p>This is looking great <span class=\"user-mention\" data-user-id=\"100791\">@Saul Pwanson (SP2'17)</span> . Completely bewildered and amazed by how much you're doing with only 100 lines of dictionary in assembly! Will keep digging through this..</p>",
            "content_type": "text/html",
            "display_recipient": "forth",
            "flags": [
                "read",
                "historical"
            ],
            "id": 151611742,
            "is_me_message": false,
            "last_edit_timestamp": 1544712666,
            "reactions": [
                {
                    "emoji_code": "1f60a",
                    "emoji_name": "blush",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "code@saul.pw",
                        "full_name": "Saul Pwanson (SP2'17)",
                        "id": 100791
                    },
                    "user_id": 100791
                }
            ],
            "recipient_id": 103267,
            "sender_email": "trent.gill@gmail.com",
            "sender_full_name": "Trent Gill (he) (SP2'17)",
            "sender_id": 100932,
            "sender_realm_str": "recurse",
            "stream_id": 100727,
            "subject": "starting a new forth project",
            "submessages": [],
            "timestamp": 1544712543,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/840b0106bf4b64a91f222c05f43054358db93f2d?x=x&version=2",
            "client": "website",
            "content": "<p>An interesting link I came across on HN today: <a href=\"http://sigusr2.net/be-moore-like-chuck.html\" target=\"_blank\" title=\"http://sigusr2.net/be-moore-like-chuck.html\">http://sigusr2.net/be-moore-like-chuck.html</a></p>",
            "content_type": "text/html",
            "display_recipient": "forth",
            "flags": [
                "read",
                "historical"
            ],
            "id": 154138140,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 103267,
            "sender_email": "code@saul.pw",
            "sender_full_name": "Saul Pwanson (SP2'17)",
            "sender_id": 100791,
            "sender_realm_str": "recurse",
            "stream_id": 100727,
            "subject": "Be Moore Like Chuck",
            "submessages": [],
            "timestamp": 1546367784,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/840b0106bf4b64a91f222c05f43054358db93f2d?x=x&version=2",
            "client": "website",
            "content": "<p>From <a href=\"https://news.ycombinator.com/item?id=18888043\" target=\"_blank\" title=\"https://news.ycombinator.com/item?id=18888043\">a hacker news comment</a>:</p>\n<blockquote>\n<p>One thing Forth is great at is signal processing. This was kind of a revelation to me when I tried Paul Batchlor's Sporth, a Forth-style language specialized in audio processing.<br>\nNowadays audio synths and effects are most commonly represented as interactive spaghetti diagrams connecting basic DSP blocks together into directed graphs determining the signal flow. To make a good audio programming language, the question then becomes: is there a nice textual representation for this kind of graph? And Forth is a great answer to that question.</p>\n<p>I had so much fun with Sporth that I ported it to the browser and made an online playground for it: <a href=\"https://audiomasher.org/\" target=\"_blank\" title=\"https://audiomasher.org/\">https://audiomasher.org/</a> with some examples: <a href=\"https://audiomasher.org/browse\" target=\"_blank\" title=\"https://audiomasher.org/browse\">https://audiomasher.org/browse</a> and a tutorial: <a href=\"https://audiomasher.org/learn\" target=\"_blank\" title=\"https://audiomasher.org/learn\">https://audiomasher.org/learn</a></p>\n</blockquote>\n<p><span class=\"user-mention\" data-user-id=\"100932\">@Trent Gill (SP2'17)</span></p>",
            "content_type": "text/html",
            "display_recipient": "forth",
            "flags": [
                "read",
                "historical"
            ],
            "id": 154955727,
            "is_me_message": false,
            "reactions": [
                {
                    "emoji_code": "1f39b",
                    "emoji_name": "control_knobs",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "\"#!$%&'*+-/=?^_`{}|~\"@tomyumcorp.com",
                        "full_name": "Cameron Finucane (they) (SP1'18)",
                        "id": 103055
                    },
                    "user_id": 103055
                },
                {
                    "emoji_code": "1f39b",
                    "emoji_name": "control_knobs",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "vsrinivas@ops101.org",
                        "full_name": "Venkatesh Srinivas (he) (S2'18)",
                        "id": 120560
                    },
                    "user_id": 120560
                },
                {
                    "emoji_code": "1f39b",
                    "emoji_name": "control_knobs",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "phoebe@slub.co",
                        "full_name": "phoebe beatrice jenkins (she) (m4'18)",
                        "id": 101991
                    },
                    "user_id": 101991
                },
                {
                    "emoji_code": "1f39b",
                    "emoji_name": "control_knobs",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "tenorbiel@gmail.com",
                        "full_name": "Tenor Tenor (they/he) (m4'19)",
                        "id": 158532
                    },
                    "user_id": 158532
                }
            ],
            "recipient_id": 103267,
            "sender_email": "code@saul.pw",
            "sender_full_name": "Saul Pwanson (SP2'17)",
            "sender_id": 100791,
            "sender_realm_str": "recurse",
            "stream_id": 100727,
            "subject": "starting a new forth project",
            "submessages": [],
            "timestamp": 1547249610,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/216dd445a46512212fb170dd7574e740416478c2?x=x&version=1",
            "client": "website",
            "content": "<p>Hey Saul <span aria-label=\"smile cat\" class=\"emoji emoji-1f638\" role=\"img\" title=\"smile cat\">:smile_cat:</span> How's this going?</p>",
            "content_type": "text/html",
            "display_recipient": "forth",
            "flags": [
                "read",
                "historical"
            ],
            "id": 161648236,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 103267,
            "sender_email": "joseph.yiasemides13@alumni.imperial.ac.uk",
            "sender_full_name": "Joseph George Yiasemides (he) (SP1'17)",
            "sender_id": 100508,
            "sender_realm_str": "recurse",
            "stream_id": 100727,
            "subject": "starting a new forth project",
            "submessages": [],
            "timestamp": 1553524018,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/216dd445a46512212fb170dd7574e740416478c2?x=x&version=1",
            "client": "website",
            "content": "<p>Ah, BTW, I only _just_ saw the above... the Zulip UI was hiding a lot of it :D</p>",
            "content_type": "text/html",
            "display_recipient": "forth",
            "flags": [
                "read",
                "historical"
            ],
            "id": 161648676,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 103267,
            "sender_email": "joseph.yiasemides13@alumni.imperial.ac.uk",
            "sender_full_name": "Joseph George Yiasemides (he) (SP1'17)",
            "sender_id": 100508,
            "sender_realm_str": "recurse",
            "stream_id": 100727,
            "subject": "starting a new forth project",
            "submessages": [],
            "timestamp": 1553524273,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/5d6a7a4735c43e9dae0e3f9ef82919706728452a?x=x&version=3",
            "client": "website",
            "content": "<p>I'm writing a little forth for livecoding music :)</p>\n<p>After a few hours, I can make some interesting programs :)</p>\n<p><a href=\"/user_uploads/13/bemiF_V8gSD1AQ1Zka5lzioM/a4.wav\" target=\"_blank\" title=\"a4.wav\">you can make a A4 with <code>440 sine</code></a><br>\n<a href=\"/user_uploads/13/-SdFkhQ0it4fjGQpDKe99zEM/metronome.wav\" target=\"_blank\" title=\"metronome.wav\">it's pretty simple to build a metronome - <code>time 800 mod 200 * time 25000 mod 1500 &lt; *</code></a><br>\n<a href=\"/user_uploads/13/y3ZBdda3hJWx_mfhwWf-jPnA/glitch.wav\" target=\"_blank\" title=\"glitch.wav\"><code>800 sine 400 / 440 + sine</code> - some jankiness happening here because of clipping, but I like the effect :)</a></p>",
            "content_type": "text/html",
            "display_recipient": "forth",
            "flags": [
                "read",
                "historical"
            ],
            "id": 162775717,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 103267,
            "sender_email": "me@wesleyac.com",
            "sender_full_name": "Wesley Aptekar-Cassels (they) (m8'20)",
            "sender_id": 101330,
            "sender_realm_str": "recurse",
            "stream_id": 100727,
            "subject": "musical forth",
            "submessages": [],
            "timestamp": 1554675937,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/5d6a7a4735c43e9dae0e3f9ef82919706728452a?x=x&version=3",
            "client": "website",
            "content": "<p>I don't really know if I'm doing this right (I worry I might be painting myself into a corner by representing the time domain as concrete values, rather than a graph, and I have no idea what the cell width should be), but it's fun anyways :)</p>",
            "content_type": "text/html",
            "display_recipient": "forth",
            "flags": [
                "read",
                "historical"
            ],
            "id": 162776101,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 103267,
            "sender_email": "me@wesleyac.com",
            "sender_full_name": "Wesley Aptekar-Cassels (they) (m8'20)",
            "sender_id": 101330,
            "sender_realm_str": "recurse",
            "stream_id": 100727,
            "subject": "musical forth",
            "submessages": [],
            "timestamp": 1554676570,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/8b685fc189f3b87e207614dbbed889148f6eda41?x=x&version=21",
            "client": "website",
            "content": "<p>ahhh this is cool! i should spend some time messing with forth again but i already have too many projects at once D:</p>",
            "content_type": "text/html",
            "display_recipient": "forth",
            "flags": [
                "read",
                "historical"
            ],
            "id": 162828885,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 103267,
            "sender_email": "phoebe@slub.co",
            "sender_full_name": "phoebe beatrice jenkins (she) (m4'18)",
            "sender_id": 101991,
            "sender_realm_str": "recurse",
            "stream_id": 100727,
            "subject": "musical forth",
            "submessages": [],
            "timestamp": 1554738526,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/15cc6e65f5cb0faac87d0b88dae865281ba57899?x=x&version=2",
            "client": "ZulipElectron",
            "content": "<p><a href=\"https://www.youtube.com/watch?v=R4_c_ObkSKc\" target=\"_blank\" title=\"https://www.youtube.com/watch?v=R4_c_ObkSKc\">https://www.youtube.com/watch?v=R4_c_ObkSKc</a> by <span class=\"user-mention\" data-user-id=\"100533\">@Nasreen Abu-Hunaina (SP1'17)</span> and <span class=\"user-mention\" data-user-id=\"100508\">@Joseph George Yiasemides (SP1'17)</span></p>\n<div class=\"youtube-video message_inline_image\"><a data-id=\"R4_c_ObkSKc\" href=\"https://www.youtube.com/watch?v=R4_c_ObkSKc\" target=\"_blank\" title=\"https://www.youtube.com/watch?v=R4_c_ObkSKc\"><img src=\"https://i.ytimg.com/vi/R4_c_ObkSKc/default.jpg\"></a></div>",
            "content_type": "text/html",
            "display_recipient": "forth",
            "flags": [
                "read",
                "historical"
            ],
            "id": 164161874,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 103267,
            "sender_email": "moritz.neeb@posteo.net",
            "sender_full_name": "Moritz Neeb (he) (SP1'17)",
            "sender_id": 100515,
            "sender_realm_str": "recurse",
            "stream_id": 100727,
            "subject": "may the forth be with you",
            "submessages": [],
            "timestamp": 1556191534,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/216dd445a46512212fb170dd7574e740416478c2?x=x&version=1",
            "client": "website",
            "content": "<p><img alt=\":smiley_hacker:\" class=\"emoji\" src=\"https://zulip-avatars.s3.amazonaws.com/13/emoji/images/2410.jpg\" title=\"smiley hacker\"></p>",
            "content_type": "text/html",
            "display_recipient": "forth",
            "flags": [
                "read",
                "historical"
            ],
            "id": 164262531,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 103267,
            "sender_email": "joseph.yiasemides13@alumni.imperial.ac.uk",
            "sender_full_name": "Joseph George Yiasemides (he) (SP1'17)",
            "sender_id": 100508,
            "sender_realm_str": "recurse",
            "stream_id": 100727,
            "subject": "may the forth be with you",
            "submessages": [],
            "timestamp": 1556286251,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/840b0106bf4b64a91f222c05f43054358db93f2d?x=x&version=2",
            "client": "website",
            "content": "<p>That's awesome, <span class=\"user-mention\" data-user-id=\"100508\">@Joseph George Yiasemides (SP1'17)</span> and <span class=\"user-mention\" data-user-id=\"100533\">@Nasreen Abu-Hunaina (SP1'17)</span> !  I had no idea you were working on this together.  Nice job :)</p>",
            "content_type": "text/html",
            "display_recipient": "forth",
            "flags": [
                "read",
                "historical"
            ],
            "id": 164322877,
            "is_me_message": false,
            "reactions": [
                {
                    "emoji_code": "1f638",
                    "emoji_name": "smile_cat",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "trent.gill@gmail.com",
                        "full_name": "Trent Gill (he) (SP2'17)",
                        "id": 100932
                    },
                    "user_id": 100932
                },
                {
                    "emoji_code": "1f638",
                    "emoji_name": "smile_cat",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "joseph.yiasemides13@alumni.imperial.ac.uk",
                        "full_name": "Joseph George Yiasemides (he) (SP1'17)",
                        "id": 100508
                    },
                    "user_id": 100508
                }
            ],
            "recipient_id": 103267,
            "sender_email": "code@saul.pw",
            "sender_full_name": "Saul Pwanson (SP2'17)",
            "sender_id": 100791,
            "sender_realm_str": "recurse",
            "stream_id": 100727,
            "subject": "may the forth be with you",
            "submessages": [],
            "timestamp": 1556349795,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/5d6a7a4735c43e9dae0e3f9ef82919706728452a?x=x&version=3",
            "client": "website",
            "content": "<p>Why must branching (<code>IF ... THEN</code>, <code>DO ... LOOP</code>) be inside a definition? It seems like one can just wrap the entire program within, say <code>: MAIN ... ; MAIN</code>, and everything will work? Or are there constructs which must not be used inside definitions?</p>",
            "content_type": "text/html",
            "display_recipient": "forth",
            "flags": [
                "read",
                "historical"
            ],
            "id": 166579883,
            "is_me_message": false,
            "last_edit_timestamp": 1558884628,
            "reactions": [],
            "recipient_id": 103267,
            "sender_email": "me@wesleyac.com",
            "sender_full_name": "Wesley Aptekar-Cassels (they) (m8'20)",
            "sender_id": 101330,
            "sender_realm_str": "recurse",
            "stream_id": 100727,
            "subject": "why must branching be within definition?",
            "submessages": [],
            "timestamp": 1558884622,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/840b0106bf4b64a91f222c05f43054358db93f2d?x=x&version=2",
            "client": "website",
            "content": "<p>It is because branching constructs have to manipulate the IP.  In straight interpreted mode at the REPL, the IP is inside the interpreter, and the interpreter is just parsing and executing individual words.  So yes, just putting everything inside a <code>MAIN</code> as you have it, will compile that word to the dictionary, which then allows those control flow words.</p>\n<p>Note that all of the control flow words are <code>IMMEDIATE</code>, meaning that they are executed immediately during compilation of a word, and they alter the state of the compiler and manually write into the dictionary.  <code>IMMEDIATE</code>words almost never make sense outside of word compilation.</p>",
            "content_type": "text/html",
            "display_recipient": "forth",
            "flags": [
                "read",
                "historical"
            ],
            "id": 166663573,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 103267,
            "sender_email": "code@saul.pw",
            "sender_full_name": "Saul Pwanson (SP2'17)",
            "sender_id": 100791,
            "sender_realm_str": "recurse",
            "stream_id": 100727,
            "subject": "why must branching be within definition?",
            "submessages": [],
            "timestamp": 1558990431,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/c52df4d54166ed7db0141bdb21c7935e502d6ddc?x=x&version=1",
            "client": "website",
            "content": "<p>I saw a reference once to a paper about a Forth dialect where control-flow words did work the same outside definitions. The paper wasn't online, so I don't know how they did it. I guess temporarily compile everything, and FORGET after running it? But you'd have to make other changes to the system to go along with that -- I'm not sure how extensive. Maybe they had a different idea.</p>",
            "content_type": "text/html",
            "display_recipient": "forth",
            "flags": [
                "read",
                "historical"
            ],
            "id": 166675847,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 103267,
            "sender_email": "darius@wry.me",
            "sender_full_name": "Darius Bacon (W1'16)",
            "sender_id": 902,
            "sender_realm_str": "recurse",
            "stream_id": 100727,
            "subject": "why must branching be within definition?",
            "submessages": [],
            "timestamp": 1559007450,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/216dd445a46512212fb170dd7574e740416478c2?x=x&version=1",
            "client": "website",
            "content": "<p>The pun and the t-shirt are nice <span aria-label=\"heart\" class=\"emoji emoji-2764\" role=\"img\" title=\"heart\">:heart:</span>  a few months ago a colleague asked me what was interesting about Forth for me. I couldn't find the words... but this pun is connected with what it's come to mean for me since then which is that for me it's so <strong>interesting to see how much Forth can do with so little</strong> <span aria-label=\"smile cat\" class=\"emoji emoji-1f638\" role=\"img\" title=\"smile cat\">:smile_cat:</span></p>",
            "content_type": "text/html",
            "display_recipient": "forth",
            "flags": [
                "read",
                "historical"
            ],
            "id": 167114514,
            "is_me_message": false,
            "reactions": [
                {
                    "emoji_code": "2764",
                    "emoji_name": "heart",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "trent.gill@gmail.com",
                        "full_name": "Trent Gill (he) (SP2'17)",
                        "id": 100932
                    },
                    "user_id": 100932
                },
                {
                    "emoji_code": "2764",
                    "emoji_name": "heart",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "vsrinivas@ops101.org",
                        "full_name": "Venkatesh Srinivas (he) (S2'18)",
                        "id": 120560
                    },
                    "user_id": 120560
                },
                {
                    "emoji_code": "2764",
                    "emoji_name": "heart",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "code@saul.pw",
                        "full_name": "Saul Pwanson (SP2'17)",
                        "id": 100791
                    },
                    "user_id": 100791
                }
            ],
            "recipient_id": 103267,
            "sender_email": "joseph.yiasemides13@alumni.imperial.ac.uk",
            "sender_full_name": "Joseph George Yiasemides (he) (SP1'17)",
            "sender_id": 100508,
            "sender_realm_str": "recurse",
            "stream_id": 100727,
            "subject": "Be Moore Like Chuck",
            "submessages": [],
            "timestamp": 1559468495,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/5d6a7a4735c43e9dae0e3f9ef82919706728452a?x=x&version=3",
            "client": "website",
            "content": "<p>I've been writing a forth on baremetal x86, and talking a bunch about it in <a class=\"stream\" data-stream-id=\"102312\" href=\"/#narrow/stream/102312-consciousness\">#consciousness</a> (see the conversation <a href=\"#narrow/stream/102312-consciousness/topic/Wesley.20Aptekar-Cassels/near/171648268\" title=\"#narrow/stream/102312-consciousness/topic/Wesley.20Aptekar-Cassels/near/171648268\">here</a>) - i realize that folks in this channel may be interested as well :)</p>\n<p>I'm basically copying jonesforth, with a few changes to things that find aesthetically displeasing and with some added drudgery from running on baremetal.</p>\n<p>So far I mostly have some basic i/o and dictionary infrastructure (<code>key</code> (which just reads from a static buffer right now, since setting up the IVT looks super annoying), <code>emit</code>, <code>word</code>, <code>number</code>, <code>find</code>, <code>&gt;cfa</code>, and <code>&gt;dfa</code>). I also have some basic stack + math + memory operations, but those are less interesting.</p>\n<p>I think the next step is defining <code>[</code> and <code>]</code> - once I've done that, I should be able to define <code>:</code> and <code>;</code>, which is an exciting milestone!</p>",
            "content_type": "text/html",
            "display_recipient": "forth",
            "flags": [
                "read",
                "historical"
            ],
            "id": 171912762,
            "is_me_message": false,
            "last_edit_timestamp": 1564364820,
            "reactions": [],
            "recipient_id": 103267,
            "sender_email": "me@wesleyac.com",
            "sender_full_name": "Wesley Aptekar-Cassels (they) (m8'20)",
            "sender_id": 101330,
            "sender_realm_str": "recurse",
            "stream_id": 100727,
            "subject": "writing a forth on baremetal x86",
            "submessages": [],
            "timestamp": 1564364688,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/5d6a7a4735c43e9dae0e3f9ef82919706728452a?x=x&version=3",
            "client": "website",
            "content": "<p>(unfortunately I can't share code right now due to work IP bullshit, but hopefully I'll be able to put it online before too long)</p>",
            "content_type": "text/html",
            "display_recipient": "forth",
            "flags": [
                "read",
                "historical"
            ],
            "id": 171912824,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 103267,
            "sender_email": "me@wesleyac.com",
            "sender_full_name": "Wesley Aptekar-Cassels (they) (m8'20)",
            "sender_id": 101330,
            "sender_realm_str": "recurse",
            "stream_id": 100727,
            "subject": "writing a forth on baremetal x86",
            "submessages": [],
            "timestamp": 1564364810,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/5d6a7a4735c43e9dae0e3f9ef82919706728452a?x=x&version=3",
            "client": "website",
            "content": "<p><a href=\"http://git.annexia.org/?p=jonesforth.git;a=summary\" target=\"_blank\" title=\"http://git.annexia.org/?p=jonesforth.git;a=summary\">jonesforth</a> has been really great for following along with - I really recommend it if folks are interested in what a forth looks like under the hood</p>",
            "content_type": "text/html",
            "display_recipient": "forth",
            "flags": [
                "read",
                "historical"
            ],
            "id": 171912883,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 103267,
            "sender_email": "me@wesleyac.com",
            "sender_full_name": "Wesley Aptekar-Cassels (they) (m8'20)",
            "sender_id": 101330,
            "sender_realm_str": "recurse",
            "stream_id": 100727,
            "subject": "writing a forth on baremetal x86",
            "submessages": [],
            "timestamp": 1564364996,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/5d6a7a4735c43e9dae0e3f9ef82919706728452a?x=x&version=3",
            "client": "website",
            "content": "<p>Well - I defined <code>[</code>, <code>]</code>, <code>create</code> and <code>,</code>, which is enough for tonight. Thinking on it more, it seems like I'm going to have to write <code>:</code>, <code>;</code>, and <code>interpret</code> at the same time in order to properly test any of the three (since the immediate flag is only meaningful insofar as <code>interpret</code> looks at it. That seems like a bigger endeavor than I should take on at 1:30am.</p>",
            "content_type": "text/html",
            "display_recipient": "forth",
            "flags": [
                "read",
                "historical"
            ],
            "id": 171919730,
            "is_me_message": false,
            "last_edit_timestamp": 1564378298,
            "reactions": [],
            "recipient_id": 103267,
            "sender_email": "me@wesleyac.com",
            "sender_full_name": "Wesley Aptekar-Cassels (they) (m8'20)",
            "sender_id": 101330,
            "sender_realm_str": "recurse",
            "stream_id": 100727,
            "subject": "writing a forth on baremetal x86",
            "submessages": [],
            "timestamp": 1564378282,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/81c6c8040fc0263607edd05c09dacf6b?d=identicon&version=1",
            "client": "website",
            "content": "<p>Thanks for sharing!  Jonesforth is great, although I remember around the beginning of the year working on a forth (which I'll try to share soon) and consulting a couple of existing forths, including jonesforth, and deciding that I didn't like all of its approaches.  (But such is the personal nature of a one-person forth.)  So I look forward to seeing your choices.</p>",
            "content_type": "text/html",
            "display_recipient": "forth",
            "flags": [
                "read",
                "historical"
            ],
            "id": 171938637,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 103267,
            "sender_email": "julian@cipht.net",
            "sender_full_name": "Julian Squires (he) (F2'17)",
            "sender_id": 101992,
            "sender_realm_str": "recurse",
            "stream_id": 100727,
            "subject": "writing a forth on baremetal x86",
            "submessages": [],
            "timestamp": 1564401095,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/5d6a7a4735c43e9dae0e3f9ef82919706728452a?x=x&version=3",
            "client": "website",
            "content": "<p>Do let me know if you have other recommendations for good forths to read, especially if they're different from jonesforth</p>",
            "content_type": "text/html",
            "display_recipient": "forth",
            "flags": [
                "read",
                "historical"
            ],
            "id": 171945457,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 103267,
            "sender_email": "me@wesleyac.com",
            "sender_full_name": "Wesley Aptekar-Cassels (they) (m8'20)",
            "sender_id": 101330,
            "sender_realm_str": "recurse",
            "stream_id": 100727,
            "subject": "writing a forth on baremetal x86",
            "submessages": [],
            "timestamp": 1564407208,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/81c6c8040fc0263607edd05c09dacf6b?d=identicon&version=1",
            "client": "website",
            "content": "<p>Camel Forth and its accompanying articles (<a href=\"http://www.bradrodriguez.com/papers/moving1.htm\" target=\"_blank\" title=\"http://www.bradrodriguez.com/papers/moving1.htm\">Moving Forth</a>) are old but good reads; I've always appreciated the analysis of different ways of mapping the forth \"registers\" to machine registers on various processors, and a bunch of design decisions are fairly different from jonesforth.  Lars Brinkhoff's forths are interesting (lbForth, nybbleForth).  There's a not-quite-forth concatenative language in C I'm trying to find that I found a very interesting read, when I was thinking about tail call elimination in forth, but I can't find it at all right now.  It had a nice approach to unifying the forth control structures, too.</p>",
            "content_type": "text/html",
            "display_recipient": "forth",
            "flags": [
                "read",
                "historical"
            ],
            "id": 172029562,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 103267,
            "sender_email": "julian@cipht.net",
            "sender_full_name": "Julian Squires (he) (F2'17)",
            "sender_id": 101992,
            "sender_realm_str": "recurse",
            "stream_id": 100727,
            "subject": "writing a forth on baremetal x86",
            "submessages": [],
            "timestamp": 1564487375,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/5d6a7a4735c43e9dae0e3f9ef82919706728452a?x=x&version=3",
            "client": "website",
            "content": "<p>I have <code>interpret</code>, <code>:</code>, and <code>;</code> done <span aria-label=\"tada\" class=\"emoji emoji-1f389\" role=\"img\" title=\"tada\">:tada:</span> </p>\n<p>Was very satisfying to type <a href=\"/user_uploads/13/AjyVA-_hgjUMrjiDHKa-U0A3/2019-08-03-175725_279x43_scrot.png\" target=\"_blank\" title=\"2019-08-03-175725_279x43_scrot.png\">this</a> and see <a href=\"/user_uploads/13/h4KwKWep5PbGDXQisC7gmiLw/2019-08-03-175706_687x156_scrot.png\" target=\"_blank\" title=\"2019-08-03-175706_687x156_scrot.png\">this</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/13/AjyVA-_hgjUMrjiDHKa-U0A3/2019-08-03-175725_279x43_scrot.png\" target=\"_blank\" title=\"this\"><img src=\"/user_uploads/13/AjyVA-_hgjUMrjiDHKa-U0A3/2019-08-03-175725_279x43_scrot.png\"></a></div><div class=\"message_inline_image\"><a href=\"/user_uploads/13/h4KwKWep5PbGDXQisC7gmiLw/2019-08-03-175706_687x156_scrot.png\" target=\"_blank\" title=\"this\"><img src=\"/user_uploads/13/h4KwKWep5PbGDXQisC7gmiLw/2019-08-03-175706_687x156_scrot.png\"></a></div>",
            "content_type": "text/html",
            "display_recipient": "forth",
            "flags": [
                "read",
                "historical"
            ],
            "id": 172422849,
            "is_me_message": false,
            "reactions": [
                {
                    "emoji_code": "1f389",
                    "emoji_name": "tada",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "code@saul.pw",
                        "full_name": "Saul Pwanson (SP2'17)",
                        "id": 100791
                    },
                    "user_id": 100791
                },
                {
                    "emoji_code": "1f389",
                    "emoji_name": "tada",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "ben@brittain.org",
                        "full_name": "Benjamin Brittain (he) (S'12)",
                        "id": 873
                    },
                    "user_id": 873
                },
                {
                    "emoji_code": "1f389",
                    "emoji_name": "tada",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "julian@cipht.net",
                        "full_name": "Julian Squires (he) (F2'17)",
                        "id": 101992
                    },
                    "user_id": 101992
                }
            ],
            "recipient_id": 103267,
            "sender_email": "me@wesleyac.com",
            "sender_full_name": "Wesley Aptekar-Cassels (they) (m8'20)",
            "sender_id": 101330,
            "sender_realm_str": "recurse",
            "stream_id": 100727,
            "subject": "writing a forth on baremetal x86",
            "submessages": [],
            "timestamp": 1564869546,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/5d6a7a4735c43e9dae0e3f9ef82919706728452a?x=x&version=3",
            "client": "website",
            "content": "<p>I sort of want to go set up the IVT and keyboard driver now, just since it seems like it'll be super satisfying to have a real forth repl :)</p>",
            "content_type": "text/html",
            "display_recipient": "forth",
            "flags": [
                "read",
                "historical"
            ],
            "id": 172424594,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 103267,
            "sender_email": "me@wesleyac.com",
            "sender_full_name": "Wesley Aptekar-Cassels (they) (m8'20)",
            "sender_id": 101330,
            "sender_realm_str": "recurse",
            "stream_id": 100727,
            "subject": "writing a forth on baremetal x86",
            "submessages": [],
            "timestamp": 1564873062,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/82951f8ff0d983b6c1fac73bf0e8416c?d=identicon&version=1",
            "client": "ZulipMobile",
            "content": "<p>Is this all in level 0?</p>",
            "content_type": "text/html",
            "display_recipient": "forth",
            "flags": [
                "read",
                "historical"
            ],
            "id": 172444516,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 103267,
            "sender_email": "ben@brittain.org",
            "sender_full_name": "Benjamin Brittain (he) (S'12)",
            "sender_id": 873,
            "sender_realm_str": "recurse",
            "stream_id": 100727,
            "subject": "writing a forth on baremetal x86",
            "submessages": [],
            "timestamp": 1564915555,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/5d6a7a4735c43e9dae0e3f9ef82919706728452a?x=x&version=3",
            "client": "website",
            "content": "<p>It's all in ring 0 right now, yeah. I'm interested in adding process isolation and scheduling at some point, but that's quite low on my list :)</p>",
            "content_type": "text/html",
            "display_recipient": "forth",
            "flags": [
                "read",
                "historical"
            ],
            "id": 172447384,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 103267,
            "sender_email": "me@wesleyac.com",
            "sender_full_name": "Wesley Aptekar-Cassels (they) (m8'20)",
            "sender_id": 101330,
            "sender_realm_str": "recurse",
            "stream_id": 100727,
            "subject": "writing a forth on baremetal x86",
            "submessages": [],
            "timestamp": 1564920929,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/5d6a7a4735c43e9dae0e3f9ef82919706728452a?x=x&version=3",
            "client": "website",
            "content": "<p>I was procrastinating on cleaning my apartment, which means more forth progress <span aria-label=\"upside down\" class=\"emoji emoji-1f643\" role=\"img\" title=\"upside down\">:upside_down:</span> </p>\n<ul>\n<li>I've loaded a \"real\" GDT now. It's a simple linear mapping of 4GB for both code and data, but it's good to have as a step to unlock interrupts</li>\n<li>Wrote a simple polling keyboard driver. Unfortunately, I don't yet have the machinery to easily make a lookup table for the scancodes, so it's <a href=\"/user_uploads/13/0VGJfgwp6pGygtcQxv3Qjibn/2019-08-06-232419_724x404_scrot.png\" target=\"_blank\" title=\"2019-08-06-232419_724x404_scrot.png\">pretty garbage</a>, but it's exciting to press keys and have stuff happen!<div class=\"message_inline_image\"><a href=\"/user_uploads/13/0VGJfgwp6pGygtcQxv3Qjibn/2019-08-06-232419_724x404_scrot.png\" target=\"_blank\" title=\"pretty garbage\"><img src=\"/user_uploads/13/0VGJfgwp6pGygtcQxv3Qjibn/2019-08-06-232419_724x404_scrot.png\"></a></div></li>\n<li>Wrote <code>else</code> and <code>again</code>. Both super simple.</li>\n</ul>\n<p>Next step is setting up the IDT so I can have a non-polling keyboard :)</p>",
            "content_type": "text/html",
            "display_recipient": "forth",
            "flags": [
                "read",
                "historical"
            ],
            "id": 172647354,
            "is_me_message": false,
            "last_edit_timestamp": 1565156377,
            "reactions": [
                {
                    "emoji_code": "1f389",
                    "emoji_name": "tada",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "julian@cipht.net",
                        "full_name": "Julian Squires (he) (F2'17)",
                        "id": 101992
                    },
                    "user_id": 101992
                }
            ],
            "recipient_id": 103267,
            "sender_email": "me@wesleyac.com",
            "sender_full_name": "Wesley Aptekar-Cassels (they) (m8'20)",
            "sender_id": 101330,
            "sender_realm_str": "recurse",
            "stream_id": 100727,
            "subject": "writing a forth on baremetal x86",
            "submessages": [],
            "timestamp": 1565148556,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/5d6a7a4735c43e9dae0e3f9ef82919706728452a?x=x&version=3",
            "client": "website",
            "content": "<p>I'm doing a mini-batch next week where I'm planning to mostly work on this forth, so I want to get it to a good state before that starts so I can explore more interesting/novel stuff. I think my goals for the pre-batch state are:</p>\n<ul>\n<li>IDT and keyboard driver</li>\n<li><code>allot</code></li>\n<li><code>variable</code></li>\n<li><code>case</code></li>\n<li><code>s\"</code> and <code>.\"</code></li>\n<li><code>.s</code></li>\n</ul>",
            "content_type": "text/html",
            "display_recipient": "forth",
            "flags": [
                "read",
                "historical"
            ],
            "id": 172647650,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 103267,
            "sender_email": "me@wesleyac.com",
            "sender_full_name": "Wesley Aptekar-Cassels (they) (m8'20)",
            "sender_id": 101330,
            "sender_realm_str": "recurse",
            "stream_id": 100727,
            "subject": "writing a forth on baremetal x86",
            "submessages": [],
            "timestamp": 1565149088,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/5d6a7a4735c43e9dae0e3f9ef82919706728452a?x=x&version=3",
            "client": "website",
            "content": "<p>Getting <code>&gt;does</code> would be great, but I think that might be pretty complicated?</p>",
            "content_type": "text/html",
            "display_recipient": "forth",
            "flags": [
                "read",
                "historical"
            ],
            "id": 172647677,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 103267,
            "sender_email": "me@wesleyac.com",
            "sender_full_name": "Wesley Aptekar-Cassels (they) (m8'20)",
            "sender_id": 101330,
            "sender_realm_str": "recurse",
            "stream_id": 100727,
            "subject": "writing a forth on baremetal x86",
            "submessages": [],
            "timestamp": 1565149193,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/81c6c8040fc0263607edd05c09dacf6b?d=identicon&version=1",
            "client": "website",
            "content": "<p>BTW, I've been writing PCIe drivers lately and although it has revealed to me that PCIe itself is insanely complex, supporting many simple PCI/PCIe devices in a bare metal program is not actually too hard, as long as you make some assumptions about what hardware will be available.  I know you have a lot to do before thinking about that, but it might be fun to do this in Forth, taking inspiration from the <a href=\"https://www.openfirmware.info/data/docs/bus.pci.pdf\" target=\"_blank\" title=\"https://www.openfirmware.info/data/docs/bus.pci.pdf\">Open Firmware PCI bus binding</a>.</p>",
            "content_type": "text/html",
            "display_recipient": "forth",
            "flags": [
                "read",
                "historical"
            ],
            "id": 172668952,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 103267,
            "sender_email": "julian@cipht.net",
            "sender_full_name": "Julian Squires (he) (F2'17)",
            "sender_id": 101992,
            "sender_realm_str": "recurse",
            "stream_id": 100727,
            "subject": "writing a forth on baremetal x86",
            "submessages": [],
            "timestamp": 1565177109,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/5d6a7a4735c43e9dae0e3f9ef82919706728452a?x=x&version=3",
            "client": "website",
            "content": "<p>Interesting! Drivers are definitely something that's been in the back of my mind, especially since I do want to boot this up on an actual machine at some point, not just qemu. Luckily the keyboard and mouse on my laptop are PS/2, so I can do a lot before I have to think about anything complicated, but it's definitely nice to know that PCIe is achievable :)</p>",
            "content_type": "text/html",
            "display_recipient": "forth",
            "flags": [
                "read",
                "historical"
            ],
            "id": 172673723,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 103267,
            "sender_email": "me@wesleyac.com",
            "sender_full_name": "Wesley Aptekar-Cassels (they) (m8'20)",
            "sender_id": 101330,
            "sender_realm_str": "recurse",
            "stream_id": 100727,
            "subject": "writing a forth on baremetal x86",
            "submessages": [],
            "timestamp": 1565181572,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/5d6a7a4735c43e9dae0e3f9ef82919706728452a?x=x&version=3",
            "client": "website",
            "content": "<p>Oh, also an update that I forgot! I've been rewriting a bunch of words that I defined in assembly either in actual forth, or using assembly macros to compile a forth word (with <code>docol</code>, etc). I now have just 42 assembly words, and only 15 of them are really interesting (the rest are logical, arithmetic, and stack operations). There are still a handful that I can rewrite as well (<code>&gt;cfa</code>, <code>find</code>, and <code>create</code> don't seem too tricky)</p>",
            "content_type": "text/html",
            "display_recipient": "forth",
            "flags": [
                "read",
                "historical"
            ],
            "id": 172674600,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 103267,
            "sender_email": "me@wesleyac.com",
            "sender_full_name": "Wesley Aptekar-Cassels (they) (m8'20)",
            "sender_id": 101330,
            "sender_realm_str": "recurse",
            "stream_id": 100727,
            "subject": "writing a forth on baremetal x86",
            "submessages": [],
            "timestamp": 1565182374,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/5d6a7a4735c43e9dae0e3f9ef82919706728452a?x=x&version=3",
            "client": "website",
            "content": "<p>I got interrupts working! I need to clean up the code a bunch and actually hook up the interrupts to something (instead of having <code>iret</code> be my only interrupt handler), but it works!</p>",
            "content_type": "text/html",
            "display_recipient": "forth",
            "flags": [
                "read",
                "historical"
            ],
            "id": 172936139,
            "is_me_message": false,
            "last_edit_timestamp": 1565464053,
            "reactions": [],
            "recipient_id": 103267,
            "sender_email": "me@wesleyac.com",
            "sender_full_name": "Wesley Aptekar-Cassels (they) (m8'20)",
            "sender_id": 101330,
            "sender_realm_str": "recurse",
            "stream_id": 100727,
            "subject": "writing a forth on baremetal x86",
            "submessages": [],
            "timestamp": 1565463866,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/5d6a7a4735c43e9dae0e3f9ef82919706728452a?x=x&version=3",
            "client": "website",
            "content": "<p>Interrupts were the only remaining thing where it seems like I could have a really unbounded amount of floundering and making no forward progress, so this is super exciting! Onwards!</p>",
            "content_type": "text/html",
            "display_recipient": "forth",
            "flags": [
                "read",
                "historical"
            ],
            "id": 172936290,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 103267,
            "sender_email": "me@wesleyac.com",
            "sender_full_name": "Wesley Aptekar-Cassels (they) (m8'20)",
            "sender_id": 101330,
            "sender_realm_str": "recurse",
            "stream_id": 100727,
            "subject": "writing a forth on baremetal x86",
            "submessages": [],
            "timestamp": 1565464096,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/5d6a7a4735c43e9dae0e3f9ef82919706728452a?x=x&version=3",
            "client": "website",
            "content": "<p><a href=\"/user_uploads/13/TZmOm0EY-JIzM2m8LTucdkRe/2019-08-11-000053_726x152_scrot.png\" target=\"_blank\" title=\"2019-08-11-000053_726x152_scrot.png\">a keyboard driver begins to appear...</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/13/TZmOm0EY-JIzM2m8LTucdkRe/2019-08-11-000053_726x152_scrot.png\" target=\"_blank\" title=\"a keyboard driver begins to appear...\"><img src=\"/user_uploads/13/TZmOm0EY-JIzM2m8LTucdkRe/2019-08-11-000053_726x152_scrot.png\"></a></div>",
            "content_type": "text/html",
            "display_recipient": "forth",
            "flags": [
                "read",
                "historical"
            ],
            "id": 172952050,
            "is_me_message": false,
            "reactions": [
                {
                    "emoji_code": "1f389",
                    "emoji_name": "tada",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "evanercolano@gmail.com",
                        "full_name": "Evan Ercolano (he) (F1'19)",
                        "id": 234255
                    },
                    "user_id": 234255
                },
                {
                    "emoji_code": "1f600",
                    "emoji_name": "grinning",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "julian@cipht.net",
                        "full_name": "Julian Squires (he) (F2'17)",
                        "id": 101992
                    },
                    "user_id": 101992
                }
            ],
            "recipient_id": 103267,
            "sender_email": "me@wesleyac.com",
            "sender_full_name": "Wesley Aptekar-Cassels (they) (m8'20)",
            "sender_id": 101330,
            "sender_realm_str": "recurse",
            "stream_id": 100727,
            "subject": "writing a forth on baremetal x86",
            "submessages": [],
            "timestamp": 1565496147,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/5d6a7a4735c43e9dae0e3f9ef82919706728452a?x=x&version=3",
            "client": "website",
            "content": "<p><a href=\"/user_uploads/13/3KDamJxkCobGCn613OU3p6v6/IMG_20190811_115921.jpg\" target=\"_blank\" title=\"IMG_20190811_115921.jpg\">booting up on a real machine</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/13/3KDamJxkCobGCn613OU3p6v6/IMG_20190811_115921.jpg\" target=\"_blank\" title=\"booting up on a real machine\"><img src=\"/user_uploads/13/3KDamJxkCobGCn613OU3p6v6/IMG_20190811_115921.jpg\"></a></div>",
            "content_type": "text/html",
            "display_recipient": "forth",
            "flags": [
                "read",
                "historical"
            ],
            "id": 172973767,
            "is_me_message": false,
            "reactions": [
                {
                    "emoji_code": "1f419",
                    "emoji_name": "octopus",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "julian@cipht.net",
                        "full_name": "Julian Squires (he) (F2'17)",
                        "id": 101992
                    },
                    "user_id": 101992
                }
            ],
            "recipient_id": 103267,
            "sender_email": "me@wesleyac.com",
            "sender_full_name": "Wesley Aptekar-Cassels (they) (m8'20)",
            "sender_id": 101330,
            "sender_realm_str": "recurse",
            "stream_id": 100727,
            "subject": "writing a forth on baremetal x86",
            "submessages": [],
            "timestamp": 1565539304,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/5d6a7a4735c43e9dae0e3f9ef82919706728452a?x=x&version=3",
            "client": "ZulipMobile",
            "content": "<p>Well, I got most of what I wanted done before my batch. <code>case</code> is the only thing on my list that I don't have, but I think that's fine. I think the only other thing I'd like to get done tonight is a simple readline-esque command, and the plumbing that I need to turn that into a forth repl. Maybe that's a bit ambitious, since I'm going to be busy for most of the rest of tonight, but I think it's pretty doable!</p>",
            "content_type": "text/html",
            "display_recipient": "forth",
            "flags": [
                "read",
                "historical"
            ],
            "id": 172984068,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 103267,
            "sender_email": "me@wesleyac.com",
            "sender_full_name": "Wesley Aptekar-Cassels (they) (m8'20)",
            "sender_id": 101330,
            "sender_realm_str": "recurse",
            "stream_id": 100727,
            "subject": "writing a forth on baremetal x86",
            "submessages": [],
            "timestamp": 1565558734,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/5d6a7a4735c43e9dae0e3f9ef82919706728452a?x=x&version=3",
            "client": "website",
            "content": "<p><a href=\"/user_uploads/13/H9MNchE8oFn1PAsCSDZi3jka/2019-08-12-151430_729x151_scrot.png\" target=\"_blank\" title=\"2019-08-12-151430_729x151_scrot.png\">I have a forth repl now!</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/13/H9MNchE8oFn1PAsCSDZi3jka/2019-08-12-151430_729x151_scrot.png\" target=\"_blank\" title=\"I have a forth repl now!\"><img src=\"/user_uploads/13/H9MNchE8oFn1PAsCSDZi3jka/2019-08-12-151430_729x151_scrot.png\"></a></div>",
            "content_type": "text/html",
            "display_recipient": "forth",
            "flags": [
                "read",
                "historical"
            ],
            "id": 173051383,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 103267,
            "sender_email": "me@wesleyac.com",
            "sender_full_name": "Wesley Aptekar-Cassels (they) (m8'20)",
            "sender_id": 101330,
            "sender_realm_str": "recurse",
            "stream_id": 100727,
            "subject": "writing a forth on baremetal x86",
            "submessages": [],
            "timestamp": 1565637336,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/5d6a7a4735c43e9dae0e3f9ef82919706728452a?x=x&version=3",
            "client": "website",
            "content": "<p>currently contemplating adding a defining word that will patch the definition of any previously defined word. My dictionary entries look like:</p>\n<div class=\"codehilite\"><pre><span></span>[ prev ] [ len ] [ name ... ] [ enter ] [ code ...  ]\n</pre></div>\n\n\n<p>I'm thinking about defining <code>:patch</code> as something like</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"kn\">:</span> <span class=\"nc\">:patch</span> <span class=\"k\">word find </span><span class=\"nf\">&gt;cfa</span> <span class=\"k\">here @ swap ! </span><span class=\"nf\">&#39;</span> <span class=\"nf\">patch</span> <span class=\"k\">, </span><span class=\"nf\">]</span> <span class=\"k\">;</span>\n</pre></div>\n\n\n<p>where <code>patch</code> is a word that pushes the address of an assembly routine similar to <code>enter</code>, but with one added layer of indirection (since I need to set up the instruction pointer to point to the right place).</p>\n<p>Curious if this is something that other systems have. I understand that vectored execution is the typical way to do something like this, but having some more dynamism seems fun :)</p>",
            "content_type": "text/html",
            "display_recipient": "forth",
            "flags": [
                "read",
                "historical"
            ],
            "id": 173068360,
            "is_me_message": false,
            "last_edit_timestamp": 1565649950,
            "reactions": [],
            "recipient_id": 103267,
            "sender_email": "me@wesleyac.com",
            "sender_full_name": "Wesley Aptekar-Cassels (they) (m8'20)",
            "sender_id": 101330,
            "sender_realm_str": "recurse",
            "stream_id": 100727,
            "subject": "writing a forth on baremetal x86",
            "submessages": [],
            "timestamp": 1565649799,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/5d6a7a4735c43e9dae0e3f9ef82919706728452a?x=x&version=3",
            "client": "website",
            "content": "<p>Would also be trivial to have a <code>restore</code> like:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"kn\">:</span> <span class=\"nc\">restore</span> <span class=\"k\">word find </span><span class=\"nf\">&gt;cfa</span> <span class=\"nf\">enter</span> <span class=\"k\">! ;</span>\n</pre></div>",
            "content_type": "text/html",
            "display_recipient": "forth",
            "flags": [
                "read",
                "historical"
            ],
            "id": 173068914,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 103267,
            "sender_email": "me@wesleyac.com",
            "sender_full_name": "Wesley Aptekar-Cassels (they) (m8'20)",
            "sender_id": 101330,
            "sender_realm_str": "recurse",
            "stream_id": 100727,
            "subject": "writing a forth on baremetal x86",
            "submessages": [],
            "timestamp": 1565650237,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/a40cd9cd52ed9481320b55f346ffdf3a0c6db296?x=x&version=3",
            "client": "website",
            "content": "<p>Hey <span class=\"user-mention\" data-user-id=\"101330\">@Wesley Aptekar-Cassels (they) (m5'19)</span>  can you give the recommendations you were talking about at the end of your workshop?</p>",
            "content_type": "text/html",
            "display_recipient": "forth",
            "flags": [
                "read",
                "historical"
            ],
            "id": 173238152,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 103267,
            "sender_email": "hello@tomlisankie.com",
            "sender_full_name": "Thomas Francis Lisankie (he) (F1'19)",
            "sender_id": 233915,
            "sender_realm_str": "recurse",
            "stream_id": 100727,
            "subject": "Recommendations",
            "submessages": [],
            "timestamp": 1565813932,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/5d6a7a4735c43e9dae0e3f9ef82919706728452a?x=x&version=3",
            "client": "website",
            "content": "<p>Yes!</p>\n<ul>\n<li><a href=\"https://www.forth.com/starting-forth/0-starting-forth/\" target=\"_blank\" title=\"https://www.forth.com/starting-forth/0-starting-forth/\">Starting Forth</a> is a pretty ok free online book that explains how to write forth. It doesn't go into too much detail about how it's implemented, but it's good for getting comfortable with the ideas.</li>\n<li><a href=\"http://git.annexia.org/?p=jonesforth.git;a=blob;f=jonesforth.S;h=45e6e854a5d2a4c3f26af264dfce56379d401425;hb=refs/heads/master\" target=\"_blank\" title=\"http://git.annexia.org/?p=jonesforth.git;a=blob;f=jonesforth.S;h=45e6e854a5d2a4c3f26af264dfce56379d401425;hb=refs/heads/master\">jonesforth</a> is a good forth implementation to read -it's very well commented. I'm happy to answer any questions you might have about how it works.</li>\n<li><a href=\"http://wiki.laptop.org/go/Forth_stack_operators\" target=\"_blank\" title=\"http://wiki.laptop.org/go/Forth_stack_operators\">OLPC</a> has a good reference for some of Forth's stack operations</li>\n<li><a href=\"https://yosefk.com/blog/my-history-with-forth-stack-machines.html\" target=\"_blank\" title=\"https://yosefk.com/blog/my-history-with-forth-stack-machines.html\">My history with forth and stack machines</a> is a nice read - it's part of what got me interested in forth</li>\n</ul>",
            "content_type": "text/html",
            "display_recipient": "forth",
            "flags": [
                "read",
                "historical"
            ],
            "id": 173240216,
            "is_me_message": false,
            "last_edit_timestamp": 1565815260,
            "reactions": [],
            "recipient_id": 103267,
            "sender_email": "me@wesleyac.com",
            "sender_full_name": "Wesley Aptekar-Cassels (they) (m8'20)",
            "sender_id": 101330,
            "sender_realm_str": "recurse",
            "stream_id": 100727,
            "subject": "Recommendations",
            "submessages": [],
            "timestamp": 1565815233,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/a40cd9cd52ed9481320b55f346ffdf3a0c6db296?x=x&version=3",
            "client": "website",
            "content": "<p>Thank you!</p>",
            "content_type": "text/html",
            "display_recipient": "forth",
            "flags": [
                "read",
                "historical"
            ],
            "id": 173243292,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 103267,
            "sender_email": "hello@tomlisankie.com",
            "sender_full_name": "Thomas Francis Lisankie (he) (F1'19)",
            "sender_id": 233915,
            "sender_realm_str": "recurse",
            "stream_id": 100727,
            "subject": "Recommendations",
            "submessages": [],
            "timestamp": 1565817361,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/edf8c8e78f184bdc167fe0575aa89ba3?d=identicon&version=1",
            "client": "website",
            "content": "<p>I always see people speaking highly of <a href=\"http://thinking-forth.sourceforge.net/\" target=\"_blank\" title=\"http://thinking-forth.sourceforge.net/\">Thinking Forth</a>, as a book about programming in general and not just Forth, but I haven't read it myself.</p>",
            "content_type": "text/html",
            "display_recipient": "forth",
            "flags": [
                "read",
                "historical"
            ],
            "id": 173245188,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 103267,
            "sender_email": "maxhallinan@gmail.com",
            "sender_full_name": "Max Hallinan (he/they) (W1'19)",
            "sender_id": 233917,
            "sender_realm_str": "recurse",
            "stream_id": 100727,
            "subject": "Recommendations",
            "submessages": [],
            "timestamp": 1565819030,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/5d6a7a4735c43e9dae0e3f9ef82919706728452a?x=x&version=3",
            "client": "website",
            "content": "<p>I've heard good things about Thinking Forth as well, but haven't read it</p>",
            "content_type": "text/html",
            "display_recipient": "forth",
            "flags": [
                "read",
                "historical"
            ],
            "id": 173245530,
            "is_me_message": false,
            "last_edit_timestamp": 1565819308,
            "reactions": [],
            "recipient_id": 103267,
            "sender_email": "me@wesleyac.com",
            "sender_full_name": "Wesley Aptekar-Cassels (they) (m8'20)",
            "sender_id": 101330,
            "sender_realm_str": "recurse",
            "stream_id": 100727,
            "subject": "Recommendations",
            "submessages": [],
            "timestamp": 1565819301,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/5d6a7a4735c43e9dae0e3f9ef82919706728452a?x=x&version=3",
            "client": "website",
            "content": "<p>I didn't get a ton done at RC, but I did <a href=\"/user_uploads/13/6ei6ZIAZ_LFJXYiT8fSFt9v8/IMG_20190815_182435.jpg\" target=\"_blank\" title=\"IMG_20190815_182435.jpg\">give my presentation on my forth</a>, which was fun :)</p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/13/6ei6ZIAZ_LFJXYiT8fSFt9v8/IMG_20190815_182435.jpg\" target=\"_blank\" title=\"give my presentation on my forth\"><img src=\"/user_uploads/13/6ei6ZIAZ_LFJXYiT8fSFt9v8/IMG_20190815_182435.jpg\"></a></div><p>Progress:</p>\n<ul>\n<li>Added a REPL (took some effort to figure out how to transition from reading forth source from the <code>core.fth</code> file that's included in the generated binary to reading from the keyboard)</li>\n<li>Made the textmode drawing routines significantly nicer to use</li>\n<li>Added support for hexadecimal literals (not using the typical <code>base</code> approach - instead, numbers that start with <code>h</code> are parsed in hexadecimal)</li>\n<li>Added support for reading and writing from ports in Forth</li>\n<li>Added <code>do</code> ... <code>loop</code></li>\n<li>Changed the dictionary format to have separate flags and length fields</li>\n<li>Added <code>hidden</code> flag</li>\n</ul>\n<p>Now considering rewriting it to be 64-bit using <a href=\"https://gitlab.com/bztsrc/bootboot\" target=\"_blank\" title=\"https://gitlab.com/bztsrc/bootboot\">BOOTBOOT</a> - I have 56 assembly words, and only a handful of my forth words rely on knowing the layout of the dictionary, so I don't think this is a ridiculous amount of work.</p>",
            "content_type": "text/html",
            "display_recipient": "forth",
            "flags": [
                "read",
                "historical"
            ],
            "id": 173462478,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 103267,
            "sender_email": "me@wesleyac.com",
            "sender_full_name": "Wesley Aptekar-Cassels (they) (m8'20)",
            "sender_id": 101330,
            "sender_realm_str": "recurse",
            "stream_id": 100727,
            "subject": "writing a forth on baremetal x86",
            "submessages": [],
            "timestamp": 1566084038,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/5d6a7a4735c43e9dae0e3f9ef82919706728452a?x=x&version=3",
            "client": "website",
            "content": "<p>I've also gotten the idea of a borrow-checked forth stuck in my head. I'll need to try out Factor and see how it thinks about memory management, since I think that's possibly the closest existing thing to the ergonomics I want (although obviously having a GC is much easier ergonomics-wise than doing borrow-checking) I'll probably also look at Carp, since I think they have a reasonable way of thinking about this, and likely a fairly readable implementation? I probably won't do this in this forth, though.</p>",
            "content_type": "text/html",
            "display_recipient": "forth",
            "flags": [
                "read",
                "historical"
            ],
            "id": 173462628,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 103267,
            "sender_email": "me@wesleyac.com",
            "sender_full_name": "Wesley Aptekar-Cassels (they) (m8'20)",
            "sender_id": 101330,
            "sender_realm_str": "recurse",
            "stream_id": 100727,
            "subject": "writing a forth on baremetal x86",
            "submessages": [],
            "timestamp": 1566084374,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/5d6a7a4735c43e9dae0e3f9ef82919706728452a?x=x&version=3",
            "client": "website",
            "content": "<p>I've also discovered a bug that if you type too fast, things break in subtle and confusing ways, which I'm sure is going to be a fun one</p>",
            "content_type": "text/html",
            "display_recipient": "forth",
            "flags": [
                "read",
                "historical"
            ],
            "id": 173466938,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 103267,
            "sender_email": "me@wesleyac.com",
            "sender_full_name": "Wesley Aptekar-Cassels (they) (m8'20)",
            "sender_id": 101330,
            "sender_realm_str": "recurse",
            "stream_id": 100727,
            "subject": "writing a forth on baremetal x86",
            "submessages": [],
            "timestamp": 1566093975,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/5d6a7a4735c43e9dae0e3f9ef82919706728452a?x=x&version=3",
            "client": "website",
            "content": "<p>This is definitely related to my interrupt handler doing something wrong - mashing the keyboard during early boot causes other strange and inscrutable problems.</p>",
            "content_type": "text/html",
            "display_recipient": "forth",
            "flags": [
                "read",
                "historical"
            ],
            "id": 173467581,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 103267,
            "sender_email": "me@wesleyac.com",
            "sender_full_name": "Wesley Aptekar-Cassels (they) (m8'20)",
            "sender_id": 101330,
            "sender_realm_str": "recurse",
            "stream_id": 100727,
            "subject": "writing a forth on baremetal x86",
            "submessages": [],
            "timestamp": 1566095462,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/5d6a7a4735c43e9dae0e3f9ef82919706728452a?x=x&version=3",
            "client": "website",
            "content": "<p>Well, I figured out the bug, which of course had nothing to do with my interrupt handler</p>",
            "content_type": "text/html",
            "display_recipient": "forth",
            "flags": [
                "read",
                "historical"
            ],
            "id": 173471420,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 103267,
            "sender_email": "me@wesleyac.com",
            "sender_full_name": "Wesley Aptekar-Cassels (they) (m8'20)",
            "sender_id": 101330,
            "sender_realm_str": "recurse",
            "stream_id": 100727,
            "subject": "writing a forth on baremetal x86",
            "submessages": [],
            "timestamp": 1566104288,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/5d6a7a4735c43e9dae0e3f9ef82919706728452a?x=x&version=3",
            "client": "website",
            "content": "<p>I was confused since when I typed <code>state @ .</code> (which should always print <code>0</code>) very quickly, nothing would print, and the stack would have the address of state and a garbage value on it</p>",
            "content_type": "text/html",
            "display_recipient": "forth",
            "flags": [
                "read",
                "historical"
            ],
            "id": 173471432,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 103267,
            "sender_email": "me@wesleyac.com",
            "sender_full_name": "Wesley Aptekar-Cassels (they) (m8'20)",
            "sender_id": 101330,
            "sender_realm_str": "recurse",
            "stream_id": 100727,
            "subject": "writing a forth on baremetal x86",
            "submessages": [],
            "timestamp": 1566104343,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/5d6a7a4735c43e9dae0e3f9ef82919706728452a?x=x&version=3",
            "client": "website",
            "content": "<p>What was happening is that my keyboard driver was outputting a null byte for shift+space, and I was not releasing shift after before typing the space after the <code>@</code>. Since my <code>word</code> word allows null bytes in names (why not!), the whole input was parsed as \"state\" \"@\\0.\". And since I have no error checking right now, \"@\\0.\" was being parsed as a number and being pushed to the stack.</p>",
            "content_type": "text/html",
            "display_recipient": "forth",
            "flags": [
                "read",
                "historical"
            ],
            "id": 173471510,
            "is_me_message": false,
            "last_edit_timestamp": 1566104580,
            "reactions": [
                {
                    "emoji_code": "1f41b",
                    "emoji_name": "bug",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "julian@cipht.net",
                        "full_name": "Julian Squires (he) (F2'17)",
                        "id": 101992
                    },
                    "user_id": 101992
                }
            ],
            "recipient_id": 103267,
            "sender_email": "me@wesleyac.com",
            "sender_full_name": "Wesley Aptekar-Cassels (they) (m8'20)",
            "sender_id": 101330,
            "sender_realm_str": "recurse",
            "stream_id": 100727,
            "subject": "writing a forth on baremetal x86",
            "submessages": [],
            "timestamp": 1566104520,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/5d6a7a4735c43e9dae0e3f9ef82919706728452a?x=x&version=3",
            "client": "website",
            "content": "<p>what fun!</p>",
            "content_type": "text/html",
            "display_recipient": "forth",
            "flags": [
                "read",
                "historical"
            ],
            "id": 173471559,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 103267,
            "sender_email": "me@wesleyac.com",
            "sender_full_name": "Wesley Aptekar-Cassels (they) (m8'20)",
            "sender_id": 101330,
            "sender_realm_str": "recurse",
            "stream_id": 100727,
            "subject": "writing a forth on baremetal x86",
            "submessages": [],
            "timestamp": 1566104598,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/5d6a7a4735c43e9dae0e3f9ef82919706728452a?x=x&version=3",
            "client": "website",
            "content": "<p>now I completely forget what i was doing that caused me to run into this</p>",
            "content_type": "text/html",
            "display_recipient": "forth",
            "flags": [
                "read",
                "historical"
            ],
            "id": 173471915,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 103267,
            "sender_email": "me@wesleyac.com",
            "sender_full_name": "Wesley Aptekar-Cassels (they) (m8'20)",
            "sender_id": 101330,
            "sender_realm_str": "recurse",
            "stream_id": 100727,
            "subject": "writing a forth on baremetal x86",
            "submessages": [],
            "timestamp": 1566105453,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/5d6a7a4735c43e9dae0e3f9ef82919706728452a?x=x&version=3",
            "client": "website",
            "content": "<p>I tested out BOOTBOOT - I have a <a href=\"https://github.com/WesleyAC/bootbootasm\" target=\"_blank\" title=\"https://github.com/WesleyAC/bootbootasm\">simple example</a> of building and booting a legacy-bios bootable assembly kernel. I played with EFI a bit, but couldn't get it working, I think due to OVMF bugs?</p>\n<p>In any case, I'm pretty happy with this - I think next time I have a big chunk of time to work on my forth, I'll take a stab at porting it to 64-bits. Probably on the plane to rustconf in a couple days?</p>",
            "content_type": "text/html",
            "display_recipient": "forth",
            "flags": [
                "read",
                "historical"
            ],
            "id": 173511890,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 103267,
            "sender_email": "me@wesleyac.com",
            "sender_full_name": "Wesley Aptekar-Cassels (they) (m8'20)",
            "sender_id": 101330,
            "sender_realm_str": "recurse",
            "stream_id": 100727,
            "subject": "writing a forth on baremetal x86",
            "submessages": [],
            "timestamp": 1566181917,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/5d6a7a4735c43e9dae0e3f9ef82919706728452a?x=x&version=3",
            "client": "ZulipMobile",
            "content": "<p>Well, I'm on the ground at JFK, and <code>interpret</code> works on x86_64 with BOOTBOOT, so I'm gonna call that a success :)</p>",
            "content_type": "text/html",
            "display_recipient": "forth",
            "flags": [
                "read",
                "historical"
            ],
            "id": 174058726,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 103267,
            "sender_email": "me@wesleyac.com",
            "sender_full_name": "Wesley Aptekar-Cassels (they) (m8'20)",
            "sender_id": 101330,
            "sender_realm_str": "recurse",
            "stream_id": 100727,
            "subject": "writing a forth on baremetal x86",
            "submessages": [],
            "timestamp": 1566689294,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/5d6a7a4735c43e9dae0e3f9ef82919706728452a?x=x&version=3",
            "client": "ZulipMobile",
            "content": "<p>I still need to set up a known GDT and IDT, and outputting to the screen will be a bit more work (since I'll need to write my own routine to draw characters), but it's exciting progress!</p>",
            "content_type": "text/html",
            "display_recipient": "forth",
            "flags": [
                "read",
                "historical"
            ],
            "id": 174058736,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 103267,
            "sender_email": "me@wesleyac.com",
            "sender_full_name": "Wesley Aptekar-Cassels (they) (m8'20)",
            "sender_id": 101330,
            "sender_realm_str": "recurse",
            "stream_id": 100727,
            "subject": "writing a forth on baremetal x86",
            "submessages": [],
            "timestamp": 1566689363,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/5d6a7a4735c43e9dae0e3f9ef82919706728452a?x=x&version=3",
            "client": "website",
            "content": "<p><a href=\"/user_uploads/13/zS0kGdT90Wxfc20WYXaCKbpr/2019-08-25-213511_99x58_scrot.png\" target=\"_blank\" title=\"2019-08-25-213511_99x58_scrot.png\">got printing psf fonts to the framebuffer working!</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/13/zS0kGdT90Wxfc20WYXaCKbpr/2019-08-25-213511_99x58_scrot.png\" target=\"_blank\" title=\"got printing psf fonts to the framebuffer working!\"><img src=\"/user_uploads/13/zS0kGdT90Wxfc20WYXaCKbpr/2019-08-25-213511_99x58_scrot.png\"></a></div>",
            "content_type": "text/html",
            "display_recipient": "forth",
            "flags": [
                "read",
                "historical"
            ],
            "id": 174108459,
            "is_me_message": false,
            "reactions": [
                {
                    "emoji_code": "1f389",
                    "emoji_name": "tada",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "julian@cipht.net",
                        "full_name": "Julian Squires (he) (F2'17)",
                        "id": 101992
                    },
                    "user_id": 101992
                }
            ],
            "recipient_id": 103267,
            "sender_email": "me@wesleyac.com",
            "sender_full_name": "Wesley Aptekar-Cassels (they) (m8'20)",
            "sender_id": 101330,
            "sender_realm_str": "recurse",
            "stream_id": 100727,
            "subject": "writing a forth on baremetal x86",
            "submessages": [],
            "timestamp": 1566783348,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/5d6a7a4735c43e9dae0e3f9ef82919706728452a?x=x&version=3",
            "client": "website",
            "content": "<p>I now have the 64-bit GDT and IDT set up, and am getting keyboard interrupts again! This was surprisingly painless, although I'll want to switch from using the PIC to the APIC before too long, or I think multicore stuff will get confusing.</p>",
            "content_type": "text/html",
            "display_recipient": "forth",
            "flags": [
                "read",
                "historical"
            ],
            "id": 174188541,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 103267,
            "sender_email": "me@wesleyac.com",
            "sender_full_name": "Wesley Aptekar-Cassels (they) (m8'20)",
            "sender_id": 101330,
            "sender_realm_str": "recurse",
            "stream_id": 100727,
            "subject": "writing a forth on baremetal x86",
            "submessages": [],
            "timestamp": 1566867648,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/5d6a7a4735c43e9dae0e3f9ef82919706728452a?x=x&version=3",
            "client": "website",
            "content": "<p>I'm realizing that I've completed way more than I thought I would when I started this project, so I'm going to need to define some further off goals if I want to avoid floating.</p>\n<p>I want this to turn into a \"real\" kernel, with scheduling, memory management, etc. I also want to use it as a vehicle to explore some ideas that I've been having about potential directions for operating systems and languages.</p>\n<p>On the becoming a \"real\" kernel front:</p>\n<ul>\n<li>Figure out where I'm going to load processes from (probably I'll start by just including them in the kernel image, but eventually they should go in the initrd probably?)</li>\n<li>Define a syscall API</li>\n<li>Figure out all the mode switching garbage</li>\n<li>Jump to a userspace process and have it be able to jump back into kernel mode</li>\n<li>Write a scheduler (I'm fine with this being super dumb)</li>\n</ul>\n<p>WRT the syscall surface, I plan to go with a pretty typical microkernel design, where the syscalls are either mediating access to hardware or providing IPC primitives. Not sure how the IPC will look yet, I'll figure that out as I go along. I plan to have it be a capability-based system - names for ways to communicate with a given process will be mediated by the kernel.</p>\n<p>On the vehicle for exploring languages and systems front:</p>\n<ul>\n<li>I was really inspired by Ramsey Nasser's Deconstruct talk this year (related to <a href=\"http://ojs.decolonising.digital/index.php/decolonising_digital/article/view/PersonalComputer/3\" target=\"_blank\" title=\"http://ojs.decolonising.digital/index.php/decolonising_digital/article/view/PersonalComputer/3\">this paper</a>, but with a actual positive conclusion) - I want to build a language without canonical names - instead, forth words will be referred to by a hash of the words in their definitions. This will require a bunch of tooling support, but it all seems pretty reasonable, and I'm pretty convinced that this is the correct direction to take (for computing in general, not just for this project)</li>\n<li>I don't want to copy the filesystem abstraction that exists today. I don't know exactly what I'm building, but I think you want a few different primitives for storing data:<ul>\n<li>A content-addressable blobstore, which holds programs, assets like images, etc.</li>\n<li>A structured data store. I'm not sure what this should look like, particularly in the context of a forth, where structure is not the typical approach. Perhaps I'll define some interface description format (which can be used both for IPC and storage), and have the option of storing lists of objects in either a row-based or column-based format. I do feel sort of like rows, columns, and blobs are the three fixed points in the problem of \"storing stuff\", but maybe there's something I'm missing.</li>\n</ul>\n</li>\n<li>I think that I want a lot of dynamism and introspection - for instance, out-of-band ways to read the schema for an interface at runtime, etc</li>\n</ul>\n<p>I guess the gist is that I just want to go ham with content-addressable everything.</p>\n<p>Probably the way to approach this is to first build the kernel, context switching, scheduling, etc. Then, once I've done that, convert the whole system to be \"nameless\", with some stuff set up in the build system to allow using names while I'm bootstrapping.</p>",
            "content_type": "text/html",
            "display_recipient": "forth",
            "flags": [
                "read",
                "historical"
            ],
            "id": 174190704,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 103267,
            "sender_email": "me@wesleyac.com",
            "sender_full_name": "Wesley Aptekar-Cassels (they) (m8'20)",
            "sender_id": 101330,
            "sender_realm_str": "recurse",
            "stream_id": 100727,
            "subject": "writing a forth on baremetal x86",
            "submessages": [],
            "timestamp": 1566871359,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/81c6c8040fc0263607edd05c09dacf6b?d=identicon&version=1",
            "client": "website",
            "content": "<p>This is inspiring.  I need to do another hobby OS.  For alternatives to filesystems, have you looked at all at orthogonal persistence like <a href=\"http://www-systems.cs.st-andrews.ac.uk/gh/\" target=\"_blank\" title=\"http://www-systems.cs.st-andrews.ac.uk/gh/\">grasshopper</a>?  Some of the related research might trigger useful thoughts on whatever new spin you want to do.</p>\n<p>Also, definitely get to APIC soon; I never did this the last time I tried this, but my thoughts on writing a new OS have been to get to using APIC (and ACPI; anagrams) early, to be able to properly support PCI and USB as early as possible, and like you say, multicore.</p>",
            "content_type": "text/html",
            "display_recipient": "forth",
            "flags": [
                "read",
                "historical"
            ],
            "id": 174224373,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 103267,
            "sender_email": "julian@cipht.net",
            "sender_full_name": "Julian Squires (he) (F2'17)",
            "sender_id": 101992,
            "sender_realm_str": "recurse",
            "stream_id": 100727,
            "subject": "writing a forth on baremetal x86",
            "submessages": [],
            "timestamp": 1566909692,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/5d6a7a4735c43e9dae0e3f9ef82919706728452a?x=x&version=3",
            "client": "ZulipMobile",
            "content": "<p>I hadn't seen grasshopper, will take a look.</p>\n<p>I started looking at APIC last night - I now have it so that when the system starts up, the first thing that's done is querying the local APIC id and halting all processors except the bootstrap processor. I still need to actually set up the APIC to send me IRQs, but it's a start.</p>\n<p>With regards to PCI and USB, which is easier to get a disk driver running on - SATA/AHCI, or USB mass storage? I'd guess SATA, but I haven't really looked into either. I guess there's always ATA if I want to just do something super simple to get started, but I'd rather not...</p>\n<p>What does implementing ACPI get you? My impression was that it isn't a blocker for anything major, but I haven't looked at it much (and it sounds like maybe a surprising number of things get routed through ACPI somehow?)</p>\n<p>I've been thinking a bit recently about getting a little group of folks who want to write operating systems together and going to a cabin somewhere remote without any internet. I unfortunately don't think that this is super likely to happen during my upcoming bout of unemployment, but if you're interested, it's definitely possible it could work :)</p>",
            "content_type": "text/html",
            "display_recipient": "forth",
            "flags": [
                "read",
                "historical"
            ],
            "id": 174237484,
            "is_me_message": false,
            "last_edit_timestamp": 1566922500,
            "reactions": [],
            "recipient_id": 103267,
            "sender_email": "me@wesleyac.com",
            "sender_full_name": "Wesley Aptekar-Cassels (they) (m8'20)",
            "sender_id": 101330,
            "sender_realm_str": "recurse",
            "stream_id": 100727,
            "subject": "writing a forth on baremetal x86",
            "submessages": [],
            "timestamp": 1566918180,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/81c6c8040fc0263607edd05c09dacf6b?d=identicon&version=1",
            "client": "ZulipElectron",
            "content": "<p>My impression is that if you just want things to work on one system, you can kind of manually pick stuff out of ACPI, but basically every interesting address and table you want to access goes through it on a modern system, I think.  Then again after I made that suggestion I went to check out the spec and it was disheartening... that virtual machine!  Yikes.</p>\n<p>WRT block devices, it's worth noting that NVMe seemed pretty simple to me when I looked at it recently, as long as you've got PCI going, but doing AHCI may be easier just because there are lots of example implementations to check out.</p>",
            "content_type": "text/html",
            "display_recipient": "forth",
            "flags": [
                "read",
                "historical"
            ],
            "id": 174376572,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 103267,
            "sender_email": "julian@cipht.net",
            "sender_full_name": "Julian Squires (he) (F2'17)",
            "sender_id": 101992,
            "sender_realm_str": "recurse",
            "stream_id": 100727,
            "subject": "writing a forth on baremetal x86",
            "submessages": [],
            "timestamp": 1567007867,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/5d6a7a4735c43e9dae0e3f9ef82919706728452a?x=x&version=3",
            "client": "ZulipMobile",
            "content": "<p>Hmmm. I think my path forward then is to set up APIC, which seems not too arcane, then start working on user mode/kernel mode switching. Then once I want a disk drive, I'll _probably_ just start with ATA, just so that I can get something working quickly. I'm sure I'll have to do ACPI at some point, but punting on it seems reasonable, especially given that I'm happy with my drivers just being ps/2 keyboard + mouse, ATA disk, and framebuffer for starters.</p>",
            "content_type": "text/html",
            "display_recipient": "forth",
            "flags": [
                "read",
                "historical"
            ],
            "id": 174466468,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 103267,
            "sender_email": "me@wesleyac.com",
            "sender_full_name": "Wesley Aptekar-Cassels (they) (m8'20)",
            "sender_id": 101330,
            "sender_realm_str": "recurse",
            "stream_id": 100727,
            "subject": "writing a forth on baremetal x86",
            "submessages": [],
            "timestamp": 1567093636,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/5d6a7a4735c43e9dae0e3f9ef82919706728452a?x=x&version=3",
            "client": "website",
            "content": "<p>Been thinking a bit today about what set of syscalls to expose to mediate access to hardware. I think I need:</p>\n<ul>\n<li>A way to spawn a new process<ul>\n<li>A way to have that process have it's IOPL set to allow access to hardware</li>\n</ul>\n</li>\n<li>A way to map memory from hardware devices into userspace memory</li>\n<li>A way to register a process to get notified of a specific IRQ</li>\n</ul>\n<p>For the memory mapping, I'm fine with just hacking it up for now, and having a syscall that is \"map the framebuffer into my process\", although in the future I'll want something more elegant. Everything else seems pretty simple, although there are some tricky questions to answer around IRQs which I'll need to figure out.</p>",
            "content_type": "text/html",
            "display_recipient": "forth",
            "flags": [
                "read",
                "historical"
            ],
            "id": 174512864,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 103267,
            "sender_email": "me@wesleyac.com",
            "sender_full_name": "Wesley Aptekar-Cassels (they) (m8'20)",
            "sender_id": 101330,
            "sender_realm_str": "recurse",
            "stream_id": 100727,
            "subject": "writing a forth on baremetal x86",
            "submessages": [],
            "timestamp": 1567136324,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/5d6a7a4735c43e9dae0e3f9ef82919706728452a?x=x&version=3",
            "client": "website",
            "content": "<p>Regarding APIC - it looks like it's reasonable to grab the IOAPIC address out of the MP tables - this is sort of kicking the can down the road in terms of ACPI, but seems like the easiest thing to start with.</p>",
            "content_type": "text/html",
            "display_recipient": "forth",
            "flags": [
                "read",
                "historical"
            ],
            "id": 174513383,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 103267,
            "sender_email": "me@wesleyac.com",
            "sender_full_name": "Wesley Aptekar-Cassels (they) (m8'20)",
            "sender_id": 101330,
            "sender_realm_str": "recurse",
            "stream_id": 100727,
            "subject": "writing a forth on baremetal x86",
            "submessages": [],
            "timestamp": 1567137211,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/5d6a7a4735c43e9dae0e3f9ef82919706728452a?x=x&version=3",
            "client": "website",
            "content": "<p>Although possibly I should just bite the bullet and start with ACPI :/</p>",
            "content_type": "text/html",
            "display_recipient": "forth",
            "flags": [
                "read",
                "historical"
            ],
            "id": 174513494,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 103267,
            "sender_email": "me@wesleyac.com",
            "sender_full_name": "Wesley Aptekar-Cassels (they) (m8'20)",
            "sender_id": 101330,
            "sender_realm_str": "recurse",
            "stream_id": 100727,
            "subject": "writing a forth on baremetal x86",
            "submessages": [],
            "timestamp": 1567137410,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/5d6a7a4735c43e9dae0e3f9ef82919706728452a?x=x&version=3",
            "client": "website",
            "content": "<p>It looks like if I just want to parse the ACPI tables, it's not too bad.</p>",
            "content_type": "text/html",
            "display_recipient": "forth",
            "flags": [
                "read",
                "historical"
            ],
            "id": 174514021,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 103267,
            "sender_email": "me@wesleyac.com",
            "sender_full_name": "Wesley Aptekar-Cassels (they) (m8'20)",
            "sender_id": 101330,
            "sender_realm_str": "recurse",
            "stream_id": 100727,
            "subject": "writing a forth on baremetal x86",
            "submessages": [],
            "timestamp": 1567138325,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/5d6a7a4735c43e9dae0e3f9ef82919706728452a?x=x&version=3",
            "client": "website",
            "content": "<p>It's a lot of chasing pointers which seems annoying to write, but it should be fine.</p>",
            "content_type": "text/html",
            "display_recipient": "forth",
            "flags": [
                "read",
                "historical"
            ],
            "id": 174514049,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 103267,
            "sender_email": "me@wesleyac.com",
            "sender_full_name": "Wesley Aptekar-Cassels (they) (m8'20)",
            "sender_id": 101330,
            "sender_realm_str": "recurse",
            "stream_id": 100727,
            "subject": "writing a forth on baremetal x86",
            "submessages": [],
            "timestamp": 1567138418,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/5d6a7a4735c43e9dae0e3f9ef82919706728452a?x=x&version=3",
            "client": "website",
            "content": "<p>I really like that jonesforth says \"The implementation of CASE...ENDCASE is somewhat non-trivial\" then proceeds to implement it in ~20 lines of code.</p>",
            "content_type": "text/html",
            "display_recipient": "forth",
            "flags": [
                "read",
                "historical"
            ],
            "id": 174608788,
            "is_me_message": false,
            "reactions": [
                {
                    "emoji_code": "1f44d",
                    "emoji_name": "+1",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "lukeadba@gmail.com",
                        "full_name": "Luke Barone-Adesi (he) (F'13)",
                        "id": 2903
                    },
                    "user_id": 2903
                }
            ],
            "recipient_id": 103267,
            "sender_email": "me@wesleyac.com",
            "sender_full_name": "Wesley Aptekar-Cassels (they) (m8'20)",
            "sender_id": 101330,
            "sender_realm_str": "recurse",
            "stream_id": 100727,
            "subject": "writing a forth on baremetal x86",
            "submessages": [],
            "timestamp": 1567240578,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/c52df4d54166ed7db0141bdb21c7935e502d6ddc?x=x&version=1",
            "client": "website",
            "content": "<p><span class=\"user-mention\" data-user-id=\"101992\">@Julian Squires (he) (F2'17)</span> you mentioned over a month ago you were trying to remember a not-quite-Forth with tail-call optimization. I guess you probably didn't mean my <a href=\"https://github.com/darius/tusl\" target=\"_blank\" title=\"https://github.com/darius/tusl\">https://github.com/darius/tusl</a> but there it is, FWIW.<br>\n<span class=\"user-mention\" data-user-id=\"101330\">@Wesley Aptekar-Cassels (they) (m5'19)</span> this project sounds really neat!</p>",
            "content_type": "text/html",
            "display_recipient": "forth",
            "flags": [
                "read",
                "historical"
            ],
            "id": 175302924,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 103267,
            "sender_email": "darius@wry.me",
            "sender_full_name": "Darius Bacon (W1'16)",
            "sender_id": 902,
            "sender_realm_str": "recurse",
            "stream_id": 100727,
            "subject": "writing a forth on baremetal x86",
            "submessages": [],
            "timestamp": 1568085059,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/81c6c8040fc0263607edd05c09dacf6b?d=identicon&version=1",
            "client": "website",
            "content": "<p><span class=\"user-mention\" data-user-id=\"902\">@Darius Bacon (W1'16)</span>  indeed tusl wasn't what I was thinking of, but thanks for linking to it!  that's an interesting approach, too.  I don't think the one I'm thinking of had local variables, and I think it peepholed the sequence <code>&lt;word&gt; EXIT</code> into a special tailcall instruction at compile time.  Usually local variables (and exception handling!) are a complication for implementing tailcalls, so it's cool to see it here.</p>",
            "content_type": "text/html",
            "display_recipient": "forth",
            "flags": [
                "read",
                "historical"
            ],
            "id": 175325801,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 103267,
            "sender_email": "julian@cipht.net",
            "sender_full_name": "Julian Squires (he) (F2'17)",
            "sender_id": 101992,
            "sender_realm_str": "recurse",
            "stream_id": 100727,
            "subject": "writing a forth on baremetal x86",
            "submessages": [],
            "timestamp": 1568114322,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/c52df4d54166ed7db0141bdb21c7935e502d6ddc?x=x&version=1",
            "client": "website",
            "content": "<p>Yeah, peephole optimization is probably a better idea. I like to try the dumbest possible implementation and ask if it's maybe not too bad?<br>\nThe combo of locals and tail-calls is comfier for me than ordinary Forth, but admittedly it doesn't seem to quite hit the sweet spot in simplicity-power product that Forth sits in. Maybe there's another design that could get there.</p>",
            "content_type": "text/html",
            "display_recipient": "forth",
            "flags": [
                "read",
                "historical"
            ],
            "id": 175366557,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 103267,
            "sender_email": "darius@wry.me",
            "sender_full_name": "Darius Bacon (W1'16)",
            "sender_id": 902,
            "sender_realm_str": "recurse",
            "stream_id": 100727,
            "subject": "writing a forth on baremetal x86",
            "submessages": [],
            "timestamp": 1568141082,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/8b685fc189f3b87e207614dbbed889148f6eda41?x=x&version=21",
            "client": "website",
            "content": "<p>:) i've also been interested in doing this! though maybe with different goals, i would prefer something where it's easy to mess around and explore the low-level properties of processors, with no plans of ever becoming a 'real' operating system, for whatever that means. </p>\n<p>i've been messing around with the bios graphics modes in qemu, did you ever find a good reference for this? i was using the 80x25 video mode set up with int 10h, and trying to write to the screen, but it half-works in ways that i've found very confusing, and i'm guessing that there's some property of the video buffer that i don't quite understand yet</p>",
            "content_type": "text/html",
            "display_recipient": "forth",
            "flags": [
                "read",
                "historical"
            ],
            "id": 177820962,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 103267,
            "sender_email": "phoebe@slub.co",
            "sender_full_name": "phoebe beatrice jenkins (she) (m4'18)",
            "sender_id": 101991,
            "sender_realm_str": "recurse",
            "stream_id": 100727,
            "subject": "writing a forth on baremetal x86",
            "submessages": [],
            "timestamp": 1570721085,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/5d6a7a4735c43e9dae0e3f9ef82919706728452a?x=x&version=3",
            "client": "ZulipMobile",
            "content": "<p>I was avoiding the bios graphics stuff because of compat things - I just got into protected mode (via grub, or using the -kernel qemu flag) and used the memory-mapped 80x25 character display.</p>",
            "content_type": "text/html",
            "display_recipient": "forth",
            "flags": [
                "read",
                "historical"
            ],
            "id": 177825125,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 103267,
            "sender_email": "me@wesleyac.com",
            "sender_full_name": "Wesley Aptekar-Cassels (they) (m8'20)",
            "sender_id": 101330,
            "sender_realm_str": "recurse",
            "stream_id": 100727,
            "subject": "writing a forth on baremetal x86",
            "submessages": [],
            "timestamp": 1570723544,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/81c6c8040fc0263607edd05c09dacf6b?d=identicon&version=1",
            "client": "website",
            "content": "<p><span class=\"user-mention\" data-user-id=\"101991\">@phoebe beatrice jenkins (she) (m4'18)</span> I have a vague memory that in this case, the video memory is laid out as attribute/character byte pairs, so you usually want to set <code>ah</code> to some reasonable attribute value, then walk over your string with <code>lodsb</code> to fill <code>al</code>, but write to screen with <code>stosw</code> to write an attribute and the character together.  Hopefully that's it... otherwise I'd check the Ralf Brown interrupt list carefully and see if there are any specifics about the BIOS video stuff.</p>",
            "content_type": "text/html",
            "display_recipient": "forth",
            "flags": [
                "read",
                "historical"
            ],
            "id": 177875763,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 103267,
            "sender_email": "julian@cipht.net",
            "sender_full_name": "Julian Squires (he) (F2'17)",
            "sender_id": 101992,
            "sender_realm_str": "recurse",
            "stream_id": 100727,
            "subject": "writing a forth on baremetal x86",
            "submessages": [],
            "timestamp": 1570766393,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/8b685fc189f3b87e207614dbbed889148f6eda41?x=x&version=21",
            "client": "website",
            "content": "<p><span class=\"user-mention\" data-user-id=\"101992\">@Julian Squires (he) (F2'17)</span> that's basically what i was intending to do... need to look closer to make sure i wasn't doing anything silly.</p>\n<p>(also, the osx catalina upgrade broke qemu, so maybe i'm taking a quick break on this project :( )</p>",
            "content_type": "text/html",
            "display_recipient": "forth",
            "flags": [
                "read",
                "historical"
            ],
            "id": 177927516,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 103267,
            "sender_email": "phoebe@slub.co",
            "sender_full_name": "phoebe beatrice jenkins (she) (m4'18)",
            "sender_id": 101991,
            "sender_realm_str": "recurse",
            "stream_id": 100727,
            "subject": "writing a forth on baremetal x86",
            "submessages": [],
            "timestamp": 1570813770,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/81c6c8040fc0263607edd05c09dacf6b?d=identicon&version=1",
            "client": "website",
            "content": "<p>Oh yeah, just remembering n different times when I wrote some bare metal code and was confused as heck about my printing routines, because I always forgot about the attributes.</p>",
            "content_type": "text/html",
            "display_recipient": "forth",
            "flags": [
                "read",
                "historical"
            ],
            "id": 177959453,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 103267,
            "sender_email": "julian@cipht.net",
            "sender_full_name": "Julian Squires (he) (F2'17)",
            "sender_id": 101992,
            "sender_realm_str": "recurse",
            "stream_id": 100727,
            "subject": "writing a forth on baremetal x86",
            "submessages": [],
            "timestamp": 1570837379,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/8b685fc189f3b87e207614dbbed889148f6eda41?x=x&version=21",
            "client": "website",
            "content": "<p>i was thinking about ways to write function combinators in forth, and it occurred to me you could write this strange little function:</p>\n<div class=\"codehilite\"><pre><span></span>: twi r@ &gt;r ;  ok\n: a 3 * twi 5 * ;  ok\ncr 1 a .\n75  ok\n</pre></div>\n\n\n<p>which, at least in gforth, repeats everything that happens after it is called twice, in the function it is called in. (because it took me a second to figure out: the value <code>r@</code> returns will be the the address of where <code>a</code> will resume after <code>twi</code> returns, so we make it so <code>a</code> will return to that same position once after returning.)</p>\n<p>so, thinking i was on to something, i wrote:</p>\n<div class=\"codehilite\"><pre><span></span>: b 1 + ;  ok\n: x2 dup &gt;r &gt;r ;  ok\n1 &#39; b x2 .\n</pre></div>\n\n\n<p>which gives me an alignment exception. i guess in gforth, the xt points to a struct rather than an address, but fortunately we can just calculate the offset and jump to that:</p>\n<div class=\"codehilite\"><pre><span></span>: shuck 16 + ;  ok\n: x2 shuck dup &gt;r &gt;r ; redefined x2   ok\ncr 1 &#39; b x2 .\n3  ok\n</pre></div>\n\n\n<p>pretty fun. since gforth has anonymous functions (with imho an unpleasant syntax), we can do:</p>\n<div class=\"codehilite\"><pre><span></span>cr 1 :noname 1 + ; x2 .\n3  ok\n</pre></div>\n\n\n<p>which starts to feel like some real functional programming stuff with just <code>&gt;r</code> and <code>r@</code>. so if we define a helper function <code>run</code> that takes an address and executes it, and a function <code>y</code> which duplicates the argument before running it, like:</p>\n<div class=\"codehilite\"><pre><span></span>: run &gt;r ;\n: y dup &gt;r ;\n</pre></div>\n\n\n<p>then we can start to do some fancier things, like repeating an anonymous function until it returns true:</p>\n<div class=\"codehilite\"><pre><span></span>1  ok\n:noname dup . 1 + dup 10 = ; shuck  ok\n:noname swap rot over run 0= if swap rot dup &gt;r else swap rot drop drop then ; shuck  ok\ncr y\n1 2 3 4 5 6 7 8 9  ok\n.s &lt;1&gt; 10  ok\n</pre></div>\n\n\n<p>(i found a reference of words that affect the return stack here: <a href=\"http://www.forth.org/svfig/Len/softstak.htm\" target=\"_blank\" title=\"http://www.forth.org/svfig/Len/softstak.htm\">http://www.forth.org/svfig/Len/softstak.htm</a> . mercifully, this apparently does not include <code>if</code>)</p>\n<p>this is totally mindblowing to me. by using only a tiny number of simple, assembly-friendly concepts, we can really easily get to some combination of ROP chains and lambda calculus where we can have recursion that doesnt take up stack space! this feels like magic!!!</p>\n<p>anyway, is this a total taboo? no forth guide i've ever seen uses the return stack in this way, even though in hindsight this feels like a more obvious usage of the return stack than local storage. it only dawned on me that you could actually intentionally modify the return stack when i read some tutorial on parsers in forth which used a simpler version of this (<a href=\"http://www.bradrodriguez.com/papers/bnfparse.htm\" target=\"_blank\" title=\"http://www.bradrodriguez.com/papers/bnfparse.htm\">http://www.bradrodriguez.com/papers/bnfparse.htm</a>). does anyone else know anything fun you can do with it?</p>",
            "content_type": "text/html",
            "display_recipient": "forth",
            "flags": [
                "read",
                "historical"
            ],
            "id": 179579914,
            "is_me_message": false,
            "last_edit_timestamp": 1572560520,
            "reactions": [
                {
                    "emoji_code": "1f602",
                    "emoji_name": "joy",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "code@saul.pw",
                        "full_name": "Saul Pwanson (SP2'17)",
                        "id": 100791
                    },
                    "user_id": 100791
                },
                {
                    "emoji_code": "2764",
                    "emoji_name": "heart",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "me@wesleyac.com",
                        "full_name": "Wesley Aptekar-Cassels (they) (m8'20)",
                        "id": 101330
                    },
                    "user_id": 101330
                }
            ],
            "recipient_id": 103267,
            "sender_email": "phoebe@slub.co",
            "sender_full_name": "phoebe beatrice jenkins (she) (m4'18)",
            "sender_id": 101991,
            "sender_realm_str": "recurse",
            "stream_id": 100727,
            "subject": "return stack tricks",
            "submessages": [],
            "timestamp": 1572558516,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/81c6c8040fc0263607edd05c09dacf6b?d=identicon&version=1",
            "client": "website",
            "content": "<p>Cool, I've never thought about using the return stack this way, even though I brushed up against it when doing tail call optimization (I was thinking about the impact of banning explicit return stack manipulation).    The really interesting question is whether one can write some of the more complex joy/factor-style combinators or not.</p>",
            "content_type": "text/html",
            "display_recipient": "forth",
            "flags": [
                "read",
                "historical"
            ],
            "id": 179709621,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 103267,
            "sender_email": "julian@cipht.net",
            "sender_full_name": "Julian Squires (he) (F2'17)",
            "sender_id": 101992,
            "sender_realm_str": "recurse",
            "stream_id": 100727,
            "subject": "return stack tricks",
            "submessages": [],
            "timestamp": 1572713912,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/8b685fc189f3b87e207614dbbed889148f6eda41?x=x&version=21",
            "client": "website",
            "content": "<p>ok, challenge accepted :) </p>\n<p>first, i had an idea that you can define anonymous recursive functions in a slightly different way. you can define a word <code>mark</code> that more-or-less returns the address of where you called it in the function, and then use that:</p>\n<div class=\"codehilite\"><pre><span></span>: mark r@ ;\n: run &gt;r ;\n: s 16 + ;\ncr 0 :noname mark swap dup 10 = 0= if dup . 1 + swap dup &gt;r else drop drop then ; s run\n0 1 2 3 4 5 6 7 8 9  ok\n</pre></div>\n\n\n<p>i end up using this because it's convenient when defining recursive functions, but i bet there are some really interesting control structures you could make if you messed with it.</p>\n<p>ok, combinators. i took a look at the joy combinators and will try and start simple and build up to more complicated ones. let's start with <code>ifte</code>, and recreate this joy example for an absolute value function: <code>[0 &lt;]  [0 swap -]  []  ifte</code>. so three args, a conditional, something to execute if true, something to execute if it isn't.  </p>\n<div class=\"codehilite\"><pre><span></span>: ifte &gt;r &gt;r run if r&gt; r&gt; drop &gt;r else r&gt; drop then ;\ncr 1 :noname 0 = ; s :noname 84 emit ; s :noname 70 emit ; s ifte\nF ok\ncr 0 :noname 0 = ; s :noname 84 emit ; s :noname 70 emit ; s ifte\nT ok\n</pre></div>\n\n\n<p>i like that the transfer of execution happens by just pushing the address to the return stack. it feels like a rinky-dink version of something like 'defer' in go.</p>\n<p>so, let's do something meaty, <code>genrec</code>, demonstrated with the factorial function:</p>\n<div class=\"codehilite\"><pre><span></span>: genrec mark &gt;r &gt;r &gt;r &gt;r dup &gt;r run if r&gt; drop r&gt; r&gt; r&gt; r&gt; drop drop drop &gt;r else r&gt; r&gt; r&gt; rot &gt;r swap &gt;r dup &gt;r run r&gt; r&gt; r&gt; rot rot swap r&gt; r&gt; swap dup &gt;r swap dup &gt;r then ;\ncr 5 :noname dup 1 = ; s :noname ; s :noname dup 1 - ; s :noname * ; s genrec .s\n&lt;1&gt; 120  ok\n</pre></div>\n\n\n<p>the joy version, for comparison, is <code>[null] [succ] [dup pred] [i *] genrec;</code><br>\nso, as far as i can tell from the joy manual, <code>genrec</code> takes four functions, which it calls <code>b t rec1 rec2</code>. </p>\n<p><code>b</code> is a function representing the conditional. in joy you don't need to do things like <code>dup</code> at the front, i guess because it's doing some pure-functional magic that lets it know how to restore the world after it runs. this version of genrec isn't that smart, so it just presents <code>b</code> with the stack as it looks when all the arguments to genrec aren't present, and it expects it to mess with the stack in a way that makes sense and push the flag on top. here we are just pushing the flag on top and not touching anything else. in joy, <code>null</code> is basically <code>0=</code> that also works on sequences.</p>\n<p><code>t</code> is the code that gets called when it evaluates to true. here we don't do anything. i have no idea why the joy version calls <code>succ</code> (which is basically <code>1+</code> for numbers), maybe it makes sense for sequences. </p>\n<p><code>rec1</code> and <code>rec2</code> are invoked if <code>b</code> returns false. you can think of how this works as it calling <code>rec1</code> right now, as we're nesting deeper and building up the calls stack, then <code>rec2</code> on the way back down as we're returning from the call stack. another way you can think about, the way the joy manual puts it is \"execute R1 and then [[B] [T] [R1] [R2] genrec] R2\". so r2 ends up getting the result of calling genrec again with the same arguments, expecting an eventual termination as the arguments even further down the stack change.</p>\n<p>how the version i wrote works makes sure that <code>b</code> <code>t</code> <code>rec1</code> and <code>rec2</code> never see each other on the stack. if <code>b</code> returns a true flag then <code>b</code> <code>rec1</code> <code>rec2</code> are discarded then the function returns, landing on <code>t</code> and then whatever rollercoaster it returns through after that. if <code>b</code> returns a false flag, it carefully places <code>b</code> <code>t</code> <code>rec1</code> <code>rec2</code> back on the normal stack while pushing <code>rec2</code> onto the stack, and then a pointer to itself that it got from the call to <code>mark</code> (so when it returns, it'll hit itself first, with returns to rec2 piling up as it keeps calling itself).</p>\n<p>so the way the factorial above works, as long as the top value of the stack isn't 1, it duplicates the top value then subtracts one from it. so here it ends up being <code>5 4 3 2 1</code> by the time its done. while it's been doing that, it's been deferring calls to <code>*</code> by putting its address on the return stack. so by the time it gets a true value, the forth interpreter returns its way through four calls to the multiply function to get the answer.</p>\n<p>i hope any of that makes sense. this was extremely fun to write.</p>\n<p>postscript: i learned there is an actress named joy lang, because she comes up when i try to search for examples of the joy combinators :p <a href=\"https://www.imdb.com/name/nm0485799/\" target=\"_blank\" title=\"https://www.imdb.com/name/nm0485799/\">https://www.imdb.com/name/nm0485799/</a></p>",
            "content_type": "text/html",
            "display_recipient": "forth",
            "flags": [
                "read",
                "historical"
            ],
            "id": 179722702,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 103267,
            "sender_email": "phoebe@slub.co",
            "sender_full_name": "phoebe beatrice jenkins (she) (m4'18)",
            "sender_id": 101991,
            "sender_realm_str": "recurse",
            "stream_id": 100727,
            "subject": "return stack tricks",
            "submessages": [],
            "timestamp": 1572735824,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/8b685fc189f3b87e207614dbbed889148f6eda41?x=x&version=21",
            "client": "website",
            "content": "<p>i think with some pointer arithmetic you could also write 'genrec' without an if statement, just using mark, run, r&gt;, &gt;r, and stack manipulation.</p>",
            "content_type": "text/html",
            "display_recipient": "forth",
            "flags": [
                "read",
                "historical"
            ],
            "id": 179723676,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 103267,
            "sender_email": "phoebe@slub.co",
            "sender_full_name": "phoebe beatrice jenkins (she) (m4'18)",
            "sender_id": 101991,
            "sender_realm_str": "recurse",
            "stream_id": 100727,
            "subject": "return stack tricks",
            "submessages": [],
            "timestamp": 1572737931,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/5d6a7a4735c43e9dae0e3f9ef82919706728452a?x=x&version=3",
            "client": "website",
            "content": "<p>Found an interesting implementation of forth for realtime CNC control stuff written in Rust: <a href=\"https://github.com/chengchangwu/rtforth\" target=\"_blank\" title=\"https://github.com/chengchangwu/rtforth\">https://github.com/chengchangwu/rtforth</a></p>",
            "content_type": "text/html",
            "display_recipient": "forth",
            "flags": [
                "read",
                "historical"
            ],
            "id": 179766302,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 103267,
            "sender_email": "me@wesleyac.com",
            "sender_full_name": "Wesley Aptekar-Cassels (they) (m8'20)",
            "sender_id": 101330,
            "sender_realm_str": "recurse",
            "stream_id": 100727,
            "subject": "rtforth",
            "submessages": [],
            "timestamp": 1572820284,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/5d6a7a4735c43e9dae0e3f9ef82919706728452a?x=x&version=3",
            "client": "website",
            "content": "<p>It has some sort of cooperative multitasking system, which looks interesting</p>",
            "content_type": "text/html",
            "display_recipient": "forth",
            "flags": [
                "read",
                "historical"
            ],
            "id": 179767004,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 103267,
            "sender_email": "me@wesleyac.com",
            "sender_full_name": "Wesley Aptekar-Cassels (they) (m8'20)",
            "sender_id": 101330,
            "sender_realm_str": "recurse",
            "stream_id": 100727,
            "subject": "rtforth",
            "submessages": [],
            "timestamp": 1572821446,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/5d6a7a4735c43e9dae0e3f9ef82919706728452a?x=x&version=3",
            "client": "website",
            "content": "<p>Also all of the documentation is in Chinese</p>",
            "content_type": "text/html",
            "display_recipient": "forth",
            "flags": [
                "read",
                "historical"
            ],
            "id": 179767018,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 103267,
            "sender_email": "me@wesleyac.com",
            "sender_full_name": "Wesley Aptekar-Cassels (they) (m8'20)",
            "sender_id": 101330,
            "sender_realm_str": "recurse",
            "stream_id": 100727,
            "subject": "rtforth",
            "submessages": [],
            "timestamp": 1572821479,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/5d6a7a4735c43e9dae0e3f9ef82919706728452a?x=x&version=3",
            "client": "website",
            "content": "<blockquote>\n<p>Each job has its own stack, its own decoding metrics, its own literal translation or compiled state. This makes the work uninterrupted by other work while performing stacking operations. In RtForth's design, all work shares a dictionary, sharing an output buffer, which allows the workspace to exchange data through the dictionary while outputting the message to the same buffer.</p>\n</blockquote>\n<p>(google translated)</p>",
            "content_type": "text/html",
            "display_recipient": "forth",
            "flags": [
                "read",
                "historical"
            ],
            "id": 179767072,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 103267,
            "sender_email": "me@wesleyac.com",
            "sender_full_name": "Wesley Aptekar-Cassels (they) (m8'20)",
            "sender_id": 101330,
            "sender_realm_str": "recurse",
            "stream_id": 100727,
            "subject": "rtforth",
            "submessages": [],
            "timestamp": 1572821573,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/5d6a7a4735c43e9dae0e3f9ef82919706728452a?x=x&version=3",
            "client": "website",
            "content": "<p>it has a surprisingly nice way to write rust functions that you can call as forth primitives - took maybe 10 mins to get that working :)</p>",
            "content_type": "text/html",
            "display_recipient": "forth",
            "flags": [
                "read",
                "historical"
            ],
            "id": 180085439,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 103267,
            "sender_email": "me@wesleyac.com",
            "sender_full_name": "Wesley Aptekar-Cassels (they) (m8'20)",
            "sender_id": 101330,
            "sender_realm_str": "recurse",
            "stream_id": 100727,
            "subject": "rtforth",
            "submessages": [],
            "timestamp": 1573081281,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/5d6a7a4735c43e9dae0e3f9ef82919706728452a?x=x&version=3",
            "client": "website",
            "content": "<p>Started picking this up again today - I'd left off on ACPI table parsing code, which is quite annoying to debug. I now have code that should tell me the location of the local and IO APICs - will attempt to get keyboard input working again next time I hack on this.</p>\n<p>I also discovered that it now completely fails to boot on real hardware (on my thinkpad, at least) - not sure why. I suspect my assembly routine that disables all processors except the bootstrap processor, but it could be any number of things...</p>",
            "content_type": "text/html",
            "display_recipient": "forth",
            "flags": [
                "read",
                "historical"
            ],
            "id": 181699523,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 103267,
            "sender_email": "me@wesleyac.com",
            "sender_full_name": "Wesley Aptekar-Cassels (they) (m8'20)",
            "sender_id": 101330,
            "sender_realm_str": "recurse",
            "stream_id": 100727,
            "subject": "writing a forth on baremetal x86",
            "submessages": [],
            "timestamp": 1574483957,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/5d6a7a4735c43e9dae0e3f9ef82919706728452a?x=x&version=3",
            "client": "website",
            "content": "<p>A web framework in ~500 lines of forth: <a href=\"http://www.1-9-9-1.com/\" target=\"_blank\" title=\"http://www.1-9-9-1.com/\">http://www.1-9-9-1.com/</a></p>\n<p>Haven't looked at it in detail yet, but it seems interesting :)</p>",
            "content_type": "text/html",
            "display_recipient": "forth",
            "flags": [
                "read",
                "historical"
            ],
            "id": 181771383,
            "is_me_message": false,
            "reactions": [
                {
                    "emoji_code": "1f4a1",
                    "emoji_name": "light_bulb",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "phoebe@slub.co",
                        "full_name": "phoebe beatrice jenkins (she) (m4'18)",
                        "id": 101991
                    },
                    "user_id": 101991
                }
            ],
            "recipient_id": 103267,
            "sender_email": "me@wesleyac.com",
            "sender_full_name": "Wesley Aptekar-Cassels (they) (m8'20)",
            "sender_id": 101330,
            "sender_realm_str": "recurse",
            "stream_id": 100727,
            "subject": "1991.fs",
            "submessages": [],
            "timestamp": 1574619677,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/5d6a7a4735c43e9dae0e3f9ef82919706728452a?x=x&version=3",
            "client": "website",
            "content": "<p>what are techniques for representing structured data in forth?</p>\n<p>for simple C structs, it's pretty easy to translate something like:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"k\">struct</span> <span class=\"n\">Foo</span> <span class=\"p\">{</span>\n    <span class=\"kt\">uint8_t</span> <span class=\"n\">bar</span><span class=\"p\">;</span>\n    <span class=\"kt\">uint32_t</span> <span class=\"n\">baz</span><span class=\"p\">;</span>\n    <span class=\"kt\">char</span> <span class=\"n\">qux</span><span class=\"p\">[</span><span class=\"mi\">16</span><span class=\"p\">];</span>\n<span class=\"p\">};</span>\n</pre></div>\n\n\n<p>into:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"kn\">:</span> <span class=\"nc\">foo.bar</span> <span class=\"c1\">( addr -- value )</span> <span class=\"k\">c@ ;</span>\n<span class=\"kn\">:</span> <span class=\"nc\">foo.baz</span> <span class=\"c1\">( addr -- value )</span> <span class=\"k\">1+ </span><span class=\"mi\">32</span><span class=\"k\">@ ;</span>\n<span class=\"kn\">:</span> <span class=\"nc\">foo.qux</span> <span class=\"c1\">( addr -- addr len )</span> <span class=\"mi\">9</span><span class=\"k\">+ </span><span class=\"mi\">16</span> <span class=\"k\">;</span>\n</pre></div>\n\n\n<p>however, representing a sum type seems trickier - does anyone have interesting approaches for that?</p>\n<p>perhaps thinking in terms of structured data at all is unforthlike, but it's an awfully hard habit to kick :p</p>",
            "content_type": "text/html",
            "display_recipient": "forth",
            "flags": [
                "read",
                "historical"
            ],
            "id": 194402790,
            "is_me_message": false,
            "last_edit_timestamp": 1587108291,
            "reactions": [],
            "recipient_id": 103267,
            "sender_email": "me@wesleyac.com",
            "sender_full_name": "Wesley Aptekar-Cassels (they) (m8'20)",
            "sender_id": 101330,
            "sender_realm_str": "recurse",
            "stream_id": 100727,
            "subject": "representing structured data",
            "submessages": [],
            "timestamp": 1587108248,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/5d6a7a4735c43e9dae0e3f9ef82919706728452a?x=x&version=3",
            "client": "website",
            "content": "<p>at long last, i have the IO APIC working! it was <a href=\"#narrow/stream/26244-os/topic/keyboard.20input.20with.20IOAPIC\" title=\"#narrow/stream/26244-os/topic/keyboard.20input.20with.20IOAPIC\">quite an adventure</a>, but i got it done and wrote up <a href=\"https://blog.wesleyac.com/posts/ioapic-interrupts\" title=\"https://blog.wesleyac.com/posts/ioapic-interrupts\">a blog post</a> with some notes. i <em>think</em> that this is for real the last super annoying thing that i had to do :)</p>",
            "content_type": "text/html",
            "display_recipient": "forth",
            "flags": [
                "read",
                "historical"
            ],
            "id": 194575487,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 103267,
            "sender_email": "me@wesleyac.com",
            "sender_full_name": "Wesley Aptekar-Cassels (they) (m8'20)",
            "sender_id": 101330,
            "sender_realm_str": "recurse",
            "stream_id": 100727,
            "subject": "writing a forth on baremetal x86",
            "submessages": [],
            "timestamp": 1587264754,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/81c6c8040fc0263607edd05c09dacf6b?d=identicon&version=1",
            "client": "website",
            "content": "<p>BTW, the other day I realized (and maybe this has been obvious to others, but it was a surprise to me) that you can write <code>branch</code> (and even more impractically, <code>?branch</code>) with return stack manipulation.  That of course reminded me of this thread again, because I should have realized it when I first read this thread.</p>\n<div class=\"codehilite\"><pre><span></span><code>: branch r&gt; @ &gt;r ;\n\n: ?branch\n  r@ @ over and \\ true case\n  r&gt; 1+ rot not and \\ false case\n  or &gt;r ;\n</code></pre></div>",
            "content_type": "text/html",
            "display_recipient": "forth",
            "flags": [
                "read",
                "historical"
            ],
            "id": 196183852,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 103267,
            "sender_email": "julian@cipht.net",
            "sender_full_name": "Julian Squires (he) (F2'17)",
            "sender_id": 101992,
            "sender_realm_str": "recurse",
            "stream_id": 100727,
            "subject": "return stack tricks",
            "submessages": [],
            "timestamp": 1588601060,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/5d6a7a4735c43e9dae0e3f9ef82919706728452a?x=x&version=3",
            "client": "website",
            "content": "<p>does anyone have good reads on design tradeoffs in stack-based VMs? i'm curious what \"typical\" bytecode ISAs look like, and what the tradeoffs are in their design and use. also happy to get recommendations for simple ISAs to read up on.</p>",
            "content_type": "text/html",
            "display_recipient": "forth",
            "flags": [
                "read",
                "historical"
            ],
            "id": 213667593,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 103267,
            "sender_email": "me@wesleyac.com",
            "sender_full_name": "Wesley Aptekar-Cassels (they) (m8'20)",
            "sender_id": 101330,
            "sender_realm_str": "recurse",
            "stream_id": 100727,
            "subject": "vm design",
            "submessages": [],
            "timestamp": 1602963675,
            "topic_links": [],
            "type": "stream"
        }
    ],
    "msg": "",
    "result": "success"
}
