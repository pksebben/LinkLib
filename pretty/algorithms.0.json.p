{
    "anchor": 0,
    "found_anchor": false,
    "found_newest": true,
    "found_oldest": true,
    "history_limited": false,
    "messages": [
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/1380ded36dafac0d6f808b9b7b6c4e85266428a1?x=x&version=1",
            "client": "desktop app 0.3.7",
            "content": "<p>There's an \"algorithms\" topic under the \"programming\" stream, but I thought it might desereve its own stream.<br>\nThat way, people can make subtopics about anything particular, i.e. Splay Trees </p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 10630477,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "travis@mcdem.us",
            "sender_full_name": "Travis McDemus (S'13)",
            "sender_id": 2139,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "general",
            "submessages": [],
            "timestamp": 1380043133,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/c5b4e77efa6e623fbd38ca2747865ce7?d=identicon&version=1",
            "client": "website",
            "content": "<p><span class=\"user-mention\" data-user-email=\"travis@mcdem.us\">@Travis McDemus</span> Great idea!</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 10630877,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "martin@tornwall.net",
            "sender_full_name": "Martin T\u00f6rnwall (S'13)",
            "sender_id": 2124,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "general",
            "submessages": [],
            "timestamp": 1380043910,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/1380ded36dafac0d6f808b9b7b6c4e85266428a1?x=x&version=1",
            "client": "desktop app 0.3.7",
            "content": "<p>So, I'm brand new to Information Retrieval and reading through some texts. <br>\nI'm familiar with tf-idf as a minimum. <br>\n</p>\n<p>However, I'm trying to learn more about algos that match documents to documents on similarity - not matching a query to a document.<br>\nIs that problem addressed by even the same family of algorithms?  Is information retrieval even the right topic to be reading up on?</p>\n<p>Tagging <span class=\"user-mention\" data-user-email=\"clemmer.alexander@gmail.com\">@Alex Clemmer</span> here since he's the MI guru.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 10631998,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "travis@mcdem.us",
            "sender_full_name": "Travis McDemus (S'13)",
            "sender_id": 2139,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Which algo family is this?",
            "submessages": [],
            "timestamp": 1380045782,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/4f5279e356a105513701942b5b6af05f?d=identicon&version=1",
            "client": "website",
            "content": "<p>Oh yes. There are tons and tons of ways to measure document similarity. Start by looking at document clustering algorithms, because they are all designed to halt when inter-cluster document similarity is the same (i.e., this implies they have a way to measure document similarity). Chapters 16 and 17 of Schutze Raghavan Manning (freely available here: <a href=\"http://nlp.stanford.edu/IR-book/\" target=\"_blank\" title=\"http://nlp.stanford.edu/IR-book/\">http://nlp.stanford.edu/IR-book/</a> ) should be a good be a good start.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 10634107,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "clemmer.alexander@gmail.com",
            "sender_full_name": "Alex Clemmer (S'13)",
            "sender_id": 2132,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Which algo family is this?",
            "submessages": [],
            "timestamp": 1380049294,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/4f5279e356a105513701942b5b6af05f?d=identicon&version=1",
            "client": "website",
            "content": "<p>If you tell me more about what you're doing I can probably give you better advice.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 10634152,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "clemmer.alexander@gmail.com",
            "sender_full_name": "Alex Clemmer (S'13)",
            "sender_id": 2132,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Which algo family is this?",
            "submessages": [],
            "timestamp": 1380049338,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/e84b0476f3dc431aac7c8f5c71ed032b?d=identicon&version=1",
            "client": "website",
            "content": "<p>I just got this question on a phone screen:</p>\n<p>Given a message and a look up string of characters, write a function that returns if the message can be formed from the input.<br>\nSample input: <br>\nlookup = \"asdfawwwhhllhwewdddiogdqa\"<br>\nmsg = \"hello\"</p>\n<p>I just used a dictionary as a lookup table but I feel like there's an optimization that I might have missed.</p>\n<p>Thoughts?</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 10635572,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "nzakharenko@gmail.com",
            "sender_full_name": "Nina Zakarenko (she) (S'13)",
            "sender_id": 2158,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "phone screen question",
            "submessages": [],
            "timestamp": 1380051880,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/4f5279e356a105513701942b5b6af05f?d=identicon&version=1",
            "client": "website",
            "content": "<p>You presumably have to look at all the characters in both strings, so in the best possible case you still have O(n + m) for n characters in source string and m in the lookup string. Since we pretend that lookup in a dictionary happens in constant time, it is unlikely that you will do better at least for normal von neumann machines.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 10637486,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "clemmer.alexander@gmail.com",
            "sender_full_name": "Alex Clemmer (S'13)",
            "sender_id": 2132,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "phone screen question",
            "submessages": [],
            "timestamp": 1380054660,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/c5b4e77efa6e623fbd38ca2747865ce7?d=identicon&version=1",
            "client": "website",
            "content": "<p><span class=\"user-mention\" data-user-email=\"clemmer.alexander@gmail.com\">@Alex Clemmer</span> +1</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 10637865,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "martin@tornwall.net",
            "sender_full_name": "Martin T\u00f6rnwall (S'13)",
            "sender_id": 2124,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "phone screen question",
            "submessages": [],
            "timestamp": 1380055197,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/3d7b72d70ff07f8186126a4464bc6166?d=identicon&version=1",
            "client": "website",
            "content": "<p>What're you doing with IR? music IR stuff? or (for once!) non music related stuff?</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 10639200,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "emmbeezee@gmail.com",
            "sender_full_name": "Maggie Zhou (she) (S'13)",
            "sender_id": 2161,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Which algo family is this?",
            "submessages": [],
            "timestamp": 1380057380,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/e84b0476f3dc431aac7c8f5c71ed032b?d=identicon&version=1",
            "client": "website",
            "content": "<p>I thought so, but when the interviewer said 'we're done with this question' with no hint of emotion I wasn't sure if there was something obvious I wasn't missing.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 10642318,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "nzakharenko@gmail.com",
            "sender_full_name": "Nina Zakarenko (she) (S'13)",
            "sender_id": 2158,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "phone screen question",
            "submessages": [],
            "timestamp": 1380063150,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/1380ded36dafac0d6f808b9b7b6c4e85266428a1?x=x&version=1",
            "client": "desktop app 0.3.7",
            "content": "<p><span class=\"user-mention\" data-user-email=\"emmbeezee@gmail.com\">@Maggie Zhou</span>, its non-music related stuff! (Apparently companies don't make that sort of thing as much. Shock. And. Awe. So, I've just been studying data structures again post batch.)<br>\nI'm basically building a recommendation engine.  (For sake of example, recommending similar authors based on their blog articles.) <br>\nI've had some basic success via zoning out sections of the document and weighting bags-of-words of the zones , but I think that's a really naive implementation. And it doesn't work well all the time.<br>\n<span class=\"user-mention\" data-user-email=\"clemmer.alexander@gmail.com\">@Alex Clemmer</span>, thanks. I've read a little bit of SRM for tf-idf, but I didn't realize such relevant chapters were toward the back.  From what I've read so far,  it looks like I should put my efforts into understanding clustering algos . It really seems like I need some sort of unsupervised learning, and clustering is the starting point. </p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 10662052,
            "is_me_message": false,
            "last_edit_timestamp": 1380111742,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "travis@mcdem.us",
            "sender_full_name": "Travis McDemus (S'13)",
            "sender_id": 2139,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Which algo family is this?",
            "submessages": [],
            "timestamp": 1380111677,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/1380ded36dafac0d6f808b9b7b6c4e85266428a1?x=x&version=1",
            "client": "desktop app 0.3.7",
            "content": "<p>Interviews seem kind of like dating: you really have no idea as to how well you presented yourself until the next callback. Or maybe you did great and they have some weird hang-up. Don't sweat it!</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 10662235,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "travis@mcdem.us",
            "sender_full_name": "Travis McDemus (S'13)",
            "sender_id": 2139,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "phone screen question",
            "submessages": [],
            "timestamp": 1380112112,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/4f5279e356a105513701942b5b6af05f?d=identicon&version=1",
            "client": "website",
            "content": "<p>Well if you can avoid unsupervised algorithms, you really should. They're much harder to evaluate. But in general, \"document similarity\" is fuzzy, and different measurements will have different tradeoffs. The real reason you should look at the clustering chapters is because they do have some notion of document similarity baked in.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 10673054,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "clemmer.alexander@gmail.com",
            "sender_full_name": "Alex Clemmer (S'13)",
            "sender_id": 2132,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Which algo family is this?",
            "submessages": [],
            "timestamp": 1380131765,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/4f5279e356a105513701942b5b6af05f?d=identicon&version=1",
            "client": "website",
            "content": "<p>There are other ways to measure this though. You could also use something like nearest neighbor algorithms (or approximate nearest neighbor algorithms), where you might think of each document as a vector of word counts. Or you could do something like cluster word co-occurrences using a model like latent Dirichlet allocation. I mean, there's really a lot of options. But you should start with something simple, like clustering, and if that fails, then later do something else.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 10673241,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "clemmer.alexander@gmail.com",
            "sender_full_name": "Alex Clemmer (S'13)",
            "sender_id": 2132,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Which algo family is this?",
            "submessages": [],
            "timestamp": 1380132055,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/cc348b73db1c0043b311a44ccbd5227fe572da1b?x=x&version=1",
            "client": "desktop app 0.3.7",
            "content": "<p><span class=\"user-mention\" data-user-email=\"aroberts@live.unc.edu\">@Amy Roberts (F'13)</span> and I are learning the MiniMax algorithm and applying it to tic tac toe. Come join in Church if you're interested in working with us</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 10947138,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "spurekarcareer@gmail.com",
            "sender_full_name": "Smita Purekar (F'13)",
            "sender_id": 2879,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "MiniMax",
            "submessages": [],
            "timestamp": 1380729233,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/f20ec58dfa202b797000d533b8b4a295?d=identicon&version=1",
            "client": "desktop app Mac 0.3.8",
            "content": "<p><span class=\"user-mention\" data-user-email=\"beccabainbridge@gmail.com\">@Rebecca Bainbridge (F'13)</span> and I are learning the Dancing Links algorithm (Knuth). If anyone has worked with this algorithm before, please come by and share your knowledge.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 10948777,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "nadia@elfarnawani.com",
            "sender_full_name": "Nadia Elfarnawani (F'13)",
            "sender_id": 2906,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Dancing Links",
            "submessages": [],
            "timestamp": 1380732226,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/f6bb3cc6999b3b59385760ee7a72603e7307a64a?x=x&version=1",
            "client": "website",
            "content": "<p>(moved to pairing)</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 23238174,
            "is_me_message": false,
            "last_edit_timestamp": 1402696464,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "sakhat@gmail.com",
            "sender_full_name": "Sahat Yalkabov (S1'14)",
            "sender_id": 5854,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "general",
            "submessages": [],
            "timestamp": 1402695651,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/b7ce2339800736af9c12034df5b24771652d9db7?x=x&version=1",
            "client": "desktop app Mac 0.4.4",
            "content": "<p><span class=\"user-mention\" data-user-email=\"sakhat@gmail.com\">@Sahat Yalkabov (S'14)</span> if you don\u2019t get any responses here you might want to post this to the <code>pairing</code> stream - that one's more active</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 23238201,
            "is_me_message": false,
            "last_edit_timestamp": 1402695744,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "amyehanlon@gmail.com",
            "sender_full_name": "Amy Hanlon (W'14)",
            "sender_id": 5021,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "general",
            "submessages": [],
            "timestamp": 1402695714,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/f6bb3cc6999b3b59385760ee7a72603e7307a64a?x=x&version=1",
            "client": "website",
            "content": "<p>Thanks <span class=\"user-mention\" data-user-email=\"amyehanlon@gmail.com\">@Amy Hanlon (W'14)</span> . I will try there.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 23238377,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "sakhat@gmail.com",
            "sender_full_name": "Sahat Yalkabov (S1'14)",
            "sender_id": 5854,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "general",
            "submessages": [],
            "timestamp": 1402695905,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/56394196312b31bccd03f296a479af02?d=identicon&version=1",
            "client": "website",
            "content": "<p>Visualising many algorithms, from sampling to shuffling, maze generation and solving etc. <a href=\"http://bost.ocks.org/mike/algorithms/\" target=\"_blank\" title=\"http://bost.ocks.org/mike/algorithms/\">http://bost.ocks.org/mike/algorithms/</a></p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 24867870,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "marcus.malka@gmail.com",
            "sender_full_name": "Marcus Malka (S1'14)",
            "sender_id": 5861,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Algorithms visualized",
            "submessages": [],
            "timestamp": 1405541731,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/eec06302c81ec67af2c64dc9036d3c3bed15a7e3?x=x&version=1",
            "client": "website",
            "content": "<p>For anyone who is studying algorithms in python (specially for job interviews):<br>\nI compiled over 100 examples into this git repository:  <br>\n<a href=\"https://github.com/mariwahl/Python-and-Algorithms--Over-100-Exercises-and-Lessons\" target=\"_blank\" title=\"https://github.com/mariwahl/Python-and-Algorithms--Over-100-Exercises-and-Lessons\">https://github.com/mariwahl/Python-and-Algorithms--Over-100-Exercises-and-Lessons</a>, <br>\nand I wrote a book explaining everything in details: <br>\n<a href=\"http://mariwahl.us/docs/algorithms_in_python.pdf\" target=\"_blank\" title=\"http://mariwahl.us/docs/algorithms_in_python.pdf\">http://mariwahl.us/docs/algorithms_in_python.pdf</a>  . <br>\nAlthough it's for beginners, It's very comprehensive: I solved every exercises from Cracking the code, and many Euler problems,  interview problems. I explain (with many examples) all the data structures, sorting&amp; searching algorithms, etc. <br>\nI did this last summer, and I need to review them at some point, so if you have any comments, find  bugs, or want to talk about the problems, ping me!</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 25324142,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "steinkirch@gmail.com",
            "sender_full_name": "Marina Wahl (S2'14)",
            "sender_id": 6179,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Algorithms & Python & Data structures",
            "submessages": [],
            "timestamp": 1406329808,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/698f6cb788a1bf94da9781c181bf151cad452950?x=x&version=1",
            "client": "website",
            "content": "<p>Hey thanks, Marina! I love seeing contributions like this here! Hope to grab some time to check it out. Danke :)</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 25449370,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "wforzo@gmail.com",
            "sender_full_name": "Will Orzo (W'14)",
            "sender_id": 5029,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Algorithms & Python & Data structures",
            "submessages": [],
            "timestamp": 1406596548,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/a0e3966cc5772329ab92ae1414600e4e?d=identicon&version=1",
            "client": "website",
            "content": "<p><span class=\"user-mention\" data-user-email=\"lauraeskelton@gmail.com\">@Laura Skelton (S'14)</span>  I think you mentioned you were working through this book, is it in the library/do you know if there are multiple copies? </p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 25555357,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "lauter.miriam@gmail.com",
            "sender_full_name": "Miriam Lauter (S2'14)",
            "sender_id": 6181,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Intro to Algorithms",
            "submessages": [],
            "timestamp": 1406768063,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/3ad220596b601687b8785b5fbfa8ecbe?d=identicon&version=1",
            "client": "website",
            "content": "<p>There's definitely a copy in the library! It's the scariest sized one, white cover, on the middle shelf :D</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 25558075,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "bgmuthalaly@gmail.com",
            "sender_full_name": "Bert Muthalaly (S1'14)",
            "sender_id": 5871,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Intro to Algorithms",
            "submessages": [],
            "timestamp": 1406773116,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/1cec1f2ca57f1cf9c43fef2de06f705968d7684e?x=x&version=2",
            "client": "website",
            "content": "<p>we're also doing an algorithms study group Tuesdays at 11 if you want to join! we did sorting this week, but next week we're doing Data Structures (check zulip stream projects/ algorithms course if you're interested in seeing more)</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 25558308,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "whitmore.samantha@gmail.com",
            "sender_full_name": "Sam Whitmore (she) (S2'14)",
            "sender_id": 6174,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Intro to Algorithms",
            "submessages": [],
            "timestamp": 1406773612,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/1cec1f2ca57f1cf9c43fef2de06f705968d7684e?x=x&version=2",
            "client": "website",
            "content": "<p><span class=\"user-mention\" data-user-email=\"lauter.miriam@gmail.com\">@Miriam Lauter (S'14)</span> </p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 25558314,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "whitmore.samantha@gmail.com",
            "sender_full_name": "Sam Whitmore (she) (S2'14)",
            "sender_id": 6174,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Intro to Algorithms",
            "submessages": [],
            "timestamp": 1406773620,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/78906db7400cfdec62fdd816c1b528ef64852f7c?x=x&version=1",
            "client": "website",
            "content": "<p><span class=\"user-mention\" data-user-email=\"max.blum@gmail.com\">@Max Blum</span> - this is the online course that several of us used recently to learn about algorithms and data structures. It's based in Python.<br>\n<a href=\"http://interactivepython.org/runestone/static/pythonds/index.html\" target=\"_blank\" title=\"http://interactivepython.org/runestone/static/pythonds/index.html\">http://interactivepython.org/runestone/static/pythonds/index.html</a></p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 27123775,
            "is_me_message": false,
            "last_edit_timestamp": 1409689289,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "danny.parton@gmail.com",
            "sender_full_name": "Daniel Parton (S2'14)",
            "sender_id": 6164,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Algorithms and data structures with Python",
            "submessages": [],
            "timestamp": 1409688866,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/35b3dd041c2567b833c606d756846322e514b0b4?x=x&version=1",
            "client": "website",
            "content": "<p>excellent--thanks!!</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 27123799,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "max.blum@gmail.com",
            "sender_full_name": "Max Blum-Campo (he) (F1'14)",
            "sender_id": 6429,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Algorithms and data structures with Python",
            "submessages": [],
            "timestamp": 1409688906,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/a960508c87bf58d79cfc08349bb003a1?d=identicon&version=1",
            "client": "website",
            "content": "<p>I have a slow solution to this problem :  <a href=\"http://rosalind.info/problems/fibd/\" target=\"_blank\" title=\"http://rosalind.info/problems/fibd/\">http://rosalind.info/problems/fibd/</a>.  There's a faster, dynamic programming solution, but I can't find it.  Does anyone feel like talking algorithms for a few minutes?</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 27163935,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "noam.finkelstein@gmail.com",
            "sender_full_name": "Noam Finkelstein (S2'14)",
            "sender_id": 6184,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "dynamic programming",
            "submessages": [],
            "timestamp": 1409760403,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/a3db14a3fb09af8d319d5b4e36c258f4626befb5?x=x&version=2",
            "client": "website",
            "content": "<p>anybody wanna discuss galois field and reed solomon? i am currently reading <a href=\"http://www.thonky.com/qr-code-tutorial/error-correction-coding/\" target=\"_blank\" title=\"http://www.thonky.com/qr-code-tutorial/error-correction-coding/\">http://www.thonky.com/qr-code-tutorial/error-correction-coding/</a> to understand how to generate qr codes...that page is about getting error correction codes before one can generate a qr code from some string</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 27171978,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "sindhus@live.in",
            "sender_full_name": "Sindhu Sundar (she) (S2'14)",
            "sender_id": 6183,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "reed-solomon",
            "submessages": [],
            "timestamp": 1409770621,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/a3db14a3fb09af8d319d5b4e36c258f4626befb5?x=x&version=2",
            "client": "website",
            "content": "<p>i finally understood the polynomial generator calculation...its long but not difficult...the god is in the details of not letting your exponents cross 256... and xor-ing if they do.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 27174772,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "sindhus@live.in",
            "sender_full_name": "Sindhu Sundar (she) (S2'14)",
            "sender_id": 6183,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "reed-solomon",
            "submessages": [],
            "timestamp": 1409774030,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/d31c78cf8a71b368d9c4fb5e9333af5b4e5a497c?x=x&version=1",
            "client": "website",
            "content": "<p>For those interested in computational geometry, there is a seminar every week at NYU.<br>\nI am considering going in 10 days but I am not decided yet. <br>\nIt sounds like the talk will be fairly accessible to all levels.<br>\nMore information below:<br>\nSpeaker: Jonathan Lenchner, IBM T.J.Watson Research Center<br>\nTitle: Extensions of Golomb\u2019s Tromino Theorem<br>\nDate: November 18, 2014<br>\nPlace: 1314 Warren Weaver Hall<br>\nTime: 6-7pm</p>\n<p>Abstract:</p>\n<p>We will describe a number of generalizations of a theorem of Golomb\u2019s,<br>\nwhich says that if you remove a single square from a chessboard of<br>\nsize 2N\u00d72N (N\u22650), the remaining board can always be tiled with<br>\nL-shaped trombones. In addition we will describe some impossibility of<br>\ntiling results including a result of de Bruijn\u2019s. Joint work with<br>\nArthur Befumo.</p>\n<hr>\n<p>Seminar web page:<br>\n<a href=\"http://math.nyu.edu/faculty/pollack/seminar/index.html\" target=\"_blank\" title=\"http://math.nyu.edu/faculty/pollack/seminar/index.html\">http://math.nyu.edu/faculty/pollack/seminar/index.html</a></p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 30355952,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "mdulieu@gmail.com",
            "sender_full_name": "Muriel Dulieu Holzer (F2'14)",
            "sender_id": 6694,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Computational Geometry Seminar",
            "submessages": [],
            "timestamp": 1415370270,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/4f5279e356a105513701942b5b6af05f?d=identicon&version=1",
            "client": "desktop app Mac 0.4.4",
            "content": "<p>Fun little facts about CG is that it was _the_ dominant approach to a lot of things that eventually became modern AI, computer vision, and ML. For example, Papert and Minksy's infamous book, Perceptrons is basically a study of neural networks from the perspective of computational geometry, and in particular, demonstrated the limitations of neural networks for learning to recognize complicated things in pictures. It is famous for having proven the Group Invariance Theorem, which showed that in order for neural networks (at least as they were conceived at the time) to recognize even something as simple as whether the number of black pixels in an image was even, required an exponentially complicated feature vector, which effectively meant that it was computational complicated to train many very interesting recognition problems.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 30512672,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "clemmer.alexander@gmail.com",
            "sender_full_name": "Alex Clemmer (S'13)",
            "sender_id": 2132,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Computational Geometry Seminar",
            "submessages": [],
            "timestamp": 1415648222,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/4f5279e356a105513701942b5b6af05f?d=identicon&version=1",
            "client": "desktop app Mac 0.4.4",
            "content": "<p>These days CG is not quite as sexy a field and research is a lot quieter.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 30512758,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "clemmer.alexander@gmail.com",
            "sender_full_name": "Alex Clemmer (S'13)",
            "sender_id": 2132,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Computational Geometry Seminar",
            "submessages": [],
            "timestamp": 1415648331,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/4f5279e356a105513701942b5b6af05f?d=identicon&version=1",
            "client": "desktop app Mac 0.4.4",
            "content": "<p>There is some interesting work going into non-Euclidean geometry problems. For example, there's this neat measurement called the KL divergence which measures a kind of \"distance\" between probability distributions, but it's not a reflexive distance, so if you go from point A to point B, it might be a _different_ distance than going from point B to point A. It's non-Euclidean because in Euclidean space, the distance from point A to point B is always the same as point B to point A. So in some sense, each probability distribution would be a point in this  noneuclidean space, and the KL divergence is a distance between them, and it's curved, which is cool.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 30512842,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "clemmer.alexander@gmail.com",
            "sender_full_name": "Alex Clemmer (S'13)",
            "sender_id": 2132,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Computational Geometry Seminar",
            "submessages": [],
            "timestamp": 1415648430,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/4f5279e356a105513701942b5b6af05f?d=identicon&version=1",
            "client": "desktop app Mac 0.4.4",
            "content": "<p>So you might end up asking questions like \"ok, well, if I ahve a bunch of points in this space, which are probability distributions, can I find a minimum n-dimentional sphere (called a \"hypersphere\") that encapsulates all of them? This would give us a nice \"summary\" of a bunch of probability distributions, and how cool would that be? And how much time and space would I need to do that?</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 30512897,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "clemmer.alexander@gmail.com",
            "sender_full_name": "Alex Clemmer (S'13)",
            "sender_id": 2132,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Computational Geometry Seminar",
            "submessages": [],
            "timestamp": 1415648517,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/4f5279e356a105513701942b5b6af05f?d=identicon&version=1",
            "client": "desktop app Mac 0.4.4",
            "content": "<p>And so on.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 30512900,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "clemmer.alexander@gmail.com",
            "sender_full_name": "Alex Clemmer (S'13)",
            "sender_id": 2132,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Computational Geometry Seminar",
            "submessages": [],
            "timestamp": 1415648521,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/4f5279e356a105513701942b5b6af05f?d=identicon&version=1",
            "client": "desktop app Mac 0.4.4",
            "content": "<p>Personally I really like CG and I wish that more people used it.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 30512933,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "clemmer.alexander@gmail.com",
            "sender_full_name": "Alex Clemmer (S'13)",
            "sender_id": 2132,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Computational Geometry Seminar",
            "submessages": [],
            "timestamp": 1415648529,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/61226ce011ec53a878f3accd5726c0b8?d=identicon&version=1",
            "client": "website",
            "content": "<p><span class=\"user-mention\" data-user-email=\"clemmer.alexander@gmail.com\">@Alex Clemmer (S'13)</span> huh, that probability distance metric is cool! I love the study of probability distributions as a vector space but I don't think I have run across KL divergence before.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 30532166,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "trillionalyssa@gmail.com",
            "sender_full_name": "Alyssa Carter (F1'14)",
            "sender_id": 6414,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Computational Geometry Seminar",
            "submessages": [],
            "timestamp": 1415673774,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/4f5279e356a105513701942b5b6af05f?d=identicon&version=1",
            "client": "desktop app Mac 0.4.4",
            "content": "<p><span class=\"user-mention\" data-user-email=\"trillionalyssa@gmail.com\">@Alyssa Carter (F1'14)</span> It's super cool! In machine learning people even use the KL divergence to minimize the \"distance\" between some target distribution and some approximation of that target distribution.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 30599757,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "clemmer.alexander@gmail.com",
            "sender_full_name": "Alex Clemmer (S'13)",
            "sender_id": 2132,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Computational Geometry Seminar",
            "submessages": [],
            "timestamp": 1415778763,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/2e8c51a4226048989b3641c95fed8d8d?d=identicon&version=1",
            "client": "website",
            "content": "<p>I have a set of latitude/longitude coordinates for intersections across Manhattan. For a given point (lat/long) not in the set, I'd like to return the closest point from the set. Anyone want to talk about the best ways to do this? I was thinking about using a kd tree but would be helpful to talk it out with someone.</p>\n<p>Also as a second problem, for a given point (lat/long) not in the set, I'd like to return all points in the set that are within a fixed radius from the given point. If my set is stored in a mysql db, is there an efficient way to perform this query?</p>\n<p>I'll probably be working on part 1 tomorrow in python if anyone wants to join.<br>\n^finished this.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 30638700,
            "is_me_message": false,
            "last_edit_timestamp": 1415862499,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "patrick.renschler@gmail.com",
            "sender_full_name": "Patrick Renschler (F2'14)",
            "sender_id": 6683,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "nearest point in geo set",
            "submessages": [],
            "timestamp": 1415832762,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/dc9f215c22985887d9929b85b02c49ef?d=identicon&version=1",
            "client": "website",
            "content": "<p><span class=\"user-mention\" data-user-email=\"patrick.renschler@gmail.com\">@Patrick Renschler (F2'14)</span> - Oh, my brother was just working on this! He was having performance problems doing it on a raspberry pi, and had to do it the extra clever way with geohashing, and wrote a blog post about it - <a href=\"https://twitter.com/joshsucher/status/533260268558888960\" target=\"_blank\" title=\"https://twitter.com/joshsucher/status/533260268558888960\">https://twitter.com/joshsucher/status/533260268558888960</a> <a href=\"http://svaixdphysicalcomputing.tumblr.com/post/102609233483/geohashing\" target=\"_blank\" title=\"http://svaixdphysicalcomputing.tumblr.com/post/102609233483/geohashing\">http://svaixdphysicalcomputing.tumblr.com/post/102609233483/geohashing</a></p>\n<div class=\"inline-preview-twitter\"><div class=\"twitter-tweet\"><a href=\"https://twitter.com/joshsucher/status/533260268558888960\" target=\"_blank\"><img class=\"twitter-avatar\" src=\"https://pbs.twimg.com/profile_images/485442858476777472/OBWZ_lu8_normal.jpeg\"></a><p>The humble geohash is a delicious way to easily subdivide gps data. (Thanks for the tip, <a href=\"https://twitter.com/NovalisDMT\" target=\"_blank\" title=\"https://twitter.com/NovalisDMT\">@NovalisDMT</a>!) See my post: <a href=\"http://t.co/ZgxuDmC203\" target=\"_blank\" title=\"http://t.co/ZgxuDmC203\">http://svaixdphysicalcomputing.tumblr.com/post/102609233483/geohashing</a></p><span>- josh sucher (@joshsucher)</span></div></div>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 30817875,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "dsucher@gmail.com",
            "sender_full_name": "Danielle E. Sucher (W'12)",
            "sender_id": 879,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "nearest point in geo set",
            "submessages": [],
            "timestamp": 1416138159,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/2e8c51a4226048989b3641c95fed8d8d?d=identicon&version=1",
            "client": "website",
            "content": "<p><span class=\"user-mention\" data-user-email=\"dsucher@gmail.com\">@Danielle E. Sucher (W'12)</span> Thanks! These are great.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 30877913,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "patrick.renschler@gmail.com",
            "sender_full_name": "Patrick Renschler (F2'14)",
            "sender_id": 6683,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "nearest point in geo set",
            "submessages": [],
            "timestamp": 1416243572,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/5fc3428127f9bf92b1d03f9694617e10?d=identicon&version=1",
            "client": "website",
            "content": "<p>hey all, just a reminder the plan is to meet today for the algorithms study group with the plan being to have watched \"I. INTRODUCTION (Week 1)\" and to go over how we want this group to work.  does anyone know if rooms can be reserved?  let's plan to meet by hopper for now <span class=\"user-mention\" data-user-email=\"tsimko@princeton.edu\">@Tyler Simko (W1'14)</span> <span class=\"user-mention\" data-user-email=\"pickering.amanda@gmail.com\">@Amanda Pickering (W1'14)</span> <span class=\"user-mention\" data-user-email=\"alicescarpa@gmail.com\">@Alice Duarte Scarpa (W1'14)</span> <span class=\"user-mention\" data-user-email=\"fernando.neto@gmail.com\">@Fernando a Cunha Andrade Neto (W1'14)</span> <span class=\"user-mention\" data-user-email=\"tansy.arron@gmail.com\">@Tansy Arron-Walker (W1'14)</span> <span class=\"user-mention\" data-user-email=\"rob.moore@gmail.com\">@Rob Moore (F2'14)</span> </p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 31250042,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "irvin.hwang@gmail.com",
            "sender_full_name": "Irvin Hwang (m6'19)",
            "sender_id": 6916,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "group study",
            "submessages": [],
            "timestamp": 1416845264,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/f0a1935443a5f3ac2c0ab2b7e14b020a926be5cb?x=x&version=1",
            "client": "website",
            "content": "<p>Sounds good! I vaguely remember <span class=\"user-mention\" data-user-email=\"rachel@hackerschool.com\">@Rachel Vincent</span> posting something about using the calendar to reserve rooms. </p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 31250316,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "tsimko@princeton.edu",
            "sender_full_name": "Tyler Simko (W1'14)",
            "sender_id": 6921,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "group study",
            "submessages": [],
            "timestamp": 1416845562,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/5fc3428127f9bf92b1d03f9694617e10?d=identicon&version=1",
            "client": "website",
            "content": "<p>cool, went ahead and added it to the calendar for babbage</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 31250693,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "irvin.hwang@gmail.com",
            "sender_full_name": "Irvin Hwang (m6'19)",
            "sender_id": 6916,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "group study",
            "submessages": [],
            "timestamp": 1416845997,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/7207debf9f46350a4ce327f5b51c305e?d=identicon&version=1",
            "client": "desktop app Linux 0.4.4",
            "content": "<p>What time are you thinking? I am going to meet someone for lunch at 12:30 so later in the afternoon would be preferable but don't feel bound to my schedule.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 31250785,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "rob.moore@gmail.com",
            "sender_full_name": "Rob Moore (F2'14)",
            "sender_id": 6669,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "group study",
            "submessages": [],
            "timestamp": 1416846071,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/5fc3428127f9bf92b1d03f9694617e10?d=identicon&version=1",
            "client": "website",
            "content": "<p>ah thanks for catching that, the time is 4pm and location babbage</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 31250833,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "irvin.hwang@gmail.com",
            "sender_full_name": "Irvin Hwang (m6'19)",
            "sender_id": 6916,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "group study",
            "submessages": [],
            "timestamp": 1416846123,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/03cff489ede3515ab64c9db9d96e362f?d=identicon&version=1",
            "client": "website",
            "content": "<p>great, 4pm right?</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 31255598,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "fernando.neto@gmail.com",
            "sender_full_name": "Fernando Andrade (W1'14)",
            "sender_id": 6923,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "group study",
            "submessages": [],
            "timestamp": 1416851411,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/5fc3428127f9bf92b1d03f9694617e10?d=identicon&version=1",
            "client": "website",
            "content": "<p>yep, 4pm</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 31258433,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "irvin.hwang@gmail.com",
            "sender_full_name": "Irvin Hwang (m6'19)",
            "sender_id": 6916,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "group study",
            "submessages": [],
            "timestamp": 1416855030,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/924b0efccca6cce27ba108f5d58f743f753e9302?x=x&version=1",
            "client": "website",
            "content": "<p>Oh man, I completely forgot about this. I'm still in for discussion but haven't watched the lecture yet. </p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 31263169,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "tansy.arron@gmail.com",
            "sender_full_name": "Tansy Arron-Walker (W1'14)",
            "sender_id": 6917,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "group study",
            "submessages": [],
            "timestamp": 1416860446,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/5fc3428127f9bf92b1d03f9694617e10?d=identicon&version=1",
            "client": "website",
            "content": "<p>no worries, i think the bigger part of the meeting is figuring out how it will work</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 31264146,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "irvin.hwang@gmail.com",
            "sender_full_name": "Irvin Hwang (m6'19)",
            "sender_id": 6916,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "group study",
            "submessages": [],
            "timestamp": 1416861559,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/a2c54603a7ffb0dbc912f860fc464037ad92d79c?x=x&version=1",
            "client": "desktop app Mac 0.4.4",
            "content": "<p>I think I'll join you eventhough I'm almost done with the course. I need to take the final exam soon so listening to you discussing points from week 1 could help in my revision process.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 31264152,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "marie.clemessy@gmail.com",
            "sender_full_name": "Marie Charlotte-Amalie Clemessy (she) (W1'14)",
            "sender_id": 6914,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "group study",
            "submessages": [],
            "timestamp": 1416861567,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/924b0efccca6cce27ba108f5d58f743f753e9302?x=x&version=1",
            "client": "website",
            "content": "<p>Cool. I'm checking out the slides and reading the subtitles :P </p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 31264435,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "tansy.arron@gmail.com",
            "sender_full_name": "Tansy Arron-Walker (W1'14)",
            "sender_id": 6917,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "group study",
            "submessages": [],
            "timestamp": 1416861893,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/5fc3428127f9bf92b1d03f9694617e10?d=identicon&version=1",
            "client": "website",
            "content": "<p><span class=\"user-mention\" data-user-email=\"rob.moore@gmail.com\">@Rob Moore (F2'14)</span> looks like you're in the middle of a conversation, but feel free to  drop into babbage if you want</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 31265500,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "irvin.hwang@gmail.com",
            "sender_full_name": "Irvin Hwang (m6'19)",
            "sender_id": 6916,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "group study",
            "submessages": [],
            "timestamp": 1416863128,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/7207debf9f46350a4ce327f5b51c305e?d=identicon&version=1",
            "client": "desktop app Linux 0.4.4",
            "content": "<p>Thanks, Irvin. Sorry I missed it. I hope to make the next meeting. Please let me know what's on the agenda for the next meeting.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 31268673,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "rob.moore@gmail.com",
            "sender_full_name": "Rob Moore (F2'14)",
            "sender_id": 6669,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "group study",
            "submessages": [],
            "timestamp": 1416866989,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/5fc3428127f9bf92b1d03f9694617e10?d=identicon&version=1",
            "client": "website",
            "content": "<p>Hi Rob, the plan is meet weekly (Monday 4pm) and bring a problem you've solved related to the coursera material for that week.   at the meeting we can discuss the lectures if there are any questions and people will pair up/split into groups and present their problem to the other person to solve (we can rotate amongst those who want more practice).  for this coming week we'll watch week 1 for the coursera course, which covers divide and conquer algorithms, asymptotic analysis, and the master method.  <span class=\"user-mention\" data-user-email=\"tansy.arron@gmail.com\">@Tansy Arron-Walker (W1'14)</span> was also interested in having another meeting to watch the lectures in a group for any interested in doing that.  if there's any interest in pair programming algorithms (from the assignments/problems/topcoder) people can post to this stream.  i think those are the main points, but anyone else feel free to add anything i've missed. </p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 31269207,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "irvin.hwang@gmail.com",
            "sender_full_name": "Irvin Hwang (m6'19)",
            "sender_id": 6916,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "group study",
            "submessages": [],
            "timestamp": 1416867722,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/17667b016b1223d83542993e3d873fc702a95962?x=x&version=1",
            "client": "website",
            "content": "<p>I'm trying to understand the Ford-Fulkerson algorithm for calculating maximum flow for a directed graph. I think I generally follow, but I'm confused about the purpose of the residual network. </p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 31489886,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "djj2115cu@gmail.com",
            "sender_full_name": "Daria Jung (S1'14)",
            "sender_id": 5857,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Ford-Fulkerson",
            "submessages": [],
            "timestamp": 1417211211,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/5fc3428127f9bf92b1d03f9694617e10?d=identicon&version=1",
            "client": "website",
            "content": "<p>hey  <span class=\"user-mention\" data-user-email=\"tsimko@princeton.edu\">@Tyler Simko (W1'14)</span> <span class=\"user-mention\" data-user-email=\"pickering.amanda@gmail.com\">@Amanda Pickering (W1'14)</span> <span class=\"user-mention\" data-user-email=\"alicescarpa@gmail.com\">@Alice Duarte Scarpa (W1'14)</span> <span class=\"user-mention\" data-user-email=\"fernando.neto@gmail.com\">@Fernando a Cunha Andrade Neto (W1'14)</span> <span class=\"user-mention\" data-user-email=\"tansy.arron@gmail.com\">@Tansy Arron-Walker (W1'14)</span> <span class=\"user-mention\" data-user-email=\"rob.moore@gmail.com\">@Rob Moore (F2'14)</span> <span class=\"user-mention\" data-user-email=\"marie.clemessy@gmail.com\">@Marie Clemessy (W1'14)</span> <span class=\"user-mention\" data-user-email=\"juliatufts@gmail.com\">@Julia Lynn Claire Tufts (F2'14)</span> are people attending the goal setting workshop?  would it be better to meet at 3p instead of 4p?</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 31673816,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "irvin.hwang@gmail.com",
            "sender_full_name": "Irvin Hwang (m6'19)",
            "sender_id": 6916,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "group study",
            "submessages": [],
            "timestamp": 1417449262,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/3b819440e9721e34d662fe498f8138bc?d=identicon&version=1",
            "client": "website",
            "content": "<p>I want to go to the goal setting workshop,  so for it would be better to meet at 3p, but I could just leave early if 4p is better for everyone else.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 31674057,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "alicescarpa@gmail.com",
            "sender_full_name": "Alice Duarte Scarpa (W1'14)",
            "sender_id": 6920,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "group study",
            "submessages": [],
            "timestamp": 1417449522,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/03cff489ede3515ab64c9db9d96e362f?d=identicon&version=1",
            "client": "website",
            "content": "<p>3pm: I agree.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 31677225,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "fernando.neto@gmail.com",
            "sender_full_name": "Fernando Andrade (W1'14)",
            "sender_id": 6923,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "group study",
            "submessages": [],
            "timestamp": 1417453155,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/3b819440e9721e34d662fe498f8138bc?d=identicon&version=1",
            "client": "website",
            "content": "<p>I've been working on a challenge problem for the past 3 days, and I'm stuck. The challenge does not have rules or guidelines, so I guess I can ask for help (it's google foobar).<br>\nThe problem:<br>\nThere is a square grid (nxn) of lights. Each light can be on or off.<br>\nEvery time you click on a light, it toggles every light that is in the same row or in the same column.<br>\nWrite a program that given an initial configuration outputs the minimum number of lights that have to be clicked in order to turn off all the light on the grid. If that's not possible, return -1.<br>\nExamples:<br>\n1 0<br>\n0 1</p>\n<p>If you click on the 1 in position (0, 0):<br>\n0 1<br>\n1 1</p>\n<p>If you click on the 1 in position (1, 1):<br>\n0 0<br>\n0 0</p>\n<p>So that's a solution with 2 clicks and there are no solutions with just 1 click. So the program should return 2.</p>\n<p>And if you have something like this:<br>\n1 0 0<br>\n1 1 0<br>\n0 0 0</p>\n<p>Looking at the parity of the sum of the pieces in each line:<br>\n1 0 0 -&gt; 1<br>\n1 1 0 -&gt; 0<br>\n0 0 0 -&gt; 0</p>\n<p>If you click anywhere you are going to add 3 (mod 2) in the line you clicked and 1 on he other lines, so the parities will be: 0 1 1. So you can never get all the parities equal to 0, which means there is no solution and the program should return -1.</p>\n<p>What have I done so far:<br>\nThe first thing was noticing that saying the minimum number of clicks to arrive at all lights turned off is the same as the minimum number of clicks required to arrive at a configuration starting from all lights turned off.<br>\nThe next thing was creating a linear system in base 2. Since it makes no sense to click more then once at each light, all I have to decide is if I should click or not on a given light.<br>\ni1 i2 i3<br>\ni4 i5 i6<br>\ni7 i8 i9<br>\ni1 is the state of light 1 in the input (0 if this off, 1 if its on)<br>\nSo if l1 is 0 if I don't click on light 1 and 1 otherwise, I know that:<br>\nl1 + l2 + l3 + l4 + l7 = i1 (mod 2)<br>\nl1 + l2 + l3 + l5 + l8 = i2 (mod 2)<br>\n.<br>\n.<br>\n.<br>\nl3 + l6 + l7 + l8 + l9 = i9 (mod 2)<br>\n(e.g. light 1 is on if I click on a odd number of lights among 1, 2, 3, 4 and 7)<br>\nSo I can do Gaussian elimination (mod 2) and if the system is uniquely determined it even finds the (minimum) solution. This can also tell when a given grid is impossible to solve. Good news is, when n (the size of the initial matrix) is even, it's always uniquely determined so this solution works. The problem is finding a minimum solution when n is odd but the system is solvable. One idea is to expand the matrix to a size n+1 and solve there. The problem with this idea is that I would have to test all 2**2n - 2 ways to expand and look for the smallest.<br>\nI found some research papers about it (<a href=\"http://www.sciencedirect.com/science/article/pii/S0012365X07000714\" target=\"_blank\" title=\"http://www.sciencedirect.com/science/article/pii/S0012365X07000714\">http://www.sciencedirect.com/science/article/pii/S0012365X07000714</a> <a href=\"http://people.math.sfu.ca/~jtmulhol/math302/notes/24-Lights-Out.pdf\" target=\"_blank\" title=\"http://people.math.sfu.ca/~jtmulhol/math302/notes/24-Lights-Out.pdf\">http://people.math.sfu.ca/~jtmulhol/math302/notes/24-Lights-Out.pdf</a> <a href=\"http://christianepeters.files.wordpress.com/2013/03/20130314-msr.pdf\" target=\"_blank\" title=\"http://christianepeters.files.wordpress.com/2013/03/20130314-msr.pdf\">http://christianepeters.files.wordpress.com/2013/03/20130314-msr.pdf</a>), and it turns out that this is a NP-complete problem. Since the input size is always smaller then 15x15, an exponential solution could work, but my current exponential solution it's O(2<strong>(2n - 2)*n</strong>k)  and that is to slow, even for an input size of 15x15. If anyone has any idea of some way of improving my solution, or of a completely different way of solving it I would love to hear about it.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 31679370,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "alicescarpa@gmail.com",
            "sender_full_name": "Alice Duarte Scarpa (W1'14)",
            "sender_id": 6920,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "challenge problem",
            "submessages": [],
            "timestamp": 1417455715,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/5fc3428127f9bf92b1d03f9694617e10?d=identicon&version=1",
            "client": "website",
            "content": "<p>hey for any interested in algorithms, let's meet in babbage</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 31687724,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "irvin.hwang@gmail.com",
            "sender_full_name": "Irvin Hwang (m6'19)",
            "sender_id": 6916,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "group study",
            "submessages": [],
            "timestamp": 1417464725,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/cfb007fa9d7d0b704bab5e7fe573f229?d=identicon&version=1",
            "client": "website",
            "content": "<p>I think of the residual graph as sort of your graph of \"options\" or things you can do to the flow. You have a backwards edge for existing flow, because you can \"undo\" that flow and send it through another edge instead, and you have a forward edge with your residual capacity because that's how much flow you can send through those pipes.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 31738745,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "alanwang100@gmail.com",
            "sender_full_name": "Alan Wang (W1'14)",
            "sender_id": 6919,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Ford-Fulkerson",
            "submessages": [],
            "timestamp": 1417544972,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/d31c78cf8a71b368d9c4fb5e9333af5b4e5a497c?x=x&version=1",
            "client": "website",
            "content": "<p>Imagine you are in the middle of running your algorithm, there is some flow going through the network but not the a maximal flow. The residual network gives you the remaining capacities of all edges, so the amount of additional flow allowed on each edge.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 31739450,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "mdulieu@gmail.com",
            "sender_full_name": "Muriel Dulieu Holzer (F2'14)",
            "sender_id": 6694,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Ford-Fulkerson",
            "submessages": [],
            "timestamp": 1417545830,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/17667b016b1223d83542993e3d873fc702a95962?x=x&version=1",
            "client": "ZulipiOS",
            "content": "<p>Thanks yall! I ended up getting a good explanation from a friend. </p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 31745194,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "djj2115cu@gmail.com",
            "sender_full_name": "Daria Jung (S1'14)",
            "sender_id": 5857,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Ford-Fulkerson",
            "submessages": [],
            "timestamp": 1417552691,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/03cff489ede3515ab64c9db9d96e362f?d=identicon&version=1",
            "client": "website",
            "content": "<p>I've pushed <a href=\"https://github.com/fcaneto/stanford_algorithms_coursera/blob/master/k-way-merge.py\" target=\"_blank\" title=\"https://github.com/fcaneto/stanford_algorithms_coursera/blob/master/k-way-merge.py\">my solution to the k-way-merge problem</a>. Would you do it differently? My idea here is encourage others to push/show/review code and keep the group engaged during the week as well.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 31803681,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "fernando.neto@gmail.com",
            "sender_full_name": "Fernando Andrade (W1'14)",
            "sender_id": 6923,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "group study",
            "submessages": [],
            "timestamp": 1417645259,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/5fc3428127f9bf92b1d03f9694617e10?d=identicon&version=1",
            "client": "website",
            "content": "<p>not sure if this is still happening, but i'm skipping today to attend the javascript prototype workshop.  have fun!</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 32025118,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "irvin.hwang@gmail.com",
            "sender_full_name": "Irvin Hwang (m6'19)",
            "sender_id": 6916,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "group study",
            "submessages": [],
            "timestamp": 1418069977,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/a897e9d6a0e8aff13a39e0515c38ee2d9482c809?x=x&version=1",
            "client": "desktop app Mac 0.4.4",
            "content": "<p>Hey all. Diving into algos post-batch and stumbled on this treasure trove of free pdfs of just about every reference book on algorithms you could ever want: <a href=\"https://drive.google.com/folderview?id=0B2uJazaRVsV1Z2lSdlVLbmZzOGM&amp;usp=sharing\" target=\"_blank\" title=\"https://drive.google.com/folderview?id=0B2uJazaRVsV1Z2lSdlVLbmZzOGM&amp;usp=sharing\">https://drive.google.com/folderview?id=0B2uJazaRVsV1Z2lSdlVLbmZzOGM&amp;usp=sharing</a></p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 35242646,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "guest.austin@gmail.com",
            "sender_full_name": "Austin Guest (they) (SP2'19)",
            "sender_id": 6930,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "treasure trove of also books",
            "submessages": [],
            "timestamp": 1424195196,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/fd02172d3840a7823c781bc1cb282bd34f93b878?x=x&version=4",
            "client": "website",
            "content": "<p>gif me jackpot</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 35242791,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "eric.hambro@gmail.com",
            "sender_full_name": "Eric Hambro (he) (m7'19)",
            "sender_id": 7647,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "treasure trove of also books",
            "submessages": [],
            "timestamp": 1424195344,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/0507a8de466d3310f1160062afbe222a?d=identicon&version=1",
            "client": "API: Python",
            "content": "<p><a href=\"http://media3.giphy.com/media/i4XWgbCXxZFiU/200w.gif\" target=\"_blank\" title=\"http://media3.giphy.com/media/i4XWgbCXxZFiU/200w.gif\">http://media3.giphy.com/media/i4XWgbCXxZFiU/200w.gif</a></p>\n<div class=\"message_inline_image\"><a href=\"http://media3.giphy.com/media/i4XWgbCXxZFiU/200w.gif\" target=\"_blank\" title=\"http://media3.giphy.com/media/i4XWgbCXxZFiU/200w.gif\"><img src=\"https://external-content.zulipcdn.net/2a9d65bcf3815225c562bdc6aac937d5cc4b49b9/687474703a2f2f6d65646961332e67697068792e636f6d2f6d656469612f6934585767624358785a4669552f323030772e676966\"></a></div>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 35242793,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "gif-bot@students.hackerschool.com",
            "sender_full_name": "gif bot",
            "sender_id": 5951,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "treasure trove of also books",
            "submessages": [],
            "timestamp": 1424195345,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/3ca604eb0c0cfa22b4a10fc739c056c8?d=identicon&version=1",
            "client": "website",
            "content": "<p>If you like that, you'll love <a href=\"https://github.com/vhf/free-programming-books\" target=\"_blank\" title=\"https://github.com/vhf/free-programming-books\">https://github.com/vhf/free-programming-books</a></p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 35244665,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "lukeadba@gmail.com",
            "sender_full_name": "Luke Barone-Adesi (he) (F'13)",
            "sender_id": 2903,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "treasure trove of also books",
            "submessages": [],
            "timestamp": 1424197595,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/3ca604eb0c0cfa22b4a10fc739c056c8?d=identicon&version=1",
            "client": "website",
            "content": "<p>Specifically, <a href=\"https://github.com/vhf/free-programming-books/blob/master/free-programming-books.md#algorithms--data-structures\" target=\"_blank\" title=\"https://github.com/vhf/free-programming-books/blob/master/free-programming-books.md#algorithms--data-structures\">https://github.com/vhf/free-programming-books/blob/master/free-programming-books.md#algorithms--data-structures</a></p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 35244959,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "lukeadba@gmail.com",
            "sender_full_name": "Luke Barone-Adesi (he) (F'13)",
            "sender_id": 2903,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "treasure trove of also books",
            "submessages": [],
            "timestamp": 1424197854,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/3ca604eb0c0cfa22b4a10fc739c056c8?d=identicon&version=1",
            "client": "website",
            "content": "<p>(It also has the bonus that everything on it is intentionally free, as opposed to happens to be floating around the internet).</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 35245358,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "lukeadba@gmail.com",
            "sender_full_name": "Luke Barone-Adesi (he) (F'13)",
            "sender_id": 2903,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "treasure trove of also books",
            "submessages": [],
            "timestamp": 1424198190,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/dbbaab1a54e2028c675e39c17cc064dd?d=identicon&version=1",
            "client": "Android",
            "content": "<p>For any women* identified, I'm going to the Women Who Code algorithms thing tonight, there are still spots and RSVP s close in an hour. Check their meetup if interested</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 35286311,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "pamela.selle@gmail.com",
            "sender_full_name": "Pam Selle (she) (m1'19)",
            "sender_id": 7653,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "women who code 2/18",
            "submessages": [],
            "timestamp": 1424265519,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/59d271635f877633887d5e7b56b961b3?d=identicon&version=1",
            "client": "website",
            "content": "<p><span class=\"user-mention\" data-user-email=\"pamela.selle@gmail.com\">@Pam Selle (SP1'15)</span> thanks so much for posting this, I wanted to go to one of these meetups many times before but it was always full and I never got to rsvp in time! </p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 35287453,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "cvitanovic.jelena@gmail.com",
            "sender_full_name": "Jelena Cvitanovic (W2'15)",
            "sender_id": 7085,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "women who code 2/18",
            "submessages": [],
            "timestamp": 1424268033,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/dbbaab1a54e2028c675e39c17cc064dd?d=identicon&version=1",
            "client": "desktop app Mac 0.4.4",
            "content": "<p><span class=\"user-mention\" data-user-email=\"cvitanovic.jelena@gmail.com\">@Jelena Cvitanovic (W2'15)</span> Are you going this tonight?</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 35314389,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "pamela.selle@gmail.com",
            "sender_full_name": "Pam Selle (she) (m1'19)",
            "sender_id": 7653,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "women who code 2/18",
            "submessages": [],
            "timestamp": 1424297060,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/59d271635f877633887d5e7b56b961b3?d=identicon&version=1",
            "client": "website",
            "content": "<p>I stayed home today because I'm sick,I thought maybe I would be better by afternoon, but I'm still feeling weak :/ so I canceled my RSVP..I subscribed for email notifications on next events so hopefully I'll go next time. you can maybe tomorrow debrief me on  how does the prep looked like and what are some useful tips they shared? </p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 35314562,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "cvitanovic.jelena@gmail.com",
            "sender_full_name": "Jelena Cvitanovic (W2'15)",
            "sender_id": 7085,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "women who code 2/18",
            "submessages": [],
            "timestamp": 1424297322,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/dbbaab1a54e2028c675e39c17cc064dd?d=identicon&version=1",
            "client": "desktop app Mac 0.4.4",
            "content": "<p><span class=\"user-mention\" data-user-email=\"cvitanovic.jelena@gmail.com\">@Jelena Cvitanovic (W2'15)</span> <img alt=\":thumbsup:\" class=\"emoji\" src=\"static/third/gemoji/images/emoji/thumbsup.png\" title=\":thumbsup:\"> </p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 35316688,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "pamela.selle@gmail.com",
            "sender_full_name": "Pam Selle (she) (m1'19)",
            "sender_id": 7653,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "women who code 2/18",
            "submessages": [],
            "timestamp": 1424299608,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/a2c54603a7ffb0dbc912f860fc464037ad92d79c?x=x&version=1",
            "client": "desktop app Mac 0.4.4",
            "content": "<p>Thanks for posting about this event! I attended and it was quite fun. I have the sheet of problems they gave out in case anyone of you is interested.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 35351398,
            "is_me_message": false,
            "last_edit_timestamp": 1424361124,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "marie.clemessy@gmail.com",
            "sender_full_name": "Marie Charlotte-Amalie Clemessy (she) (W1'14)",
            "sender_id": 6914,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "women who code 2/18",
            "submessages": [],
            "timestamp": 1424361109,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/59d271635f877633887d5e7b56b961b3?d=identicon&version=1",
            "client": "website",
            "content": "<p><span class=\"user-mention\" data-user-email=\"marie.clemessy@gmail.com\">@Marie Clemessy (W1'14)</span>  I'm interested!:) </p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 35353782,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "cvitanovic.jelena@gmail.com",
            "sender_full_name": "Jelena Cvitanovic (W2'15)",
            "sender_id": 7085,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "women who code 2/18",
            "submessages": [],
            "timestamp": 1424364034,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/a2c54603a7ffb0dbc912f860fc464037ad92d79c?x=x&version=1",
            "client": "desktop app Mac 0.4.4",
            "content": "<p>I'll try to scan it and put it on Dropbox tonight ;)</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 35354020,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "marie.clemessy@gmail.com",
            "sender_full_name": "Marie Charlotte-Amalie Clemessy (she) (W1'14)",
            "sender_id": 6914,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "women who code 2/18",
            "submessages": [],
            "timestamp": 1424364278,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/dbbaab1a54e2028c675e39c17cc064dd?d=identicon&version=1",
            "client": "desktop app Mac 0.4.4",
            "content": "<p><span class=\"user-mention\" data-user-email=\"marie.clemessy@gmail.com\">@Marie Clemessy (W1'14)</span> I went too! It was good. Would recommend. I thought the jobs pitch at the beginning was a little long tho</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 35354366,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "pamela.selle@gmail.com",
            "sender_full_name": "Pam Selle (she) (m1'19)",
            "sender_id": 7653,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "women who code 2/18",
            "submessages": [],
            "timestamp": 1424364721,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/a2c54603a7ffb0dbc912f860fc464037ad92d79c?x=x&version=1",
            "client": "desktop app Mac 0.4.4",
            "content": "<p>I completely agree. The jobs talk was long and boring and not informative. Any company could have said the exact same thing...</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 35354422,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "marie.clemessy@gmail.com",
            "sender_full_name": "Marie Charlotte-Amalie Clemessy (she) (W1'14)",
            "sender_id": 6914,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "women who code 2/18",
            "submessages": [],
            "timestamp": 1424364764,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/fd02172d3840a7823c781bc1cb282bd34f93b878?x=x&version=4",
            "client": "desktop app Mac 0.4.4",
            "content": "<p>I've got a sitch where i think i have something similar to a longest path problem (find the longest path in m nodes with n edges each). according to wikipedia its NPhard (booo), but there are ways to do approximations and is 'fixed parameter tractable'. i'm only trying to do this for 100 nodes (about 8 nodes each) so before struggling in vain for 3 hrs and giving up, i thought I'd throw this out to zulip. is there anyone to talk to about this (even if to discourage me)?</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 35375513,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "eric.hambro@gmail.com",
            "sender_full_name": "Eric Hambro (he) (m7'19)",
            "sender_id": 7647,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "longest path problem",
            "submessages": [],
            "timestamp": 1424384917,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/a2c54603a7ffb0dbc912f860fc464037ad92d79c?x=x&version=1",
            "client": "desktop app Mac 0.4.4",
            "content": "<p>Hey, this is the list of questions: <a href=\"http://meetupresources.herokuapp.com/whiteboard.html\" target=\"_blank\" title=\"http://meetupresources.herokuapp.com/whiteboard.html\">http://meetupresources.herokuapp.com/whiteboard.html</a> <span class=\"user-mention\" data-user-email=\"cvitanovic.jelena@gmail.com\">@Jelena Cvitanovic (W2'15)</span> </p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 35534871,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "marie.clemessy@gmail.com",
            "sender_full_name": "Marie Charlotte-Amalie Clemessy (she) (W1'14)",
            "sender_id": 6914,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "women who code 2/18",
            "submessages": [],
            "timestamp": 1424705589,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/59d271635f877633887d5e7b56b961b3?d=identicon&version=1",
            "client": "website",
            "content": "<p>awesome! thanks so much, <span class=\"user-mention\" data-user-email=\"marie.clemessy@gmail.com\">@Marie Clemessy (W1'14)</span> </p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 35535515,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "cvitanovic.jelena@gmail.com",
            "sender_full_name": "Jelena Cvitanovic (W2'15)",
            "sender_id": 7085,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "women who code 2/18",
            "submessages": [],
            "timestamp": 1424706468,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/dbbaab1a54e2028c675e39c17cc064dd?d=identicon&version=1",
            "client": "desktop app Mac 0.4.4",
            "content": "<p>What's the topic for tomorrow?</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 35612658,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "pamela.selle@gmail.com",
            "sender_full_name": "Pam Selle (she) (m1'19)",
            "sender_id": 7653,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "group study",
            "submessages": [],
            "timestamp": 1424818206,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/68d40c5cc1496c2abc1f862dd148a036?d=identicon&version=1",
            "client": "website",
            "content": "<p>Computing the strongly connected components in a graph - unless somebody else has one they want to suggest?</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 35612723,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "lisa.vangelder@gmail.com",
            "sender_full_name": "Lisa van Gelder (W2'15)",
            "sender_id": 7086,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "group study",
            "submessages": [],
            "timestamp": 1424818295,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/3eecffed17b5aa87b187705e2ce6984c?d=identicon&version=1",
            "client": "desktop app Mac 0.4.4",
            "content": "<p>Are we off the videos, or just returning to the older stuff? Did you guys do min heaps and djikstra last week?</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 35612805,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "mateorod9@gmail.com",
            "sender_full_name": "Mateo Rodriguez (W2'15)",
            "sender_id": 7077,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "group study",
            "submessages": [],
            "timestamp": 1424818364,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/dbbaab1a54e2028c675e39c17cc064dd?d=identicon&version=1",
            "client": "desktop app Mac 0.4.4",
            "content": "<p>Uh, what video is that? ha</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 35612807,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "pamela.selle@gmail.com",
            "sender_full_name": "Pam Selle (she) (m1'19)",
            "sender_id": 7653,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "group study",
            "submessages": [],
            "timestamp": 1424818367,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/68d40c5cc1496c2abc1f862dd148a036?d=identicon&version=1",
            "client": "website",
            "content": "<p>Coursera algorithms part one. This week is how to implement a hash set, which we can discuss but I think that'll be short</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 35612832,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "lisa.vangelder@gmail.com",
            "sender_full_name": "Lisa van Gelder (W2'15)",
            "sender_id": 7086,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "group study",
            "submessages": [],
            "timestamp": 1424818405,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/68d40c5cc1496c2abc1f862dd148a036?d=identicon&version=1",
            "client": "website",
            "content": "<p>scc also covers the difference between depth first and breadth first search which may be interesting to the spring 1s</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 35612921,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "lisa.vangelder@gmail.com",
            "sender_full_name": "Lisa van Gelder (W2'15)",
            "sender_id": 7086,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "group study",
            "submessages": [],
            "timestamp": 1424818490,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/3eecffed17b5aa87b187705e2ce6984c?d=identicon&version=1",
            "client": "desktop app Mac 0.4.4",
            "content": "<p>Did you guys do minheaps, Lisa?</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 35613537,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "mateorod9@gmail.com",
            "sender_full_name": "Mateo Rodriguez (W2'15)",
            "sender_id": 7077,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "group study",
            "submessages": [],
            "timestamp": 1424819147,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/42d35e1484ccf00222c531d7bd51c46142ee9ef4?x=x&version=1",
            "client": "desktop app Mac 0.4.4",
            "content": "<p><a href=\"https://algorithmia.com\" target=\"_blank\" title=\"https://algorithmia.com\">An Open Marketplace For Algorithms</a> ~ Interesting\u2026</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 36634132,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "gnclmorais@gmail.com",
            "sender_full_name": "Gon\u00e7alo Morais (SP1'15)",
            "sender_id": 7631,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Algorithmia",
            "submessages": [],
            "timestamp": 1426378152,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/4b597ab5f2014ba89574c81725a781bb?d=identicon&version=1",
            "client": "website",
            "content": "<p><span class=\"user-mention\" data-user-email=\"mehmet.serkan.apaydin@gmail.com\">@Mehmet Serkan Apaydin (SP2'15)</span> will be doing a algorithms talk at 3pm in hopper</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 37855359,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "rahulsharma2001@gmail.com",
            "sender_full_name": "Rahul Sharma (SP2'15)",
            "sender_id": 7862,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "group study",
            "submessages": [],
            "timestamp": 1428518992,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/28427e9335cecebc2d8cadc90c1bd46516bd589f?x=x&version=3",
            "client": "desktop app Mac 0.4.4",
            "content": "<p>So, long story short, I got an <a href=\"https://www.interviewcake.com/\" target=\"_blank\" title=\"https://www.interviewcake.com/\">https://www.interviewcake.com/</a> premium account that I just impulse bought. To make me feel better about my spending habits, I would like to share it with everyone at RC, maybe we could go over the specific algorithmic problems. The site is actually pretty good and has a free trial so you should check it out and ping me if you want to pair on it. Byee</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 38146945,
            "is_me_message": false,
            "last_edit_timestamp": 1429066919,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "darthmincho@gmail.com",
            "sender_full_name": "Carlos Rey (SP2'15)",
            "sender_id": 7875,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Interview Cake",
            "submessages": [],
            "timestamp": 1429066746,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/28427e9335cecebc2d8cadc90c1bd46516bd589f?x=x&version=3",
            "client": "desktop app Mac 0.4.4",
            "content": "<p>cc <span class=\"user-mention\" data-user-email=\"coleamurphy@gmail.com\">@Cole Murphy (SP2'15)</span> <span class=\"user-mention\" data-user-email=\"mehmet.serkan.apaydin@gmail.com\">@Mehmet Serkan Apaydin (SP2'15)</span> <span class=\"user-mention\" data-user-email=\"rahulsharma2001@gmail.com\">@Rahul Sharma (SP2'15)</span> <span class=\"user-mention\" data-user-email=\"erisa85d@gmail.com\">@Erisa Dervishi  (SP2'15)</span> <span class=\"user-mention\" data-user-email=\"emmanouilmatsis@gmail.com\">@Emmanouil Matsis (SP2'15)</span> </p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 38146951,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "darthmincho@gmail.com",
            "sender_full_name": "Carlos Rey (SP2'15)",
            "sender_id": 7875,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Interview Cake",
            "submessages": [],
            "timestamp": 1429066782,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/e08fe80fd3eb696b931b953b25d789d9?d=identicon&version=1",
            "client": "desktop app Mac 0.4.4",
            "content": "<p>I'll look it over!</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 38146954,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "coleamurphy@gmail.com",
            "sender_full_name": "Cole Murphy (she) (m2'18)",
            "sender_id": 7859,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Interview Cake",
            "submessages": [],
            "timestamp": 1429066802,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/cac6d1e6b078dbe912eb03b8d30470787030d330?x=x&version=2",
            "client": "website",
            "content": "<p>great <span class=\"user-mention\" data-user-email=\"darthmincho@gmail.com\">@Carlos Flores (SP2'15)</span> , we can solve questions from the site tomorrow</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 38147034,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "msapaydin@gmail.com",
            "sender_full_name": "Mehmet Serkan Apaydin (SP2'15)",
            "sender_id": 7872,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Interview Cake",
            "submessages": [],
            "timestamp": 1429066926,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/28427e9335cecebc2d8cadc90c1bd46516bd589f?x=x&version=3",
            "client": "desktop app Mac 0.4.4",
            "content": "<p>Yes, what I like the most about the site, is that it pushes you to answer with the most efficient solution, walks you through the process, and they're actual interview questions from AppGoogleBook</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 38147054,
            "is_me_message": false,
            "last_edit_timestamp": 1429067017,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "darthmincho@gmail.com",
            "sender_full_name": "Carlos Rey (SP2'15)",
            "sender_id": 7875,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Interview Cake",
            "submessages": [],
            "timestamp": 1429066995,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/cac6d1e6b078dbe912eb03b8d30470787030d330?x=x&version=2",
            "client": "website",
            "content": "<p>we can talk tomorrow if you like <span class=\"user-mention\" data-user-email=\"eric.hambro@gmail.com\">@Eric Hambro (SP1'15)</span> I think algorithm design manual talks about this</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 38147539,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "msapaydin@gmail.com",
            "sender_full_name": "Mehmet Serkan Apaydin (SP2'15)",
            "sender_id": 7872,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "longest path problem",
            "submessages": [],
            "timestamp": 1429068141,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/42d35e1484ccf00222c531d7bd51c46142ee9ef4?x=x&version=1",
            "client": "desktop app Mac 0.4.4",
            "content": "<p>Oh, that sounds awesome\u2026!</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 38169390,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "gnclmorais@gmail.com",
            "sender_full_name": "Gon\u00e7alo Morais (SP1'15)",
            "sender_id": 7631,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Interview Cake",
            "submessages": [],
            "timestamp": 1429113114,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/28427e9335cecebc2d8cadc90c1bd46516bd589f?x=x&version=3",
            "client": "desktop app Mac 0.4.4",
            "content": "<p>You're welcome to join us too, <span class=\"user-mention\" data-user-email=\"gnclmorais@gmail.com\">@Gon\u00e7alo Morais (SP1'15)</span> </p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 38169461,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "darthmincho@gmail.com",
            "sender_full_name": "Carlos Rey (SP2'15)",
            "sender_id": 7875,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Interview Cake",
            "submessages": [],
            "timestamp": 1429113199,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/42d35e1484ccf00222c531d7bd51c46142ee9ef4?x=x&version=1",
            "client": "desktop app Mac 0.4.4",
            "content": "<p><a href=\"http://media.tumblr.com/tumblr_lpg7d7MbHe1qcdl9c.gif\" target=\"_blank\" title=\"http://media.tumblr.com/tumblr_lpg7d7MbHe1qcdl9c.gif\">Yay, cool!</a></p>\n<div class=\"message_inline_image\"><a href=\"http://media.tumblr.com/tumblr_lpg7d7MbHe1qcdl9c.gif\" target=\"_blank\" title=\"http://media.tumblr.com/tumblr_lpg7d7MbHe1qcdl9c.gif\"><img src=\"https://external-content.zulipcdn.net/b3354603bb7b532acfe8ae243711b330cfb0a7a0/687474703a2f2f6d656469612e74756d626c722e636f6d2f74756d626c725f6c70673764374d624865317163646c39632e676966\"></a></div>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 38169549,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "gnclmorais@gmail.com",
            "sender_full_name": "Gon\u00e7alo Morais (SP1'15)",
            "sender_id": 7631,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Interview Cake",
            "submessages": [],
            "timestamp": 1429113302,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/42d35e1484ccf00222c531d7bd51c46142ee9ef4?x=x&version=1",
            "client": "desktop app Mac 0.4.4",
            "content": "<p>When will it be?</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 38169552,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "gnclmorais@gmail.com",
            "sender_full_name": "Gon\u00e7alo Morais (SP1'15)",
            "sender_id": 7631,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Interview Cake",
            "submessages": [],
            "timestamp": 1429113304,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/fd02172d3840a7823c781bc1cb282bd34f93b878?x=x&version=4",
            "client": "desktop app Mac 0.4.4",
            "content": "<p>thanks mehmet but i ended up moving on w a diff project. thanks though!</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 38169657,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "eric.hambro@gmail.com",
            "sender_full_name": "Eric Hambro (he) (m7'19)",
            "sender_id": 7647,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "longest path problem",
            "submessages": [],
            "timestamp": 1429113417,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/00e64691f30328787e84b912b5cb6581?d=identicon&version=1",
            "client": "website",
            "content": "<p>I'd join in for some song and dance!</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 38169899,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "robmalko@gmail.com",
            "sender_full_name": "Robert Malko (SP1'15)",
            "sender_id": 7648,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Interview Cake",
            "submessages": [],
            "timestamp": 1429113663,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/cac6d1e6b078dbe912eb03b8d30470787030d330?x=x&version=2",
            "client": "website",
            "content": "<p>no worries <span class=\"user-mention\" data-user-email=\"eric.hambro@gmail.com\">@Eric Hambro (SP1'15)</span> !</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 38170841,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "msapaydin@gmail.com",
            "sender_full_name": "Mehmet Serkan Apaydin (SP2'15)",
            "sender_id": 7872,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "longest path problem",
            "submessages": [],
            "timestamp": 1429114713,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/4b597ab5f2014ba89574c81725a781bb?d=identicon&version=1",
            "client": "website",
            "content": "<p>Are going over these during algorithms group or later?</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 38172230,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "rahulsharma2001@gmail.com",
            "sender_full_name": "Rahul Sharma (SP2'15)",
            "sender_id": 7862,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Interview Cake",
            "submessages": [],
            "timestamp": 1429116500,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/cac6d1e6b078dbe912eb03b8d30470787030d330?x=x&version=2",
            "client": "website",
            "content": "<p>maybe we can go over them at 16? Or we can spend the whole time solving these questions. either way is fine for me.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 38177016,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "msapaydin@gmail.com",
            "sender_full_name": "Mehmet Serkan Apaydin (SP2'15)",
            "sender_id": 7872,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Interview Cake",
            "submessages": [],
            "timestamp": 1429122372,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/28427e9335cecebc2d8cadc90c1bd46516bd589f?x=x&version=3",
            "client": "desktop app Mac 0.4.4",
            "content": "<p>I'm up for 16:00 or even earlier</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 38177034,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "darthmincho@gmail.com",
            "sender_full_name": "Carlos Rey (SP2'15)",
            "sender_id": 7875,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Interview Cake",
            "submessages": [],
            "timestamp": 1429122388,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/cac6d1e6b078dbe912eb03b8d30470787030d330?x=x&version=2",
            "client": "website",
            "content": "<p>at 15 I was planning to talk about elementary sort algorithms but we can skip and go directly to the questions if y'all decide so</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 38177094,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "msapaydin@gmail.com",
            "sender_full_name": "Mehmet Serkan Apaydin (SP2'15)",
            "sender_id": 7872,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Interview Cake",
            "submessages": [],
            "timestamp": 1429122441,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/28427e9335cecebc2d8cadc90c1bd46516bd589f?x=x&version=3",
            "client": "desktop app Mac 0.4.4",
            "content": "<p>Oh, I have a good series of videos that graphically explaon sorting algorithms and I would like to share it with you all</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 38177194,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "darthmincho@gmail.com",
            "sender_full_name": "Carlos Rey (SP2'15)",
            "sender_id": 7875,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Interview Cake",
            "submessages": [],
            "timestamp": 1429122523,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/28427e9335cecebc2d8cadc90c1bd46516bd589f?x=x&version=3",
            "client": "desktop app Mac 0.4.4",
            "content": "<p>Let's talk sorting algorithms first</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 38177198,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "darthmincho@gmail.com",
            "sender_full_name": "Carlos Rey (SP2'15)",
            "sender_id": 7875,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Interview Cake",
            "submessages": [],
            "timestamp": 1429122531,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/28427e9335cecebc2d8cadc90c1bd46516bd589f?x=x&version=3",
            "client": "desktop app Mac 0.4.4",
            "content": "<p>Is it 3:00 at hoppr?</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 38177205,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "darthmincho@gmail.com",
            "sender_full_name": "Carlos Rey (SP2'15)",
            "sender_id": 7875,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Interview Cake",
            "submessages": [],
            "timestamp": 1429122536,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/cac6d1e6b078dbe912eb03b8d30470787030d330?x=x&version=2",
            "client": "website",
            "content": "<p><span class=\"user-mention\" data-user-email=\"darthmincho@gmail.com\">@Carlos Flores (SP2'15)</span> yes </p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 38177222,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "msapaydin@gmail.com",
            "sender_full_name": "Mehmet Serkan Apaydin (SP2'15)",
            "sender_id": 7872,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Interview Cake",
            "submessages": [],
            "timestamp": 1429122552,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/28427e9335cecebc2d8cadc90c1bd46516bd589f?x=x&version=3",
            "client": "desktop app Mac 0.4.4",
            "content": "<p>OK see yout here</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 38177246,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "darthmincho@gmail.com",
            "sender_full_name": "Carlos Rey (SP2'15)",
            "sender_id": 7875,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Interview Cake",
            "submessages": [],
            "timestamp": 1429122587,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/2de9901913d2f414b7b174d2c2c69a88?d=identicon&version=1",
            "client": "website",
            "content": "<p><span class=\"user-mention\" data-user-email=\"mehmet.serkan.apaydin@gmail.com\">@Mehmet Serkan Apaydin (SP2'15)</span> I'd like to hear the talk on sort algos :)</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 38177622,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "chris@printf.net",
            "sender_full_name": "Chris Ball (SP2'15)",
            "sender_id": 7857,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Interview Cake",
            "submessages": [],
            "timestamp": 1429122969,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/cac6d1e6b078dbe912eb03b8d30470787030d330?x=x&version=2",
            "client": "website",
            "content": "<p><span class=\"user-mention\" data-user-email=\"chris@printf.net\">@Chris Ball (SP2'15)</span> just selection, insertion and shell sort today</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 38177636,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "msapaydin@gmail.com",
            "sender_full_name": "Mehmet Serkan Apaydin (SP2'15)",
            "sender_id": 7872,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Interview Cake",
            "submessages": [],
            "timestamp": 1429122999,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/28427e9335cecebc2d8cadc90c1bd46516bd589f?x=x&version=3",
            "client": "desktop app Mac 0.4.4",
            "content": "<p>We're getting started @ Hopper now <span class=\"user-mention\" data-user-email=\"emmanouilmatsis@gmail.com\">@Emmanouil Matsis (SP2'15)</span> <span class=\"user-mention\" data-user-email=\"coleamurphy@gmail.com\">@Cole Murphy (SP2'15)</span> </p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 38179058,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "darthmincho@gmail.com",
            "sender_full_name": "Carlos Rey (SP2'15)",
            "sender_id": 7875,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Interview Cake",
            "submessages": [],
            "timestamp": 1429124488,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/42d35e1484ccf00222c531d7bd51c46142ee9ef4?x=x&version=1",
            "client": "desktop app Mac 0.4.4",
            "content": "<p>What are the algorithsm, btw?</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 38179070,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "gnclmorais@gmail.com",
            "sender_full_name": "Gon\u00e7alo Morais (SP1'15)",
            "sender_id": 7631,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Interview Cake",
            "submessages": [],
            "timestamp": 1429124500,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/28427e9335cecebc2d8cadc90c1bd46516bd589f?x=x&version=3",
            "client": "desktop app Mac 0.4.4",
            "content": "<p>Right now were going over introduction to sorting algortihms then at 4 well go over the Interview Cake problems</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 38179137,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "darthmincho@gmail.com",
            "sender_full_name": "Carlos Rey (SP2'15)",
            "sender_id": 7875,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Interview Cake",
            "submessages": [],
            "timestamp": 1429124548,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/42d35e1484ccf00222c531d7bd51c46142ee9ef4?x=x&version=1",
            "client": "desktop app Mac 0.4.4",
            "content": "<p>I\u2019ll try to join you at 4 then. :)</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 38179246,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "gnclmorais@gmail.com",
            "sender_full_name": "Gon\u00e7alo Morais (SP1'15)",
            "sender_id": 7631,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Interview Cake",
            "submessages": [],
            "timestamp": 1429124655,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/28427e9335cecebc2d8cadc90c1bd46516bd589f?x=x&version=3",
            "client": "desktop app Mac 0.4.4",
            "content": "<p>Some sorting algorithm visualizations that I really like:<br>\n<a href=\"https://www.youtube.com/watch?v=aXXWXz5rF64\" target=\"_blank\" title=\"https://www.youtube.com/watch?v=aXXWXz5rF64\">https://www.youtube.com/watch?v=aXXWXz5rF64</a><br>\n<a href=\"https://www.youtube.com/watch?v=es2T6KY45cA\" target=\"_blank\" title=\"https://www.youtube.com/watch?v=es2T6KY45cA\">https://www.youtube.com/watch?v=es2T6KY45cA</a><br>\nCheck them out if you like!</p>\n<div class=\"message_inline_image\"><a href=\"https://www.youtube.com/watch?v=aXXWXz5rF64\" target=\"_blank\" title=\"https://www.youtube.com/watch?v=aXXWXz5rF64\"><img src=\"https://i.ytimg.com/vi/aXXWXz5rF64/default.jpg\"></a></div><div class=\"message_inline_image\"><a href=\"https://www.youtube.com/watch?v=es2T6KY45cA\" target=\"_blank\" title=\"https://www.youtube.com/watch?v=es2T6KY45cA\"><img src=\"https://i.ytimg.com/vi/es2T6KY45cA/default.jpg\"></a></div>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 38179951,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "darthmincho@gmail.com",
            "sender_full_name": "Carlos Rey (SP2'15)",
            "sender_id": 7875,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Sorting Visualizations",
            "submessages": [],
            "timestamp": 1429125439,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/2d729de49866b68a285b63d37e19dbd6844fba02?x=x&version=1",
            "client": "website",
            "content": "<p>I really like this one:  <a href=\"https://www.youtube.com/watch?v=kPRA0W1kECg\" target=\"_blank\" title=\"https://www.youtube.com/watch?v=kPRA0W1kECg\">https://www.youtube.com/watch?v=kPRA0W1kECg</a></p>\n<div class=\"message_inline_image\"><a href=\"https://www.youtube.com/watch?v=kPRA0W1kECg\" target=\"_blank\" title=\"https://www.youtube.com/watch?v=kPRA0W1kECg\"><img src=\"https://i.ytimg.com/vi/kPRA0W1kECg/default.jpg\"></a></div>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 38181777,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "scrub.mx@gmail.com",
            "sender_full_name": "Jorge Gonz\u00e1lez (SP2'15)",
            "sender_id": 7852,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Sorting Visualizations",
            "submessages": [],
            "timestamp": 1429127349,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/e08fe80fd3eb696b931b953b25d789d9?d=identicon&version=1",
            "client": "desktop app Mac 0.4.4",
            "content": "<p>I didn't want ti interrupt algorithms, let me know when you guys are starting interview cake!</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 38182125,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "coleamurphy@gmail.com",
            "sender_full_name": "Cole Murphy (she) (m2'18)",
            "sender_id": 7859,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Interview Cake",
            "submessages": [],
            "timestamp": 1429127698,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/2de9901913d2f414b7b174d2c2c69a88?d=identicon&version=1",
            "client": "website",
            "content": "<p><span class=\"user-mention\" data-user-email=\"coleamurphy@gmail.com\">@Cole Murphy (SP2'15)</span> I think right now</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 38182139,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "chris@printf.net",
            "sender_full_name": "Chris Ball (SP2'15)",
            "sender_id": 7857,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Interview Cake",
            "submessages": [],
            "timestamp": 1429127720,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/b05b48dffacfe8bc5336d44718f65da6?d=identicon&version=1",
            "client": "desktop app Mac 0.4.4",
            "content": "<p>What is interview cake?</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 38182147,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "brian@glusman.me",
            "sender_full_name": "Brian Glusman (SP2'15)",
            "sender_id": 7848,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Interview Cake",
            "submessages": [],
            "timestamp": 1429127733,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/cac6d1e6b078dbe912eb03b8d30470787030d330?x=x&version=2",
            "client": "website",
            "content": "<p><a href=\"https://www.youtube.com/watch?v=XaqR3G_NVoo\" target=\"_blank\" title=\"https://www.youtube.com/watch?v=XaqR3G_NVoo\">https://www.youtube.com/watch?v=XaqR3G_NVoo</a></p>\n<div class=\"message_inline_image\"><a href=\"https://www.youtube.com/watch?v=XaqR3G_NVoo\" target=\"_blank\" title=\"https://www.youtube.com/watch?v=XaqR3G_NVoo\"><img src=\"https://i.ytimg.com/vi/XaqR3G_NVoo/default.jpg\"></a></div>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 38182164,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "msapaydin@gmail.com",
            "sender_full_name": "Mehmet Serkan Apaydin (SP2'15)",
            "sender_id": 7872,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Sorting Visualizations",
            "submessages": [],
            "timestamp": 1429127748,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/b05b48dffacfe8bc5336d44718f65da6?d=identicon&version=1",
            "client": "desktop app Mac 0.4.4",
            "content": "<p>I might be interested?  but not sure what that means :-)</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 38182165,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "brian@glusman.me",
            "sender_full_name": "Brian Glusman (SP2'15)",
            "sender_id": 7848,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Interview Cake",
            "submessages": [],
            "timestamp": 1429127751,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/b05b48dffacfe8bc5336d44718f65da6?d=identicon&version=1",
            "client": "desktop app Mac 0.4.4",
            "content": "<p>also is there actual cake? :-)  j/k</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 38182170,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "brian@glusman.me",
            "sender_full_name": "Brian Glusman (SP2'15)",
            "sender_id": 7848,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Interview Cake",
            "submessages": [],
            "timestamp": 1429127759,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/42d35e1484ccf00222c531d7bd51c46142ee9ef4?x=x&version=1",
            "client": "desktop app Mac 0.4.4",
            "content": "<p>^ <strong>I was hoping that was well.</strong> I feel cheated.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 38182249,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "gnclmorais@gmail.com",
            "sender_full_name": "Gon\u00e7alo Morais (SP1'15)",
            "sender_id": 7631,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Interview Cake",
            "submessages": [],
            "timestamp": 1429127818,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/42d35e1484ccf00222c531d7bd51c46142ee9ef4?x=x&version=1",
            "client": "desktop app Mac 0.4.4",
            "content": "<p><img alt=\":cake:\" class=\"emoji\" src=\"static/third/gemoji/images/emoji/cake.png\" title=\":cake:\"> <br>\n<img alt=\":octopus:\" class=\"emoji\" src=\"static/third/gemoji/images/emoji/octopus.png\" title=\":octopus:\"> </p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 38182266,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "gnclmorais@gmail.com",
            "sender_full_name": "Gon\u00e7alo Morais (SP1'15)",
            "sender_id": 7631,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Interview Cake",
            "submessages": [],
            "timestamp": 1429127842,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/42d35e1484ccf00222c531d7bd51c46142ee9ef4?x=x&version=1",
            "client": "desktop app Mac 0.4.4",
            "content": "<p><img alt=\":point_up:\" class=\"emoji\" src=\"static/third/gemoji/images/emoji/point_up.png\" title=\":point_up:\"> I love carrier <img alt=\":octopus:\" class=\"emoji\" src=\"static/third/gemoji/images/emoji/octopus.png\" title=\":octopus:\"> so much.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 38182274,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "gnclmorais@gmail.com",
            "sender_full_name": "Gon\u00e7alo Morais (SP1'15)",
            "sender_id": 7631,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Interview Cake",
            "submessages": [],
            "timestamp": 1429127868,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/28427e9335cecebc2d8cadc90c1bd46516bd589f?x=x&version=3",
            "client": "desktop app Mac 0.4.4",
            "content": "<p>Given an array_of_ints, find the highest_product you can get from three of the integers.<br>\nThe input array_of_ints will always have at least three integers.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 38183286,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "darthmincho@gmail.com",
            "sender_full_name": "Carlos Rey (SP2'15)",
            "sender_id": 7875,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Interview Cake",
            "submessages": [],
            "timestamp": 1429128798,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/28427e9335cecebc2d8cadc90c1bd46516bd589f?x=x&version=3",
            "client": "desktop app Mac 0.4.4",
            "content": "<p>Lets go.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 38183292,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "darthmincho@gmail.com",
            "sender_full_name": "Carlos Rey (SP2'15)",
            "sender_id": 7875,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Interview Cake",
            "submessages": [],
            "timestamp": 1429128804,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/28427e9335cecebc2d8cadc90c1bd46516bd589f?x=x&version=3",
            "client": "desktop app Mac 0.4.4",
            "content": "<p><a href=\"https://www.dropbox.com/s/kcmi1mjhxsgmsd7/Highest%20Product%20of%203%20_%20Interview%20Cake.pdf?dl=0\" target=\"_blank\" title=\"https://www.dropbox.com/s/kcmi1mjhxsgmsd7/Highest%20Product%20of%203%20_%20Interview%20Cake.pdf?dl=0\">https://www.dropbox.com/s/kcmi1mjhxsgmsd7/Highest%20Product%20of%203%20_%20Interview%20Cake.pdf?dl=0</a></p>\n<div class=\"message_inline_ref\"><a href=\"https://www.dropbox.com/s/kcmi1mjhxsgmsd7/Highest%20Product%20of%203%20_%20Interview%20Cake.pdf?dl=0\" target=\"_blank\" title=\"Highest Product of 3 _ Interview Cake.pdf\"><img src=\"https://www.dropbox.com/static/images/icons128/page_white_acrobat.png\"></a><div><div class=\"message_inline_image_title\">Highest Product of 3 _ Interview Cake.pdf</div><desc class=\"message_inline_image_desc\"></desc></div></div>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 38184534,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "darthmincho@gmail.com",
            "sender_full_name": "Carlos Rey (SP2'15)",
            "sender_id": 7875,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Interview Cake",
            "submessages": [],
            "timestamp": 1429130267,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/28427e9335cecebc2d8cadc90c1bd46516bd589f?x=x&version=3",
            "client": "desktop app Mac 0.4.4",
            "content": "<p><a href=\"http://stackoverflow.com/questions/487258/plain-english-explanation-of-big-o\" target=\"_blank\" title=\"http://stackoverflow.com/questions/487258/plain-english-explanation-of-big-o\">http://stackoverflow.com/questions/487258/plain-english-explanation-of-big-o</a></p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 38184621,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "darthmincho@gmail.com",
            "sender_full_name": "Carlos Rey (SP2'15)",
            "sender_id": 7875,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Interview Cake",
            "submessages": [],
            "timestamp": 1429130355,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/cac6d1e6b078dbe912eb03b8d30470787030d330?x=x&version=2",
            "client": "website",
            "content": "<p>here is the apple stock question also mentioned here: <a href=\"http://courses.csail.mit.edu/iap/interview/materials.php\" target=\"_blank\" title=\"http://courses.csail.mit.edu/iap/interview/materials.php\">http://courses.csail.mit.edu/iap/interview/materials.php</a></p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 38184993,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "msapaydin@gmail.com",
            "sender_full_name": "Mehmet Serkan Apaydin (SP2'15)",
            "sender_id": 7872,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Interview Cake",
            "submessages": [],
            "timestamp": 1429130835,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/28427e9335cecebc2d8cadc90c1bd46516bd589f?x=x&version=3",
            "client": "desktop app Mac 0.4.4",
            "content": "<p><a href=\"https://www.dropbox.com/s/h72e38dvddowddf/Apple%20Stocks%20_%20Interview%20Cake.pdf?dl=0\" target=\"_blank\" title=\"https://www.dropbox.com/s/h72e38dvddowddf/Apple%20Stocks%20_%20Interview%20Cake.pdf?dl=0\">https://www.dropbox.com/s/h72e38dvddowddf/Apple%20Stocks%20_%20Interview%20Cake.pdf?dl=0</a></p>\n<div class=\"message_inline_ref\"><a href=\"https://www.dropbox.com/s/h72e38dvddowddf/Apple%20Stocks%20_%20Interview%20Cake.pdf?dl=0\" target=\"_blank\" title=\"Apple Stocks _ Interview Cake.pdf\"><img src=\"https://www.dropbox.com/static/images/icons128/page_white_acrobat.png\"></a><div><div class=\"message_inline_image_title\">Apple Stocks _ Interview Cake.pdf</div><desc class=\"message_inline_image_desc\"></desc></div></div>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 38185010,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "darthmincho@gmail.com",
            "sender_full_name": "Carlos Rey (SP2'15)",
            "sender_id": 7875,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Interview Cake",
            "submessages": [],
            "timestamp": 1429130856,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/28427e9335cecebc2d8cadc90c1bd46516bd589f?x=x&version=3",
            "client": "desktop app Mac 0.4.4",
            "content": "<p>Dropbox Folder Link: <a href=\"https://www.dropbox.com/sh/fzbpwjhydfv24gb/AAAXzK6iq7_kyJXa39mFo-9Ja?dl=0\" target=\"_blank\" title=\"https://www.dropbox.com/sh/fzbpwjhydfv24gb/AAAXzK6iq7_kyJXa39mFo-9Ja?dl=0\">https://www.dropbox.com/sh/fzbpwjhydfv24gb/AAAXzK6iq7_kyJXa39mFo-9Ja?dl=0</a></p>\n<div class=\"message_inline_ref\"><a href=\"https://www.dropbox.com/sh/fzbpwjhydfv24gb/AAAXzK6iq7_kyJXa39mFo-9Ja?dl=0\" target=\"_blank\" title=\"Cake\"><img src=\"https://www.dropbox.com/static/images/icons128/folder_dropbox.png\"></a><div><div class=\"message_inline_image_title\">Cake</div><desc class=\"message_inline_image_desc\"></desc></div></div>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 38185114,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "darthmincho@gmail.com",
            "sender_full_name": "Carlos Rey (SP2'15)",
            "sender_id": 7875,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Interview Cake",
            "submessages": [],
            "timestamp": 1429130973,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/28427e9335cecebc2d8cadc90c1bd46516bd589f?x=x&version=3",
            "client": "desktop app Mac 0.4.4",
            "content": "<p>Article on Big O notation (complexity) <a href=\"https://www.interviewcake.com/big-o-notation-time-and-space-complexity\" target=\"_blank\" title=\"https://www.interviewcake.com/big-o-notation-time-and-space-complexity\">https://www.interviewcake.com/big-o-notation-time-and-space-complexity</a></p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 38185117,
            "is_me_message": false,
            "last_edit_timestamp": 1429131377,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "darthmincho@gmail.com",
            "sender_full_name": "Carlos Rey (SP2'15)",
            "sender_id": 7875,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Interview Cake",
            "submessages": [],
            "timestamp": 1429130976,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/52d3b695b6b7f2105028ce8d55c83326?d=identicon&version=1",
            "client": "website",
            "content": "<p><a href=\"http://www3.cs.stonybrook.edu/~algorith/video-lectures/\" target=\"_blank\" title=\"http://www3.cs.stonybrook.edu/~algorith/video-lectures/\">http://www3.cs.stonybrook.edu/~algorith/video-lectures/</a></p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 38224623,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "arsen.tumanyan@gmail.com",
            "sender_full_name": "Ars\u00e9n Tumanyan (SP2'15)",
            "sender_id": 7860,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Interview Cake",
            "submessages": [],
            "timestamp": 1429201258,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/42d35e1484ccf00222c531d7bd51c46142ee9ef4?x=x&version=1",
            "client": "desktop app Mac 0.4.4",
            "content": "<p>I should you should start adding all those interesting links to <a href=\"https://github.com/recursecenter/wiki/wiki\" target=\"_blank\" title=\"https://github.com/recursecenter/wiki/wiki\">our wiki</a>. Just search for the proper page and write it there (maybe Interview Prep Session?).</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 38224707,
            "is_me_message": false,
            "last_edit_timestamp": 1429201387,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "gnclmorais@gmail.com",
            "sender_full_name": "Gon\u00e7alo Morais (SP1'15)",
            "sender_id": 7631,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Interview Cake",
            "submessages": [],
            "timestamp": 1429201375,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/4726703a7f93ec4a8da91f62b1fe7ade?d=identicon&version=1",
            "client": "website",
            "content": "<p>This is gooood!</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 38224974,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "mudit.ameta@gmail.com",
            "sender_full_name": "Mudit Ameta (he) (SP2'15)",
            "sender_id": 7865,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Interview Cake",
            "submessages": [],
            "timestamp": 1429201685,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/cac6d1e6b078dbe912eb03b8d30470787030d330?x=x&version=2",
            "client": "website",
            "content": "<p>hey <span class=\"user-mention\" data-user-email=\"arsen.tumanyan@gmail.com\">@Arsen Tumanyan (SP2'15)</span>  did you watch the lectures in the StonyBrook page? How do you find it?</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 38225208,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "msapaydin@gmail.com",
            "sender_full_name": "Mehmet Serkan Apaydin (SP2'15)",
            "sender_id": 7872,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Interview Cake",
            "submessages": [],
            "timestamp": 1429202005,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/52d3b695b6b7f2105028ce8d55c83326?d=identicon&version=1",
            "client": "website",
            "content": "<p>I have watched only 1 lecture \"Heapsort / Priority Queues\". I think it's good. </p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 38225834,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "arsen.tumanyan@gmail.com",
            "sender_full_name": "Ars\u00e9n Tumanyan (SP2'15)",
            "sender_id": 7860,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Interview Cake",
            "submessages": [],
            "timestamp": 1429202981,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/52d3b695b6b7f2105028ce8d55c83326?d=identicon&version=1",
            "client": "website",
            "content": "<p>Can't remember how I found them. I had it in my bookmarks :) Most likely by googling</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 38225876,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "arsen.tumanyan@gmail.com",
            "sender_full_name": "Ars\u00e9n Tumanyan (SP2'15)",
            "sender_id": 7860,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Interview Cake",
            "submessages": [],
            "timestamp": 1429203007,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/4726703a7f93ec4a8da91f62b1fe7ade?d=identicon&version=1",
            "client": "website",
            "content": "<p>Would you be cool with holding a session on heapsort and queues <span class=\"user-mention\" data-user-email=\"arsen.tumanyan@gmail.com\">@Arsen Tumanyan (SP2'15)</span> ?</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 38225891,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "mudit.ameta@gmail.com",
            "sender_full_name": "Mudit Ameta (he) (SP2'15)",
            "sender_id": 7865,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Interview Cake",
            "submessages": [],
            "timestamp": 1429203011,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/52d3b695b6b7f2105028ce8d55c83326?d=identicon&version=1",
            "client": "website",
            "content": "<p>I'll need a few days to feel comfortable with them</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 38225913,
            "is_me_message": false,
            "last_edit_timestamp": 1429203085,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "arsen.tumanyan@gmail.com",
            "sender_full_name": "Ars\u00e9n Tumanyan (SP2'15)",
            "sender_id": 7860,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Interview Cake",
            "submessages": [],
            "timestamp": 1429203068,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/cac6d1e6b078dbe912eb03b8d30470787030d330?x=x&version=2",
            "client": "website",
            "content": "<p><span class=\"user-mention\" data-user-email=\"mudit.ameta@gmail.com\">@Mudit Ameta (SP2'15)</span> I will talk about heapsort soon in algorithms session actually </p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 38225920,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "msapaydin@gmail.com",
            "sender_full_name": "Mehmet Serkan Apaydin (SP2'15)",
            "sender_id": 7872,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Interview Cake",
            "submessages": [],
            "timestamp": 1429203086,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/4726703a7f93ec4a8da91f62b1fe7ade?d=identicon&version=1",
            "client": "website",
            "content": "<p>oh sweet! Any tentative date?</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 38225928,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "mudit.ameta@gmail.com",
            "sender_full_name": "Mudit Ameta (he) (SP2'15)",
            "sender_id": 7865,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Interview Cake",
            "submessages": [],
            "timestamp": 1429203110,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/52d3b695b6b7f2105028ce8d55c83326?d=identicon&version=1",
            "client": "website",
            "content": "<p>there you go!</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 38225929,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "arsen.tumanyan@gmail.com",
            "sender_full_name": "Ars\u00e9n Tumanyan (SP2'15)",
            "sender_id": 7860,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Interview Cake",
            "submessages": [],
            "timestamp": 1429203112,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/4726703a7f93ec4a8da91f62b1fe7ade?d=identicon&version=1",
            "client": "website",
            "content": "<p><span class=\"user-mention\" data-user-email=\"arsen.tumanyan@gmail.com\">@Arsen Tumanyan (SP2'15)</span> :3</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 38225931,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "mudit.ameta@gmail.com",
            "sender_full_name": "Mudit Ameta (he) (SP2'15)",
            "sender_id": 7865,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Interview Cake",
            "submessages": [],
            "timestamp": 1429203121,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/cac6d1e6b078dbe912eb03b8d30470787030d330?x=x&version=2",
            "client": "website",
            "content": "<p>every wednesday at 3pm probably the week after next</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 38225964,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "msapaydin@gmail.com",
            "sender_full_name": "Mehmet Serkan Apaydin (SP2'15)",
            "sender_id": 7872,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Interview Cake",
            "submessages": [],
            "timestamp": 1429203129,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/cac6d1e6b078dbe912eb03b8d30470787030d330?x=x&version=2",
            "client": "website",
            "content": "<p>next week quicksort and merge sort </p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 38225975,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "msapaydin@gmail.com",
            "sender_full_name": "Mehmet Serkan Apaydin (SP2'15)",
            "sender_id": 7872,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Interview Cake",
            "submessages": [],
            "timestamp": 1429203143,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/4726703a7f93ec4a8da91f62b1fe7ade?d=identicon&version=1",
            "client": "website",
            "content": "<p>Sweet!</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 38226065,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "mudit.ameta@gmail.com",
            "sender_full_name": "Mudit Ameta (he) (SP2'15)",
            "sender_id": 7865,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Interview Cake",
            "submessages": [],
            "timestamp": 1429203271,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/52d3b695b6b7f2105028ce8d55c83326?d=identicon&version=1",
            "client": "website",
            "content": "<p>(deleted)</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 38237213,
            "is_me_message": false,
            "last_edit_timestamp": 1429217726,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "arsen.tumanyan@gmail.com",
            "sender_full_name": "Ars\u00e9n Tumanyan (SP2'15)",
            "sender_id": 7860,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Sorting Visualizations",
            "submessages": [],
            "timestamp": 1429217618,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/52d3b695b6b7f2105028ce8d55c83326?d=identicon&version=1",
            "client": "website",
            "content": "<p>I just came across an interesting sorting question. Hint: there is a O(n) solution for this.</p>\n<p>Say you had a million objects in memory (assume we have no memory constraints) all of type UniversityStudent. These objects have two fields:</p>\n<p>String name;<br>\nint numberOfYearsOld;</p>\n<p>What is the fastest way to sort these objects by \"numberOfYearsOld\"?</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 38237325,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "arsen.tumanyan@gmail.com",
            "sender_full_name": "Ars\u00e9n Tumanyan (SP2'15)",
            "sender_id": 7860,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "group study",
            "submessages": [],
            "timestamp": 1429217744,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/cac6d1e6b078dbe912eb03b8d30470787030d330?x=x&version=2",
            "client": "website",
            "content": "<p>put them into bins by their age maybe?</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 38237392,
            "is_me_message": false,
            "last_edit_timestamp": 1429217813,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "msapaydin@gmail.com",
            "sender_full_name": "Mehmet Serkan Apaydin (SP2'15)",
            "sender_id": 7872,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "group study",
            "submessages": [],
            "timestamp": 1429217804,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/cac6d1e6b078dbe912eb03b8d30470787030d330?x=x&version=2",
            "client": "website",
            "content": "<p>I think this is also called bucket sort</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 38237412,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "msapaydin@gmail.com",
            "sender_full_name": "Mehmet Serkan Apaydin (SP2'15)",
            "sender_id": 7872,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "group study",
            "submessages": [],
            "timestamp": 1429217834,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/52d3b695b6b7f2105028ce8d55c83326?d=identicon&version=1",
            "client": "website",
            "content": "<p>You are good Serkan <img alt=\":thumbsup:\" class=\"emoji\" src=\"static/third/gemoji/images/emoji/thumbsup.png\" title=\":thumbsup:\"> </p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 38237422,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "arsen.tumanyan@gmail.com",
            "sender_full_name": "Ars\u00e9n Tumanyan (SP2'15)",
            "sender_id": 7860,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "group study",
            "submessages": [],
            "timestamp": 1429217853,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/cac6d1e6b078dbe912eb03b8d30470787030d330?x=x&version=2",
            "client": "website",
            "content": "<p>I would have responded with a cool emoji but I don't know any :-( (is there a list?)</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 38237487,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "msapaydin@gmail.com",
            "sender_full_name": "Mehmet Serkan Apaydin (SP2'15)",
            "sender_id": 7872,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "group study",
            "submessages": [],
            "timestamp": 1429217909,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/42d35e1484ccf00222c531d7bd51c46142ee9ef4?x=x&version=1",
            "client": "desktop app Mac 0.4.4",
            "content": "<p><span class=\"user-mention\" data-user-email=\"mehmet.serkan.apaydin@gmail.com\">@Mehmet Serkan Apaydin (SP2'15)</span>: <a href=\"https://github.com/akaptur/emoji-bot\" target=\"_blank\" title=\"https://github.com/akaptur/emoji-bot\">https://github.com/akaptur/emoji-bot</a></p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 38237528,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "gnclmorais@gmail.com",
            "sender_full_name": "Gon\u00e7alo Morais (SP1'15)",
            "sender_id": 7631,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "group study",
            "submessages": [],
            "timestamp": 1429217968,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/52d3b695b6b7f2105028ce8d55c83326?d=identicon&version=1",
            "client": "website",
            "content": "<p>put : and type anything that comes to your mind. You may get lucky and get a match with an existing smily. That's what I do <img alt=\":smiley:\" class=\"emoji\" src=\"static/third/gemoji/images/emoji/smiley.png\" title=\":smiley:\"> </p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 38237859,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "arsen.tumanyan@gmail.com",
            "sender_full_name": "Ars\u00e9n Tumanyan (SP2'15)",
            "sender_id": 7860,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "group study",
            "submessages": [],
            "timestamp": 1429218305,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/cac6d1e6b078dbe912eb03b8d30470787030d330?x=x&version=2",
            "client": "website",
            "content": "<p><img alt=\":thumbsup:\" class=\"emoji\" src=\"static/third/gemoji/images/emoji/thumbsup.png\" title=\":thumbsup:\"> thanks!</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 38237863,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "msapaydin@gmail.com",
            "sender_full_name": "Mehmet Serkan Apaydin (SP2'15)",
            "sender_id": 7872,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "group study",
            "submessages": [],
            "timestamp": 1429218308,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/52d3b695b6b7f2105028ce8d55c83326?d=identicon&version=1",
            "client": "website",
            "content": "<p>sorting algorithms explained and visualized - <a href=\"https://www.youtube.com/watch?v=SJwEwA5gOkM\" target=\"_blank\" title=\"https://www.youtube.com/watch?v=SJwEwA5gOkM\">https://www.youtube.com/watch?v=SJwEwA5gOkM</a></p>\n<div class=\"message_inline_image\"><a href=\"https://www.youtube.com/watch?v=SJwEwA5gOkM\" target=\"_blank\" title=\"https://www.youtube.com/watch?v=SJwEwA5gOkM\"><img src=\"https://i.ytimg.com/vi/SJwEwA5gOkM/default.jpg\"></a></div>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 38402858,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "arsen.tumanyan@gmail.com",
            "sender_full_name": "Ars\u00e9n Tumanyan (SP2'15)",
            "sender_id": 7860,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "group study",
            "submessages": [],
            "timestamp": 1429564442,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/cac6d1e6b078dbe912eb03b8d30470787030d330?x=x&version=2",
            "client": "website",
            "content": "<p>Hi, I am planning to go over quicksort and merge sort today, say at 11.30 at Hopper? <span class=\"user-mention\" data-user-email=\"erisa85d@gmail.com\">@Erisa Dervishi  (SP2'15)</span> <span class=\"user-mention\" data-user-email=\"rahulsharma2001@gmail.com\">@Rahul Sharma (SP2'15)</span> <span class=\"user-mention\" data-user-email=\"arsen.tumanyan@gmail.com\">@Arsen Tumanyan (SP2'15)</span> <span class=\"user-mention\" data-user-email=\"darthmincho@gmail.com\">@Carlos Flores (SP2'15)</span> <span class=\"user-mention\" data-user-email=\"anthonyburdi@gmail.com\">@Anthony Burdi (SP1'15)</span> </p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 38491461,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "msapaydin@gmail.com",
            "sender_full_name": "Mehmet Serkan Apaydin (SP2'15)",
            "sender_id": 7872,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "group study",
            "submessages": [],
            "timestamp": 1429714357,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/6cfe3624e3978459cbade1099bada52720bb72e2?x=x&version=1",
            "client": "website",
            "content": "<p>I am in</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 38491602,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "erisa85d@gmail.com",
            "sender_full_name": "Erisa Dervishi (SP2'15)",
            "sender_id": 7870,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "group study",
            "submessages": [],
            "timestamp": 1429714521,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/cac6d1e6b078dbe912eb03b8d30470787030d330?x=x&version=2",
            "client": "website",
            "content": "<p><span class=\"user-mention\" data-user-email=\"mudit.ameta@gmail.com\">@Mudit Ameta (SP2'15)</span> <span class=\"user-mention\" data-user-email=\"scrub.mx@gmail.com\">@Jorge Gonz\u00e1lez Padilla (SP2'15)</span> </p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 38491612,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "msapaydin@gmail.com",
            "sender_full_name": "Mehmet Serkan Apaydin (SP2'15)",
            "sender_id": 7872,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "group study",
            "submessages": [],
            "timestamp": 1429714545,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/cac6d1e6b078dbe912eb03b8d30470787030d330?x=x&version=2",
            "client": "website",
            "content": "<p><span class=\"user-mention\" data-user-email=\"emmanouilmatsis@gmail.com\">@Emmanouil Matsis (SP2'15)</span> </p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 38491623,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "msapaydin@gmail.com",
            "sender_full_name": "Mehmet Serkan Apaydin (SP2'15)",
            "sender_id": 7872,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "group study",
            "submessages": [],
            "timestamp": 1429714562,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/8b7ee495c03e6a2327eb0ab666a6fcb1b740198e?x=x&version=1",
            "client": "desktop app Mac 0.4.4",
            "content": "<p>Sounds good. I'll join in.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 38492707,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "karthik.mallavarapu@gmail.com",
            "sender_full_name": "Karthik Mallavarapu (SP1'15)",
            "sender_id": 7628,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "group study",
            "submessages": [],
            "timestamp": 1429715858,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/cac6d1e6b078dbe912eb03b8d30470787030d330?x=x&version=2",
            "client": "desktop app Windows 0.4.4",
            "content": "<p>ok guys we are starting </p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 38493428,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "msapaydin@gmail.com",
            "sender_full_name": "Mehmet Serkan Apaydin (SP2'15)",
            "sender_id": 7872,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "group study",
            "submessages": [],
            "timestamp": 1429716721,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/4726703a7f93ec4a8da91f62b1fe7ade?d=identicon&version=1",
            "client": "website",
            "content": "<p>I got in late, sorry :(</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 38496846,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "mudit.ameta@gmail.com",
            "sender_full_name": "Mudit Ameta (he) (SP2'15)",
            "sender_id": 7865,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "group study",
            "submessages": [],
            "timestamp": 1429720932,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/0ffccb0870ced6547c9df5d7e7003530132e8ba2?x=x&version=1",
            "client": "website",
            "content": "<p>Thank you for going through all of these with us! <span class=\"user-mention\" data-user-email=\"mehmet.serkan.apaydin@gmail.com\">@Mehmet Serkan Apaydin (SP2'15)</span>  I am learning a great deal. </p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 38498998,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "anthonyburdi@gmail.com",
            "sender_full_name": "Anthony Burdi (SP1'15)",
            "sender_id": 7645,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "group study",
            "submessages": [],
            "timestamp": 1429723666,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/cac6d1e6b078dbe912eb03b8d30470787030d330?x=x&version=2",
            "client": "desktop app Windows 0.4.4",
            "content": "<p>my pleasure <span class=\"user-mention\" data-user-email=\"anthonyburdi@gmail.com\">@Anthony Burdi (SP1'15)</span> I am also remembering the material <img alt=\":smile:\" class=\"emoji\" src=\"static/third/gemoji/images/emoji/smile.png\" title=\":smile:\"> </p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 38499698,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "msapaydin@gmail.com",
            "sender_full_name": "Mehmet Serkan Apaydin (SP2'15)",
            "sender_id": 7872,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "group study",
            "submessages": [],
            "timestamp": 1429724488,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/6cfe3624e3978459cbade1099bada52720bb72e2?x=x&version=1",
            "client": "website",
            "content": "<p>yes thnx a lot prof :)</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 38499760,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "erisa85d@gmail.com",
            "sender_full_name": "Erisa Dervishi (SP2'15)",
            "sender_id": 7870,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "group study",
            "submessages": [],
            "timestamp": 1429724540,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/2cb73c202d983822afa41734224e506e?d=identicon&version=1",
            "client": "website",
            "content": "<p>dang i missed it, if anybody has any notes that'll be great.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 38509720,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "karenpenglabs@gmail.com",
            "sender_full_name": "Karen Peng (SP2'15)",
            "sender_id": 7869,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "group study",
            "submessages": [],
            "timestamp": 1429735549,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/cac6d1e6b078dbe912eb03b8d30470787030d330?x=x&version=2",
            "client": "desktop app Windows 0.4.4",
            "content": "<p>I plan to go over heaps, heapsort and possibly symbol tables today at 5pm in Hopper. <span class=\"user-mention\" data-user-email=\"erisa85d@gmail.com\">@Erisa Dervishi  (SP2'15)</span> <span class=\"user-mention\" data-user-email=\"rahulsharma2001@gmail.com\">@Rahul Sharma (SP2'15)</span> <span class=\"user-mention\" data-user-email=\"anthonyburdi@gmail.com\">@Anthony Burdi (SP1'15)</span> <span class=\"user-mention\" data-user-email=\"emmanouilmatsis@gmail.com\">@Emmanouil Matsis (SP2'15)</span> <span class=\"user-mention\" data-user-email=\"mudit.ameta@gmail.com\">@Mudit Ameta (SP2'15)</span> <span class=\"user-mention\" data-user-email=\"karenpenglabs@gmail.com\">@Karen Peng (SP2'15)</span> <span class=\"user-mention\" data-user-email=\"karthik.mallavarapu@gmail.com\">@Karthik Mallavarapu (SP1'15)</span> <span class=\"user-mention\" data-user-email=\"scrub.mx@gmail.com\">@Jorge Gonz\u00e1lez Padilla (SP2'15)</span> <span class=\"user-mention\" data-user-email=\"arsen.tumanyan@gmail.com\">@Arsen Tumanyan (SP2'15)</span> <span class=\"user-mention\" data-user-email=\"dela3499@gmail.com\">@Carlos De la Guardia (F1'14)</span>  </p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 38819047,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "msapaydin@gmail.com",
            "sender_full_name": "Mehmet Serkan Apaydin (SP2'15)",
            "sender_id": 7872,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "group study",
            "submessages": [],
            "timestamp": 1430322503,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/28427e9335cecebc2d8cadc90c1bd46516bd589f?x=x&version=3",
            "client": "desktop app Mac 0.4.4",
            "content": "<p>Friendly reminder that I'm <span class=\"user-mention\" data-user-email=\"darthmincho@gmail.com\">@Carlos Flores (SP2'15)</span>  and not <span class=\"user-mention\" data-user-email=\"dela3499@gmail.com\">@Carlos De la Guardia (F1'14)</span>  haha :)</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 38819060,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "darthmincho@gmail.com",
            "sender_full_name": "Carlos Rey (SP2'15)",
            "sender_id": 7875,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "group study",
            "submessages": [],
            "timestamp": 1430322541,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/6cfe3624e3978459cbade1099bada52720bb72e2?x=x&version=1",
            "client": "website",
            "content": "<p>Great!</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 38819074,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "erisa85d@gmail.com",
            "sender_full_name": "Erisa Dervishi (SP2'15)",
            "sender_id": 7870,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "group study",
            "submessages": [],
            "timestamp": 1430322582,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/2cb73c202d983822afa41734224e506e?d=identicon&version=1",
            "client": "website",
            "content": "<p>wow yeah!</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 38825645,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "karenpenglabs@gmail.com",
            "sender_full_name": "Karen Peng (SP2'15)",
            "sender_id": 7869,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "group study",
            "submessages": [],
            "timestamp": 1430330696,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/cac6d1e6b078dbe912eb03b8d30470787030d330?x=x&version=2",
            "client": "website",
            "content": "<p>in 5 minutes</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 38834448,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "msapaydin@gmail.com",
            "sender_full_name": "Mehmet Serkan Apaydin (SP2'15)",
            "sender_id": 7872,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "group study",
            "submessages": [],
            "timestamp": 1430340965,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/cac6d1e6b078dbe912eb03b8d30470787030d330?x=x&version=2",
            "client": "website",
            "content": "<p>pingbot 1 day</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 38834470,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "msapaydin@gmail.com",
            "sender_full_name": "Mehmet Serkan Apaydin (SP2'15)",
            "sender_id": 7872,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "group study",
            "submessages": [],
            "timestamp": 1430340979,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/fc38b2381f32f78a346a500f14881b94?d=identicon&version=1",
            "client": "website",
            "content": "<p>Pinging all participants from 2 days ago (04/28/15 00:00:00 to 04/29/15 20:56:22)<br>\n<span class=\"user-mention\" data-user-email=\"darthmincho@gmail.com\">@Carlos Flores (SP2'15)</span> <span class=\"user-mention\" data-user-email=\"erisa85d@gmail.com\">@Erisa Dervishi  (SP2'15)</span> <span class=\"user-mention\" data-user-email=\"karenpenglabs@gmail.com\">@Karen Peng (SP2'15)</span></p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 38834473,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "pinging-bot@students.hackerschool.com",
            "sender_full_name": "Pinging Bot",
            "sender_id": 7790,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "group study",
            "submessages": [],
            "timestamp": 1430340982,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/5520f7e791c2f63da603f6b089b07c6f?d=identicon&version=1",
            "client": "website",
            "content": "<p>What book/learning material is to algorithms as the book \u201cLittle Schemer\u201d is to scheme?<br>\nIf anybody has any suggestion, I'm really happy to hear that!!</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 40633804,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "s04155yo@gmail.com",
            "sender_full_name": "Yuta Miyama (SP2'15)",
            "sender_id": 7867,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "discrete math/algorithms/theory",
            "submessages": [],
            "timestamp": 1433545804,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/f6bd929465d6d225def8062d5a9d3f3f?d=identicon&version=1",
            "client": "website",
            "content": "<p>The <a href=\"http://train.usaco.org/\" target=\"_blank\" title=\"http://train.usaco.org/\">USACO training exercises</a> sort of qualify, but there's much less handholding and explanation.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 40648416,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "danluu@gmail.com",
            "sender_full_name": "Dan Luu (W'13)",
            "sender_id": 820,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "discrete math/algorithms/theory",
            "submessages": [],
            "timestamp": 1433556153,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/f6bd929465d6d225def8062d5a9d3f3f?d=identicon&version=1",
            "client": "website",
            "content": "<p>That is, it's the same in the sense that it's a series of exercises you need to work through, and that you'll learn a lot if you work through the exercises. But it's also quite different since you're not really walked through how to proceed, and the gaps between explanations are much longer.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 40648468,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "danluu@gmail.com",
            "sender_full_name": "Dan Luu (W'13)",
            "sender_id": 820,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "discrete math/algorithms/theory",
            "submessages": [],
            "timestamp": 1433556272,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/0e8ee4a9be3ee9c4411b1f96972b66d0?d=identicon&version=1",
            "client": "website",
            "content": "<p>Two textbooks that I've found helpful are by CLRS and Wayne &amp; Sedgewick. A quick google search for \"CLRS pdf\" and \"Wayne Sedgewick pdf\" finds both textbooks but not sure if I should link since they are 'pirated'. The online 'textbook'/course material for the latter can be found here: <a href=\"http://algs4.cs.princeton.edu/home/\" target=\"_blank\" title=\"http://algs4.cs.princeton.edu/home/\">http://algs4.cs.princeton.edu/home/</a>. If you're looking for programming problems, I think <a href=\"http://codeforces.com/problemset\" target=\"_blank\" title=\"http://codeforces.com/problemset\">codeforces.com/problemset</a> (currently down), Google Code Jam:  <a href=\"https://code.google.com/codejam/contests.html\" target=\"_blank\" title=\"https://code.google.com/codejam/contests.html\">https://code.google.com/codejam/contests.html</a>, FB Hacker Cup: <a href=\"https://www.facebook.com/hackercup\" target=\"_blank\" title=\"https://www.facebook.com/hackercup\">https://www.facebook.com/hackercup</a> have the highest consistency in terms of problem standards.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 40686512,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "rsabb24@gmail.com",
            "sender_full_name": "Rahul Sabbineni (S1'15)",
            "sender_id": 8081,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "discrete math/algorithms/theory",
            "submessages": [],
            "timestamp": 1433601853,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/c5e2f5e61f76c086d3e30aeb22b04a4e5619160c?x=x&version=13",
            "client": "website",
            "content": "<p>CLRS is also in the RC library; haven't looked for Wayne and Sedgewick. I also like <a href=\"http://www.amazon.com/Algorithm-Design-Jon-Kleinberg/dp/0321295358\" target=\"_blank\" title=\"http://www.amazon.com/Algorithm-Design-Jon-Kleinberg/dp/0321295358\">Algorithm Design</a> because it's less dense reading and emphasizes what problems the algorithms solve.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 40694342,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "jesse.z.chen@gmail.com",
            "sender_full_name": "Jesse Chen (he/she) (SP1'20)",
            "sender_id": 7864,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "discrete math/algorithms/theory",
            "submessages": [],
            "timestamp": 1433613258,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/5520f7e791c2f63da603f6b089b07c6f?d=identicon&version=1",
            "client": "website",
            "content": "<p>Thanks for the suggestions!<br>\nI love how people at RC are so quick coming up with answers to somewhat vague questions..</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 40756104,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "s04155yo@gmail.com",
            "sender_full_name": "Yuta Miyama (SP2'15)",
            "sender_id": 7867,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "discrete math/algorithms/theory",
            "submessages": [],
            "timestamp": 1433709342,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/b4d94d953db52e1e7cfc3724b95a6dc906fa9d58?x=x&version=2",
            "client": "website",
            "content": "<p>Sorry for thing ping <span class=\"user-mention\" data-user-email=\"darius@wry.me\">@Darius Bacon (F'12)</span> but you had a great answer to this once that I'm also wondering about - something about designing computer programs?</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 40756211,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "me@ballingt.com",
            "sender_full_name": "Tom Ballinger (he) (W'12)",
            "sender_id": 807,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "discrete math/algorithms/theory",
            "submessages": [],
            "timestamp": 1433709599,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/b4d94d953db52e1e7cfc3724b95a6dc906fa9d58?x=x&version=2",
            "client": "website",
            "content": "<p>Ah, I may have been thinking of \"How to Design Programs\" which I haven't read, but doesn't quite appear to match what you're looking for. But maybe it does - SICP is sort of conversational like The Little Schemer, and apparently HtDP is similar?</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 40756437,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "me@ballingt.com",
            "sender_full_name": "Tom Ballinger (he) (W'12)",
            "sender_id": 807,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "discrete math/algorithms/theory",
            "submessages": [],
            "timestamp": 1433710182,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/3ca604eb0c0cfa22b4a10fc739c056c8?d=identicon&version=1",
            "client": "website",
            "content": "<p>I hate HTDP, having used it in classes at two different institutions, for what it's worth. There's some good stuff in it, admittedly.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 40760282,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "lukeadba@gmail.com",
            "sender_full_name": "Luke Barone-Adesi (he) (F'13)",
            "sender_id": 2903,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "discrete math/algorithms/theory",
            "submessages": [],
            "timestamp": 1433718965,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/c52df4d54166ed7db0141bdb21c7935e502d6ddc?x=x&version=1",
            "client": "website",
            "content": "<p><span class=\"user-mention\" data-user-email=\"tom@hackerschool.com\">@Tom Ballinger</span> that doesn't ring a bell, but one book I liked the look of was Udi Manber's *Algorithms: a creative approach*. <a href=\"http://www.amazon.com/Introduction-Algorithms-A-Creative-Approach/dp/0201120372\" target=\"_blank\" title=\"http://www.amazon.com/Introduction-Algorithms-A-Creative-Approach/dp/0201120372\">http://www.amazon.com/Introduction-Algorithms-A-Creative-Approach/dp/0201120372</a><br>\nI didn't pipe up to recommend it here because I've barely started it.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 40770682,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "darius@wry.me",
            "sender_full_name": "Darius Bacon (W1'16)",
            "sender_id": 902,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "discrete math/algorithms/theory",
            "submessages": [],
            "timestamp": 1433744809,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/c52df4d54166ed7db0141bdb21c7935e502d6ddc?x=x&version=1",
            "client": "website",
            "content": "<p>Re HtDP, it's excellent in the lessons it teaches, but tedious -- apparently Realm of Racket is faster-paced? Anyway, IIRC it was more on program design than algorithms/math beyond basics.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 40770769,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "darius@wry.me",
            "sender_full_name": "Darius Bacon (W1'16)",
            "sender_id": 902,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "discrete math/algorithms/theory",
            "submessages": [],
            "timestamp": 1433745052,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/2cb73c202d983822afa41734224e506e?d=identicon&version=1",
            "client": "website",
            "content": "<p>Hey list, I'm studying binary tree, and it turns out that divide &amp; conquer is very useful to this type of data structure. I'm going to go through several interview questions, in order to grasp this idea. If you are also interested, please ping me :)</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 41575421,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "karenpenglabs@gmail.com",
            "sender_full_name": "Karen Peng (SP2'15)",
            "sender_id": 7869,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "binary tree/divide & conquer",
            "submessages": [],
            "timestamp": 1435245065,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/7af0a4685e93e44ffcd2935fa31ff1c4?d=identicon&version=1",
            "client": "website",
            "content": "<p>Does anyone know of a generalization of a fenwick tree that works on DAGs instead of lists?</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 47559616,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "novalis@novalis.org",
            "sender_full_name": "David Turner",
            "sender_id": 8449,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "generalized fenwick tree?",
            "submessages": [],
            "timestamp": 1443232063,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/b8a401c87d51446d7ed50d97dfb81d26?d=identicon&version=1",
            "client": "website",
            "content": "<p>I just started the Coursera Algorithms Course - <a href=\"https://class.coursera.org/algo-009\" target=\"_blank\" title=\"https://class.coursera.org/algo-009\">https://class.coursera.org/algo-009</a></p>\n<p>If Algorithms have seemed really incomprehensible &amp; confusing to you, this is the Friendliest introduction I've ever seen!!</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 48091841,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "lunacodes@gmail.com",
            "sender_full_name": "Luna Lunapiena (she) (SP2'15)",
            "sender_id": 7863,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Coursera",
            "submessages": [],
            "timestamp": 1444247666,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/9868fb054b67c937857948d321b7529f24a3b295?x=x&version=1",
            "client": "website",
            "content": "<p><img alt=\":thumbsup:\" class=\"emoji\" src=\"static/third/gemoji/images/emoji/thumbsup.png\" title=\":thumbsup:\"> bookmarked!</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 48094761,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "meereeum@gmail.com",
            "sender_full_name": "Miriam Shiffman (F2'15)",
            "sender_id": 8687,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Coursera",
            "submessages": [],
            "timestamp": 1444252123,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/1920d37780c9a711b0030870b0c726098e0efb10?x=x&version=2",
            "client": "website",
            "content": "<p>Tim Roughgarden is great. Highly recommended.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 48109708,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "superjoe30@gmail.com",
            "sender_full_name": "Andrew Kelley (he) (SP1'17)",
            "sender_id": 2911,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Coursera",
            "submessages": [],
            "timestamp": 1444282929,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/7af0a4685e93e44ffcd2935fa31ff1c4?d=identicon&version=1",
            "client": "website",
            "content": "<p>Today,  I had to discover very quickly whether a bag of letters contains any 9-letter words.  For instance, the bag aabegijklmnort contains (at least) abnegator.  But abegijklmnort doesn't (it's missing one of the two as). Each bag is guaranteed to contain at most two of any given letter.  So I pre-processed the wordlist into 52-bit bitmaps.  Each letter had a pair of bits which was 0 if the letter didn't appear, 1 if it did and 11 if it appeared twice.  Then I sequentially did a binary-and of each word with the bitmap for the bag.  This was pretty fast -- there are, in my wordlist, only about 25,000 9-letter words. But it's probably possible to do better.  For instance, if we know that our bag doesn't contain two 'a's, we could eliminate all words containing two 'a's (we'll preprocess our word list into groups -- those with 'a.*a' and those without, and so on, recursively).  We might have to go down both sides (if our bag does contain 'a.*a', we're interested in both words with 'a.*a' and words without).  We'll precompute the bitwise-or of all words in each group (the group's \"mask\"), so that we can cut off the search any time popcnt(mask &amp; bag) &lt; 9.  But this is still too slow.  If the bag contains a relatively small number of letters, I could just look at each 9-letter subset (for 14 letters, there would be 2002 such subsets), and look that subset up in a hashmap of all the words.  But 2002 hashmap lookups is way outside my budget.  I'm also OK with a solution that sometimes returns false positives (false negatives are not OK).  I don't need to know *what* the 9-letter word is -- just that it is present.   So, uh, does anyone have any other ideas?</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 51208209,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "novalis@novalis.org",
            "sender_full_name": "David Turner",
            "sender_id": 8449,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "words contained in letter bags",
            "submessages": [],
            "timestamp": 1450778331,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/7af0a4685e93e44ffcd2935fa31ff1c4?d=identicon&version=1",
            "client": "website",
            "content": "<p>I could change the order that letters are eliminated in; I tried vowels first then common consonants then jkxqz then doubles in the same order) and it's not sufficient.  Maybe an adaptive elimination that tries to minimize the sum of hamming weights of child masks?  </p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 51208597,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "novalis@novalis.org",
            "sender_full_name": "David Turner",
            "sender_id": 8449,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "words contained in letter bags",
            "submessages": [],
            "timestamp": 1450779064,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/ffbae1bce3720e05537f5ff9e9b5887d?d=identicon&version=1",
            "client": "website",
            "content": "<p>You could sort the characters in the words in the wordlist and put them into a tree, and then sort the bag and walk the tree. Hmm, need to think about that a bit.</p>\n<p>Say you wordlist contains banana, apple and cherry, that would be aaabnn, aelpp and cehrry, but that in a tree and you get...</p>\n<p>a-&gt;a-&gt;a-&gt;b-&gt;n|<br>\n   \\-&gt;e-&gt;l-&gt;p-&gt;p|<br>\nc-&gt;e-&gt;h-&gt;r-&gt;r-&gt;y|</p>\n<p>Then you take a bag of words like aacelpp or I don't know. No wait...if you go down the a path, you'll never find cherry. Maybe need to be more of a graph where you keep track f how many steps you took. Hm. Maybe this is not such a great plan after all.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 51208971,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "pepijndevos@gmail.com",
            "sender_full_name": "Pepijn de Vos (he) (S'12)",
            "sender_id": 906,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "words contained in letter bags",
            "submessages": [],
            "timestamp": 1450779983,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/ffbae1bce3720e05537f5ff9e9b5887d?d=identicon&version=1",
            "client": "website",
            "content": "<p>You'll have to pursue all the paths that contain letters after your current position, so for aacelpp you need to consider the a, c, e, l and p branches, and then in the next step you need to consider the same, but then you only need to look at c, e, l and p and in step 3 e, l and p, 4 l and p, 5 p, 6, p, 7 done. If you reach a dead end, that word is in your bag.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 51209208,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "pepijndevos@gmail.com",
            "sender_full_name": "Pepijn de Vos (he) (S'12)",
            "sender_id": 906,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "words contained in letter bags",
            "submessages": [],
            "timestamp": 1450780342,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/c52df4d54166ed7db0141bdb21c7935e502d6ddc?x=x&version=1",
            "client": "website",
            "content": "<p>I dunno how well this'd work, but: precompute Bloom filters for the 9-letter words containing 'a', the ones containing 'b', and so on; then given a bag, <a href=\"https://en.wikipedia.org/wiki/Bloom_filter#The_union_and_intersection_of_sets\" target=\"_blank\" title=\"https://en.wikipedia.org/wiki/Bloom_filter#The_union_and_intersection_of_sets\">intersect</a> the filters for each of the letters in the bag. (Of course you could also precompute for 'a.*a', 'b.*b', etc.)<br>\nI'm unsure of this because I haven't looked into intersecting Bloom filters before. Maybe it's not even conservative the way membership tests are? Maybe they'd have to be so big you might as well just run through the 9-letter wordlist?</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 51213583,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "darius@wry.me",
            "sender_full_name": "Darius Bacon (W1'16)",
            "sender_id": 902,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "words contained in letter bags",
            "submessages": [],
            "timestamp": 1450791212,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/21b9cce736cbbe8e0761bbb33863c7d3112d0136?x=x&version=2",
            "client": "website",
            "content": "<p>I have a half joking solution. You sort the characters of all of the words in the dictionary and then convert each word into a regex with wildcards between each letter. For example, \"abc\" would become \".*a.*b.*c.*\". From there you \"or\" all of these regexes together to get one giant regex. Since the regex only uses only repetition and alternation, you can compile it to a Deterministic Finite Automata (although this takes O(2^n) preprocessing time). The reason for this is that DFA regexes are able to match a string in O(n) where n is the length of the string. So you sort the bag by its characters, and then you can use the giant regex on it, all in O(n) time. You may be able to eliminate some of the preprocessing time because you have some information about the structure of the regex.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 51222525,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "michaelmalis2@gmail.com",
            "sender_full_name": "Michael Malis (SP2'19)",
            "sender_id": 8099,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "words contained in letter bags",
            "submessages": [],
            "timestamp": 1450808643,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/c52df4d54166ed7db0141bdb21c7935e502d6ddc?x=x&version=1",
            "client": "website",
            "content": "<p><span class=\"user-mention\" data-user-email=\"michaelmalis2@gmail.com\">@Michael Malis (S1'15)</span> I think you have the winner.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 51224480,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "darius@wry.me",
            "sender_full_name": "Darius Bacon (W1'16)",
            "sender_id": 902,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "words contained in letter bags",
            "submessages": [],
            "timestamp": 1450811948,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/7af0a4685e93e44ffcd2935fa31ff1c4?d=identicon&version=1",
            "client": "website",
            "content": "<p>I think the bloom filter intersection in Wikipedia only computes the size of the intersection -- computing the contents of the intersection is not in general possible (also the filters would be too big I think).  The DFA solution is very clever, but I don't know if it's workable. PCRE refuses to compile regexps that large, which probably means it also won't DFA them even if I hack the PCRE code to allow very long expressions (allegedly possible).  I guess I could bust out re2, but I think its algorithm is to operate on the NFA and convert as it goes, which won't be efficient (I think PCRE does this too).  I tried ragel, but it used up all of my memory (32G) failing to compile the six-letter alphagrams.  Out of curiosity, I tried the first 23 six-letter alphagrams (all of which start with aaa), and it still ran out of memory. I think the DFA might be rather large even if produced efficiently, although I am not certain of this.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 51247296,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "novalis@novalis.org",
            "sender_full_name": "David Turner",
            "sender_id": 8449,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "words contained in letter bags",
            "submessages": [],
            "timestamp": 1450861743,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/c52df4d54166ed7db0141bdb21c7935e502d6ddc?x=x&version=1",
            "client": "website",
            "content": "<p><span class=\"user-mention\" data-user-email=\"novalis@novalis.org\">@David Turner</span> you did say you didn't need to know what word was present. OTOH the intersection test can give false negatives as I suspected, so it's out anyway.<br>\nI'm surprised the DFAs overflowed quite so quickly.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 51258223,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "darius@wry.me",
            "sender_full_name": "Darius Bacon (W1'16)",
            "sender_id": 902,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "words contained in letter bags",
            "submessages": [],
            "timestamp": 1450888040,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/c52df4d54166ed7db0141bdb21c7935e502d6ddc?x=x&version=1",
            "client": "website",
            "content": "<p>I'd take a look at <a href=\"https://en.wikipedia.org/wiki/Directed_acyclic_word_graph\" target=\"_blank\" title=\"https://en.wikipedia.org/wiki/Directed_acyclic_word_graph\">https://en.wikipedia.org/wiki/Directed_acyclic_word_graph</a> next.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 51258284,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "darius@wry.me",
            "sender_full_name": "Darius Bacon (W1'16)",
            "sender_id": 902,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "words contained in letter bags",
            "submessages": [],
            "timestamp": 1450888165,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/ebe0814e33fc0231a2def89423f7be9f4d96a6f9?x=x&version=1",
            "client": "website",
            "content": "<p>I had to make a tree for kernel memory management purposes, but I'm having trouble classifying it.. Does this sort of tree have a name? <a href=\"https://drive.google.com/file/d/0B9H96w9Jt9DkQzJQTGRFRXA3NDg/view?usp=sharing\" target=\"_blank\" title=\"https://drive.google.com/file/d/0B9H96w9Jt9DkQzJQTGRFRXA3NDg/view?usp=sharing\">https://drive.google.com/file/d/0B9H96w9Jt9DkQzJQTGRFRXA3NDg/view?usp=sharing</a> Please forgive my awful drawing skills.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 52722945,
            "is_me_message": false,
            "last_edit_timestamp": 1454000668,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "samanthadoran3@gmail.com",
            "sender_full_name": "Samantha Doran (she) (SP2'16)",
            "sender_id": 8983,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Name for this tree?",
            "submessages": [],
            "timestamp": 1454000646,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/42d35e1484ccf00222c531d7bd51c46142ee9ef4?x=x&version=1",
            "client": "desktop app Mac 0.4.4",
            "content": "<p>It looks like a <a href=\"https://en.wikipedia.org/wiki/Binary_tree\" target=\"_blank\" title=\"https://en.wikipedia.org/wiki/Binary_tree\">binary tree</a>\u2026</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 52722976,
            "is_me_message": false,
            "last_edit_timestamp": 1454000726,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "gnclmorais@gmail.com",
            "sender_full_name": "Gon\u00e7alo Morais (SP1'15)",
            "sender_id": 7631,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Name for this tree?",
            "submessages": [],
            "timestamp": 1454000709,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/ebe0814e33fc0231a2def89423f7be9f4d96a6f9?x=x&version=1",
            "client": "website",
            "content": "<p>Yeah, I just wasn't sure if there was a more specific term for it.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 52722991,
            "is_me_message": false,
            "last_edit_timestamp": 1454000752,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "samanthadoran3@gmail.com",
            "sender_full_name": "Samantha Doran (she) (SP2'16)",
            "sender_id": 8983,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Name for this tree?",
            "submessages": [],
            "timestamp": 1454000744,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/42d35e1484ccf00222c531d7bd51c46142ee9ef4?x=x&version=1",
            "client": "desktop app Mac 0.4.4",
            "content": "<p>If there is, I don\u2019t know it but would love to learn. :)</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 52723044,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "gnclmorais@gmail.com",
            "sender_full_name": "Gon\u00e7alo Morais (SP1'15)",
            "sender_id": 7631,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Name for this tree?",
            "submessages": [],
            "timestamp": 1454000802,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/5fc7d5d7b6d64132767d534055e319fc?d=identicon&version=1",
            "client": "website",
            "content": "<p>Hi all!  I've run across my first algorithms issue in a while.  I need to find the longest common subsequence across _many_ strings, whereas all example implementations I find only get you the LCS across two strings.  any ideas / tips?</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 52727376,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "JJ@ebnj.net",
            "sender_full_name": "J.J. (Joel) Fliegelman (W'14)",
            "sender_id": 5006,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "longest common subsequence",
            "submessages": [],
            "timestamp": 1454007588,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/db02a5da64dc0123ae368a9f9fc0278476ea8cd3?x=x&version=1",
            "client": "website",
            "content": "<p>i came across suffix trees while researching algorithms recently: <a href=\"https://en.wikipedia.org/wiki/Suffix_tree\" target=\"_blank\" title=\"https://en.wikipedia.org/wiki/Suffix_tree\">https://en.wikipedia.org/wiki/Suffix_tree</a></p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 52727577,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "dave@dvndrsn.com",
            "sender_full_name": "David J Anderson (W1'15)",
            "sender_id": 8850,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "longest common subsequence",
            "submessages": [],
            "timestamp": 1454007840,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/36c9b43a5996df3509f67516e9bb87a342bc9a19?x=x&version=1",
            "client": "website",
            "content": "<p>ARE WE GOING TO USE TRIES HERE?! &lt;3</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 52727625,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "matt.s.schiller@gmail.com",
            "sender_full_name": "Matt Schiller (W2'16)",
            "sender_id": 8972,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "longest common subsequence",
            "submessages": [],
            "timestamp": 1454007871,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/db02a5da64dc0123ae368a9f9fc0278476ea8cd3?x=x&version=1",
            "client": "website",
            "content": "<p>i think that's just for one string, but it looks like generalized suffix tree might be helpful? <a href=\"https://en.wikipedia.org/wiki/Generalized_suffix_tree\" target=\"_blank\" title=\"https://en.wikipedia.org/wiki/Generalized_suffix_tree\">https://en.wikipedia.org/wiki/Generalized_suffix_tree</a></p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 52727643,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "dave@dvndrsn.com",
            "sender_full_name": "David J Anderson (W1'15)",
            "sender_id": 8850,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "longest common subsequence",
            "submessages": [],
            "timestamp": 1454007890,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/db02a5da64dc0123ae368a9f9fc0278476ea8cd3?x=x&version=1",
            "client": "website",
            "content": "<p>yess, tries!! (maybe haha) </p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 52727652,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "dave@dvndrsn.com",
            "sender_full_name": "David J Anderson (W1'15)",
            "sender_id": 8850,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "longest common subsequence",
            "submessages": [],
            "timestamp": 1454007902,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/5fc7d5d7b6d64132767d534055e319fc?d=identicon&version=1",
            "client": "website",
            "content": "<p>Yeah every example I've seen has been only two</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 52727679,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "JJ@ebnj.net",
            "sender_full_name": "J.J. (Joel) Fliegelman (W'14)",
            "sender_id": 5006,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "longest common subsequence",
            "submessages": [],
            "timestamp": 1454007954,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/5fc7d5d7b6d64132767d534055e319fc?d=identicon&version=1",
            "client": "website",
            "content": "<p>this may be beyond my capabilities</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 52727689,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "JJ@ebnj.net",
            "sender_full_name": "J.J. (Joel) Fliegelman (W'14)",
            "sender_id": 5006,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "longest common subsequence",
            "submessages": [],
            "timestamp": 1454007963,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/db02a5da64dc0123ae368a9f9fc0278476ea8cd3?x=x&version=1",
            "client": "website",
            "content": "<p>ah, i dunno! i've not actually implemented these, but they sound like they're kinda challenging</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 52727734,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "dave@dvndrsn.com",
            "sender_full_name": "David J Anderson (W1'15)",
            "sender_id": 8850,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "longest common subsequence",
            "submessages": [],
            "timestamp": 1454008005,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/36c9b43a5996df3509f67516e9bb87a342bc9a19?x=x&version=1",
            "client": "website",
            "content": "<p>Is it too computationally intense to start with 2, from there create a structure of common substrings and keep folding in each of the next strings?</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 52727741,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "matt.s.schiller@gmail.com",
            "sender_full_name": "Matt Schiller (W2'16)",
            "sender_id": 8972,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "longest common subsequence",
            "submessages": [],
            "timestamp": 1454008019,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/5fc7d5d7b6d64132767d534055e319fc?d=identicon&version=1",
            "client": "website",
            "content": "<p>No that might be what I have to do</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 52727753,
            "is_me_message": false,
            "last_edit_timestamp": 1454008053,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "JJ@ebnj.net",
            "sender_full_name": "J.J. (Joel) Fliegelman (W'14)",
            "sender_id": 5006,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "longest common subsequence",
            "submessages": [],
            "timestamp": 1454008045,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/db02a5da64dc0123ae368a9f9fc0278476ea8cd3?x=x&version=1",
            "client": "website",
            "content": "<p>you might be able to leverage a library.. i see there's an impelemtation of generalized suffix tree in python at least: <a href=\"http://www.daimi.au.dk/~mailund/suffix_tree.html\" target=\"_blank\" title=\"http://www.daimi.au.dk/~mailund/suffix_tree.html\">http://www.daimi.au.dk/~mailund/suffix_tree.html</a></p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 52727826,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "dave@dvndrsn.com",
            "sender_full_name": "David J Anderson (W1'15)",
            "sender_id": 8850,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "longest common subsequence",
            "submessages": [],
            "timestamp": 1454008135,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/5fc7d5d7b6d64132767d534055e319fc?d=identicon&version=1",
            "client": "website",
            "content": "<p>ok I'm going to be pretty horrible on this I think</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 52728008,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "JJ@ebnj.net",
            "sender_full_name": "J.J. (Joel) Fliegelman (W'14)",
            "sender_id": 5006,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "longest common subsequence",
            "submessages": [],
            "timestamp": 1454008353,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/5fc7d5d7b6d64132767d534055e319fc?d=identicon&version=1",
            "client": "website",
            "content": "<p>Starting here where <code>s</code> is one string</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 52728012,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "JJ@ebnj.net",
            "sender_full_name": "J.J. (Joel) Fliegelman (W'14)",
            "sender_id": 5006,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "longest common subsequence",
            "submessages": [],
            "timestamp": 1454008365,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/5fc7d5d7b6d64132767d534055e319fc?d=identicon&version=1",
            "client": "website",
            "content": "<p><code>{s[x:][:n] for x in range(len(s)) for n in range(len(s[x:])) if s[x:][:n] != ''}</code></p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 52728014,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "JJ@ebnj.net",
            "sender_full_name": "J.J. (Joel) Fliegelman (W'14)",
            "sender_id": 5006,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "longest common subsequence",
            "submessages": [],
            "timestamp": 1454008366,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/36c9b43a5996df3509f67516e9bb87a342bc9a19?x=x&version=1",
            "client": "website",
            "content": "<p>Joel, I believe in you. </p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 52728020,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "matt.s.schiller@gmail.com",
            "sender_full_name": "Matt Schiller (W2'16)",
            "sender_id": 8972,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "longest common subsequence",
            "submessages": [],
            "timestamp": 1454008375,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/db02a5da64dc0123ae368a9f9fc0278476ea8cd3?x=x&version=1",
            "client": "website",
            "content": "<p>haha, nah.. you got this!</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 52728036,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "dave@dvndrsn.com",
            "sender_full_name": "David J Anderson (W1'15)",
            "sender_id": 8850,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "longest common subsequence",
            "submessages": [],
            "timestamp": 1454008399,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/db02a5da64dc0123ae368a9f9fc0278476ea8cd3?x=x&version=1",
            "client": "website",
            "content": "<p>what is the application you're trying to build?</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 52728041,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "dave@dvndrsn.com",
            "sender_full_name": "David J Anderson (W1'15)",
            "sender_id": 8850,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "longest common subsequence",
            "submessages": [],
            "timestamp": 1454008404,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/5fc7d5d7b6d64132767d534055e319fc?d=identicon&version=1",
            "client": "website",
            "content": "<p>Ok this gets us somewhere:</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 52728063,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "JJ@ebnj.net",
            "sender_full_name": "J.J. (Joel) Fliegelman (W'14)",
            "sender_id": 5006,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "longest common subsequence",
            "submessages": [],
            "timestamp": 1454008442,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/5fc7d5d7b6d64132767d534055e319fc?d=identicon&version=1",
            "client": "website",
            "content": "<div class=\"codehilite\"><pre>        total_set = set()\n        for s in titles:\n            mini = {s[x:][:n] for x in range(len(s)) for n in range(len(s[x:])) if s[x:][:n] != &#39;&#39;}\n            total_set &amp;= mini\n</pre></div>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 52728073,
            "is_me_message": false,
            "last_edit_timestamp": 1454008452,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "JJ@ebnj.net",
            "sender_full_name": "J.J. (Joel) Fliegelman (W'14)",
            "sender_id": 5006,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "longest common subsequence",
            "submessages": [],
            "timestamp": 1454008443,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/5fc7d5d7b6d64132767d534055e319fc?d=identicon&version=1",
            "client": "website",
            "content": "<p>I have a long list of titles</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 52728105,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "JJ@ebnj.net",
            "sender_full_name": "J.J. (Joel) Fliegelman (W'14)",
            "sender_id": 5006,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "longest common subsequence",
            "submessages": [],
            "timestamp": 1454008464,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/5fc7d5d7b6d64132767d534055e319fc?d=identicon&version=1",
            "client": "website",
            "content": "<p>They should be identical</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 52728120,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "JJ@ebnj.net",
            "sender_full_name": "J.J. (Joel) Fliegelman (W'14)",
            "sender_id": 5006,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "longest common subsequence",
            "submessages": [],
            "timestamp": 1454008475,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/5fc7d5d7b6d64132767d534055e319fc?d=identicon&version=1",
            "client": "website",
            "content": "<p>But some (not all) have other things appended</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 52728142,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "JJ@ebnj.net",
            "sender_full_name": "J.J. (Joel) Fliegelman (W'14)",
            "sender_id": 5006,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "longest common subsequence",
            "submessages": [],
            "timestamp": 1454008508,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/5fc7d5d7b6d64132767d534055e319fc?d=identicon&version=1",
            "client": "website",
            "content": "<p>like, location</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 52728143,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "JJ@ebnj.net",
            "sender_full_name": "J.J. (Joel) Fliegelman (W'14)",
            "sender_id": 5006,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "longest common subsequence",
            "submessages": [],
            "timestamp": 1454008511,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/5fc7d5d7b6d64132767d534055e319fc?d=identicon&version=1",
            "client": "website",
            "content": "<p>this is for job titles</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 52728144,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "JJ@ebnj.net",
            "sender_full_name": "J.J. (Joel) Fliegelman (W'14)",
            "sender_id": 5006,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "longest common subsequence",
            "submessages": [],
            "timestamp": 1454008513,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/5fc7d5d7b6d64132767d534055e319fc?d=identicon&version=1",
            "client": "website",
            "content": "<p>so I'm trying to automatically get a common title for them all</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 52728152,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "JJ@ebnj.net",
            "sender_full_name": "J.J. (Joel) Fliegelman (W'14)",
            "sender_id": 5006,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "longest common subsequence",
            "submessages": [],
            "timestamp": 1454008521,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/db02a5da64dc0123ae368a9f9fc0278476ea8cd3?x=x&version=1",
            "client": "website",
            "content": "<p>gotcha! interesting!</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 52728225,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "dave@dvndrsn.com",
            "sender_full_name": "David J Anderson (W1'15)",
            "sender_id": 8850,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "longest common subsequence",
            "submessages": [],
            "timestamp": 1454008612,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/36c9b43a5996df3509f67516e9bb87a342bc9a19?x=x&version=1",
            "client": "website",
            "content": "<p>In that case, would it make sense to separate the nodes in the tree into words instead of letters?</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 52728241,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "matt.s.schiller@gmail.com",
            "sender_full_name": "Matt Schiller (W2'16)",
            "sender_id": 8972,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "longest common subsequence",
            "submessages": [],
            "timestamp": 1454008646,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/36c9b43a5996df3509f67516e9bb87a342bc9a19?x=x&version=1",
            "client": "website",
            "content": "<p>like Analyst - Chicago, Analyst-Director - NYC</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 52728254,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "matt.s.schiller@gmail.com",
            "sender_full_name": "Matt Schiller (W2'16)",
            "sender_id": 8972,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "longest common subsequence",
            "submessages": [],
            "timestamp": 1454008666,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/36c9b43a5996df3509f67516e9bb87a342bc9a19?x=x&version=1",
            "client": "website",
            "content": "<p>if you break words out by any non alpha character, should speed up your search</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 52728279,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "matt.s.schiller@gmail.com",
            "sender_full_name": "Matt Schiller (W2'16)",
            "sender_id": 8972,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "longest common subsequence",
            "submessages": [],
            "timestamp": 1454008685,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/5fc7d5d7b6d64132767d534055e319fc?d=identicon&version=1",
            "client": "website",
            "content": "<p>Sadly the data is such low quality that I wouldn't trust tha tyet</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 52728327,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "JJ@ebnj.net",
            "sender_full_name": "J.J. (Joel) Fliegelman (W'14)",
            "sender_id": 5006,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "longest common subsequence",
            "submessages": [],
            "timestamp": 1454008769,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/5fc7d5d7b6d64132767d534055e319fc?d=identicon&version=1",
            "client": "website",
            "content": "<p>but ideally yes you could</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 52728331,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "JJ@ebnj.net",
            "sender_full_name": "J.J. (Joel) Fliegelman (W'14)",
            "sender_id": 5006,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "longest common subsequence",
            "submessages": [],
            "timestamp": 1454008773,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/36c9b43a5996df3509f67516e9bb87a342bc9a19?x=x&version=1",
            "client": "website",
            "content": "<p>alas, the woes of unscrubbed data</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 52728341,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "matt.s.schiller@gmail.com",
            "sender_full_name": "Matt Schiller (W2'16)",
            "sender_id": 8972,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "longest common subsequence",
            "submessages": [],
            "timestamp": 1454008785,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/db02a5da64dc0123ae368a9f9fc0278476ea8cd3?x=x&version=1",
            "client": "website",
            "content": "<p>how many distinct job title-like strings do you have in your dataset?</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 52728434,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "dave@dvndrsn.com",
            "sender_full_name": "David J Anderson (W1'15)",
            "sender_id": 8850,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "longest common subsequence",
            "submessages": [],
            "timestamp": 1454008900,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/db02a5da64dc0123ae368a9f9fc0278476ea8cd3?x=x&version=1",
            "client": "website",
            "content": "<p>i guess this is a one time cleaning effort too?</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 52728443,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "dave@dvndrsn.com",
            "sender_full_name": "David J Anderson (W1'15)",
            "sender_id": 8850,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "longest common subsequence",
            "submessages": [],
            "timestamp": 1454008914,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/5fc7d5d7b6d64132767d534055e319fc?d=identicon&version=1",
            "client": "website",
            "content": "<p>This will be ongoing</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 52728492,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "JJ@ebnj.net",
            "sender_full_name": "J.J. (Joel) Fliegelman (W'14)",
            "sender_id": 5006,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "longest common subsequence",
            "submessages": [],
            "timestamp": 1454008940,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/5fc7d5d7b6d64132767d534055e319fc?d=identicon&version=1",
            "client": "website",
            "content": "<p>There will be new data coming in all the time</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 52728494,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "JJ@ebnj.net",
            "sender_full_name": "J.J. (Joel) Fliegelman (W'14)",
            "sender_id": 5006,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "longest common subsequence",
            "submessages": [],
            "timestamp": 1454008945,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/5fc7d5d7b6d64132767d534055e319fc?d=identicon&version=1",
            "client": "website",
            "content": "<p>Over time it will be many hundreds of thousands</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 52728497,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "JJ@ebnj.net",
            "sender_full_name": "J.J. (Joel) Fliegelman (W'14)",
            "sender_id": 5006,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "longest common subsequence",
            "submessages": [],
            "timestamp": 1454008953,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/db02a5da64dc0123ae368a9f9fc0278476ea8cd3?x=x&version=1",
            "client": "website",
            "content": "<p>ok, so getting the algo right will def be important then</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 52728506,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "dave@dvndrsn.com",
            "sender_full_name": "David J Anderson (W1'15)",
            "sender_id": 8850,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "longest common subsequence",
            "submessages": [],
            "timestamp": 1454008969,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/5fc7d5d7b6d64132767d534055e319fc?d=identicon&version=1",
            "client": "website",
            "content": "<p>well</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 52728601,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "JJ@ebnj.net",
            "sender_full_name": "J.J. (Joel) Fliegelman (W'14)",
            "sender_id": 5006,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "longest common subsequence",
            "submessages": [],
            "timestamp": 1454009090,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/5fc7d5d7b6d64132767d534055e319fc?d=identicon&version=1",
            "client": "website",
            "content": "<p>This sort of works</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 52728602,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "JJ@ebnj.net",
            "sender_full_name": "J.J. (Joel) Fliegelman (W'14)",
            "sender_id": 5006,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "longest common subsequence",
            "submessages": [],
            "timestamp": 1454009093,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/5fc7d5d7b6d64132767d534055e319fc?d=identicon&version=1",
            "client": "website",
            "content": "<div class=\"codehilite\"><pre>def common_titles(self, titles):\n        class LenStr(str):\n            def __gt__(self, other):\n                return len(self) &gt; len(other)\n\n            def __lt__(self, other):\n                return len(self) &lt; len(other)\n\n        total_set = None\n        for s in titles:\n            mini = {LenStr(s[x:][:n]) for x in range(len(s)) for n in range(len(s[x:])) if s[x:][:n] != &#39;&#39;}\n            if total_set is None:\n                # for the first set\n                total_set = mini\n            else:\n                total_set &amp;= mini\n        return max(total_set), total_set\n</pre></div>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 52728606,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "JJ@ebnj.net",
            "sender_full_name": "J.J. (Joel) Fliegelman (W'14)",
            "sender_id": 5006,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "longest common subsequence",
            "submessages": [],
            "timestamp": 1454009101,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/e2721884d3a8177d1844095f4e7bf67b28df8719?x=x&version=1",
            "client": "desktop app Mac 0.5.1",
            "content": "<p>If the data is really low quality (like typos etc.) then you might want to use sth like Hamming distance or some other NLP like techniques to match similar titles. </p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 52738341,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "maciej.jaskowski@gmail.com",
            "sender_full_name": "Matthew Maciej Jaskowski (W2'16)",
            "sender_id": 8982,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "longest common subsequence",
            "submessages": [],
            "timestamp": 1454024291,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/e2721884d3a8177d1844095f4e7bf67b28df8719?x=x&version=1",
            "client": "desktop app Mac 0.5.1",
            "content": "<p>You might want to take a look e.g. here: <a href=\"http://radimrehurek.com/gensim/tut1.html\" target=\"_blank\" title=\"http://radimrehurek.com/gensim/tut1.html\">http://radimrehurek.com/gensim/tut1.html</a></p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 52738358,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "maciej.jaskowski@gmail.com",
            "sender_full_name": "Matthew Maciej Jaskowski (W2'16)",
            "sender_id": 8982,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "longest common subsequence",
            "submessages": [],
            "timestamp": 1454024380,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/7af0a4685e93e44ffcd2935fa31ff1c4?d=identicon&version=1",
            "client": "website",
            "content": "<p>The general name for that memory management system is a buddy allocator (but you probably already knew that).  So I would call it a buddy tree (even though, upon googling, there's some other obscure data structure by that name).</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 52742499,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "novalis@novalis.org",
            "sender_full_name": "David Turner",
            "sender_id": 8449,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Name for this tree?",
            "submessages": [],
            "timestamp": 1454032568,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/2de68e765a1927ad427ab7da88dd7b93?d=identicon&version=1",
            "client": "website",
            "content": "<p>edit:  nevermind, what i wrote was very wrong.  </p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 52746836,
            "is_me_message": false,
            "last_edit_timestamp": 1454042046,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "saiheiy@gmail.com",
            "sender_full_name": "Sai Hei Yeung (W1'15)",
            "sender_id": 8858,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "longest common subsequence",
            "submessages": [],
            "timestamp": 1454041940,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/db02a5da64dc0123ae368a9f9fc0278476ea8cd3?x=x&version=1",
            "client": "website",
            "content": "<p>fuzzy matching, ftw!</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 52899115,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "dave@dvndrsn.com",
            "sender_full_name": "David J Anderson (W1'15)",
            "sender_id": 8850,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "longest common subsequence",
            "submessages": [],
            "timestamp": 1454363479,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/c080bc6b7669256b064858686aca1c97a8bc27e1?x=x&version=1",
            "client": "desktop app Mac 0.4.4",
            "content": "<p>I'm working on detecting cycles in sequences that are represented as strings. For example, given \"20631631\", my program should print out \"631\". All of the recommendations I've found point to <a href=\"https://en.wikipedia.org/wiki/Cycle_detection#Tortoise_and_hare\" target=\"_blank\" title=\"https://en.wikipedia.org/wiki/Cycle_detection#Tortoise_and_hare\">Floyd's cycle-finding algorithm</a>, but I'm not sure it applies here. The algorithm expects a linked-list-type structure with some nodes connected in a cycle, and checks at each step to see if the \"tortoise\" pointer and the \"hare\" pointer point to the same node.</p>\n<p>If the data structure is a string, though, a couple of things are different. One, the comparisons are for value (is mystring[i] == mystring[j]?) as opposed to identity (is this Node X?). Two, there's no way for the hare pointer to get stuck in the cycle. I'm having trouble seeing how to adapt the algorithm to this situation; it seems like I might need to take a different approach. The thing is, all of the online conversations I've found go something like:</p>\n<p>Q: \"What do I do?!?!\" <br>\nA: \"Use Floyd's cycle-finding-algorithm.\"<br>\nQ: \"Ohhhh okay!! everything makes sense now!!! kthxbai!!\"</p>\n<p>...which is making me feel like I might be missing something obvious. Is there a way to use that algorithm here? If not, what should I try? TIA!</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 53217303,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "katrina.m.ellison@gmail.com",
            "sender_full_name": "Katrina Ellison Geltman (she) (W'14)",
            "sender_id": 4996,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "cycle detection in strings",
            "submessages": [],
            "timestamp": 1455036084,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/f7104072fb0df0acc29881b20185754193a21285?x=x&version=1",
            "client": "desktop app Mac 0.5.1",
            "content": "<p>What kind of cycles are you trying to find exactly? For your specific case, it seems like you could turn your string into a linked list, and make unique nodes for each character you encounter, and use an existing node if you've already created one for a character\u2026 However, this would basically just cause a cycle to happen as soon as you have two of the same character, and I'm guessing that's not what you want</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 53217513,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "ben@happyspork.com",
            "sender_full_name": "Ben Anderman (he) (SP1'16)",
            "sender_id": 9085,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "cycle detection in strings",
            "submessages": [],
            "timestamp": 1455036391,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/c9efeeb5aec96891ad658b527482ffff47d08a2a?x=x&version=1",
            "client": "website",
            "content": "<p>In the example of \"20631631\", do you want to output the repeated substring? because if each each integer represents a node in a linked list, then \"206316\" already contains a cycle.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 53217645,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "cheng754@gmail.com",
            "sender_full_name": "Shaun Yi Cheng (SP1'16)",
            "sender_id": 9087,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "cycle detection in strings",
            "submessages": [],
            "timestamp": 1455036663,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/c9efeeb5aec96891ad658b527482ffff47d08a2a?x=x&version=1",
            "client": "website",
            "content": "<p>I guess I have the same thought as Ben above.  :)</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 53217711,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "cheng754@gmail.com",
            "sender_full_name": "Shaun Yi Cheng (SP1'16)",
            "sender_id": 9087,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "cycle detection in strings",
            "submessages": [],
            "timestamp": 1455036778,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/c9efeeb5aec96891ad658b527482ffff47d08a2a?x=x&version=1",
            "client": "website",
            "content": "<p>It's a different problem to find the longest repeated substring in a string. For example:<br>\n206316312063  <br>\nif you output the first time cycle is encountered, then you get 631. <br>\nBut 2063 is repeated as well and it's the longest.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 53217792,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "cheng754@gmail.com",
            "sender_full_name": "Shaun Yi Cheng (SP1'16)",
            "sender_id": 9087,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "cycle detection in strings",
            "submessages": [],
            "timestamp": 1455036928,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/c080bc6b7669256b064858686aca1c97a8bc27e1?x=x&version=1",
            "client": "desktop app Mac 0.4.4",
            "content": "<p>Yes, the repeated substring</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 53217793,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "katrina.m.ellison@gmail.com",
            "sender_full_name": "Katrina Ellison Geltman (she) (W'14)",
            "sender_id": 4996,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "cycle detection in strings",
            "submessages": [],
            "timestamp": 1455036933,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/c080bc6b7669256b064858686aca1c97a8bc27e1?x=x&version=1",
            "client": "desktop app Mac 0.4.4",
            "content": "<p>Not the actual individual characters</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 53217798,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "katrina.m.ellison@gmail.com",
            "sender_full_name": "Katrina Ellison Geltman (she) (W'14)",
            "sender_id": 4996,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "cycle detection in strings",
            "submessages": [],
            "timestamp": 1455036943,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/c9efeeb5aec96891ad658b527482ffff47d08a2a?x=x&version=1",
            "client": "website",
            "content": "<p>Are you looking for the longest repeated substring?</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 53217846,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "cheng754@gmail.com",
            "sender_full_name": "Shaun Yi Cheng (SP1'16)",
            "sender_id": 9087,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "cycle detection in strings",
            "submessages": [],
            "timestamp": 1455036972,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/c080bc6b7669256b064858686aca1c97a8bc27e1?x=x&version=1",
            "client": "desktop app Mac 0.4.4",
            "content": "<p>No. Sorry, I deliberately left that part out because the problem statement I'm working on (it's on one of those algorithms-practice websites) is a little vague. The question is \"Print the first cycle you find in each sequence\", and then the example output for this case is \"631\"</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 53217915,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "katrina.m.ellison@gmail.com",
            "sender_full_name": "Katrina Ellison Geltman (she) (W'14)",
            "sender_id": 4996,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "cycle detection in strings",
            "submessages": [],
            "timestamp": 1455037110,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/b05b48dffacfe8bc5336d44718f65da6?d=identicon&version=1",
            "client": "desktop app Mac 0.4.4",
            "content": "<p>yeah so that's first cylce of length greater than 1 basically</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 53217934,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "brian@glusman.me",
            "sender_full_name": "Brian Glusman (SP2'15)",
            "sender_id": 7848,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "cycle detection in strings",
            "submessages": [],
            "timestamp": 1455037171,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/b05b48dffacfe8bc5336d44718f65da6?d=identicon&version=1",
            "client": "desktop app Mac 0.4.4",
            "content": "<p>presumably in 2020631631 it would output 20</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 53217948,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "brian@glusman.me",
            "sender_full_name": "Brian Glusman (SP2'15)",
            "sender_id": 7848,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "cycle detection in strings",
            "submessages": [],
            "timestamp": 1455037195,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/c9efeeb5aec96891ad658b527482ffff47d08a2a?x=x&version=1",
            "client": "website",
            "content": "<p>I see. it must be asking for the first cycle encountered.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 53217981,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "cheng754@gmail.com",
            "sender_full_name": "Shaun Yi Cheng (SP1'16)",
            "sender_id": 9087,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "cycle detection in strings",
            "submessages": [],
            "timestamp": 1455037207,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/b05b48dffacfe8bc5336d44718f65da6?d=identicon&version=1",
            "client": "desktop app Mac 0.4.4",
            "content": "<p>is there any algorithmic complexity restriction/suggestion, or just an algorithim that does this at all?</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 53218027,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "brian@glusman.me",
            "sender_full_name": "Brian Glusman (SP2'15)",
            "sender_id": 7848,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "cycle detection in strings",
            "submessages": [],
            "timestamp": 1455037279,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/c080bc6b7669256b064858686aca1c97a8bc27e1?x=x&version=1",
            "client": "desktop app Mac 0.4.4",
            "content": "<p>I'm curious about the whole put-it-in-a-linked-list thing - it seems like you can't do that because you can't be sure that, say the next \"6\" you encounter will be in \"631\" or if it might be the beginning of a different subsequence</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 53218029,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "katrina.m.ellison@gmail.com",
            "sender_full_name": "Katrina Ellison Geltman (she) (W'14)",
            "sender_id": 4996,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "cycle detection in strings",
            "submessages": [],
            "timestamp": 1455037282,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/c080bc6b7669256b064858686aca1c97a8bc27e1?x=x&version=1",
            "client": "desktop app Mac 0.4.4",
            "content": "<p>There is no suggestion, but it is in the medium difficulty bucket of problems</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 53218037,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "katrina.m.ellison@gmail.com",
            "sender_full_name": "Katrina Ellison Geltman (she) (W'14)",
            "sender_id": 4996,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "cycle detection in strings",
            "submessages": [],
            "timestamp": 1455037306,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/b05b48dffacfe8bc5336d44718f65da6?d=identicon&version=1",
            "client": "desktop app Mac 0.4.4",
            "content": "<p>there's a naive O(n^2)...  or, god, maybe even n^n?  approach, but I have to think there's something better</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 53218043,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "brian@glusman.me",
            "sender_full_name": "Brian Glusman (SP2'15)",
            "sender_id": 7848,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "cycle detection in strings",
            "submessages": [],
            "timestamp": 1455037322,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/b05b48dffacfe8bc5336d44718f65da6?d=identicon&version=1",
            "client": "desktop app Mac 0.4.4",
            "content": "<p>(maybe it's n^sqrt(n), I dunno, I'm interjecting very randomly, apologies)</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 53218108,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "brian@glusman.me",
            "sender_full_name": "Brian Glusman (SP2'15)",
            "sender_id": 7848,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "cycle detection in strings",
            "submessages": [],
            "timestamp": 1455037368,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/b05b48dffacfe8bc5336d44718f65da6?d=identicon&version=1",
            "client": "desktop app Mac 0.4.4",
            "content": "<p>yeah I don't think you want to put it in a linked list</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 53218121,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "brian@glusman.me",
            "sender_full_name": "Brian Glusman (SP2'15)",
            "sender_id": 7848,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "cycle detection in strings",
            "submessages": [],
            "timestamp": 1455037401,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/c080bc6b7669256b064858686aca1c97a8bc27e1?x=x&version=1",
            "client": "desktop app Mac 0.4.4",
            "content": "<p>haha no it's ok, that is the road i was going down</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 53218125,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "katrina.m.ellison@gmail.com",
            "sender_full_name": "Katrina Ellison Geltman (she) (W'14)",
            "sender_id": 4996,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "cycle detection in strings",
            "submessages": [],
            "timestamp": 1455037405,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/c080bc6b7669256b064858686aca1c97a8bc27e1?x=x&version=1",
            "client": "desktop app Mac 0.4.4",
            "content": "<p>but the naive way seemed dumb and challenging at the same time</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 53218135,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "katrina.m.ellison@gmail.com",
            "sender_full_name": "Katrina Ellison Geltman (she) (W'14)",
            "sender_id": 4996,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "cycle detection in strings",
            "submessages": [],
            "timestamp": 1455037426,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/c080bc6b7669256b064858686aca1c97a8bc27e1?x=x&version=1",
            "client": "desktop app Mac 0.4.4",
            "content": "<p>not medium-difficulty</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 53218136,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "katrina.m.ellison@gmail.com",
            "sender_full_name": "Katrina Ellison Geltman (she) (W'14)",
            "sender_id": 4996,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "cycle detection in strings",
            "submessages": [],
            "timestamp": 1455037439,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/b05b48dffacfe8bc5336d44718f65da6?d=identicon&version=1",
            "client": "desktop app Mac 0.4.4",
            "content": "<p>yeah, I'm imagining a hash-table of all seen substrings...</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 53218181,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "brian@glusman.me",
            "sender_full_name": "Brian Glusman (SP2'15)",
            "sender_id": 7848,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "cycle detection in strings",
            "submessages": [],
            "timestamp": 1455037469,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/b05b48dffacfe8bc5336d44718f65da6?d=identicon&version=1",
            "client": "desktop app Mac 0.4.4",
            "content": "<p>actually the nice thing there is it's parrallelizeable</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 53218187,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "brian@glusman.me",
            "sender_full_name": "Brian Glusman (SP2'15)",
            "sender_id": 7848,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "cycle detection in strings",
            "submessages": [],
            "timestamp": 1455037481,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/b05b48dffacfe8bc5336d44718f65da6?d=identicon&version=1",
            "client": "desktop app Mac 0.4.4",
            "content": "<p>this might help <a href=\"http://stackoverflow.com/questions/2560262/generate-all-unique-substrings-for-given-string\" target=\"_blank\" title=\"http://stackoverflow.com/questions/2560262/generate-all-unique-substrings-for-given-string\">http://stackoverflow.com/questions/2560262/generate-all-unique-substrings-for-given-string</a></p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 53218218,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "brian@glusman.me",
            "sender_full_name": "Brian Glusman (SP2'15)",
            "sender_id": 7848,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "cycle detection in strings",
            "submessages": [],
            "timestamp": 1455037540,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/b05b48dffacfe8bc5336d44718f65da6?d=identicon&version=1",
            "client": "desktop app Mac 0.4.4",
            "content": "<p>trie's in general are good for working with strings, and are kind of linked list territory</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 53218251,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "brian@glusman.me",
            "sender_full_name": "Brian Glusman (SP2'15)",
            "sender_id": 7848,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "cycle detection in strings",
            "submessages": [],
            "timestamp": 1455037571,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/b05b48dffacfe8bc5336d44718f65da6?d=identicon&version=1",
            "client": "desktop app Mac 0.4.4",
            "content": "<p>(<a href=\"https://en.wikipedia.org/wiki/Suffix_tree\" target=\"_blank\" title=\"https://en.wikipedia.org/wiki/Suffix_tree\">https://en.wikipedia.org/wiki/Suffix_tree</a>)</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 53218272,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "brian@glusman.me",
            "sender_full_name": "Brian Glusman (SP2'15)",
            "sender_id": 7848,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "cycle detection in strings",
            "submessages": [],
            "timestamp": 1455037595,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/c080bc6b7669256b064858686aca1c97a8bc27e1?x=x&version=1",
            "client": "desktop app Mac 0.4.4",
            "content": "<p>I think I came across suffix trees once in my research on this this morning</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 53218274,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "katrina.m.ellison@gmail.com",
            "sender_full_name": "Katrina Ellison Geltman (she) (W'14)",
            "sender_id": 4996,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "cycle detection in strings",
            "submessages": [],
            "timestamp": 1455037597,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/c080bc6b7669256b064858686aca1c97a8bc27e1?x=x&version=1",
            "client": "desktop app Mac 0.4.4",
            "content": "<p>so you are probably right! :)</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 53218275,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "katrina.m.ellison@gmail.com",
            "sender_full_name": "Katrina Ellison Geltman (she) (W'14)",
            "sender_id": 4996,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "cycle detection in strings",
            "submessages": [],
            "timestamp": 1455037602,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/c080bc6b7669256b064858686aca1c97a8bc27e1?x=x&version=1",
            "client": "desktop app Mac 0.4.4",
            "content": "<p>i am at work right now, so i can't really test</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 53218279,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "katrina.m.ellison@gmail.com",
            "sender_full_name": "Katrina Ellison Geltman (she) (W'14)",
            "sender_id": 4996,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "cycle detection in strings",
            "submessages": [],
            "timestamp": 1455037616,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/c080bc6b7669256b064858686aca1c97a8bc27e1?x=x&version=1",
            "client": "desktop app Mac 0.4.4",
            "content": "<p>but thank you - this is super helpful</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 53218281,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "katrina.m.ellison@gmail.com",
            "sender_full_name": "Katrina Ellison Geltman (she) (W'14)",
            "sender_id": 4996,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "cycle detection in strings",
            "submessages": [],
            "timestamp": 1455037631,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/f6bd929465d6d225def8062d5a9d3f3f?d=identicon&version=1",
            "client": "website",
            "content": "<p>It's hard to tell what's going on from that one example, but does each character have only one possible successor? E.g., if you see a 6, it must always be followed by a 3.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 53219746,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "danluu@gmail.com",
            "sender_full_name": "Dan Luu (W'13)",
            "sender_id": 820,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "cycle detection in strings",
            "submessages": [],
            "timestamp": 1455040353,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/f6bd929465d6d225def8062d5a9d3f3f?d=identicon&version=1",
            "client": "website",
            "content": "<p>If so, you can do it linearly and only need to store 1 bit of information for each number (although you might as well just store an int or whatever).</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 53219750,
            "is_me_message": false,
            "last_edit_timestamp": 1455040472,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "danluu@gmail.com",
            "sender_full_name": "Dan Luu (W'13)",
            "sender_id": 820,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "cycle detection in strings",
            "submessages": [],
            "timestamp": 1455040387,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/f6bd929465d6d225def8062d5a9d3f3f?d=identicon&version=1",
            "client": "website",
            "content": "<p>That is, if that's the case, you can walk down the string and flip the associated bit (mark that you've seen it before). If you've seen it before, that marks the beginning of the cycle. You still flip the bit. When you see one with the bit flipped back, that's the end of the cycle because it means you've seen it twice. In case it's not clear, the bit is associated with the value of the digit not its position, so an easy way to do it would be to have a hash/map of ints instead of playing with single bits.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 53219877,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "danluu@gmail.com",
            "sender_full_name": "Dan Luu (W'13)",
            "sender_id": 820,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "cycle detection in strings",
            "submessages": [],
            "timestamp": 1455040622,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/c080bc6b7669256b064858686aca1c97a8bc27e1?x=x&version=1",
            "client": "desktop app Mac 0.4.4",
            "content": "<p><span class=\"user-mention\" data-user-email=\"danluu@gmail.com\">@Dan Luu (W'13)</span> no, it's possible for characters to have different successors. Here's another example:</p>\n<div class=\"codehilite\"><pre>input: 3 4 8 0 11 9 7 2 5 6 1 0 49 50 49 50\noutput: 49 50\n</pre></div>\n\n\n<p>0 occurs once before 11 and again before 49.</p>\n<p>The only other example they gave was <code>123123123</code> =&gt; <code>123</code>.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 53220144,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "katrina.m.ellison@gmail.com",
            "sender_full_name": "Katrina Ellison Geltman (she) (W'14)",
            "sender_id": 4996,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "cycle detection in strings",
            "submessages": [],
            "timestamp": 1455041103,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/f6bd929465d6d225def8062d5a9d3f3f?d=identicon&version=1",
            "client": "website",
            "content": "<p>Oh, darn :-).</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 53220320,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "danluu@gmail.com",
            "sender_full_name": "Dan Luu (W'13)",
            "sender_id": 820,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "cycle detection in strings",
            "submessages": [],
            "timestamp": 1455041420,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/f6bd929465d6d225def8062d5a9d3f3f?d=identicon&version=1",
            "client": "website",
            "content": "<p>Does it always end in a cycle that repeats at least once? If so, you could apply the algorithm above if you start at the end of the string, and then reverse your output, I think?</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 53220336,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "danluu@gmail.com",
            "sender_full_name": "Dan Luu (W'13)",
            "sender_id": 820,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "cycle detection in strings",
            "submessages": [],
            "timestamp": 1455041495,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/f6bd929465d6d225def8062d5a9d3f3f?d=identicon&version=1",
            "client": "website",
            "content": "<p>Wait no that's wrong.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 53220378,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "danluu@gmail.com",
            "sender_full_name": "Dan Luu (W'13)",
            "sender_id": 820,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "cycle detection in strings",
            "submessages": [],
            "timestamp": 1455041529,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/f6bd929465d6d225def8062d5a9d3f3f?d=identicon&version=1",
            "client": "website",
            "content": "<p>Since the cycle could have been, Idk, 49 50 50 49 50 50 or something.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 53220385,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "danluu@gmail.com",
            "sender_full_name": "Dan Luu (W'13)",
            "sender_id": 820,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "cycle detection in strings",
            "submessages": [],
            "timestamp": 1455041546,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/7af0a4685e93e44ffcd2935fa31ff1c4?d=identicon&version=1",
            "client": "website",
            "content": "<p>If the sample input always ends in a cycle (that's what a cycle means, right?), you could just compare string[-1:] against string[-2:-1], then try the same with [-2:] vs [-4:-2] and so on.  This is probably inefficient, but maybe it can be improved.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 53242116,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "novalis@novalis.org",
            "sender_full_name": "David Turner",
            "sender_id": 8449,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "cycle detection in strings",
            "submessages": [],
            "timestamp": 1455084783,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/7af0a4685e93e44ffcd2935fa31ff1c4?d=identicon&version=1",
            "client": "website",
            "content": "<p>BTW, this question is terrible and I hope that nobody asks it.  If they do, the number one thing is to get clarification.  Is this a graph and the string represents some walk on the graph?  Is the string just a string and we're looking for duplicated substrings of length &gt; 1?  Something else?</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 53242248,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "novalis@novalis.org",
            "sender_full_name": "David Turner",
            "sender_id": 8449,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "cycle detection in strings",
            "submessages": [],
            "timestamp": 1455085197,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/7af0a4685e93e44ffcd2935fa31ff1c4?d=identicon&version=1",
            "client": "website",
            "content": "<p>It's not your fault the question is bad -- it's just your bad luck.  BTW, it is totally OK to push back on broken questions in job interviews.  Danielle and I both got broken questions at Twitter, both pushed back, and both got offers. </p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 53242249,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "novalis@novalis.org",
            "sender_full_name": "David Turner",
            "sender_id": 8449,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "cycle detection in strings",
            "submessages": [],
            "timestamp": 1455085282,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/7af0a4685e93e44ffcd2935fa31ff1c4?d=identicon&version=1",
            "client": "website",
            "content": "<p>Believe in yourself: as an interviewer, if the candidate doesn't understand the question, I assume that it's because I've explained it badly, 100% of the time.  I never believe it's because the candidate is bad.  And I'm a pretty tough interviewer, so if I have this thought, others will have it too.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 53242252,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "novalis@novalis.org",
            "sender_full_name": "David Turner",
            "sender_id": 8449,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "cycle detection in strings",
            "submessages": [],
            "timestamp": 1455085391,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/5e4aa5311affe020e4b36536287f3ec1?d=identicon&version=2",
            "client": "website",
            "content": "<p>(deleted)</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 53268090,
            "is_me_message": false,
            "last_edit_timestamp": 1455153415,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "kal_ali@hotmail.com",
            "sender_full_name": "Khalid Omar Ali (F2'15)",
            "sender_id": 8713,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "(duplicate)",
            "submessages": [],
            "timestamp": 1455151204,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/3ca604eb0c0cfa22b4a10fc739c056c8?d=identicon&version=1",
            "client": "website",
            "content": "<p><span class=\"user-mention\" data-user-email=\"kal_ali@hotmail.com\">@Khalid Omar Ali (F2'15)</span> I'm not up for committing in advance to weekly sessions, but can have a call with you sometime next week and answer occasional stuff on zulip (which is, in a way, a wonderful distributed mentor of people who have time and energy and are around).</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 53268132,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "lukeadba@gmail.com",
            "sender_full_name": "Luke Barone-Adesi (he) (F'13)",
            "sender_id": 2903,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Remote Mentor Required on Algorithms and Data Structures",
            "submessages": [],
            "timestamp": 1455151292,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/5e4aa5311affe020e4b36536287f3ec1?d=identicon&version=2",
            "client": "website",
            "content": "<p><span class=\"user-mention\" data-user-email=\"katerinab@gmail.com\">@Katerina Barone-Adesi (F'13)</span>, that's kind of you. We can definitely do something next week. </p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 53268173,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "kal_ali@hotmail.com",
            "sender_full_name": "Khalid Omar Ali (F2'15)",
            "sender_id": 8713,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Remote Mentor Required on Algorithms and Data Structures",
            "submessages": [],
            "timestamp": 1455151347,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/5e4aa5311affe020e4b36536287f3ec1?d=identicon&version=2",
            "client": "website",
            "content": "<p>@<strong>Zulip Feedback Bot</strong>, Zulip is a super awesome place to collaborate/get mentorship  <img alt=\":thumbsup:\" class=\"emoji\" src=\"static/third/gemoji/images/emoji/thumbsup.png\" title=\":thumbsup:\"> </p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 53268206,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "kal_ali@hotmail.com",
            "sender_full_name": "Khalid Omar Ali (F2'15)",
            "sender_id": 8713,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Remote Mentor Required on Algorithms and Data Structures",
            "submessages": [],
            "timestamp": 1455151462,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/5e4aa5311affe020e4b36536287f3ec1?d=identicon&version=2",
            "client": "website",
            "content": "<p><strong>Zulip Feedback Bot  not subscribed on this thread!</strong>  wow! </p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 53268215,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "kal_ali@hotmail.com",
            "sender_full_name": "Khalid Omar Ali (F2'15)",
            "sender_id": 8713,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Remote Mentor Required on Algorithms and Data Structures",
            "submessages": [],
            "timestamp": 1455151505,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/4a226624af016ea38f3bb675e0d80334f4a300dc?x=x&version=1",
            "client": "website",
            "content": "<p><span class=\"user-mention\" data-user-email=\"brmscheiner@gmail.com\">@Ben Scheiner (W2'16)</span> IBM is a little ahead of you on blockchain: <a href=\"http://www.itworld.com/article/3033870/ibm-goes-all-in-on-blockchain-offers-cloud-based-service.html\" target=\"_blank\" title=\"http://www.itworld.com/article/3033870/ibm-goes-all-in-on-blockchain-offers-cloud-based-service.html\">http://www.itworld.com/article/3033870/ibm-goes-all-in-on-blockchain-offers-cloud-based-service.html</a></p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 53492235,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "drewgarrido@gmail.com",
            "sender_full_name": "Andrew Luis Garrido (W2'16)",
            "sender_id": 8987,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Blockchain",
            "submessages": [],
            "timestamp": 1455719977,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/9f2743b667aac9a8a402e1cce3494c75f06b36a7?x=x&version=1",
            "client": "website",
            "content": "<p><a href=\"http://www.ibm.com/blockchain/what_can_blockchain_do_for_you.html\" target=\"_blank\" title=\"http://www.ibm.com/blockchain/what_can_blockchain_do_for_you.html\">http://www.ibm.com/blockchain/what_can_blockchain_do_for_you.html</a></p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 53494282,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "brmscheiner@gmail.com",
            "sender_full_name": "Ben Scheiner (W2'16)",
            "sender_id": 8976,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Blockchain",
            "submessages": [],
            "timestamp": 1455723712,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/9f2743b667aac9a8a402e1cce3494c75f06b36a7?x=x&version=1",
            "client": "website",
            "content": "<p>they forgot all about search engines!!</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 53494283,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "brmscheiner@gmail.com",
            "sender_full_name": "Ben Scheiner (W2'16)",
            "sender_id": 8976,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Blockchain",
            "submessages": [],
            "timestamp": 1455723719,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/9f2743b667aac9a8a402e1cce3494c75f06b36a7?x=x&version=1",
            "client": "website",
            "content": "<p>but really interesting stuff</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 53494304,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "brmscheiner@gmail.com",
            "sender_full_name": "Ben Scheiner (W2'16)",
            "sender_id": 8976,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Blockchain",
            "submessages": [],
            "timestamp": 1455723725,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/9f2743b667aac9a8a402e1cce3494c75f06b36a7?x=x&version=1",
            "client": "website",
            "content": "<p>i wanna try to use their platform</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 53494318,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "brmscheiner@gmail.com",
            "sender_full_name": "Ben Scheiner (W2'16)",
            "sender_id": 8976,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Blockchain",
            "submessages": [],
            "timestamp": 1455723729,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/9f2743b667aac9a8a402e1cce3494c75f06b36a7?x=x&version=1",
            "client": "website",
            "content": "<p>or etherium</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 53494324,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "brmscheiner@gmail.com",
            "sender_full_name": "Ben Scheiner (W2'16)",
            "sender_id": 8976,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Blockchain",
            "submessages": [],
            "timestamp": 1455723736,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/9f2743b667aac9a8a402e1cce3494c75f06b36a7?x=x&version=1",
            "client": "website",
            "content": "<p>oh man i thought this was a private message.. sorry for sending so many messages people!</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 53494345,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "brmscheiner@gmail.com",
            "sender_full_name": "Ben Scheiner (W2'16)",
            "sender_id": 8976,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Blockchain",
            "submessages": [],
            "timestamp": 1455723787,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/8f3e3f13689ac077fe4ae537e33bde345a57cb22?x=x&version=2",
            "client": "desktop app Linux 0.4.4",
            "content": "<p>That's cool, I'm super interested in Etherium!</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 53495917,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "recurse@ardent.nebcorp.com",
            "sender_full_name": "Joe Ardent (he) (SP1'17)",
            "sender_id": 9097,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Blockchain",
            "submessages": [],
            "timestamp": 1455726161,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/ad805d19ff625b8cb398e30dd00f3b64b6aaabe8?x=x&version=1",
            "client": "website",
            "content": "<p>Does anyone know the topic for the algo group today? Would like to prep a bit on the topic beforehand.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 53496783,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "dantzlerwolfe@gmail.com",
            "sender_full_name": "John Dantzler-Wolfe (SP1'16)",
            "sender_id": 9101,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Algo Group Topic",
            "submessages": [],
            "timestamp": 1455727760,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/8f3e3f13689ac077fe4ae537e33bde345a57cb22?x=x&version=2",
            "client": "desktop app Linux 0.4.4",
            "content": "<p>Dynamic programming; Dror is presenting. <a href=\"https://docs.google.com/spreadsheets/d/1EZDG7_j8lCEBFpv2Uv_S1FKQ1MQFtP4Py9090xv2n5g/edit#gid=0\" target=\"_blank\" title=\"https://docs.google.com/spreadsheets/d/1EZDG7_j8lCEBFpv2Uv_S1FKQ1MQFtP4Py9090xv2n5g/edit#gid=0\">https://docs.google.com/spreadsheets/d/1EZDG7_j8lCEBFpv2Uv_S1FKQ1MQFtP4Py9090xv2n5g/edit#gid=0</a></p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 53497175,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "recurse@ardent.nebcorp.com",
            "sender_full_name": "Joe Ardent (he) (SP1'17)",
            "sender_id": 9097,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Algo Group Topic",
            "submessages": [],
            "timestamp": 1455728335,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/ad805d19ff625b8cb398e30dd00f3b64b6aaabe8?x=x&version=1",
            "client": "website",
            "content": "<p>Thanks, Joe! Super helpful even from the sickbed!</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 53497401,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "dantzlerwolfe@gmail.com",
            "sender_full_name": "John Dantzler-Wolfe (SP1'16)",
            "sender_id": 9101,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Algo Group Topic",
            "submessages": [],
            "timestamp": 1455728707,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/8f3e3f13689ac077fe4ae537e33bde345a57cb22?x=x&version=2",
            "client": "desktop app Linux 0.4.4",
            "content": "<p>Thanks to <span class=\"user-mention\" data-user-email=\"kaley.sullivan@gmail.com\">@Kaley Sullivan (SP1'16)</span> for putting the URL to the topic spreadsheet in the calendar event :)</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 53497502,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "recurse@ardent.nebcorp.com",
            "sender_full_name": "Joe Ardent (he) (SP1'17)",
            "sender_id": 9097,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Algo Group Topic",
            "submessages": [],
            "timestamp": 1455728842,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/8f3e3f13689ac077fe4ae537e33bde345a57cb22?x=x&version=2",
            "client": "desktop app Linux 0.4.4",
            "content": "<p>Also, I'm bummed to be missing this talk.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 53497581,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "recurse@ardent.nebcorp.com",
            "sender_full_name": "Joe Ardent (he) (SP1'17)",
            "sender_id": 9097,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Algo Group Topic",
            "submessages": [],
            "timestamp": 1455728952,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/3ca604eb0c0cfa22b4a10fc739c056c8?d=identicon&version=1",
            "client": "website",
            "content": "<p>If you actually want to a call, get in touch. :-)</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 53544308,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "lukeadba@gmail.com",
            "sender_full_name": "Luke Barone-Adesi (he) (F'13)",
            "sender_id": 2903,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Remote Mentor Required on Algorithms and Data Structures",
            "submessages": [],
            "timestamp": 1455822421,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/435afbf44b8207dc8f2d5209901cd0b957bc9132?x=x&version=2",
            "client": "desktop app Mac 0.5.1",
            "content": "<p>I'm beginning to work through the CLRS textbook (Intro to Algorithms), with the goal of being able to do whiteboarding exercises in job interviews. I'm a total beginner, so I'm probably only going to get partway through this book during my batch, and I'll be going for junior-level jobs afterwards.</p>\n<p>My question is: if I understand the concept of the Theta (big O?) notations and how they measure complexity, how important is it for me to be able to write or figure out the notations myself? For example, one of the exercises in the 2nd chapter asks: \"Give the best-case and worst-case running times of selection sort in (Theta) notation.\" Is it worth my time to work out the mathmatical formulas they present in the textbook?</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 53812928,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "kaley.sullivan@gmail.com",
            "sender_full_name": "Kaley Sullivan (she) (m4'20)",
            "sender_id": 9102,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "importance of writing O notation?",
            "submessages": [],
            "timestamp": 1456420592,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/c9efeeb5aec96891ad658b527482ffff47d08a2a?x=x&version=1",
            "client": "website",
            "content": "<p>You might save some time by looking at some simpler  examples, like the big O of bubble sort.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 53813761,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "cheng754@gmail.com",
            "sender_full_name": "Shaun Yi Cheng (SP1'16)",
            "sender_id": 9087,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "importance of writing O notation?",
            "submessages": [],
            "timestamp": 1456421874,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/f59b1bd52e790e176d04d3610ea3ada8?d=identicon&version=1",
            "client": "website",
            "content": "<p>I'm not sure how important it is for interviews (since I've only done a couple of technical interviews myself), but if you want I could go over it with you (I was reading about it a couple of weeks ago and (I think) I got a decent understanding of how it works and why it's used)</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 53814316,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "adeshar00@gmail.com",
            "sender_full_name": "Andrew Desharnais (he) (W1'20)",
            "sender_id": 8863,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "importance of writing O notation?",
            "submessages": [],
            "timestamp": 1456422936,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/0434b1061b72a6a3ec16fa199506394ac9c86eb5?x=x&version=1",
            "client": "desktop app Mac 0.5.1",
            "content": "<p>my 2 cents: asymptotic analysis is definitely a must-know for software dev interviews, but only to the extent that you can use it to justify your choice of a particular algorithm. so you need to be able to say things like \"this sorting algorithm is O(n^2), so I think we can do better\" or \"I'm going to use data structure x because random element access is O(1)\". so I would definitely learn it, it's super important! but don't feel the need to dive too deep into theory or create formal proofs.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 53814363,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "catherinejelder@gmail.com",
            "sender_full_name": "Catherine Elder (W1'15)",
            "sender_id": 8852,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "importance of writing O notation?",
            "submessages": [],
            "timestamp": 1456422989,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/0434b1061b72a6a3ec16fa199506394ac9c86eb5?x=x&version=1",
            "client": "desktop app Mac 0.5.1",
            "content": "<p>the exercise you mentioned sounds worth doing, but keep in mind that worst case matters much more than best or average case, and therefore big O is worth focusing on much more than theta or omega (in my experience).</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 53814434,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "catherinejelder@gmail.com",
            "sender_full_name": "Catherine Elder (W1'15)",
            "sender_id": 8852,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "importance of writing O notation?",
            "submessages": [],
            "timestamp": 1456423164,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/0434b1061b72a6a3ec16fa199506394ac9c86eb5?x=x&version=1",
            "client": "desktop app Mac 0.5.1",
            "content": "<p>asymptotic analysis is often confusingly taught, and your own personal learning style will have a big effect on which explanations make the most sense to you, so if some resource isn't meeting your needs, feel free to chuck it and try something else quickly! cracking the coding interview has a pretty decent section on this, IMO, as does this coursera class: <a href=\"https://class.coursera.org/algo-009/lecture\" target=\"_blank\" title=\"https://class.coursera.org/algo-009/lecture\">https://class.coursera.org/algo-009/lecture</a></p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 53814592,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "catherinejelder@gmail.com",
            "sender_full_name": "Catherine Elder (W1'15)",
            "sender_id": 8852,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "importance of writing O notation?",
            "submessages": [],
            "timestamp": 1456423388,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/5e4aa5311affe020e4b36536287f3ec1?d=identicon&version=2",
            "client": "website",
            "content": "<p>+1 on this <a href=\"https://class.coursera.org/algo-009/lecture\" target=\"_blank\" title=\"https://class.coursera.org/algo-009/lecture\">Algo course</a>. <span class=\"user-mention\" data-user-email=\"anjanavakil@gmail.com\">@Anjana Sofia Vakil (F2'15)</span> and I are trying to slowly go through that.  Anyone working on algos/data structures are welcome to join our  remote study group. But a study group at RC might work better for folks in the big apple.  </p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 53816312,
            "is_me_message": false,
            "last_edit_timestamp": 1456429472,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "kal_ali@hotmail.com",
            "sender_full_name": "Khalid Omar Ali (F2'15)",
            "sender_id": 8713,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "importance of writing O notation?",
            "submessages": [],
            "timestamp": 1456426596,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/f7104072fb0df0acc29881b20185754193a21285?x=x&version=1",
            "client": "desktop app Mac 0.5.1",
            "content": "<p>I agree it's important to know the basics, and not that important to know in depth. It's good to know why an algorithm has the complexity it has, but it's mostly important to just know what each of the common algorithms / data structures' complexity is, and then how to figure out what your algorithm's complexity is based on that.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 53816746,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "ben@happyspork.com",
            "sender_full_name": "Ben Anderman (he) (SP1'16)",
            "sender_id": 9085,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "importance of writing O notation?",
            "submessages": [],
            "timestamp": 1456427378,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/f7104072fb0df0acc29881b20185754193a21285?x=x&version=1",
            "client": "desktop app Mac 0.5.1",
            "content": "<p>So for instance, if you're asked to find out whether a string has any repeating characters, one way (not the best) to do it would be to sort the string first, then iterate over the characters, looking for adjacent duplicates. The iteration is O(n), but the sorting could be assumed to be O(nlogn) (because that's what quicksort is, on average), and so the whole thing is O(nlogn).</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 53816917,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "ben@happyspork.com",
            "sender_full_name": "Ben Anderman (he) (SP1'16)",
            "sender_id": 9085,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "importance of writing O notation?",
            "submessages": [],
            "timestamp": 1456427650,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/f7104072fb0df0acc29881b20185754193a21285?x=x&version=1",
            "client": "desktop app Mac 0.5.1",
            "content": "<p>Also, a useful resource: <a href=\"http://bigocheatsheet.com\" target=\"_blank\" title=\"http://bigocheatsheet.com\">http://bigocheatsheet.com</a></p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 53816920,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "ben@happyspork.com",
            "sender_full_name": "Ben Anderman (he) (SP1'16)",
            "sender_id": 9085,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "importance of writing O notation?",
            "submessages": [],
            "timestamp": 1456427656,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/3ca604eb0c0cfa22b4a10fc739c056c8?d=identicon&version=1",
            "client": "website",
            "content": "<p>You need to have an idea about it, but approaches like \"count the number of loops\" go a surprisingly long way.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 53817055,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "lukeadba@gmail.com",
            "sender_full_name": "Luke Barone-Adesi (he) (F'13)",
            "sender_id": 2903,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "importance of writing O notation?",
            "submessages": [],
            "timestamp": 1456427908,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/4d622076b203a9421a6dd2127aff0ad3?d=identicon&version=1",
            "client": "website",
            "content": "<p>Hey <span class=\"user-mention\" data-user-email=\"novalis@novalis.org\">@David Turner</span> - I like your advice about \"pushing back\" on broken questions in job interviews - but how exactly did you go about this without coming off as arrogant or whiney or annoying the interviewer?</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 53931873,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "dcbfernandez@gmail.com",
            "sender_full_name": "Denise Fernandez (S1'14)",
            "sender_id": 5877,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "cycle detection in strings",
            "submessages": [],
            "timestamp": 1456702669,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/7af0a4685e93e44ffcd2935fa31ff1c4?d=identicon&version=1",
            "client": "website",
            "content": "<p>I asked questions -- \"it looks like this really simple solution will work.  What am I missing?\" </p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 53940533,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "novalis@novalis.org",
            "sender_full_name": "David Turner",
            "sender_id": 8449,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "cycle detection in strings",
            "submessages": [],
            "timestamp": 1456725396,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/7eb0ddf13a1e386ee3019600fa00b1ee538f6d6b?x=x&version=1",
            "client": "desktop app Mac 0.5.1",
            "content": "<p>a friend recently showed me an interesting visualization of the Graham Scan algorithm for finding the convex hull of a plane: <a href=\"http://www.algomation.com/algorithm/graham-scan-convex-hull\" target=\"_blank\" title=\"http://www.algomation.com/algorithm/graham-scan-convex-hull\">http://www.algomation.com/algorithm/graham-scan-convex-hull</a></p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 53964510,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "oren.avraham.shoham@gmail.com",
            "sender_full_name": "Oren Shoham (he) (W2'16)",
            "sender_id": 8984,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "graham scan",
            "submessages": [],
            "timestamp": 1456776021,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/be60fd1db28bafe4707d03db9d4e10d4?d=identicon&version=1",
            "client": "website",
            "content": "<p>this is so awesome.</p>\n<p>one of the things i like about this (and good algorithm visualizations in general) is that i have never heard of the graham scan algorithm before and have no idea what it means to \"find the convex hull of a plane,\" and yet the visualization makes it quickly apparent HOW and WHAT it does. </p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 53970140,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "amha@uchicago.edu",
            "sender_full_name": "Andrew Alexander (W2'16)",
            "sender_id": 8970,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "graham scan",
            "submessages": [],
            "timestamp": 1456785131,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/be60fd1db28bafe4707d03db9d4e10d4?d=identicon&version=1",
            "client": "website",
            "content": "<p>also, holy shit, this website is INCREDIBLE</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 53970159,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "amha@uchicago.edu",
            "sender_full_name": "Andrew Alexander (W2'16)",
            "sender_id": 8970,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "graham scan",
            "submessages": [],
            "timestamp": 1456785198,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/04ca5a14273f759166bbbfc15e3e400910e7a053?x=x&version=1",
            "client": "website",
            "content": "<p>(Yeah, the Graham Scan is great but this website is the big find for me. Thanks <span class=\"user-mention\" data-user-email=\"oren.avraham.shoham@gmail.com\">@Oren Shoham (W2'16)</span> !)</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 53970170,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "jdherg@gmail.com",
            "sender_full_name": "John Hergenroeder (he) (SP2'15)",
            "sender_id": 7851,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "graham scan",
            "submessages": [],
            "timestamp": 1456785239,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/7eb0ddf13a1e386ee3019600fa00b1ee538f6d6b?x=x&version=1",
            "client": "ZulipiOS",
            "content": "<p>yeah that website is so cool!!!</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 53970273,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "oren.avraham.shoham@gmail.com",
            "sender_full_name": "Oren Shoham (he) (W2'16)",
            "sender_id": 8984,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "graham scan",
            "submessages": [],
            "timestamp": 1456785393,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/c9efeeb5aec96891ad658b527482ffff47d08a2a?x=x&version=1",
            "client": "website",
            "content": "<p>amazing visualization indeed. I didn't know about this site. thanks Oren!</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 53978011,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "cheng754@gmail.com",
            "sender_full_name": "Shaun Yi Cheng (SP1'16)",
            "sender_id": 9087,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "graham scan",
            "submessages": [],
            "timestamp": 1456801407,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/8f3e3f13689ac077fe4ae537e33bde345a57cb22?x=x&version=2",
            "client": "desktop app Linux 0.4.4",
            "content": "<p>One of the standard unix utilities is \"tsort\", which given a set of ordered pairs, will output a valid topologically sorted order:</p>\n<p>~&gt; tsort<br>\na b<br>\nb c<br>\nb d<br>\nc e<br>\na<br>\nb<br>\nd<br>\nc<br>\ne</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 53998821,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "recurse@ardent.nebcorp.com",
            "sender_full_name": "Joe Ardent (he) (SP1'17)",
            "sender_id": 9097,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "topological sort",
            "submessages": [],
            "timestamp": 1456849857,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/e525dd9dc84c68e55de0e0dd2a724f3d?d=identicon&version=1",
            "client": "desktop app Mac 0.5.1",
            "content": "<p>So those pairs describe vertixes I'm assuming? That's pretty awesome.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 54000219,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "zmackie@gmail.com",
            "sender_full_name": "Zander Mackie (SP1'16)",
            "sender_id": 9086,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "topological sort",
            "submessages": [],
            "timestamp": 1456851877,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/8f3e3f13689ac077fe4ae537e33bde345a57cb22?x=x&version=2",
            "client": "desktop app Linux 0.4.4",
            "content": "<p>they would represent pairs of vertices</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 54000515,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "recurse@ardent.nebcorp.com",
            "sender_full_name": "Joe Ardent (he) (SP1'17)",
            "sender_id": 9097,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "topological sort",
            "submessages": [],
            "timestamp": 1456852363,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/8f3e3f13689ac077fe4ae537e33bde345a57cb22?x=x&version=2",
            "client": "desktop app Linux 0.4.4",
            "content": "<p>tsort won't work with graphs with cycles, or graphs that aren't connected.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 54000522,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "recurse@ardent.nebcorp.com",
            "sender_full_name": "Joe Ardent (he) (SP1'17)",
            "sender_id": 9097,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "topological sort",
            "submessages": [],
            "timestamp": 1456852381,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/8f3e3f13689ac077fe4ae537e33bde345a57cb22?x=x&version=2",
            "client": "desktop app Linux 0.4.4",
            "content": "<p>So in that example, a depends on b, b depends on d and c, and c depends on e</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 54000639,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "recurse@ardent.nebcorp.com",
            "sender_full_name": "Joe Ardent (he) (SP1'17)",
            "sender_id": 9097,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "topological sort",
            "submessages": [],
            "timestamp": 1456852597,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/8880886d758e516691b420c771d1f6421d097ba1?x=x&version=1",
            "client": "website",
            "content": "<p>tsort -l<br>\na b<br>\nb c<br>\nb d<br>\nc e<br>\nd a</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 54000694,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "oguzkayral@gmail.com",
            "sender_full_name": "O\u011fuz Kayral (S1'16)",
            "sender_id": 9089,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "topological sort",
            "submessages": [],
            "timestamp": 1456852728,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/8880886d758e516691b420c771d1f6421d097ba1?x=x&version=1",
            "client": "website",
            "content": "<p>tsort: cycle in data<br>\ntsort: a<br>\ntsort: b<br>\ntsort: d<br>\nd<br>\na<br>\nb<br>\nc<br>\ne</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 54000697,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "oguzkayral@gmail.com",
            "sender_full_name": "O\u011fuz Kayral (S1'16)",
            "sender_id": 9089,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "topological sort",
            "submessages": [],
            "timestamp": 1456852736,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/8880886d758e516691b420c771d1f6421d097ba1?x=x&version=1",
            "client": "website",
            "content": "<p>This is pretty nice. -l made it detect cycles too!</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 54000703,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "oguzkayral@gmail.com",
            "sender_full_name": "O\u011fuz Kayral (S1'16)",
            "sender_id": 9089,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "topological sort",
            "submessages": [],
            "timestamp": 1456852797,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/e525dd9dc84c68e55de0e0dd2a724f3d?d=identicon&version=1",
            "client": "desktop app Mac 0.5.1",
            "content": "<p>Oh right, so those pairs are edges. </p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 54000709,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "zmackie@gmail.com",
            "sender_full_name": "Zander Mackie (SP1'16)",
            "sender_id": 9086,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "topological sort",
            "submessages": [],
            "timestamp": 1456852803,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/ff6516cefc7bbe1917537e743cc50ee32369a0cd?x=x&version=1",
            "client": "website",
            "content": "<p>This is great. My latest favorite tool these days is gnu parallel. I'm definitely gonna look for use cases for tsort as well.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 54496091,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "dkarapetyan@scriptcrafty.com",
            "sender_full_name": "David Karapetyan (W1'14)",
            "sender_id": 6929,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "topological sort",
            "submessages": [],
            "timestamp": 1457989524,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/ff6516cefc7bbe1917537e743cc50ee32369a0cd?x=x&version=1",
            "client": "website",
            "content": "<p>Maybe a build graph pipe to tsort and then piped to parallel.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 54496099,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "dkarapetyan@scriptcrafty.com",
            "sender_full_name": "David Karapetyan (W1'14)",
            "sender_id": 6929,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "topological sort",
            "submessages": [],
            "timestamp": 1457989549,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/8f3e3f13689ac077fe4ae537e33bde345a57cb22?x=x&version=2",
            "client": "desktop app Linux 0.4.4",
            "content": "<p>what sorcery is parallel???</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 54497710,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "recurse@ardent.nebcorp.com",
            "sender_full_name": "Joe Ardent (he) (SP1'17)",
            "sender_id": 9097,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "topological sort",
            "submessages": [],
            "timestamp": 1457992262,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/8f3e3f13689ac077fe4ae537e33bde345a57cb22?x=x&version=2",
            "client": "desktop app Linux 0.4.4",
            "content": "<p>('sup, <span class=\"user-mention\" data-user-email=\"dkarapetyan@scriptcrafty.com\">@David Karapetyan (W1'14)</span> ;) )</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 54497716,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "recurse@ardent.nebcorp.com",
            "sender_full_name": "Joe Ardent (he) (SP1'17)",
            "sender_id": 9097,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "topological sort",
            "submessages": [],
            "timestamp": 1457992283,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/ff6516cefc7bbe1917537e743cc50ee32369a0cd?x=x&version=1",
            "client": "website",
            "content": "<p>I used to think xargs was as pretty good but then I learned about gnu parallel and it's even more magical: <a href=\"http://www.gnu.org/software/parallel/parallel_tutorial.html\" target=\"_blank\" title=\"http://www.gnu.org/software/parallel/parallel_tutorial.html\">http://www.gnu.org/software/parallel/parallel_tutorial.html</a></p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 54500851,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "dkarapetyan@scriptcrafty.com",
            "sender_full_name": "David Karapetyan (W1'14)",
            "sender_id": 6929,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "topological sort",
            "submessages": [],
            "timestamp": 1457998189,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/ff6516cefc7bbe1917537e743cc50ee32369a0cd?x=x&version=1",
            "client": "website",
            "content": "<p>also, sup <span class=\"user-mention\" data-user-email=\"recurse@ardent.nebcorp.com\">@Joe Ardent (SP1'16)</span> </p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 54500898,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "dkarapetyan@scriptcrafty.com",
            "sender_full_name": "David Karapetyan (W1'14)",
            "sender_id": 6929,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "topological sort",
            "submessages": [],
            "timestamp": 1457998213,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/ff6516cefc7bbe1917537e743cc50ee32369a0cd?x=x&version=1",
            "client": "website",
            "content": "<p>It's like hadoop and spark on the command line without all the java</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 54501078,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "dkarapetyan@scriptcrafty.com",
            "sender_full_name": "David Karapetyan (W1'14)",
            "sender_id": 6929,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "topological sort",
            "submessages": [],
            "timestamp": 1457998573,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/8f3e3f13689ac077fe4ae537e33bde345a57cb22?x=x&version=2",
            "client": "desktop app Linux 0.4.4",
            "content": "<p>I can't remember who it was last night who asked about a symmetrical/\"fair\" stable marriage algorithm, but it exists, and is called the \"stable roommate algorithm\": <a href=\"https://en.wikipedia.org/wiki/Stable_roommates_problem\" target=\"_blank\" title=\"https://en.wikipedia.org/wiki/Stable_roommates_problem\">https://en.wikipedia.org/wiki/Stable_roommates_problem</a></p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 56153203,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "recurse@ardent.nebcorp.com",
            "sender_full_name": "Joe Ardent (he) (SP1'17)",
            "sender_id": 9097,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Stable Roommate Problem",
            "submessages": [],
            "timestamp": 1461089092,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/6527e077e84e20214d5373101ea15910d6b6f7a3?x=x&version=1",
            "client": "website",
            "content": "<p>It's very interesting that, though the Stable Marriage Problem always has a solution, it's possible for the Stable Roommate Problem to <a href=\"https://en.wikipedia.org/wiki/Stable_roommates_problem#Solution\" target=\"_blank\" title=\"https://en.wikipedia.org/wiki/Stable_roommates_problem#Solution\">not have a solution</a>.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 56153908,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "steve@redlua.com",
            "sender_full_name": "Steven McCarthy (he) (SP2'15)",
            "sender_id": 7871,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Stable Roommate Problem",
            "submessages": [],
            "timestamp": 1461090085,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/1fdd84a57c15f7ecfdded3d0c32019ad32f8af5d?x=x&version=5",
            "client": "desktop app Mac 0.5.1",
            "content": "<p><span class=\"user-mention\" data-user-email=\"agata78@gmail.com\">@Agata Filho (S1'16)</span> , <span class=\"user-mention\" data-user-email=\"noahennis@gmail.com\">@Noah Ennis (W2'15)</span> and I had fun practicing whiteboarding (on the tiny whiteboard) yesterday. We looked at problems from <a href=\"http://interviewcake.com\" target=\"_blank\" title=\"http://interviewcake.com\">interviewcake.com</a> (<a href=\"https://www.interviewcake.com/question/python/product-of-other-numbers\" target=\"_blank\" title=\"https://www.interviewcake.com/question/python/product-of-other-numbers\">https://www.interviewcake.com/question/python/product-of-other-numbers</a> and <a href=\"https://www.interviewcake.com/question/python/highest-product-of-3\" target=\"_blank\" title=\"https://www.interviewcake.com/question/python/highest-product-of-3\">https://www.interviewcake.com/question/python/highest-product-of-3</a>)  and cracking the coding interview (a book that's floating around) - creating a binary search tree with minimal height given a sorted list, and adding a min method to a stack class.</p>\n<p>Topcoder (<a href=\"https://www.topcoder.com/community/data-science/data-science-tutorials/\" target=\"_blank\" title=\"https://www.topcoder.com/community/data-science/data-science-tutorials/\">https://www.topcoder.com/community/data-science/data-science-tutorials/</a>) and <a href=\"http://geeksforgeeks.org\" target=\"_blank\" title=\"http://geeksforgeeks.org\">geeksforgeeks.org</a> also have a bunch of tutorials.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 61617896,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "arpith@feedreader.co",
            "sender_full_name": "Arpith Siromoney (he) (m6'20)",
            "sender_id": 9503,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Tutorials etc!",
            "submessages": [],
            "timestamp": 1468094969,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/7de60303f6bb47bc3e678e090f9de36d?d=identicon&version=1",
            "client": "website",
            "content": "<p><a href=\"https://www.interviewcake.com/\" target=\"_blank\" title=\"https://www.interviewcake.com/\">https://www.interviewcake.com/</a> looks pretty cool, thanks for sharing!</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 61619534,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "jeremiejost@gmail.com",
            "sender_full_name": "J\u00e9r\u00e9mie Jost (he) (m5'20)",
            "sender_id": 9326,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Tutorials etc!",
            "submessages": [],
            "timestamp": 1468099140,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/74df5731ba535a4fdb258101a3d49877?d=identicon&version=1",
            "client": "website",
            "content": "<p>I'm going to start the stanford algorithms course on coursera since a new session just started this week (<a href=\"https://www.coursera.org/learn/algorithm-design-analysis/home/welcome\" target=\"_blank\" title=\"https://www.coursera.org/learn/algorithm-design-analysis/home/welcome\">https://www.coursera.org/learn/algorithm-design-analysis/home/welcome</a>). If anyone is interested and would want to pair on the assignments, let me know! The first week is due Sunday so I'll be working on it over the weekend.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 61858132,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "jameshkatz@gmail.com",
            "sender_full_name": "James Katz (S2'16)",
            "sender_id": 9509,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Stanford Algorithms course",
            "submessages": [],
            "timestamp": 1468612790,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/85b7bffdc731ce90a89c323fb362a8be0012652e?x=x&version=2",
            "client": "website",
            "content": "<p>Does it cost <img alt=\":money_with_wings:\" class=\"emoji\" src=\"static/third/gemoji/images/emoji/money_with_wings.png\" title=\":money_with_wings:\">?  And what language is it in?  I'm thinking of doing something like this but can't decide which thing</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 61869020,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "sarah.anne.friend@gmail.com",
            "sender_full_name": "Sarah Friend (she) (S2'16)",
            "sender_id": 9500,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Stanford Algorithms course",
            "submessages": [],
            "timestamp": 1468635476,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/da27a2081fcf44c802c1806cdb5bb881310dfe7c?x=x&version=5",
            "client": "ZulipReader",
            "content": "<p>No specific language required and you can take the course for free (unless they drastically changed the terms of use)</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 61869767,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "ad@lamarque.fr",
            "sender_full_name": "Adrien Lamarque (they/he) (S1'16)",
            "sender_id": 9335,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Stanford Algorithms course",
            "submessages": [],
            "timestamp": 1468637167,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/da27a2081fcf44c802c1806cdb5bb881310dfe7c?x=x&version=5",
            "client": "ZulipReader",
            "content": "<p>I definitely recommend taking this course, it was one of best online classes I took!</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 61869785,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "ad@lamarque.fr",
            "sender_full_name": "Adrien Lamarque (they/he) (S1'16)",
            "sender_id": 9335,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Stanford Algorithms course",
            "submessages": [],
            "timestamp": 1468637228,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/c52df4d54166ed7db0141bdb21c7935e502d6ddc?x=x&version=1",
            "client": "website",
            "content": "<p>I just did the first-week assignments. I don't know how far I'll stick with it; it's review for me, but I wasn't doing anything more productive and I've seen lots of testimonials for the course.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 61873560,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "darius@wry.me",
            "sender_full_name": "Darius Bacon (W1'16)",
            "sender_id": 902,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Stanford Algorithms course",
            "submessages": [],
            "timestamp": 1468646954,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/8f3e3f13689ac077fe4ae537e33bde345a57cb22?x=x&version=2",
            "client": "Android",
            "content": "<p>I'd be interested in participating remotely!</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 61885881,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "recurse@ardent.nebcorp.com",
            "sender_full_name": "Joe Ardent (he) (SP1'17)",
            "sender_id": 9097,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Stanford Algorithms course",
            "submessages": [],
            "timestamp": 1468680796,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/74df5731ba535a4fdb258101a3d49877?d=identicon&version=1",
            "client": "website",
            "content": "<p><span class=\"user-mention\" data-user-email=\"lbaskin@gmail.com\">@Leeor Baskin (S2'16)</span>  and I did the non-programming part of assignment 1 yesterday. <span class=\"user-mention\" data-user-email=\"sarah.anne.friend@gmail.com\">@Sarah Friend (S2'16)</span> , <span class=\"user-mention\" data-user-email=\"recurse@ardent.nebcorp.com\">@Joe Ardent (SP1'16)</span> , let me know if you need any help with the first bit or want to work on the programming part today/tomorrow! I'm planning to do it in Python.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 61886109,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "jameshkatz@gmail.com",
            "sender_full_name": "James Katz (S2'16)",
            "sender_id": 9509,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Stanford Algorithms course",
            "submessages": [],
            "timestamp": 1468681404,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/8f3e3f13689ac077fe4ae537e33bde345a57cb22?x=x&version=2",
            "client": "website",
            "content": "<p>OK, I'm now previewing the class :) <span class=\"user-mention\" data-user-email=\"jameshkatz@gmail.com\">@James Katz (S2'16)</span> , I'll probably do the programming parts in Racket, but if we want to talk about code (like in this topic), I know Python, too.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 61892305,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "recurse@ardent.nebcorp.com",
            "sender_full_name": "Joe Ardent (he) (SP1'17)",
            "sender_id": 9097,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Stanford Algorithms course",
            "submessages": [],
            "timestamp": 1468698001,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/85b7bffdc731ce90a89c323fb362a8be0012652e?x=x&version=2",
            "client": "website",
            "content": "<p>I'm gonna take a look at it tonight and I will be doing it in python <img alt=\":grin:\" class=\"emoji\" src=\"static/third/gemoji/images/emoji/grin.png\" title=\":grin:\"> </p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 61898824,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "sarah.anne.friend@gmail.com",
            "sender_full_name": "Sarah Friend (she) (S2'16)",
            "sender_id": 9500,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Stanford Algorithms course",
            "submessages": [],
            "timestamp": 1468714788,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/8f3e3f13689ac077fe4ae537e33bde345a57cb22?x=x&version=2",
            "client": "website",
            "content": "<p>I'm a little confused about what is being asked in the assignment.  Say I have a file with four lines in it:</p>\n<p>1<br>\n3<br>\n2<br>\n4</p>\n<p>Does that mean it has 2 \"inversions\"?</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 61899429,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "recurse@ardent.nebcorp.com",
            "sender_full_name": "Joe Ardent (he) (SP1'17)",
            "sender_id": 9097,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Stanford Algorithms course",
            "submessages": [],
            "timestamp": 1468716113,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/8f3e3f13689ac077fe4ae537e33bde345a57cb22?x=x&version=2",
            "client": "website",
            "content": "<p>ie, it's 1-indexed?</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 61899518,
            "is_me_message": false,
            "last_edit_timestamp": 1468716637,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "recurse@ardent.nebcorp.com",
            "sender_full_name": "Joe Ardent (he) (SP1'17)",
            "sender_id": 9097,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Stanford Algorithms course",
            "submessages": [],
            "timestamp": 1468716324,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/8f3e3f13689ac077fe4ae537e33bde345a57cb22?x=x&version=2",
            "client": "website",
            "content": "<p>Oh, nevermind. I didn't know what an inversion meant. I thought they were asking for the number of times the value of a given line in the file was the same as its line number. But it's the number of pairs that need to be swapped in order to sort the array.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 61900084,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "recurse@ardent.nebcorp.com",
            "sender_full_name": "Joe Ardent (he) (SP1'17)",
            "sender_id": 9097,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Stanford Algorithms course",
            "submessages": [],
            "timestamp": 1468717890,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/8f3e3f13689ac077fe4ae537e33bde345a57cb22?x=x&version=2",
            "client": "website",
            "content": "<p>(it's really hard to find an explanation of what \"inversion\" meant without also being given a spoiler about how to actually compute it, even if you're just looking at the titles of the results of a search like \"what are array inversions\", so, be forewarned.)</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 61900124,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "recurse@ardent.nebcorp.com",
            "sender_full_name": "Joe Ardent (he) (SP1'17)",
            "sender_id": 9097,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Stanford Algorithms course",
            "submessages": [],
            "timestamp": 1468718011,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/d41c2072197ef3417feaa21d950dcb4c?d=identicon&version=1",
            "client": "desktop app Mac 0.5.1",
            "content": "<p>looks like I'm a bit too late to sign up, anyone want to pair with me on it next week?</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 61906681,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "roneesh@gmail.com",
            "sender_full_name": "Roneesh Vashisht (S1'16)",
            "sender_id": 9341,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Stanford Algorithms course",
            "submessages": [],
            "timestamp": 1468735652,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/d41c2072197ef3417feaa21d950dcb4c?d=identicon&version=1",
            "client": "desktop app Mac 0.5.1",
            "content": "<p>can someone pair with me on the string permutations (non-recursive) algorithm tomorrow? I'm feeling kind of dumb now for not getting it while working on it this weekend</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 61927448,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "roneesh@gmail.com",
            "sender_full_name": "Roneesh Vashisht (S1'16)",
            "sender_id": 9341,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "string permutations",
            "submessages": [],
            "timestamp": 1468789947,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/1fdd84a57c15f7ecfdded3d0c32019ad32f8af5d?x=x&version=5",
            "client": "desktop app Mac 0.5.1",
            "content": "<p>hey <span class=\"user-mention\" data-user-email=\"roneesh@gmail.com\">@Roneesh Vashisht (S1'16)</span> i can :)</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 61929995,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "arpith@feedreader.co",
            "sender_full_name": "Arpith Siromoney (he) (m6'20)",
            "sender_id": 9503,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "string permutations",
            "submessages": [],
            "timestamp": 1468796208,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/8f3e3f13689ac077fe4ae537e33bde345a57cb22?x=x&version=2",
            "client": "website",
            "content": "<p><span class=\"user-mention\" data-user-email=\"roneesh@gmail.com\">@Roneesh Vashisht (S1'16)</span> I think I was too late, too, but I enrolled for the one that starts in August, and am now \"previewing\" the class, meaning, I see all the material etc.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 61956653,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "recurse@ardent.nebcorp.com",
            "sender_full_name": "Joe Ardent (he) (SP1'17)",
            "sender_id": 9097,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Stanford Algorithms course",
            "submessages": [],
            "timestamp": 1468857792,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/1f950f2c6fb4d92e4a4e6ea1c0b6575a7465d00c?x=x&version=1",
            "client": "website",
            "content": "<p>doing the same! bummed that I didn't see the earlier one haha - but I'm going to start working on things now and just submit right away when the class opens up!</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 61956718,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "kgibilterra@gmail.com",
            "sender_full_name": "Kaylyn Gibilterra (S2'16)",
            "sender_id": 9508,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Stanford Algorithms course",
            "submessages": [],
            "timestamp": 1468857862,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/8f3e3f13689ac077fe4ae537e33bde345a57cb22?x=x&version=2",
            "client": "website",
            "content": "<p>I *think* you can do the material etc., and it will tell you if you did it correctly or not</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 61956822,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "recurse@ardent.nebcorp.com",
            "sender_full_name": "Joe Ardent (he) (SP1'17)",
            "sender_id": 9097,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Stanford Algorithms course",
            "submessages": [],
            "timestamp": 1468857979,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/8f3e3f13689ac077fe4ae537e33bde345a57cb22?x=x&version=2",
            "client": "website",
            "content": "<p>though, personally, I'm not really interested in the cert or anything, so I'm not too worried about getting credit or whatever.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 61956850,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "recurse@ardent.nebcorp.com",
            "sender_full_name": "Joe Ardent (he) (SP1'17)",
            "sender_id": 9097,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Stanford Algorithms course",
            "submessages": [],
            "timestamp": 1468858043,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/8f3e3f13689ac077fe4ae537e33bde345a57cb22?x=x&version=2",
            "client": "website",
            "content": "<p>(on the other hand, I was pleased when a 5-line change in my mergesort impl gave me a 500x speedup in sorting 100k numbers :)</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 61956865,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "recurse@ardent.nebcorp.com",
            "sender_full_name": "Joe Ardent (he) (SP1'17)",
            "sender_id": 9097,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Stanford Algorithms course",
            "submessages": [],
            "timestamp": 1468858081,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/d41c2072197ef3417feaa21d950dcb4c?d=identicon&version=1",
            "client": "desktop app Mac 0.5.1",
            "content": "<p>ah nice! would either of you be interested in pairing up on it?</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 61956908,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "roneesh@gmail.com",
            "sender_full_name": "Roneesh Vashisht (S1'16)",
            "sender_id": 9341,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Stanford Algorithms course",
            "submessages": [],
            "timestamp": 1468858097,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/8f3e3f13689ac077fe4ae537e33bde345a57cb22?x=x&version=2",
            "client": "website",
            "content": "<p>sure!</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 61956910,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "recurse@ardent.nebcorp.com",
            "sender_full_name": "Joe Ardent (he) (SP1'17)",
            "sender_id": 9097,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Stanford Algorithms course",
            "submessages": [],
            "timestamp": 1468858107,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/8f3e3f13689ac077fe4ae537e33bde345a57cb22?x=x&version=2",
            "client": "website",
            "content": "<p>though I'm remote.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 61956914,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "recurse@ardent.nebcorp.com",
            "sender_full_name": "Joe Ardent (he) (SP1'17)",
            "sender_id": 9097,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Stanford Algorithms course",
            "submessages": [],
            "timestamp": 1468858114,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/1f950f2c6fb4d92e4a4e6ea1c0b6575a7465d00c?x=x&version=1",
            "client": "website",
            "content": "<p>I would too!!</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 61957161,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "kgibilterra@gmail.com",
            "sender_full_name": "Kaylyn Gibilterra (S2'16)",
            "sender_id": 9508,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Stanford Algorithms course",
            "submessages": [],
            "timestamp": 1468858433,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/8f3e3f13689ac077fe4ae537e33bde345a57cb22?x=x&version=2",
            "client": "website",
            "content": "<p>I'm currently making a mess of turning my mergesort into count-inversions, though</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 61957229,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "recurse@ardent.nebcorp.com",
            "sender_full_name": "Joe Ardent (he) (SP1'17)",
            "sender_id": 9097,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Stanford Algorithms course",
            "submessages": [],
            "timestamp": 1468858524,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/d41c2072197ef3417feaa21d950dcb4c?d=identicon&version=1",
            "client": "desktop app Mac 0.5.1",
            "content": "<p>maybe at some point we get together on the whiteboard and Joe you could skype on in?</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 61957306,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "roneesh@gmail.com",
            "sender_full_name": "Roneesh Vashisht (S1'16)",
            "sender_id": 9341,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Stanford Algorithms course",
            "submessages": [],
            "timestamp": 1468858637,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/8f3e3f13689ac077fe4ae537e33bde345a57cb22?x=x&version=2",
            "client": "website",
            "content": "<p>It's possible, though my availability is unpredictable.  If I can, I'd be happy to join you virtually :)</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 61957369,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "recurse@ardent.nebcorp.com",
            "sender_full_name": "Joe Ardent (he) (SP1'17)",
            "sender_id": 9097,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Stanford Algorithms course",
            "submessages": [],
            "timestamp": 1468858735,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/1f950f2c6fb4d92e4a4e6ea1c0b6575a7465d00c?x=x&version=1",
            "client": "website",
            "content": "<p>just saw it as I browsed the classes I'm watching - stanford's machine learning course starts next week if anyone is interested! <a href=\"https://www.coursera.org/learn/machine-learning\" target=\"_blank\" title=\"https://www.coursera.org/learn/machine-learning\">https://www.coursera.org/learn/machine-learning</a></p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 61966055,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "kgibilterra@gmail.com",
            "sender_full_name": "Kaylyn Gibilterra (S2'16)",
            "sender_id": 9508,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "machine learning",
            "submessages": [],
            "timestamp": 1468872866,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/8f3e3f13689ac077fe4ae537e33bde345a57cb22?x=x&version=2",
            "client": "website",
            "content": "<p>I was implementing mergesort in Racket (Scheme), and thought that it was possible my impl was not nlogn complexity, since it took 1.2 seconds to sort 10k items, but 250 seconds to sort 100k.  I changed my code to use cons instead of append, and the time to sort 100k items went down to half a second.</p>\n<p><a href=\"https://github.com/nebkor/intro2algorithms/commit/6e4d0111edf2b22f026d91cb8b0d35f08bd49896\" target=\"_blank\" title=\"https://github.com/nebkor/intro2algorithms/commit/6e4d0111edf2b22f026d91cb8b0d35f08bd49896\">https://github.com/nebkor/intro2algorithms/commit/6e4d0111edf2b22f026d91cb8b0d35f08bd49896</a></p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 61966257,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "recurse@ardent.nebcorp.com",
            "sender_full_name": "Joe Ardent (he) (SP1'17)",
            "sender_id": 9097,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "\"cons\" is O(1); \"append\" is O(n)",
            "submessages": [],
            "timestamp": 1468873236,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/dbbeeb0789c1e1195ddc9c35ec72f56e?d=identicon&version=1",
            "client": "website",
            "content": "<p>Yeah actually I signed up for this yesterday. Let's do it.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 61966268,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "jessetherappaport@gmail.com",
            "sender_full_name": "Jesse Rappaport (S2'16)",
            "sender_id": 9498,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "machine learning",
            "submessages": [],
            "timestamp": 1468873277,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/1f950f2c6fb4d92e4a4e6ea1c0b6575a7465d00c?x=x&version=1",
            "client": "website",
            "content": "<p>nice!! sounds awesome</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 61967553,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "kgibilterra@gmail.com",
            "sender_full_name": "Kaylyn Gibilterra (S2'16)",
            "sender_id": 9508,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "machine learning",
            "submessages": [],
            "timestamp": 1468875251,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/dbbeeb0789c1e1195ddc9c35ec72f56e?d=identicon&version=1",
            "client": "website",
            "content": "<p>yeah let's be in touch when this gets going. Do you have any background in this area or is it just something you're curious about? I'm more in the latter category.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 61994615,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "jessetherappaport@gmail.com",
            "sender_full_name": "Jesse Rappaport (S2'16)",
            "sender_id": 9498,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "machine learning",
            "submessages": [],
            "timestamp": 1468935564,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/85b7bffdc731ce90a89c323fb362a8be0012652e?x=x&version=2",
            "client": "website",
            "content": "<p>Do we have a time picked to go over our progress/provide moral support/compare our solutions?</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 61998531,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "sarah.anne.friend@gmail.com",
            "sender_full_name": "Sarah Friend (she) (S2'16)",
            "sender_id": 9500,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Stanford Algorithms course",
            "submessages": [],
            "timestamp": 1468941851,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/74df5731ba535a4fdb258101a3d49877?d=identicon&version=1",
            "client": "website",
            "content": "<p>Thursday afternoons work for everyone? I'm tentatively planning on doing the assignments later in the week. I think <span class=\"user-mention\" data-user-email=\"kgibilterra@gmail.com\">@Kaylyn Gibilterra (S2'16)</span>  and <span class=\"user-mention\" data-user-email=\"roneesh@gmail.com\">@Roneesh Vashisht (S1'16)</span>  are working on week 1 stuff today, I'm also happy to share/explain my solutions.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 62003864,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "jameshkatz@gmail.com",
            "sender_full_name": "James Katz (S2'16)",
            "sender_id": 9509,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Stanford Algorithms course",
            "submessages": [],
            "timestamp": 1468950579,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/85b7bffdc731ce90a89c323fb362a8be0012652e?x=x&version=2",
            "client": "website",
            "content": "<p>That would work for me!</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 62004329,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "sarah.anne.friend@gmail.com",
            "sender_full_name": "Sarah Friend (she) (S2'16)",
            "sender_id": 9500,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Stanford Algorithms course",
            "submessages": [],
            "timestamp": 1468951225,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/1f950f2c6fb4d92e4a4e6ea1c0b6575a7465d00c?x=x&version=1",
            "client": "website",
            "content": "<p>thursday afternoons work for me!</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 62004353,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "kgibilterra@gmail.com",
            "sender_full_name": "Kaylyn Gibilterra (S2'16)",
            "sender_id": 9508,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Stanford Algorithms course",
            "submessages": [],
            "timestamp": 1468951290,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/85b7bffdc731ce90a89c323fb362a8be0012652e?x=x&version=2",
            "client": "website",
            "content": "<p><span class=\"user-mention\" data-user-email=\"jameshkatz@gmail.com\">@James Katz (S2'16)</span> <span class=\"user-mention\" data-user-email=\"recurse@ardent.nebcorp.com\">@Joe Ardent (SP1'16)</span> <span class=\"user-mention\" data-user-email=\"kgibilterra@gmail.com\">@Kaylyn Gibilterra (S2'16)</span> <span class=\"user-mention\" data-user-email=\"roneesh@gmail.com\">@Roneesh Vashisht (S1'16)</span> (Sorry if I missed anybody)  <br>\nIt's Thursday afternoon still wanna do the thing? A lot of talks start at 2:00, so I suspect sometime between now and then would be ideal!</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 62085258,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "sarah.anne.friend@gmail.com",
            "sender_full_name": "Sarah Friend (she) (S2'16)",
            "sender_id": 9500,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Stanford Algorithms course",
            "submessages": [],
            "timestamp": 1469116482,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/d41c2072197ef3417feaa21d950dcb4c?d=identicon&version=1",
            "client": "desktop app Mac 0.5.1",
            "content": "<p>yeah I'm down! though I do wanna get some lunch between then too</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 62085431,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "roneesh@gmail.com",
            "sender_full_name": "Roneesh Vashisht (S1'16)",
            "sender_id": 9341,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Stanford Algorithms course",
            "submessages": [],
            "timestamp": 1469116748,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/d41c2072197ef3417feaa21d950dcb4c?d=identicon&version=1",
            "client": "desktop app Mac 0.5.1",
            "content": "<p>yeah I'm down, I've made decent progress on week 1</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 62085439,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "roneesh@gmail.com",
            "sender_full_name": "Roneesh Vashisht (S1'16)",
            "sender_id": 9341,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Stanford Algorithms course",
            "submessages": [],
            "timestamp": 1469116760,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/d41c2072197ef3417feaa21d950dcb4c?d=identicon&version=1",
            "client": "desktop app Mac 0.5.1",
            "content": "<p>argh, sent two due to Zulip!</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 62085449,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "roneesh@gmail.com",
            "sender_full_name": "Roneesh Vashisht (S1'16)",
            "sender_id": 9341,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Stanford Algorithms course",
            "submessages": [],
            "timestamp": 1469116775,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/85b7bffdc731ce90a89c323fb362a8be0012652e?x=x&version=2",
            "client": "website",
            "content": "<p>lol, let's say 1:00 in the library?  It looks empty rn</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 62085617,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "sarah.anne.friend@gmail.com",
            "sender_full_name": "Sarah Friend (she) (S2'16)",
            "sender_id": 9500,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Stanford Algorithms course",
            "submessages": [],
            "timestamp": 1469116980,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/74df5731ba535a4fdb258101a3d49877?d=identicon&version=1",
            "client": "website",
            "content": "<p>I'll pop in a little after 1!</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 62087375,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "jameshkatz@gmail.com",
            "sender_full_name": "James Katz (S2'16)",
            "sender_id": 9509,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Stanford Algorithms course",
            "submessages": [],
            "timestamp": 1469119900,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/d41c2072197ef3417feaa21d950dcb4c?d=identicon&version=1",
            "client": "desktop app Mac 0.5.1",
            "content": "<p>library after checkins?</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 62088001,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "roneesh@gmail.com",
            "sender_full_name": "Roneesh Vashisht (S1'16)",
            "sender_id": 9341,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Stanford Algorithms course",
            "submessages": [],
            "timestamp": 1469120777,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/c52df4d54166ed7db0141bdb21c7935e502d6ddc?x=x&version=1",
            "client": "website",
            "content": "<p>I'm around on Zulip; I did the first week and the quiz from the 2nd week.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 62088003,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "darius@wry.me",
            "sender_full_name": "Darius Bacon (W1'16)",
            "sender_id": 902,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Stanford Algorithms course",
            "submessages": [],
            "timestamp": 1469120785,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/85b7bffdc731ce90a89c323fb362a8be0012652e?x=x&version=2",
            "client": "website",
            "content": "<p><img alt=\":100:\" class=\"emoji\" src=\"static/third/gemoji/images/emoji/100.png\" title=\":100:\"> hello remotes!</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 62088012,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "sarah.anne.friend@gmail.com",
            "sender_full_name": "Sarah Friend (she) (S2'16)",
            "sender_id": 9500,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Stanford Algorithms course",
            "submessages": [],
            "timestamp": 1469120813,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/85b7bffdc731ce90a89c323fb362a8be0012652e?x=x&version=2",
            "client": "website",
            "content": "<p>In hopper instead!</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 62088105,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "sarah.anne.friend@gmail.com",
            "sender_full_name": "Sarah Friend (she) (S2'16)",
            "sender_id": 9500,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Stanford Algorithms course",
            "submessages": [],
            "timestamp": 1469120980,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/8f3e3f13689ac077fe4ae537e33bde345a57cb22?x=x&version=2",
            "client": "Android",
            "content": "<p>I can't participate synchronously, but I'll read scrollback if there's discussion here. I'm being dumb about getting my working mergesort to correctly count inversions :( I blame trying to do it functionally in Scheme for my trouble, since it's an impedance mismatch with the instructions.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 62090063,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "recurse@ardent.nebcorp.com",
            "sender_full_name": "Joe Ardent (he) (SP1'17)",
            "sender_id": 9097,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Stanford Algorithms course",
            "submessages": [],
            "timestamp": 1469124160,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/1f950f2c6fb4d92e4a4e6ea1c0b6575a7465d00c?x=x&version=1",
            "client": "website",
            "content": "<p>I had this thing were I was comparing each pair of elements twice and it gave me the strangest bug until I realized it  -____-</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 62093937,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "kgibilterra@gmail.com",
            "sender_full_name": "Kaylyn Gibilterra (S2'16)",
            "sender_id": 9508,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Stanford Algorithms course",
            "submessages": [],
            "timestamp": 1469130048,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/1f950f2c6fb4d92e4a4e6ea1c0b6575a7465d00c?x=x&version=1",
            "client": "website",
            "content": "<p>I did scheme a...long time ago, and can't say I was particularly stellar at it...so I'm not sure I could help - but if you want a second pair of eyes I would be glad to check it out!</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 62093954,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "kgibilterra@gmail.com",
            "sender_full_name": "Kaylyn Gibilterra (S2'16)",
            "sender_id": 9508,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Stanford Algorithms course",
            "submessages": [],
            "timestamp": 1469130116,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/8f3e3f13689ac077fe4ae537e33bde345a57cb22?x=x&version=2",
            "client": "Android",
            "content": "<p>It's a bit of a hot mess at the moment. I tried using a bit of mutable state to keep track. It's not a ton of code, but I'm just not understanding all the cases.</p>\n<p><a href=\"https://github.com/nebkor/intro2algorithms/commit/e7ec56406e08abae094fe8933c82dcc8d424c9d9\" target=\"_blank\" title=\"https://github.com/nebkor/intro2algorithms/commit/e7ec56406e08abae094fe8933c82dcc8d424c9d9\">https://github.com/nebkor/intro2algorithms/commit/e7ec56406e08abae094fe8933c82dcc8d424c9d9</a></p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 62099182,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "recurse@ardent.nebcorp.com",
            "sender_full_name": "Joe Ardent (he) (SP1'17)",
            "sender_id": 9097,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Stanford Algorithms course",
            "submessages": [],
            "timestamp": 1469139348,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/8f3e3f13689ac077fe4ae537e33bde345a57cb22?x=x&version=2",
            "client": "Android",
            "content": "<p>I was doing Scheme because it's my current most comfortable language, but I'm pretty facile with Python, so I might try that. Or just do a more imperative transliteration of the lecture algorithm, using arrays etc. instead of trying to cdr down a list in a functional way.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 62099480,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "recurse@ardent.nebcorp.com",
            "sender_full_name": "Joe Ardent (he) (SP1'17)",
            "sender_id": 9097,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Stanford Algorithms course",
            "submessages": [],
            "timestamp": 1469139845,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/d41c2072197ef3417feaa21d950dcb4c?d=identicon&version=1",
            "client": "desktop app Mac 0.5.1",
            "content": "<p>I think week 2 is not so bad, you just implement quickSort, which isn't too bad</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 62100197,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "roneesh@gmail.com",
            "sender_full_name": "Roneesh Vashisht (S1'16)",
            "sender_id": 9341,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Stanford Algorithms course",
            "submessages": [],
            "timestamp": 1469141227,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/c52df4d54166ed7db0141bdb21c7935e502d6ddc?x=x&version=1",
            "client": "website",
            "content": "<p><span class=\"user-mention\" data-user-email=\"recurse@ardent.nebcorp.com\">@Joe Ardent (SP1'16)</span> it might help to not make the merge function tail-recursive. Also, when I did this in Python I made the inversions count a global variable (updated as a side effect).</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 62100247,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "darius@wry.me",
            "sender_full_name": "Darius Bacon (W1'16)",
            "sender_id": 902,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Stanford Algorithms course",
            "submessages": [],
            "timestamp": 1469141336,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/c52df4d54166ed7db0141bdb21c7935e502d6ddc?x=x&version=1",
            "client": "website",
            "content": "<p>I mean, merge is simpler if you let it be recursive, and it's not like the tail recursion here would change the asymptotic space usage.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 62100276,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "darius@wry.me",
            "sender_full_name": "Darius Bacon (W1'16)",
            "sender_id": 902,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Stanford Algorithms course",
            "submessages": [],
            "timestamp": 1469141404,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/8f3e3f13689ac077fe4ae537e33bde345a57cb22?x=x&version=2",
            "client": "website",
            "content": "<p><span class=\"user-mention\" data-user-email=\"darius@wry.me\">@Darius Bacon (F2'15)</span> Huh!  I hadn't consciously set out to make it tail-recursive; that's just my go-to pattern for these things. Notice how the \"main-help\" function has similar style, but is not tail-recursive.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 62103838,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "recurse@ardent.nebcorp.com",
            "sender_full_name": "Joe Ardent (he) (SP1'17)",
            "sender_id": 9097,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Stanford Algorithms course",
            "submessages": [],
            "timestamp": 1469149444,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/8f3e3f13689ac077fe4ae537e33bde345a57cb22?x=x&version=2",
            "client": "website",
            "content": "<p>Also, thank you for the feedback!</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 62109129,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "recurse@ardent.nebcorp.com",
            "sender_full_name": "Joe Ardent (he) (SP1'17)",
            "sender_id": 9097,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Stanford Algorithms course",
            "submessages": [],
            "timestamp": 1469160098,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/8f3e3f13689ac077fe4ae537e33bde345a57cb22?x=x&version=2",
            "client": "website",
            "content": "<p>the recursive merge is much simpler :)</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 62109332,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "recurse@ardent.nebcorp.com",
            "sender_full_name": "Joe Ardent (he) (SP1'17)",
            "sender_id": 9097,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Stanford Algorithms course",
            "submessages": [],
            "timestamp": 1469160509,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/8f3e3f13689ac077fe4ae537e33bde345a57cb22?x=x&version=2",
            "client": "website",
            "content": "<p>Thank you <span class=\"user-mention\" data-user-email=\"darius@wry.me\">@Darius Bacon (F2'15)</span> ! That was just the hint I needed: <a href=\"https://github.com/nebkor/intro2algorithms/commit/7f85abb60fb2397c1efe6726d471ee1d5d1bd138\" target=\"_blank\" title=\"https://github.com/nebkor/intro2algorithms/commit/7f85abb60fb2397c1efe6726d471ee1d5d1bd138\">https://github.com/nebkor/intro2algorithms/commit/7f85abb60fb2397c1efe6726d471ee1d5d1bd138</a></p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 62109769,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "recurse@ardent.nebcorp.com",
            "sender_full_name": "Joe Ardent (he) (SP1'17)",
            "sender_id": 9097,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Stanford Algorithms course",
            "submessages": [],
            "timestamp": 1469161541,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/c52df4d54166ed7db0141bdb21c7935e502d6ddc?x=x&version=1",
            "client": "website",
            "content": "<p>Great. :)</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 62111290,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "darius@wry.me",
            "sender_full_name": "Darius Bacon (W1'16)",
            "sender_id": 902,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Stanford Algorithms course",
            "submessages": [],
            "timestamp": 1469164783,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/5e4aa5311affe020e4b36536287f3ec1?d=identicon&version=2",
            "client": "website",
            "content": "<p>I also signed up for this after watching a few machine learning talks at EuroPython conference :) </p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 62120747,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "kal_ali@hotmail.com",
            "sender_full_name": "Khalid Omar Ali (F2'15)",
            "sender_id": 8713,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "machine learning",
            "submessages": [],
            "timestamp": 1469187868,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/d41c2072197ef3417feaa21d950dcb4c?d=identicon&version=1",
            "client": "desktop app Mac 0.5.1",
            "content": "<p>how's everyone doing on the course? I'm working on the recursive closest pair of points that were in the advanced week 1 lesson, I did the quicksort in week 2 (non-randomized one), and I am passing on learning Masters Method, as my friend Clara said that it never came up while interviewing</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 62242439,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "roneesh@gmail.com",
            "sender_full_name": "Roneesh Vashisht (S1'16)",
            "sender_id": 9341,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Stanford Algorithms course",
            "submessages": [],
            "timestamp": 1469467742,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/d41c2072197ef3417feaa21d950dcb4c?d=identicon&version=1",
            "client": "desktop app Mac 0.5.1",
            "content": "<p>I also did a really short recursive problem on counting land masses, it was really fun and I'd be happy to share it if you want more recursion practice that's on the simpler side</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 62242445,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "roneesh@gmail.com",
            "sender_full_name": "Roneesh Vashisht (S1'16)",
            "sender_id": 9341,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Stanford Algorithms course",
            "submessages": [],
            "timestamp": 1469467779,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/c52df4d54166ed7db0141bdb21c7935e502d6ddc?x=x&version=1",
            "client": "website",
            "content": "<p>Re the master method: I solved the quiz problems without knowing it (I generally attempt them before looking at the lesson) but one of them was difficult that would've been easy. One of the two theory problems in the second week, I haven't solved yet (finding a local minimum in a grid of numbers), and the hint makes it sound like consulting the master method might help.<br>\nI skipped the programming problem since I don't think I'd learn much by reimplementing quicksort from their pseudocode. Done that before.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 62246773,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "darius@wry.me",
            "sender_full_name": "Darius Bacon (W1'16)",
            "sender_id": 902,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Stanford Algorithms course",
            "submessages": [],
            "timestamp": 1469475698,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/74df5731ba535a4fdb258101a3d49877?d=identicon&version=1",
            "client": "website",
            "content": "<p>I did the problem set and quicksort hw from this week. Implementing a working quicksort was pretty easy.. getting my swap counters correct was surprisingly annoying.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 62247715,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "jameshkatz@gmail.com",
            "sender_full_name": "James Katz (S2'16)",
            "sender_id": 9509,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Stanford Algorithms course",
            "submessages": [],
            "timestamp": 1469477338,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/d41c2072197ef3417feaa21d950dcb4c?d=identicon&version=1",
            "client": "desktop app Mac 0.5.1",
            "content": "<p>I did it with the lazy pivot point, just the last element in the array. Is getting a random point harder?</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 62249675,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "roneesh@gmail.com",
            "sender_full_name": "Roneesh Vashisht (S1'16)",
            "sender_id": 9341,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Stanford Algorithms course",
            "submessages": [],
            "timestamp": 1469480816,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/d41c2072197ef3417feaa21d950dcb4c?d=identicon&version=1",
            "client": "desktop app Mac 0.5.1",
            "content": "<p>also I jsut did the recursive distance between points from week 1, oh man that was pretty hard</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 62249681,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "roneesh@gmail.com",
            "sender_full_name": "Roneesh Vashisht (S1'16)",
            "sender_id": 9341,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Stanford Algorithms course",
            "submessages": [],
            "timestamp": 1469480833,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/dbbeeb0789c1e1195ddc9c35ec72f56e?d=identicon&version=1",
            "client": "website",
            "content": "<p>Hey, so I managed to get through week 1, which was basically just a math unit. Anyone else thinking of keeping up with this?</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 62520680,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "jessetherappaport@gmail.com",
            "sender_full_name": "Jesse Rappaport (S2'16)",
            "sender_id": 9498,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "machine learning",
            "submessages": [],
            "timestamp": 1470063573,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/1f950f2c6fb4d92e4a4e6ea1c0b6575a7465d00c?x=x&version=1",
            "client": "website",
            "content": "<p>oh just saw this, but yea I'm doing it too! If anyone wants to join they should \\o/</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 62523297,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "kgibilterra@gmail.com",
            "sender_full_name": "Kaylyn Gibilterra (S2'16)",
            "sender_id": 9508,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "machine learning",
            "submessages": [],
            "timestamp": 1470068223,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/1d98a6bad543795875e03f3ec2d8f6d3a8c8b138?x=x&version=1",
            "client": "website",
            "content": "<p>I just finished it! my biggest gripe is that it's a fairly practical class in a fairly impractical language (octave/matlab). not sure if there's any alternatives with similar scope and accessibility that use e.g. Python instead</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 62523690,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "sean.talts@gmail.com",
            "sender_full_name": "Sean Talts (F1'16)",
            "sender_id": 9337,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "machine learning",
            "submessages": [],
            "timestamp": 1470068986,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/1fdd84a57c15f7ecfdded3d0c32019ad32f8af5d?x=x&version=5",
            "client": "website",
            "content": "<p>I'm going to be looking at a competition problem at lunch everyday, today's problem is <br>\n<a href=\"https://community.topcoder.com/stat?c=problem_statement&amp;pm=14291\" target=\"_blank\" title=\"https://community.topcoder.com/stat?c=problem_statement&amp;pm=14291\">https://community.topcoder.com/stat?c=problem_statement&amp;pm=14291</a><br>\nand the analysis is <a href=\"https://apps.topcoder.com/wiki/display/tc/SRM+691#Sunnygraphs\" target=\"_blank\" title=\"https://apps.topcoder.com/wiki/display/tc/SRM+691#Sunnygraphs\">https://apps.topcoder.com/wiki/display/tc/SRM+691#Sunnygraphs</a></p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 62846917,
            "is_me_message": false,
            "last_edit_timestamp": 1470674940,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "arpith@feedreader.co",
            "sender_full_name": "Arpith Siromoney (he) (m6'20)",
            "sender_id": 9503,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Competition Problems",
            "submessages": [],
            "timestamp": 1470674915,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/2b3883a91e0e0a59f3998bcc07ca66d2e9e760a6?x=x&version=1",
            "client": "website",
            "content": "<p><span class=\"user-mention\" data-user-email=\"alicja.raszkowska@gmail.com\">@Alicja Raszkowska</span> <span class=\"user-mention\" data-user-email=\"aissam.belhachmi@gmail.com\">@Aissam Belhachmi</span> <span class=\"user-mention\" data-user-email=\"sranso@gmail.com\">@Sarah Ransohoff</span> <span class=\"user-mention\" data-user-email=\"isla.carson@hotmail.co.uk\">@Isla Carson</span> <span class=\"user-mention\" data-user-email=\"vaibhavsagar@gmail.com\">@Vaibhav Sagar</span> Reviving this thread for our new group. Plan is to watch the videos individually, then we'll meet twice a week for check-ins (thinking Tuesdays and Thursdays). Standford course: <a href=\"https://www.coursera.org/learn/algorithm-design-analysis\" target=\"_blank\" title=\"https://www.coursera.org/learn/algorithm-design-analysis\">https://www.coursera.org/learn/algorithm-design-analysis</a></p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 100113932,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "platt.nicholas@gmail.com",
            "sender_full_name": "Nick Platt (F1'16)",
            "sender_id": 100031,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Stanford Algorithms course",
            "submessages": [],
            "timestamp": 1471548304,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/2b942c5d81780d60e790c1657d6e9dbc?d=identicon&version=1",
            "client": "website",
            "content": "<p>did any of y'all make a program for karatsuba (he talks about this algo in week one)?</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 100123435,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "sranso@gmail.com",
            "sender_full_name": "Sarah Weiss Ransohoff (F1'16)",
            "sender_id": 100027,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Stanford Algorithms course",
            "submessages": [],
            "timestamp": 1471568520,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/2b942c5d81780d60e790c1657d6e9dbc?d=identicon&version=1",
            "client": "website",
            "content": "<p>i looked at some python solutions online but idk if i totally follow them.. also i'm a newbie to python :) anywho, i may be down to look at / pair on writing it tomorrow if someone's interested</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 100123477,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "sranso@gmail.com",
            "sender_full_name": "Sarah Weiss Ransohoff (F1'16)",
            "sender_id": 100027,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Stanford Algorithms course",
            "submessages": [],
            "timestamp": 1471568583,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/08dcfe30cf7f6b2fadc908e814a6472fd38b4a38?x=x&version=3",
            "client": "website",
            "content": "<p><span class=\"user-mention\" data-user-email=\"sranso@gmail.com\">@Sarah Ransohoff</span> I'm down, let's pick a time tomorrow <img alt=\":simple_smile:\" class=\"emoji\" src=\"/static/third/gemoji/images/emoji/simple_smile.png\" title=\":simple_smile:\"> <br>\nI need to rewatch that lecture about it though..</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 100126746,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "aissam.belhachmi@gmail.com",
            "sender_full_name": "Aissam Belhachmi (he) (F1'16)",
            "sender_id": 100040,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Stanford Algorithms course",
            "submessages": [],
            "timestamp": 1471576501,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/c2a1e36ca5742482a9581b5e1e753979?d=identicon&version=1",
            "client": "website",
            "content": "<p>Check out this <a href=\"https://github.com/gudnm/codekatas\" target=\"_blank\" title=\"https://github.com/gudnm/codekatas\">Jupyter notebook</a> for some \"code katas\" that you can do in Python. They go from white belt to green belt and I encourage you to clone the repo, complete the code so all the tests pass and to send your solutions to me if you want a review.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 100143109,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "dfobox@gmail.com",
            "sender_full_name": "Ivan Vashchenko (F1'16)",
            "sender_id": 100046,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Friday Code Katas in Python",
            "submessages": [],
            "timestamp": 1471619778,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/0cafd2aa397b7d2709f0e917f76ddcd30d04e8e6?x=x&version=1",
            "client": "website",
            "content": "<p>are you guys still working on it? i'm currently on week 6</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 100193260,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "kangren.chia@gmail.com",
            "sender_full_name": "Kang Ren Chia (S2'16)",
            "sender_id": 9487,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "machine learning",
            "submessages": [],
            "timestamp": 1471737376,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/1f950f2c6fb4d92e4a4e6ea1c0b6575a7465d00c?x=x&version=1",
            "client": "website",
            "content": "<p><span class=\"user-mention\" data-user-email=\"jessetherappaport@gmail.com\">@Jesse Rappaport (S2'16)</span> and I are just finishing week 4!</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 100215012,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "kgibilterra@gmail.com",
            "sender_full_name": "Kaylyn Gibilterra (S2'16)",
            "sender_id": 9508,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "machine learning",
            "submessages": [],
            "timestamp": 1471796250,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/dbbeeb0789c1e1195ddc9c35ec72f56e?d=identicon&version=1",
            "client": "website",
            "content": "<p>Couldn't get the neural net prediction function working... :( Any help appreciated.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 100244706,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "jessetherappaport@gmail.com",
            "sender_full_name": "Jesse Rappaport (S2'16)",
            "sender_id": 9498,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "machine learning",
            "submessages": [],
            "timestamp": 1471872485,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/8ef0cc9607b07f392f70560a43dbbb2d0efd6328?x=x&version=1",
            "client": "website",
            "content": "<p>Details? code?</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 100245322,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "brian.kihoon.lee@gmail.com",
            "sender_full_name": "Brian Lee (F1'16)",
            "sender_id": 100043,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "machine learning",
            "submessages": [],
            "timestamp": 1471873818,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/b9395322b228f5a226f8576ccf13eefc5e2b2829?x=x&version=1",
            "client": "website",
            "content": "<p>I found this cool intro which I thought might interest some peeps <a href=\"http://www.r2d3.us/visual-intro-to-machine-learning-part-1/\" target=\"_blank\" title=\"http://www.r2d3.us/visual-intro-to-machine-learning-part-1/\">http://www.r2d3.us/visual-intro-to-machine-learning-part-1/</a></p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 100245766,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "mdnetto@gmail.com",
            "sender_full_name": "Michelle D'Netto (F1'16)",
            "sender_id": 100047,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "machine learning",
            "submessages": [],
            "timestamp": 1471874724,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/2b942c5d81780d60e790c1657d6e9dbc?d=identicon&version=1",
            "client": "website",
            "content": "<p>how far are peeps into this course rn? trying to pace myself with the team ;) </p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 100246999,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "sranso@gmail.com",
            "sender_full_name": "Sarah Weiss Ransohoff (F1'16)",
            "sender_id": 100027,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Stanford Algorithms course",
            "submessages": [],
            "timestamp": 1471876953,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/2b3883a91e0e0a59f3998bcc07ca66d2e9e760a6?x=x&version=1",
            "client": "website",
            "content": "<p>I'll finish week 1 today</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 100247014,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "platt.nicholas@gmail.com",
            "sender_full_name": "Nick Platt (F1'16)",
            "sender_id": 100031,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Stanford Algorithms course",
            "submessages": [],
            "timestamp": 1471877025,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/2b942c5d81780d60e790c1657d6e9dbc?d=identicon&version=1",
            "client": "website",
            "content": "<p>ah ok cool. i'm on lesson 2 of 5 in week one, so i'll keep going :)</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 100247089,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "sranso@gmail.com",
            "sender_full_name": "Sarah Weiss Ransohoff (F1'16)",
            "sender_id": 100027,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Stanford Algorithms course",
            "submessages": [],
            "timestamp": 1471877138,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/c7ecfe9f2764516cd0769548de80a3edb20d81cd?x=x&version=2",
            "client": "website",
            "content": "<p>A few people are learning algorithms. I came across a note I sent someone about algorithms before, so this might be useful to ye.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 100247162,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "paul.biggar@gmail.com",
            "sender_full_name": "Paul Biggar (he) (F1'16)",
            "sender_id": 100048,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "good places to learn algorithmic thinking",
            "submessages": [],
            "timestamp": 1471877270,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/c7ecfe9f2764516cd0769548de80a3edb20d81cd?x=x&version=2",
            "client": "website",
            "content": "<p>Best places I've found to learn algorithms:</p>\n<p>Algorithm Design Manual (esp chapter 1)<br>\nPractice of Programming<br>\nProgramming Pearls</p>\n<p>Hope that helps!</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 100247215,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "paul.biggar@gmail.com",
            "sender_full_name": "Paul Biggar (he) (F1'16)",
            "sender_id": 100048,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "good places to learn algorithmic thinking",
            "submessages": [],
            "timestamp": 1471877312,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/59fc212d90b34ed89138ff2b8f1f8e2f4d606284?x=x&version=2",
            "client": "website",
            "content": "<p>Anyone have a favorite resource for learning and implementing the simplex algorithm?</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 100247307,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "dmoon1221@gmail.com",
            "sender_full_name": "David Moon (he) (F1'16)",
            "sender_id": 100050,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "simplex",
            "submessages": [],
            "timestamp": 1471877480,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/d049f93773f612f693416bed06743d9b6437dc49?x=x&version=1",
            "client": "website",
            "content": "<p>thanks! </p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 100247318,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "me@johnomar.com",
            "sender_full_name": "John Omar (F1'16)",
            "sender_id": 100029,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "good places to learn algorithmic thinking",
            "submessages": [],
            "timestamp": 1471877516,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/59fc212d90b34ed89138ff2b8f1f8e2f4d606284?x=x&version=2",
            "client": "website",
            "content": "<p>I'm a noob w.r.t. linear programming, so example-driven resources would be especially helpful</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 100247364,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "dmoon1221@gmail.com",
            "sender_full_name": "David Moon (he) (F1'16)",
            "sender_id": 100050,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "simplex",
            "submessages": [],
            "timestamp": 1471877555,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/2b942c5d81780d60e790c1657d6e9dbc?d=identicon&version=1",
            "client": "website",
            "content": "<p>yes ty!</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 100247442,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "sranso@gmail.com",
            "sender_full_name": "Sarah Weiss Ransohoff (F1'16)",
            "sender_id": 100027,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "good places to learn algorithmic thinking",
            "submessages": [],
            "timestamp": 1471877682,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/2b942c5d81780d60e790c1657d6e9dbc?d=identicon&version=1",
            "client": "website",
            "content": "<p>i'm having a hard time following the \"basic examples\" vid in week one lesson two for big o notation.. anyone have time to answer a question or two?</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 100247852,
            "is_me_message": false,
            "last_edit_timestamp": 1471878323,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "sranso@gmail.com",
            "sender_full_name": "Sarah Weiss Ransohoff (F1'16)",
            "sender_id": 100027,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Stanford Algorithms course",
            "submessages": [],
            "timestamp": 1471878306,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/f335a1569ab5c770cfee60aa5a41f098?d=identicon&version=1",
            "client": "website",
            "content": "<p>Haven't seen the video, but I can try to answer your questions if no one else from the study group is available</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 100247915,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "fcdemirci@fastmail.fm",
            "sender_full_name": "Fahri Cihan Demirci (F1'16)",
            "sender_id": 100022,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Stanford Algorithms course",
            "submessages": [],
            "timestamp": 1471878431,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/dbbeeb0789c1e1195ddc9c35ec72f56e?d=identicon&version=1",
            "client": "website",
            "content": "<p><span class=\"user-mention\" data-user-email=\"sean.martin@nyu.edu\">@Sean Martin (S2'16)</span>  has kindly given me some help, will let you know if I am still struggling, thanks!</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 100248805,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "jessetherappaport@gmail.com",
            "sender_full_name": "Jesse Rappaport (S2'16)",
            "sender_id": 9498,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "machine learning",
            "submessages": [],
            "timestamp": 1471879673,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/dbbeeb0789c1e1195ddc9c35ec72f56e?d=identicon&version=1",
            "client": "website",
            "content": "<p>\"Neural Network Prediction Function |  30 /  30 | Nice work!\"</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 100249031,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "jessetherappaport@gmail.com",
            "sender_full_name": "Jesse Rappaport (S2'16)",
            "sender_id": 9498,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "machine learning",
            "submessages": [],
            "timestamp": 1471880032,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/2b3883a91e0e0a59f3998bcc07ca66d2e9e760a6?x=x&version=1",
            "client": "website",
            "content": "<p><span class=\"user-mention\" data-user-email=\"sranso@gmail.com\">@Sarah Weiss Ransohoff (F1'16)</span> <a href=\"https://en.wikipedia.org/wiki/Big_O_notation#Orders_of_common_functions\" target=\"_blank\" title=\"https://en.wikipedia.org/wiki/Big_O_notation#Orders_of_common_functions\">https://en.wikipedia.org/wiki/Big_O_notation#Orders_of_common_functions</a></p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 100249685,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "platt.nicholas@gmail.com",
            "sender_full_name": "Nick Platt (F1'16)",
            "sender_id": 100031,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Stanford Algorithms course",
            "submessages": [],
            "timestamp": 1471881114,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/2b3883a91e0e0a59f3998bcc07ca66d2e9e760a6?x=x&version=1",
            "client": "website",
            "content": "<p>Nick-time is apparently called \"linearithmic\" or \"quasilinear\", so I wasn't too far off!</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 100249738,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "platt.nicholas@gmail.com",
            "sender_full_name": "Nick Platt (F1'16)",
            "sender_id": 100031,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Stanford Algorithms course",
            "submessages": [],
            "timestamp": 1471881155,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/2b3883a91e0e0a59f3998bcc07ca66d2e9e760a6?x=x&version=1",
            "client": "website",
            "content": "<p>And O(n) &lt; O(n*log n), I had that wrong (embarrassing!)</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 100249764,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "platt.nicholas@gmail.com",
            "sender_full_name": "Nick Platt (F1'16)",
            "sender_id": 100031,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Stanford Algorithms course",
            "submessages": [],
            "timestamp": 1471881230,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/2b942c5d81780d60e790c1657d6e9dbc?d=identicon&version=1",
            "client": "website",
            "content": "<p>orders in order! <img alt=\":heart_eyes:\" class=\"emoji\" src=\"/static/third/gemoji/images/emoji/heart_eyes.png\" title=\":heart_eyes:\"> </p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 100249909,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "sranso@gmail.com",
            "sender_full_name": "Sarah Weiss Ransohoff (F1'16)",
            "sender_id": 100027,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Stanford Algorithms course",
            "submessages": [],
            "timestamp": 1471881380,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/2b942c5d81780d60e790c1657d6e9dbc?d=identicon&version=1",
            "client": "website",
            "content": "<p>oo and you were right with quasi-linear</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 100249923,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "sranso@gmail.com",
            "sender_full_name": "Sarah Weiss Ransohoff (F1'16)",
            "sender_id": 100027,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Stanford Algorithms course",
            "submessages": [],
            "timestamp": 1471881405,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/8f95e07c22da0d35f4c212cad4a019f097d690e1?x=x&version=1",
            "client": "website",
            "content": "<p>The 2nd chapter of \"The Algorithm Design Manual\" has a list of relationships like O(n)&lt;O(nlogn), if you're interested.  We have a copy in the library.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 100250883,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "isla.carson@hotmail.co.uk",
            "sender_full_name": "Isla Carson (she) (W2'19)",
            "sender_id": 100044,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Stanford Algorithms course",
            "submessages": [],
            "timestamp": 1471882897,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/2b942c5d81780d60e790c1657d6e9dbc?d=identicon&version=1",
            "client": "website",
            "content": "<p>ah cool, i may need to check out chapters one and two of that book (based also on paul's rec of it)</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 100255101,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "sranso@gmail.com",
            "sender_full_name": "Sarah Weiss Ransohoff (F1'16)",
            "sender_id": 100027,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Stanford Algorithms course",
            "submessages": [],
            "timestamp": 1471890298,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/2b942c5d81780d60e790c1657d6e9dbc?d=identicon&version=1",
            "client": "website",
            "content": "<p>prompted by nick's post <img alt=\":heart:\" class=\"emoji\" src=\"/static/third/gemoji/images/emoji/heart.png\" title=\":heart:\"> \u2013 should we make a cal event / book a room for this (i'll find out how to do that?) for tomorrow? there is a code dojo from 430-6 , so maybe we can meet at 3, 330?</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 100256728,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "sranso@gmail.com",
            "sender_full_name": "Sarah Weiss Ransohoff (F1'16)",
            "sender_id": 100027,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Stanford Algorithms course",
            "submessages": [],
            "timestamp": 1471893294,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/2b942c5d81780d60e790c1657d6e9dbc?d=identicon&version=1",
            "client": "website",
            "content": "<p>(i can make the event etc)</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 100256732,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "sranso@gmail.com",
            "sender_full_name": "Sarah Weiss Ransohoff (F1'16)",
            "sender_id": 100027,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Stanford Algorithms course",
            "submessages": [],
            "timestamp": 1471893307,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/2b3883a91e0e0a59f3998bcc07ca66d2e9e760a6?x=x&version=1",
            "client": "website",
            "content": "<p>I was going to create the meeting after talking with <span class=\"user-mention\" data-user-email=\"alicja.raszkowska@gmail.com\">@Alicja Karolina Raszkowska (F1'16)</span> , but I didn't know the time. Hence the post. :)</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 100256742,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "platt.nicholas@gmail.com",
            "sender_full_name": "Nick Platt (F1'16)",
            "sender_id": 100031,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Stanford Algorithms course",
            "submessages": [],
            "timestamp": 1471893348,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/2b3883a91e0e0a59f3998bcc07ca66d2e9e760a6?x=x&version=1",
            "client": "website",
            "content": "<p>She also suggested 3, or 2 if we want to have a break before the dojo (I think we were planning to schedule 1.5hr?)</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 100256785,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "platt.nicholas@gmail.com",
            "sender_full_name": "Nick Platt (F1'16)",
            "sender_id": 100031,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Stanford Algorithms course",
            "submessages": [],
            "timestamp": 1471893382,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/2b942c5d81780d60e790c1657d6e9dbc?d=identicon&version=1",
            "client": "website",
            "content": "<p>ah v cool :)</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 100256786,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "sranso@gmail.com",
            "sender_full_name": "Sarah Weiss Ransohoff (F1'16)",
            "sender_id": 100027,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Stanford Algorithms course",
            "submessages": [],
            "timestamp": 1471893393,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/2b942c5d81780d60e790c1657d6e9dbc?d=identicon&version=1",
            "client": "website",
            "content": "<p>either work for me?</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 100256787,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "sranso@gmail.com",
            "sender_full_name": "Sarah Weiss Ransohoff (F1'16)",
            "sender_id": 100027,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Stanford Algorithms course",
            "submessages": [],
            "timestamp": 1471893396,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/2b942c5d81780d60e790c1657d6e9dbc?d=identicon&version=1",
            "client": "website",
            "content": "<p>what are we gonna be doing in those 1.5 hours \u2013 is that for going over the exercises from week 1 or is it open for questions etc</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 100256790,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "sranso@gmail.com",
            "sender_full_name": "Sarah Weiss Ransohoff (F1'16)",
            "sender_id": 100027,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Stanford Algorithms course",
            "submessages": [],
            "timestamp": 1471893422,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/2b3883a91e0e0a59f3998bcc07ca66d2e9e760a6?x=x&version=1",
            "client": "website",
            "content": "<p>I may be confusing it with the group that's watching the DAS videos...</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 100256802,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "platt.nicholas@gmail.com",
            "sender_full_name": "Nick Platt (F1'16)",
            "sender_id": 100031,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Stanford Algorithms course",
            "submessages": [],
            "timestamp": 1471893462,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/2b942c5d81780d60e790c1657d6e9dbc?d=identicon&version=1",
            "client": "website",
            "content": "<p>ohh.. hm yeah maybe</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 100256844,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "sranso@gmail.com",
            "sender_full_name": "Sarah Weiss Ransohoff (F1'16)",
            "sender_id": 100027,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Stanford Algorithms course",
            "submessages": [],
            "timestamp": 1471893484,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/2b942c5d81780d60e790c1657d6e9dbc?d=identicon&version=1",
            "client": "website",
            "content": "<p>ok cool ya that was for the cs study group (aka DAS)</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 100256861,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "sranso@gmail.com",
            "sender_full_name": "Sarah Weiss Ransohoff (F1'16)",
            "sender_id": 100027,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Stanford Algorithms course",
            "submessages": [],
            "timestamp": 1471893573,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/2b942c5d81780d60e790c1657d6e9dbc?d=identicon&version=1",
            "client": "website",
            "content": "<p>for this group, i thiiink we planned on meeting 1-2 x / week to go over questions etc?</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 100256865,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "sranso@gmail.com",
            "sender_full_name": "Sarah Weiss Ransohoff (F1'16)",
            "sender_id": 100027,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Stanford Algorithms course",
            "submessages": [],
            "timestamp": 1471893593,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/8f95e07c22da0d35f4c212cad4a019f097d690e1?x=x&version=1",
            "client": "website",
            "content": "<p>I think so!  Although I feel that pairing may work better for me.  We could use this stream to post general questions (e.g. if a concept is confusing) / requests for help?</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 100258762,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "isla.carson@hotmail.co.uk",
            "sender_full_name": "Isla Carson (she) (W2'19)",
            "sender_id": 100044,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Stanford Algorithms course",
            "submessages": [],
            "timestamp": 1471897189,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/2b942c5d81780d60e790c1657d6e9dbc?d=identicon&version=1",
            "client": "website",
            "content": "<p>yeah same</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 100259006,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "sranso@gmail.com",
            "sender_full_name": "Sarah Weiss Ransohoff (F1'16)",
            "sender_id": 100027,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Stanford Algorithms course",
            "submessages": [],
            "timestamp": 1471897588,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/2b942c5d81780d60e790c1657d6e9dbc?d=identicon&version=1",
            "client": "website",
            "content": "<p>so maybe we meet up 1x a week to just check in and set a deadline for ourselves (eg every tuesday at 11am, meet up and have completed one week of the course)</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 100259014,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "sranso@gmail.com",
            "sender_full_name": "Sarah Weiss Ransohoff (F1'16)",
            "sender_id": 100027,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Stanford Algorithms course",
            "submessages": [],
            "timestamp": 1471897617,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/2b942c5d81780d60e790c1657d6e9dbc?d=identicon&version=1",
            "client": "website",
            "content": "<p>and in the meantime, use this stream to discuss questions / plan pairing etc</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 100259019,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "sranso@gmail.com",
            "sender_full_name": "Sarah Weiss Ransohoff (F1'16)",
            "sender_id": 100027,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Stanford Algorithms course",
            "submessages": [],
            "timestamp": 1471897631,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/2b942c5d81780d60e790c1657d6e9dbc?d=identicon&version=1",
            "client": "website",
            "content": "<p>yay/nay?</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 100259020,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "sranso@gmail.com",
            "sender_full_name": "Sarah Weiss Ransohoff (F1'16)",
            "sender_id": 100027,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Stanford Algorithms course",
            "submessages": [],
            "timestamp": 1471897634,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/2b942c5d81780d60e790c1657d6e9dbc?d=identicon&version=1",
            "client": "website",
            "content": "<p>vote init?</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 100259022,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "sranso@gmail.com",
            "sender_full_name": "Sarah Weiss Ransohoff (F1'16)",
            "sender_id": 100027,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Stanford Algorithms course",
            "submessages": [],
            "timestamp": 1471897638,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/2b942c5d81780d60e790c1657d6e9dbc?d=identicon&version=1",
            "client": "website",
            "content": "<p>is that a thing lol</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 100259023,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "sranso@gmail.com",
            "sender_full_name": "Sarah Weiss Ransohoff (F1'16)",
            "sender_id": 100027,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Stanford Algorithms course",
            "submessages": [],
            "timestamp": 1471897641,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/2b942c5d81780d60e790c1657d6e9dbc?d=identicon&version=1",
            "client": "website",
            "content": "<p>and if yay, how does thursday at 11am sound for weekly mtngs?</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 100259072,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "sranso@gmail.com",
            "sender_full_name": "Sarah Weiss Ransohoff (F1'16)",
            "sender_id": 100027,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Stanford Algorithms course",
            "submessages": [],
            "timestamp": 1471897686,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/1f950f2c6fb4d92e4a4e6ea1c0b6575a7465d00c?x=x&version=1",
            "client": "website",
            "content": "<p>Ooo or maybe Fridays? I could use a little extra motivation haha, I've found I'm really unproductive on Fridays (and am far too easily tempted to sleep in &gt;&gt;)<br>\nBut either way I would love to meet for this! I just finished the second week, but I would love to talk through all of the algorithms in the courses more!</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 100259622,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "kgibilterra@gmail.com",
            "sender_full_name": "Kaylyn Gibilterra (S2'16)",
            "sender_id": 9508,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Stanford Algorithms course",
            "submessages": [],
            "timestamp": 1471898724,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/d2d1f3e361a479849026fe298e091c50e1a4b20a?x=x&version=5",
            "client": "desktop app Mac 0.5.2",
            "content": "<p>checkins on Tuesdays and meeting on Fridays sound great</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 100260080,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "rc@alicja.dev",
            "sender_full_name": "Alicja Karolina Raszkowska (she/they) (W2'18)",
            "sender_id": 100049,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Stanford Algorithms course",
            "submessages": [],
            "timestamp": 1471899570,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/8f95e07c22da0d35f4c212cad4a019f097d690e1?x=x&version=1",
            "client": "website",
            "content": "<p>This works for me too :)  Maybe we should make it 10.30 on Friday, so that it's at the same time as we normally need to be in?</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 100260353,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "isla.carson@hotmail.co.uk",
            "sender_full_name": "Isla Carson (she) (W2'19)",
            "sender_id": 100044,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Stanford Algorithms course",
            "submessages": [],
            "timestamp": 1471900069,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/2b942c5d81780d60e790c1657d6e9dbc?d=identicon&version=1",
            "client": "website",
            "content": "<p>fridays could work; maybe hard if people don't always plan on coming in on fridays but that could be a risk we take ;) -- what do other ppl think?</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 100262065,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "sranso@gmail.com",
            "sender_full_name": "Sarah Weiss Ransohoff (F1'16)",
            "sender_id": 100027,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Stanford Algorithms course",
            "submessages": [],
            "timestamp": 1471903227,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/2b3883a91e0e0a59f3998bcc07ca66d2e9e760a6?x=x&version=1",
            "client": "website",
            "content": "<p>There's a time we need to be in?</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 100262068,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "platt.nicholas@gmail.com",
            "sender_full_name": "Nick Platt (F1'16)",
            "sender_id": 100031,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Stanford Algorithms course",
            "submessages": [],
            "timestamp": 1471903231,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/2b3883a91e0e0a59f3998bcc07ca66d2e9e760a6?x=x&version=1",
            "client": "website",
            "content": "<p>I like the Tusday + Friday plan. Critical mass achieved, let's do it.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 100262072,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "platt.nicholas@gmail.com",
            "sender_full_name": "Nick Platt (F1'16)",
            "sender_id": 100031,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Stanford Algorithms course",
            "submessages": [],
            "timestamp": 1471903259,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/2b942c5d81780d60e790c1657d6e9dbc?d=identicon&version=1",
            "client": "website",
            "content": "<p><img alt=\":ok_hand:\" class=\"emoji\" src=\"/static/third/gemoji/images/emoji/ok_hand.png\" title=\":ok_hand:\"> go team</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 100262076,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "sranso@gmail.com",
            "sender_full_name": "Sarah Weiss Ransohoff (F1'16)",
            "sender_id": 100027,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Stanford Algorithms course",
            "submessages": [],
            "timestamp": 1471903271,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/2b942c5d81780d60e790c1657d6e9dbc?d=identicon&version=1",
            "client": "website",
            "content": "<p>who's in charge of making the events? i can do it if that role needs to be claimed</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 100262082,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "sranso@gmail.com",
            "sender_full_name": "Sarah Weiss Ransohoff (F1'16)",
            "sender_id": 100027,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Stanford Algorithms course",
            "submessages": [],
            "timestamp": 1471903307,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/2b3883a91e0e0a59f3998bcc07ca66d2e9e760a6?x=x&version=1",
            "client": "website",
            "content": "<p>Added an event to the gcal for Tuesdays and Fridays at 11am, so right after morning checkins.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 100262907,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "platt.nicholas@gmail.com",
            "sender_full_name": "Nick Platt (F1'16)",
            "sender_id": 100031,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Stanford Algorithms course",
            "submessages": [],
            "timestamp": 1471904800,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/2b3883a91e0e0a59f3998bcc07ca66d2e9e760a6?x=x&version=1",
            "client": "website",
            "content": "<p>I've no idea how to send you a link to the event, invite you to it, or how you prefer to sync it to whatever calendar you use most.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 100262917,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "platt.nicholas@gmail.com",
            "sender_full_name": "Nick Platt (F1'16)",
            "sender_id": 100031,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Stanford Algorithms course",
            "submessages": [],
            "timestamp": 1471904826,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/2b3883a91e0e0a59f3998bcc07ca66d2e9e760a6?x=x&version=1",
            "client": "website",
            "content": "<p>But it now exists. Tuesday and Friday, 11am, Lovelace. Official!</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 100262919,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "platt.nicholas@gmail.com",
            "sender_full_name": "Nick Platt (F1'16)",
            "sender_id": 100031,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Stanford Algorithms course",
            "submessages": [],
            "timestamp": 1471904839,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/85b7bffdc731ce90a89c323fb362a8be0012652e?x=x&version=2",
            "client": "website",
            "content": "<p>Cool!  I'm doing the course too, so I'll try and remember to join y'all</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 100263154,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "sarah.anne.friend@gmail.com",
            "sender_full_name": "Sarah Friend (she) (S2'16)",
            "sender_id": 9500,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Stanford Algorithms course",
            "submessages": [],
            "timestamp": 1471905279,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/d2d1f3e361a479849026fe298e091c50e1a4b20a?x=x&version=5",
            "client": "desktop app Mac 0.5.2",
            "content": "<p>my calendar is showing 11:30am</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 100269578,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "rc@alicja.dev",
            "sender_full_name": "Alicja Karolina Raszkowska (she/they) (W2'18)",
            "sender_id": 100049,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Stanford Algorithms course",
            "submessages": [],
            "timestamp": 1471920125,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/2b3883a91e0e0a59f3998bcc07ca66d2e9e760a6?x=x&version=1",
            "client": "website",
            "content": "<p>Good catch, thanks. Updated to 11. Have check-ins ever run longer than 30mins for people? We can move back if it gets to be too tight.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 100269682,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "platt.nicholas@gmail.com",
            "sender_full_name": "Nick Platt (F1'16)",
            "sender_id": 100031,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Stanford Algorithms course",
            "submessages": [],
            "timestamp": 1471920371,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/2b942c5d81780d60e790c1657d6e9dbc?d=identicon&version=1",
            "client": "website",
            "content": "<p>yaaaay thanks!</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 100286135,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "sranso@gmail.com",
            "sender_full_name": "Sarah Weiss Ransohoff (F1'16)",
            "sender_id": 100027,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Stanford Algorithms course",
            "submessages": [],
            "timestamp": 1471959336,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/2b942c5d81780d60e790c1657d6e9dbc?d=identicon&version=1",
            "client": "website",
            "content": "<p>meeting notes!</p>\n<div class=\"codehilite\"><pre>* meet 1x / week: _Fridays at 11am_\n* to do _before_ Fridays at 11am\n  * complete 1 week of course lectures (we are currently scheduled to complete week 1 for this Friday)\n  * implement the programming assignment\n* to do _during_ Fridays at 11am\n  * code review &gt;= 1 person&#39;s programming assignment (we&#39;ll rotate)\n  * do problem set together\n* in the meantime\n  * use this channel for questions / reqs for pairing / etc\n</pre></div>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 100289572,
            "is_me_message": false,
            "last_edit_timestamp": 1471965539,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "sranso@gmail.com",
            "sender_full_name": "Sarah Weiss Ransohoff (F1'16)",
            "sender_id": 100027,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Stanford Algorithms course",
            "submessages": [],
            "timestamp": 1471965476,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/2b942c5d81780d60e790c1657d6e9dbc?d=identicon&version=1",
            "client": "website",
            "content": "<p>merrrp how to indent! working on it</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 100289612,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "sranso@gmail.com",
            "sender_full_name": "Sarah Weiss Ransohoff (F1'16)",
            "sender_id": 100027,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Stanford Algorithms course",
            "submessages": [],
            "timestamp": 1471965499,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/2b942c5d81780d60e790c1657d6e9dbc?d=identicon&version=1",
            "client": "website",
            "content": "<p>better? hah idek</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 100289625,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "sranso@gmail.com",
            "sender_full_name": "Sarah Weiss Ransohoff (F1'16)",
            "sender_id": 100027,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Stanford Algorithms course",
            "submessages": [],
            "timestamp": 1471965548,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/2b942c5d81780d60e790c1657d6e9dbc?d=identicon&version=1",
            "client": "website",
            "content": "<p>but now we have a log</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 100289627,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "sranso@gmail.com",
            "sender_full_name": "Sarah Weiss Ransohoff (F1'16)",
            "sender_id": 100027,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Stanford Algorithms course",
            "submessages": [],
            "timestamp": 1471965551,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/2b942c5d81780d60e790c1657d6e9dbc?d=identicon&version=1",
            "client": "website",
            "content": "<p>kbai</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 100289628,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "sranso@gmail.com",
            "sender_full_name": "Sarah Weiss Ransohoff (F1'16)",
            "sender_id": 100027,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Stanford Algorithms course",
            "submessages": [],
            "timestamp": 1471965554,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/2b3883a91e0e0a59f3998bcc07ca66d2e9e760a6?x=x&version=1",
            "client": "website",
            "content": "<p>Updated the gcal meeting as well. </p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 100290119,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "platt.nicholas@gmail.com",
            "sender_full_name": "Nick Platt (F1'16)",
            "sender_id": 100031,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Stanford Algorithms course",
            "submessages": [],
            "timestamp": 1471966330,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/08dcfe30cf7f6b2fadc908e814a6472fd38b4a38?x=x&version=3",
            "client": "website",
            "content": "<p><img alt=\":thumbs_up:\" class=\"emoji\" src=\"/static/third/gemoji/images/emoji/thumbs_up.png\" title=\":thumbs_up:\"> </p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 100290129,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "aissam.belhachmi@gmail.com",
            "sender_full_name": "Aissam Belhachmi (he) (F1'16)",
            "sender_id": 100040,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Stanford Algorithms course",
            "submessages": [],
            "timestamp": 1471966354,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/8f95e07c22da0d35f4c212cad4a019f097d690e1?x=x&version=1",
            "client": "website",
            "content": "<p>Awesome!</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 100290809,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "isla.carson@hotmail.co.uk",
            "sender_full_name": "Isla Carson (she) (W2'19)",
            "sender_id": 100044,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Stanford Algorithms course",
            "submessages": [],
            "timestamp": 1471967574,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/8f95e07c22da0d35f4c212cad4a019f097d690e1?x=x&version=1",
            "client": "website",
            "content": "<p>Wait.. how do I do a thumbs up <span class=\"user-mention\" data-user-email=\"aissam.belhachmi@gmail.com\">@Aissam Belhachmi</span> ?</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 100290813,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "isla.carson@hotmail.co.uk",
            "sender_full_name": "Isla Carson (she) (W2'19)",
            "sender_id": 100044,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Stanford Algorithms course",
            "submessages": [],
            "timestamp": 1471967588,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/08dcfe30cf7f6b2fadc908e814a6472fd38b4a38?x=x&version=3",
            "client": "website",
            "content": "<p><span class=\"user-mention\" data-user-email=\"isla.carson@hotmail.co.uk\">@Isla Jean Carson (F1'16)</span>  you type a colon ':' (the start of an emoji) then you begin typing the name of the emoji, in this case 'th..' it should show a list with the corresponding ones <img alt=\":wink:\" class=\"emoji\" src=\"/static/third/gemoji/images/emoji/wink.png\" title=\":wink:\"> </p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 100291014,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "aissam.belhachmi@gmail.com",
            "sender_full_name": "Aissam Belhachmi (he) (F1'16)",
            "sender_id": 100040,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Stanford Algorithms course",
            "submessages": [],
            "timestamp": 1471967912,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/8f95e07c22da0d35f4c212cad4a019f097d690e1?x=x&version=1",
            "client": "website",
            "content": "<p><img alt=\":thumbs_up:\" class=\"emoji\" src=\"/static/third/gemoji/images/emoji/thumbs_up.png\" title=\":thumbs_up:\"> <img alt=\":thumbsup:\" class=\"emoji\" src=\"/static/third/gemoji/images/emoji/thumbsup.png\" title=\":thumbsup:\"> <img alt=\":grinning_face_with_smiling_eyes:\" class=\"emoji\" src=\"/static/third/gemoji/images/emoji/grinning_face_with_smiling_eyes.png\" title=\":grinning_face_with_smiling_eyes:\"> </p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 100291025,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "isla.carson@hotmail.co.uk",
            "sender_full_name": "Isla Carson (she) (W2'19)",
            "sender_id": 100044,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Stanford Algorithms course",
            "submessages": [],
            "timestamp": 1471967957,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/2b942c5d81780d60e790c1657d6e9dbc?d=identicon&version=1",
            "client": "website",
            "content": "<p>boooo my answer was wrong!</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 100298832,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "sranso@gmail.com",
            "sender_full_name": "Sarah Weiss Ransohoff (F1'16)",
            "sender_id": 100027,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Stanford Algorithms course",
            "submessages": [],
            "timestamp": 1471982234,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/2b942c5d81780d60e790c1657d6e9dbc?d=identicon&version=1",
            "client": "website",
            "content": "<p>may i share here?</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 100298835,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "sranso@gmail.com",
            "sender_full_name": "Sarah Weiss Ransohoff (F1'16)",
            "sender_id": 100027,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Stanford Algorithms course",
            "submessages": [],
            "timestamp": 1471982247,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/2b942c5d81780d60e790c1657d6e9dbc?d=identicon&version=1",
            "client": "website",
            "content": "<p>in case anyone has an eye for the obvious problem</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 100298836,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "sranso@gmail.com",
            "sender_full_name": "Sarah Weiss Ransohoff (F1'16)",
            "sender_id": 100027,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Stanford Algorithms course",
            "submessages": [],
            "timestamp": 1471982256,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/2b942c5d81780d60e790c1657d6e9dbc?d=identicon&version=1",
            "client": "website",
            "content": "<p>or should i save it for friday?</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 100298876,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "sranso@gmail.com",
            "sender_full_name": "Sarah Weiss Ransohoff (F1'16)",
            "sender_id": 100027,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Stanford Algorithms course",
            "submessages": [],
            "timestamp": 1471982286,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/282da691709f4715fc3e0ff6bebd278b?d=identicon&version=1",
            "client": "website",
            "content": "<p><span class=\"user-mention\" data-user-email=\"sranso@gmail.com\">@Sarah Weiss Ransohoff (F1'16)</span> are you talking about the inversion count?</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 100334330,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "alan.m.odonnell@gmail.com",
            "sender_full_name": "Alan O'Donnell (he) (S1'19)",
            "sender_id": 813,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Stanford Algorithms course",
            "submessages": [],
            "timestamp": 1472059524,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/c2a1e36ca5742482a9581b5e1e753979?d=identicon&version=1",
            "client": "website",
            "content": "<p>Anyone wants to pair on a problem? I was thinking of solving it in Python. <a href=\"https://www.interviewbit.com/problems/max-sum-path-in-binary-tree/\" target=\"_blank\" title=\"https://www.interviewbit.com/problems/max-sum-path-in-binary-tree/\">https://www.interviewbit.com/problems/max-sum-path-in-binary-tree/</a></p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 100334390,
            "is_me_message": false,
            "last_edit_timestamp": 1472059678,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "dfobox@gmail.com",
            "sender_full_name": "Ivan Vashchenko (F1'16)",
            "sender_id": 100046,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Max Sum Path in Binary Tree",
            "submessages": [],
            "timestamp": 1472059656,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/282da691709f4715fc3e0ff6bebd278b?d=identicon&version=1",
            "client": "website",
            "content": "<p>By the way, one thing I'd really recommend for these algorithm courses: using a property-based testing tool like Hypothesis (<a href=\"http://hypothesis.works/\" target=\"_blank\" title=\"http://hypothesis.works/\">http://hypothesis.works/</a>), QuickCheck, ScalaCheck, etc.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 100334391,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "alan.m.odonnell@gmail.com",
            "sender_full_name": "Alan O'Donnell (he) (S1'19)",
            "sender_id": 813,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Stanford Algorithms course",
            "submessages": [],
            "timestamp": 1472059661,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/282da691709f4715fc3e0ff6bebd278b?d=identicon&version=1",
            "client": "website",
            "content": "<p>E.g. I have a test for my inversion counter that looks like this (in Scala):</p>\n<div class=\"codehilite\"><pre><span class=\"k\">import</span> <span class=\"nn\">org.scalacheck._</span>\n<span class=\"k\">import</span> <span class=\"nn\">Prop._</span>\n<span class=\"k\">import</span> <span class=\"nn\">stanford.Inversions</span>\n\n<span class=\"k\">object</span> <span class=\"nc\">InversionTests</span> <span class=\"k\">extends</span> <span class=\"nc\">Properties</span><span class=\"o\">(</span><span class=\"s\">&quot;InversionTests&quot;</span><span class=\"o\">)</span> <span class=\"o\">{</span>\n  <span class=\"n\">property</span><span class=\"o\">(</span><span class=\"s\">&quot;linearithmic agrees with bruteforce&quot;</span><span class=\"o\">)</span> <span class=\"k\">=</span> <span class=\"n\">forAll</span> <span class=\"o\">{</span> <span class=\"n\">xs</span><span class=\"k\">:</span> <span class=\"kt\">List</span><span class=\"o\">[</span><span class=\"kt\">Int</span><span class=\"o\">]</span> <span class=\"k\">=&gt;</span>\n    <span class=\"k\">val</span> <span class=\"n\">a</span> <span class=\"k\">=</span> <span class=\"n\">xs</span><span class=\"o\">.</span><span class=\"n\">toArray</span>\n    <span class=\"k\">val</span> <span class=\"n\">b</span> <span class=\"k\">=</span> <span class=\"n\">a</span><span class=\"o\">.</span><span class=\"n\">clone</span><span class=\"o\">()</span>\n    <span class=\"nc\">Inversions</span><span class=\"o\">.</span><span class=\"n\">bruteForce</span><span class=\"o\">(</span><span class=\"n\">a</span><span class=\"o\">)</span> <span class=\"o\">==</span> <span class=\"nc\">Inversions</span><span class=\"o\">.</span><span class=\"n\">linearithmic</span><span class=\"o\">(</span><span class=\"n\">b</span><span class=\"o\">)</span>\n  <span class=\"o\">}</span>\n<span class=\"o\">}</span>\n</pre></div>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 100334443,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "alan.m.odonnell@gmail.com",
            "sender_full_name": "Alan O'Donnell (he) (S1'19)",
            "sender_id": 813,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Stanford Algorithms course",
            "submessages": [],
            "timestamp": 1472059741,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/282da691709f4715fc3e0ff6bebd278b?d=identicon&version=1",
            "client": "website",
            "content": "<p>ScalaCheck will then generate a whole bunch of random lists of integers and check that my brute force version agrees with the fancy linearithmic one. (I could have had it generate random arrays instead of lists, but for some reason ScalaCheck won't print them nicely.)</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 100334511,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "alan.m.odonnell@gmail.com",
            "sender_full_name": "Alan O'Donnell (he) (S1'19)",
            "sender_id": 813,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Stanford Algorithms course",
            "submessages": [],
            "timestamp": 1472059841,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/2b942c5d81780d60e790c1657d6e9dbc?d=identicon&version=1",
            "client": "website",
            "content": "<p><span class=\"user-mention\" data-user-email=\"alan@hackerschool.com\">@Alan O'Donnell</span> i am!</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 100336111,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "sranso@gmail.com",
            "sender_full_name": "Sarah Weiss Ransohoff (F1'16)",
            "sender_id": 100027,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Stanford Algorithms course",
            "submessages": [],
            "timestamp": 1472062848,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/2b942c5d81780d60e790c1657d6e9dbc?d=identicon&version=1",
            "client": "website",
            "content": "<p>mm</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 100338084,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "sranso@gmail.com",
            "sender_full_name": "Sarah Weiss Ransohoff (F1'16)",
            "sender_id": 100027,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Stanford Algorithms course",
            "submessages": [],
            "timestamp": 1472066273,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/2b942c5d81780d60e790c1657d6e9dbc?d=identicon&version=1",
            "client": "website",
            "content": "<p>do you know of an equivalent lib for python?</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 100338124,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "sranso@gmail.com",
            "sender_full_name": "Sarah Weiss Ransohoff (F1'16)",
            "sender_id": 100027,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Stanford Algorithms course",
            "submessages": [],
            "timestamp": 1472066283,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/282da691709f4715fc3e0ff6bebd278b?d=identicon&version=1",
            "client": "website",
            "content": "<p>Hypothesis :)</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 100338276,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "alan.m.odonnell@gmail.com",
            "sender_full_name": "Alan O'Donnell (he) (S1'19)",
            "sender_id": 813,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Stanford Algorithms course",
            "submessages": [],
            "timestamp": 1472066536,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/282da691709f4715fc3e0ff6bebd278b?d=identicon&version=1",
            "client": "website",
            "content": "<p>I haven't used it though.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 100338280,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "alan.m.odonnell@gmail.com",
            "sender_full_name": "Alan O'Donnell (he) (S1'19)",
            "sender_id": 813,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Stanford Algorithms course",
            "submessages": [],
            "timestamp": 1472066556,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/282da691709f4715fc3e0ff6bebd278b?d=identicon&version=1",
            "client": "website",
            "content": "<p>But for the inversion problem, do you have a brute force version you're confident with?</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 100338292,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "alan.m.odonnell@gmail.com",
            "sender_full_name": "Alan O'Donnell (he) (S1'19)",
            "sender_id": 813,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Stanford Algorithms course",
            "submessages": [],
            "timestamp": 1472066590,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/2b942c5d81780d60e790c1657d6e9dbc?d=identicon&version=1",
            "client": "website",
            "content": "<p>i don't.. i could write one (loop with an inner loop), but the course recommended using merge sort (described in one of the lectures)</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 100338298,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "sranso@gmail.com",
            "sender_full_name": "Sarah Weiss Ransohoff (F1'16)",
            "sender_id": 100027,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Stanford Algorithms course",
            "submessages": [],
            "timestamp": 1472066631,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/282da691709f4715fc3e0ff6bebd278b?d=identicon&version=1",
            "client": "website",
            "content": "<p>Yeah, definitely implement the brute force one too, since then you can use it to test your fancy one.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 100338337,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "alan.m.odonnell@gmail.com",
            "sender_full_name": "Alan O'Donnell (he) (S1'19)",
            "sender_id": 813,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Stanford Algorithms course",
            "submessages": [],
            "timestamp": 1472066652,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/282da691709f4715fc3e0ff6bebd278b?d=identicon&version=1",
            "client": "website",
            "content": "<p>Even without a library for generating random test cases, you could always do so yourself.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 100338354,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "alan.m.odonnell@gmail.com",
            "sender_full_name": "Alan O'Donnell (he) (S1'19)",
            "sender_id": 813,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Stanford Algorithms course",
            "submessages": [],
            "timestamp": 1472066667,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/2b942c5d81780d60e790c1657d6e9dbc?d=identicon&version=1",
            "client": "website",
            "content": "<p>how come i would use the brute force version to test the fancy version?</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 100338390,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "sranso@gmail.com",
            "sender_full_name": "Sarah Weiss Ransohoff (F1'16)",
            "sender_id": 100027,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Stanford Algorithms course",
            "submessages": [],
            "timestamp": 1472066693,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/2b942c5d81780d60e790c1657d6e9dbc?d=identicon&version=1",
            "client": "website",
            "content": "<p>eg why not just test both separately</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 100338399,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "sranso@gmail.com",
            "sender_full_name": "Sarah Weiss Ransohoff (F1'16)",
            "sender_id": 100027,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Stanford Algorithms course",
            "submessages": [],
            "timestamp": 1472066697,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/282da691709f4715fc3e0ff6bebd278b?d=identicon&version=1",
            "client": "website",
            "content": "<p>E.g. generate random, progressively longer lists of integers, and compare their answers. This'll give you a minimal case where the fancy one breaks.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 100338404,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "alan.m.odonnell@gmail.com",
            "sender_full_name": "Alan O'Donnell (he) (S1'19)",
            "sender_id": 813,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Stanford Algorithms course",
            "submessages": [],
            "timestamp": 1472066707,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/282da691709f4715fc3e0ff6bebd278b?d=identicon&version=1",
            "client": "website",
            "content": "<p>Basically, my point is just that generating random test cases is super, super useful for this type of programming.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 100338418,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "alan.m.odonnell@gmail.com",
            "sender_full_name": "Alan O'Donnell (he) (S1'19)",
            "sender_id": 813,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Stanford Algorithms course",
            "submessages": [],
            "timestamp": 1472066735,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/282da691709f4715fc3e0ff6bebd278b?d=identicon&version=1",
            "client": "website",
            "content": "<p>So, not just your own hand-made test cases, where it's easy to accidentally only look at special cases.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 100338421,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "alan.m.odonnell@gmail.com",
            "sender_full_name": "Alan O'Donnell (he) (S1'19)",
            "sender_id": 813,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Stanford Algorithms course",
            "submessages": [],
            "timestamp": 1472066751,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/2b942c5d81780d60e790c1657d6e9dbc?d=identicon&version=1",
            "client": "website",
            "content": "<p>ok, so it's less about comparing one version to the other version, but more about generating random test cases</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 100338464,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "sranso@gmail.com",
            "sender_full_name": "Sarah Weiss Ransohoff (F1'16)",
            "sender_id": 100027,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Stanford Algorithms course",
            "submessages": [],
            "timestamp": 1472066769,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/2b942c5d81780d60e790c1657d6e9dbc?d=identicon&version=1",
            "client": "website",
            "content": "<p>gotcha</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 100338466,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "sranso@gmail.com",
            "sender_full_name": "Sarah Weiss Ransohoff (F1'16)",
            "sender_id": 100027,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Stanford Algorithms course",
            "submessages": [],
            "timestamp": 1472066773,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/282da691709f4715fc3e0ff6bebd278b?d=identicon&version=1",
            "client": "website",
            "content": "<p>Well, you need to be able to tell if the fancy one works.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 100338470,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "alan.m.odonnell@gmail.com",
            "sender_full_name": "Alan O'Donnell (he) (S1'19)",
            "sender_id": 813,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Stanford Algorithms course",
            "submessages": [],
            "timestamp": 1472066782,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/282da691709f4715fc3e0ff6bebd278b?d=identicon&version=1",
            "client": "website",
            "content": "<p>So you compare it to the simpler one (which presumably does work).</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 100338472,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "alan.m.odonnell@gmail.com",
            "sender_full_name": "Alan O'Donnell (he) (S1'19)",
            "sender_id": 813,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Stanford Algorithms course",
            "submessages": [],
            "timestamp": 1472066791,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/2b942c5d81780d60e790c1657d6e9dbc?d=identicon&version=1",
            "client": "website",
            "content": "<p>hah ok, yea my fancy one apparently doesn't work</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 100338475,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "sranso@gmail.com",
            "sender_full_name": "Sarah Weiss Ransohoff (F1'16)",
            "sender_id": 100027,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Stanford Algorithms course",
            "submessages": [],
            "timestamp": 1472066811,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/2b942c5d81780d60e790c1657d6e9dbc?d=identicon&version=1",
            "client": "website",
            "content": "<p>but idk why!!!!!</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 100338476,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "sranso@gmail.com",
            "sender_full_name": "Sarah Weiss Ransohoff (F1'16)",
            "sender_id": 100027,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Stanford Algorithms course",
            "submessages": [],
            "timestamp": 1472066815,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/2b942c5d81780d60e790c1657d6e9dbc?d=identicon&version=1",
            "client": "website",
            "content": "<p>so</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 100338479,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "sranso@gmail.com",
            "sender_full_name": "Sarah Weiss Ransohoff (F1'16)",
            "sender_id": 100027,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Stanford Algorithms course",
            "submessages": [],
            "timestamp": 1472066820,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/282da691709f4715fc3e0ff6bebd278b?d=identicon&version=1",
            "client": "website",
            "content": "<p>Gotta find a minimal test case ;)</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 100338482,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "alan.m.odonnell@gmail.com",
            "sender_full_name": "Alan O'Donnell (he) (S1'19)",
            "sender_id": 813,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Stanford Algorithms course",
            "submessages": [],
            "timestamp": 1472066826,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/2b942c5d81780d60e790c1657d6e9dbc?d=identicon&version=1",
            "client": "website",
            "content": "<p>ya, it works on a smaller test case, which is why i was surprised when it didn't work on the larger</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 100338485,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "sranso@gmail.com",
            "sender_full_name": "Sarah Weiss Ransohoff (F1'16)",
            "sender_id": 100027,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Stanford Algorithms course",
            "submessages": [],
            "timestamp": 1472066844,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/2b942c5d81780d60e790c1657d6e9dbc?d=identicon&version=1",
            "client": "website",
            "content": "<p>so i need a mid-size test case that ik the answer to..</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 100338543,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "sranso@gmail.com",
            "sender_full_name": "Sarah Weiss Ransohoff (F1'16)",
            "sender_id": 100027,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Stanford Algorithms course",
            "submessages": [],
            "timestamp": 1472066896,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/282da691709f4715fc3e0ff6bebd278b?d=identicon&version=1",
            "client": "website",
            "content": "<p>I think it's a lot easier to just generate random test cases and compare to your brute force version</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 100338553,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "alan.m.odonnell@gmail.com",
            "sender_full_name": "Alan O'Donnell (he) (S1'19)",
            "sender_id": 813,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Stanford Algorithms course",
            "submessages": [],
            "timestamp": 1472066935,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/2b942c5d81780d60e790c1657d6e9dbc?d=identicon&version=1",
            "client": "website",
            "content": "<p>how can i be sure though that the brute force version works? don't i need test cases that ik the answer to..?</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 100338562,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "sranso@gmail.com",
            "sender_full_name": "Sarah Weiss Ransohoff (F1'16)",
            "sender_id": 100027,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Stanford Algorithms course",
            "submessages": [],
            "timestamp": 1472066970,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/282da691709f4715fc3e0ff6bebd278b?d=identicon&version=1",
            "client": "website",
            "content": "<p>Well, the idea is that the brute force version is so simple that it \"almost definitely\" works.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 100338569,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "alan.m.odonnell@gmail.com",
            "sender_full_name": "Alan O'Donnell (he) (S1'19)",
            "sender_id": 813,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Stanford Algorithms course",
            "submessages": [],
            "timestamp": 1472066990,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/2b942c5d81780d60e790c1657d6e9dbc?d=identicon&version=1",
            "client": "website",
            "content": "<p>hm</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 100338570,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "sranso@gmail.com",
            "sender_full_name": "Sarah Weiss Ransohoff (F1'16)",
            "sender_id": 100027,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Stanford Algorithms course",
            "submessages": [],
            "timestamp": 1472066998,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/282da691709f4715fc3e0ff6bebd278b?d=identicon&version=1",
            "client": "website",
            "content": "<p>So, yeah, it could have a bug too, but it's much more likely to be correct than the fancy one.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 100338609,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "alan.m.odonnell@gmail.com",
            "sender_full_name": "Alan O'Donnell (he) (S1'19)",
            "sender_id": 813,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Stanford Algorithms course",
            "submessages": [],
            "timestamp": 1472067005,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/282da691709f4715fc3e0ff6bebd278b?d=identicon&version=1",
            "client": "website",
            "content": "<p>E.g. for inversions, it's just a double for loop, so you \"just look at it\" and convince yourself if it's correct.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 100338619,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "alan.m.odonnell@gmail.com",
            "sender_full_name": "Alan O'Donnell (he) (S1'19)",
            "sender_id": 813,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Stanford Algorithms course",
            "submessages": [],
            "timestamp": 1472067024,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/2b942c5d81780d60e790c1657d6e9dbc?d=identicon&version=1",
            "client": "website",
            "content": "<p>:nods: makes sense</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 100338622,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "sranso@gmail.com",
            "sender_full_name": "Sarah Weiss Ransohoff (F1'16)",
            "sender_id": 100027,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Stanford Algorithms course",
            "submessages": [],
            "timestamp": 1472067026,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/282da691709f4715fc3e0ff6bebd278b?d=identicon&version=1",
            "client": "website",
            "content": "<p>You can apply this same approach to, like, everything in these algorithm courses, e.g. compare your quicksort implementation with your selection sort (or Python's built-in sort).</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 100338648,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "alan.m.odonnell@gmail.com",
            "sender_full_name": "Alan O'Donnell (he) (S1'19)",
            "sender_id": 813,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Stanford Algorithms course",
            "submessages": [],
            "timestamp": 1472067086,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/2b942c5d81780d60e790c1657d6e9dbc?d=identicon&version=1",
            "client": "website",
            "content": "<p>ah, as in, get a working version of quicksort and compare the results from the randomly-generated test cases to a yet-unknown-if-its-working version of selection sort?</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 100338717,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "sranso@gmail.com",
            "sender_full_name": "Sarah Weiss Ransohoff (F1'16)",
            "sender_id": 100027,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Stanford Algorithms course",
            "submessages": [],
            "timestamp": 1472067175,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/282da691709f4715fc3e0ff6bebd278b?d=identicon&version=1",
            "client": "website",
            "content": "<p>Either direction--take whatever you're unconfident with and test it against whatever you're already confident with.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 100338728,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "alan.m.odonnell@gmail.com",
            "sender_full_name": "Alan O'Donnell (he) (S1'19)",
            "sender_id": 813,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Stanford Algorithms course",
            "submessages": [],
            "timestamp": 1472067209,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/2b942c5d81780d60e790c1657d6e9dbc?d=identicon&version=1",
            "client": "website",
            "content": "<p>right</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 100338732,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "sranso@gmail.com",
            "sender_full_name": "Sarah Weiss Ransohoff (F1'16)",
            "sender_id": 100027,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Stanford Algorithms course",
            "submessages": [],
            "timestamp": 1472067215,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/7de60303f6bb47bc3e678e090f9de36d?d=identicon&version=1",
            "client": "website",
            "content": "<p>You can also write a test that (in the case of sorting) makes sure that all elements are ordered (a property of sorted lists), and feed that to your quickcheck-based test, which will check your hypothesis on ALL THE LISTS.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 100338864,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "jeremiejost@gmail.com",
            "sender_full_name": "J\u00e9r\u00e9mie Jost (he) (m5'20)",
            "sender_id": 9326,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Stanford Algorithms course",
            "submessages": [],
            "timestamp": 1472067414,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/4b6aae6cae274fb83b0d155f0255298c2d3b22b7?x=x&version=2",
            "client": "website",
            "content": "<p>Assuming nothing about the ordering of the nodes or whether node values are positive or negative, I'm interested in how you would approach this in a non-brute force way.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 100350005,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "fundirap@gmail.com",
            "sender_full_name": "Panashe Machinda Fundira (he) (S1'16)",
            "sender_id": 9339,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Max Sum Path in Binary Tree",
            "submessages": [],
            "timestamp": 1472090965,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/07a5ba69595cc839c85aabdb8ffeabee6ad0b83e?x=x&version=1",
            "client": "website",
            "content": "<p>My first thought for positive-only would be the same sort of approach used for the dojo problem a while ago -- folding up the branches by recursively replacing the values at the nodes with value + max(left, right), but that only works if your path is all the way up one branch and down another. Not sure where to go from there.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 100350655,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "sean.martin@nyu.edu",
            "sender_full_name": "Sean Martin (they) (S2'16)",
            "sender_id": 9495,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Max Sum Path in Binary Tree",
            "submessages": [],
            "timestamp": 1472092634,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/74df5731ba535a4fdb258101a3d49877?d=identicon&version=1",
            "client": "website",
            "content": "<p>I think that dynamic-programming-esque solution could work. Except each node only has 1 possible node that you can reach it from, so you'd replace the node value with val+val(parent). Then take the max value among the leaves.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 100350981,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "jameshkatz@gmail.com",
            "sender_full_name": "James Katz (S2'16)",
            "sender_id": 9509,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Max Sum Path in Binary Tree",
            "submessages": [],
            "timestamp": 1472093406,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/74df5731ba535a4fdb258101a3d49877?d=identicon&version=1",
            "client": "website",
            "content": "<p>I'm probably missing something though, as is usually the case when I hand-wave algorithms..</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 100350984,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "jameshkatz@gmail.com",
            "sender_full_name": "James Katz (S2'16)",
            "sender_id": 9509,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Max Sum Path in Binary Tree",
            "submessages": [],
            "timestamp": 1472093452,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/21b9cce736cbbe8e0761bbb33863c7d3112d0136?x=x&version=2",
            "client": "website",
            "content": "<p>I imagine you could do something like the following:</p>\n<div class=\"codehilite\"><pre>def solve(node)\n  if leaf(node)\n    value = max(0, node.value)\n    return (value, value)\n  else\n    lsolution, lbranch = solve(node.left)\n    rsolution, rbranch = solve(node.right)\n\n    solution = max(lsolution, rsolution, lbranch + rbranch + node.value)\n    branch = max(0, node.value + max(lbranch, rbranch))\n\n    return (solution, branch)\n</pre></div>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 100351080,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "michaelmalis2@gmail.com",
            "sender_full_name": "Michael Malis (SP2'19)",
            "sender_id": 8099,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Max Sum Path in Binary Tree",
            "submessages": [],
            "timestamp": 1472093678,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/21b9cce736cbbe8e0761bbb33863c7d3112d0136?x=x&version=2",
            "client": "website",
            "content": "<p>(It's python-esque pseudo code).</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 100351082,
            "is_me_message": false,
            "last_edit_timestamp": 1472093704,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "michaelmalis2@gmail.com",
            "sender_full_name": "Michael Malis (SP2'19)",
            "sender_id": 8099,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Max Sum Path in Binary Tree",
            "submessages": [],
            "timestamp": 1472093689,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/21b9cce736cbbe8e0761bbb33863c7d3112d0136?x=x&version=2",
            "client": "website",
            "content": "<p>It's a recursive function that returns two values, the solution to the problem and the maximum value of a path starting from the root node.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 100351128,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "michaelmalis2@gmail.com",
            "sender_full_name": "Michael Malis (SP2'19)",
            "sender_id": 8099,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Max Sum Path in Binary Tree",
            "submessages": [],
            "timestamp": 1472093779,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/c52df4d54166ed7db0141bdb21c7935e502d6ddc?x=x&version=1",
            "client": "website",
            "content": "<p>Often it helps to sketch out  some small example trees, and figure out the answer for them, and whether your approach gives it.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 100351130,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "darius@wry.me",
            "sender_full_name": "Darius Bacon (W1'16)",
            "sender_id": 902,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Max Sum Path in Binary Tree",
            "submessages": [],
            "timestamp": 1472093814,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/c52df4d54166ed7db0141bdb21c7935e502d6ddc?x=x&version=1",
            "client": "website",
            "content": "<p>But it's kind of late for this time because Michael just posted the answer. (Haven't checked the detailed code but that's about how I'd do it too.)</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 100351176,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "darius@wry.me",
            "sender_full_name": "Darius Bacon (W1'16)",
            "sender_id": 902,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Max Sum Path in Binary Tree",
            "submessages": [],
            "timestamp": 1472093917,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/21b9cce736cbbe8e0761bbb33863c7d3112d0136?x=x&version=2",
            "client": "website",
            "content": "<p>There are two cases. The maximum path is either goes through the root or doesn't. We can solve the problem by recursively solving for each subtree, and also checking the sum of the maximum path from the root to any node in the right subtree, and from the root to a node in the left subtree.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 100351181,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "michaelmalis2@gmail.com",
            "sender_full_name": "Michael Malis (SP2'19)",
            "sender_id": 8099,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Max Sum Path in Binary Tree",
            "submessages": [],
            "timestamp": 1472093980,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/c52df4d54166ed7db0141bdb21c7935e502d6ddc?x=x&version=1",
            "client": "website",
            "content": "<p>You can see it as two cases: either the solution path goes through the root, or not. In the latter case it's all within one of the branches off the root. And so recursively.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 100351183,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "darius@wry.me",
            "sender_full_name": "Darius Bacon (W1'16)",
            "sender_id": 902,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Max Sum Path in Binary Tree",
            "submessages": [],
            "timestamp": 1472093989,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/c52df4d54166ed7db0141bdb21c7935e502d6ddc?x=x&version=1",
            "client": "website",
            "content": "<p>jinx</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 100351185,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "darius@wry.me",
            "sender_full_name": "Darius Bacon (W1'16)",
            "sender_id": 902,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Max Sum Path in Binary Tree",
            "submessages": [],
            "timestamp": 1472093998,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/21b9cce736cbbe8e0761bbb33863c7d3112d0136?x=x&version=2",
            "client": "website",
            "content": "<p>inb4.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 100351186,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "michaelmalis2@gmail.com",
            "sender_full_name": "Michael Malis (SP2'19)",
            "sender_id": 8099,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Max Sum Path in Binary Tree",
            "submessages": [],
            "timestamp": 1472093999,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/c52df4d54166ed7db0141bdb21c7935e502d6ddc?x=x&version=1",
            "client": "website",
            "content": "<p>But like how Khalid was saying in another thread, knowing the answer I don't necessarily want to post it while others are tackling the problem -- if they're asking for a general approach I'd usually offer general advice at first.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 100351327,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "darius@wry.me",
            "sender_full_name": "Darius Bacon (W1'16)",
            "sender_id": 902,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Max Sum Path in Binary Tree",
            "submessages": [],
            "timestamp": 1472094312,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/2a6345cc359fb9370ce011d04d4965f20e0cf051?x=x&version=2",
            "client": "website",
            "content": "<p>Hi! Can someone explain this Turing machine to me in Exercise 2.1? <a href=\"http://lewis.seas.harvard.edu/files/harrylewis/files/s6_sols.pdf\" target=\"_blank\" title=\"http://lewis.seas.harvard.edu/files/harrylewis/files/s6_sols.pdf\">http://lewis.seas.harvard.edu/files/harrylewis/files/s6_sols.pdf</a> We are very confused here because it always gives us a different output than what we expected for our test cases.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 100369615,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "ljeng@icloud.com",
            "sender_full_name": "Lareine Jeng (S2'16)",
            "sender_id": 9516,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Turing machine",
            "submessages": [],
            "timestamp": 1472138308,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/4b6aae6cae274fb83b0d155f0255298c2d3b22b7?x=x&version=2",
            "client": "website",
            "content": "<p>Does this account for paths that include the root as an intermediate node? e.g.</p>\n<div class=\"codehilite\"><pre>     1\n    / \\\n   2   3\n</pre></div>\n\n\n<p>The maximum sum path would be <code>2 -&gt; 1 -&gt; 3</code><br>\nDefining a path in a graph as sequence of edges, connecting a sequence of contiguous vertices that are all pairwise distinct</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 100371382,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "fundirap@gmail.com",
            "sender_full_name": "Panashe Machinda Fundira (he) (S1'16)",
            "sender_id": 9339,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Max Sum Path in Binary Tree",
            "submessages": [],
            "timestamp": 1472141248,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/c52df4d54166ed7db0141bdb21c7935e502d6ddc?x=x&version=1",
            "client": "website",
            "content": "<p>Yes -- in the line</p>\n<div class=\"codehilite\"><pre>solution = max(lsolution, rsolution, lbranch + rbranch + node.value)\n</pre></div>\n\n\n<p>the path that goes through your 1 corresponds to <code>lbranch + rbranch + node.value</code>.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 100371489,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "darius@wry.me",
            "sender_full_name": "Darius Bacon (W1'16)",
            "sender_id": 902,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Max Sum Path in Binary Tree",
            "submessages": [],
            "timestamp": 1472141435,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/c52df4d54166ed7db0141bdb21c7935e502d6ddc?x=x&version=1",
            "client": "website",
            "content": "<p><code>lsolution</code> has the sum for <code>'1..2</code>, <code>rsolution</code> for <code>1..3</code>, and the longer expression for <code>2..1..3</code>.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 100371506,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "darius@wry.me",
            "sender_full_name": "Darius Bacon (W1'16)",
            "sender_id": 902,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Max Sum Path in Binary Tree",
            "submessages": [],
            "timestamp": 1472141495,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/4b6aae6cae274fb83b0d155f0255298c2d3b22b7?x=x&version=2",
            "client": "website",
            "content": "<p>yeah, you're right. Taking a closer look at it, it makes sense</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 100371626,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "fundirap@gmail.com",
            "sender_full_name": "Panashe Machinda Fundira (he) (S1'16)",
            "sender_id": 9339,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Max Sum Path in Binary Tree",
            "submessages": [],
            "timestamp": 1472141721,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/c52df4d54166ed7db0141bdb21c7935e502d6ddc?x=x&version=1",
            "client": "website",
            "content": "<p>I'm not sure the code actually implements quite what I had in mind -- it was bedtime last night, and right now I have work I have to do. </p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 100371841,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "darius@wry.me",
            "sender_full_name": "Darius Bacon (W1'16)",
            "sender_id": 902,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Max Sum Path in Binary Tree",
            "submessages": [],
            "timestamp": 1472142122,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/c52df4d54166ed7db0141bdb21c7935e502d6ddc?x=x&version=1",
            "client": "website",
            "content": "<p>I'll try to come back to it tonight and see if I end up with the same code.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 100371876,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "darius@wry.me",
            "sender_full_name": "Darius Bacon (W1'16)",
            "sender_id": 902,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Max Sum Path in Binary Tree",
            "submessages": [],
            "timestamp": 1472142224,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/c52df4d54166ed7db0141bdb21c7935e502d6ddc?x=x&version=1",
            "client": "website",
            "content": "<p>(Aw, I'm doing it now -- poor self-control)</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 100372635,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "darius@wry.me",
            "sender_full_name": "Darius Bacon (W1'16)",
            "sender_id": 902,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Max Sum Path in Binary Tree",
            "submessages": [],
            "timestamp": 1472143585,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/c52df4d54166ed7db0141bdb21c7935e502d6ddc?x=x&version=1",
            "client": "website",
            "content": "<p>Yes, <a href=\"https://gist.github.com/darius/16bf45a4f25343484e775a5735e7a5a6\" target=\"_blank\" title=\"https://gist.github.com/darius/16bf45a4f25343484e775a5735e7a5a6\">essentially the same</a>.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 100373024,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "darius@wry.me",
            "sender_full_name": "Darius Bacon (W1'16)",
            "sender_id": 902,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Max Sum Path in Binary Tree",
            "submessages": [],
            "timestamp": 1472144356,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/2b3883a91e0e0a59f3998bcc07ca66d2e9e760a6?x=x&version=1",
            "client": "website",
            "content": "<p>Sorry all, I have to miss our meeting tomorrow. Heading to Boston for the weekend to help my sister move out, bus leaves in the morning. </p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 100382399,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "platt.nicholas@gmail.com",
            "sender_full_name": "Nick Platt (F1'16)",
            "sender_id": 100031,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Stanford Algorithms course",
            "submessages": [],
            "timestamp": 1472161670,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/8f95e07c22da0d35f4c212cad4a019f097d690e1?x=x&version=1",
            "client": "website",
            "content": "<p>what time did we say we were going to meet at tomorrow?  Are we able to schedule it so that those who want can also attend the refactoring code dojo with Emil?</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 100382914,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "isla.carson@hotmail.co.uk",
            "sender_full_name": "Isla Carson (she) (W2'19)",
            "sender_id": 100044,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Stanford Algorithms course",
            "submessages": [],
            "timestamp": 1472162861,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/2b3883a91e0e0a59f3998bcc07ca66d2e9e760a6?x=x&version=1",
            "client": "website",
            "content": "<p>Both are scheduled for 11. I'll let you all sort out a new time, if desired. I think it'll be just <span class=\"user-mention\" data-user-email=\"isla.carson@hotmail.co.uk\">@Isla Jean Carson (F1'16)</span> <span class=\"user-mention\" data-user-email=\"aissam.belhachmi@gmail.com\">@Aissam Belhachmi</span> <span class=\"user-mention\" data-user-email=\"alicja.raszkowska@gmail.com\">@Alicja Karolina Raszkowska (F1'16)</span> </p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 100383694,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "platt.nicholas@gmail.com",
            "sender_full_name": "Nick Platt (F1'16)",
            "sender_id": 100031,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Stanford Algorithms course",
            "submessages": [],
            "timestamp": 1472164479,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/d2d1f3e361a479849026fe298e091c50e1a4b20a?x=x&version=5",
            "client": "desktop app Mac 0.5.2",
            "content": "<p>anyone going for the whiteboarding at 12:30? if not, we could do it right after refactoring</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 100383740,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "rc@alicja.dev",
            "sender_full_name": "Alicja Karolina Raszkowska (she/they) (W2'18)",
            "sender_id": 100049,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Stanford Algorithms course",
            "submessages": [],
            "timestamp": 1472164568,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/08dcfe30cf7f6b2fadc908e814a6472fd38b4a38?x=x&version=3",
            "client": "website",
            "content": "<p>I'm not! How about 1pm?</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 100384085,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "aissam.belhachmi@gmail.com",
            "sender_full_name": "Aissam Belhachmi (he) (F1'16)",
            "sender_id": 100040,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Stanford Algorithms course",
            "submessages": [],
            "timestamp": 1472165395,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/1f950f2c6fb4d92e4a4e6ea1c0b6575a7465d00c?x=x&version=1",
            "client": "website",
            "content": "<p>1pm works for me!</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 100406261,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "kgibilterra@gmail.com",
            "sender_full_name": "Kaylyn Gibilterra (S2'16)",
            "sender_id": 9508,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Stanford Algorithms course",
            "submessages": [],
            "timestamp": 1472219080,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/2b942c5d81780d60e790c1657d6e9dbc?d=identicon&version=1",
            "client": "website",
            "content": "<p>i'll be sharing a gist of my code for the team; def interested to see what y'all have cause i can't get mine to work yet!</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 100406440,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "sranso@gmail.com",
            "sender_full_name": "Sarah Weiss Ransohoff (F1'16)",
            "sender_id": 100027,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Stanford Algorithms course",
            "submessages": [],
            "timestamp": 1472219462,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/2b942c5d81780d60e790c1657d6e9dbc?d=identicon&version=1",
            "client": "website",
            "content": "<p>(wont be there irl either)</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 100406444,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "sranso@gmail.com",
            "sender_full_name": "Sarah Weiss Ransohoff (F1'16)",
            "sender_id": 100027,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Stanford Algorithms course",
            "submessages": [],
            "timestamp": 1472219471,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/2b942c5d81780d60e790c1657d6e9dbc?d=identicon&version=1",
            "client": "website",
            "content": "<p>aight, this is what i have... brute force works (yay? lol) and ik i'm super close with the mergesort implementation, but the inversion counting is off... can't quite figure out why. gonna work on adding test cases for the brute force one to then use against the mergesort implementation. look forward to seeing what y'all find! <a href=\"https://gist.github.com/sranso/3a59c48b8c12b3cafa0079978c7752a3\" target=\"_blank\" title=\"https://gist.github.com/sranso/3a59c48b8c12b3cafa0079978c7752a3\">https://gist.github.com/sranso/3a59c48b8c12b3cafa0079978c7752a3</a></p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 100407690,
            "is_me_message": false,
            "last_edit_timestamp": 1472222049,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "sranso@gmail.com",
            "sender_full_name": "Sarah Weiss Ransohoff (F1'16)",
            "sender_id": 100027,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Stanford Algorithms course",
            "submessages": [],
            "timestamp": 1472222035,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/282da691709f4715fc3e0ff6bebd278b?d=identicon&version=1",
            "client": "website",
            "content": "<p><span class=\"user-mention\" data-user-email=\"sranso@gmail.com\">@Sarah Weiss Ransohoff (F1'16)</span> taking a quick look at your gist, I think you're undercounting your split inversions.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 100408215,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "alan.m.odonnell@gmail.com",
            "sender_full_name": "Alan O'Donnell (he) (S1'19)",
            "sender_id": 813,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Stanford Algorithms course",
            "submessages": [],
            "timestamp": 1472223107,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/08dcfe30cf7f6b2fadc908e814a6472fd38b4a38?x=x&version=3",
            "client": "website",
            "content": "<p><span class=\"user-mention\" data-user-email=\"alan@hackerschool.com\">@Alan O'Donnell</span>  you beat me into it!</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 100408269,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "aissam.belhachmi@gmail.com",
            "sender_full_name": "Aissam Belhachmi (he) (F1'16)",
            "sender_id": 100040,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Stanford Algorithms course",
            "submessages": [],
            "timestamp": 1472223145,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/282da691709f4715fc3e0ff6bebd278b?d=identicon&version=1",
            "client": "website",
            "content": "<p>I'll leave it at that for now :)</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 100408271,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "alan.m.odonnell@gmail.com",
            "sender_full_name": "Alan O'Donnell (he) (S1'19)",
            "sender_id": 813,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Stanford Algorithms course",
            "submessages": [],
            "timestamp": 1472223159,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/08dcfe30cf7f6b2fadc908e814a6472fd38b4a38?x=x&version=3",
            "client": "website",
            "content": "<p>no spoilers :P</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 100408283,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "aissam.belhachmi@gmail.com",
            "sender_full_name": "Aissam Belhachmi (he) (F1'16)",
            "sender_id": 100040,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Stanford Algorithms course",
            "submessages": [],
            "timestamp": 1472223178,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/2b942c5d81780d60e790c1657d6e9dbc?d=identicon&version=1",
            "client": "website",
            "content": "<p>i agree! but i'm not totally sure how...</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 100408296,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "sranso@gmail.com",
            "sender_full_name": "Sarah Weiss Ransohoff (F1'16)",
            "sender_id": 100027,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Stanford Algorithms course",
            "submessages": [],
            "timestamp": 1472223203,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/2b942c5d81780d60e790c1657d6e9dbc?d=identicon&version=1",
            "client": "website",
            "content": "<p>ah okay haha</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 100408298,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "sranso@gmail.com",
            "sender_full_name": "Sarah Weiss Ransohoff (F1'16)",
            "sender_id": 100027,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Stanford Algorithms course",
            "submessages": [],
            "timestamp": 1472223206,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/2b942c5d81780d60e790c1657d6e9dbc?d=identicon&version=1",
            "client": "website",
            "content": "<p>ILL WAIT</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 100408300,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "sranso@gmail.com",
            "sender_full_name": "Sarah Weiss Ransohoff (F1'16)",
            "sender_id": 100027,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Stanford Algorithms course",
            "submessages": [],
            "timestamp": 1472223209,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/282da691709f4715fc3e0ff6bebd278b?d=identicon&version=1",
            "client": "website",
            "content": "<p>As a sort-of-hint that hopefully doesn't give too much away, I think you'll see that your code doesn't quite match the pseudo-code from lecture.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 100408360,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "alan.m.odonnell@gmail.com",
            "sender_full_name": "Alan O'Donnell (he) (S1'19)",
            "sender_id": 813,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Stanford Algorithms course",
            "submessages": [],
            "timestamp": 1472223281,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/2b942c5d81780d60e790c1657d6e9dbc?d=identicon&version=1",
            "client": "website",
            "content": "<p>and, following up on <span class=\"user-mention\" data-user-email=\"alan@hackerschool.com\">@Alan O'Donnell</span> 's earlier advice to generate tests (eg using <a href=\"https://hypothesis.readthedocs.io/\" target=\"_blank\" title=\"https://hypothesis.readthedocs.io/\">https://hypothesis.readthedocs.io/</a>), i have a question... so let's say i'm using hypothesis like so</p>\n<div class=\"codehilite\"><pre>class TestCountInversions(unittest.TestCase):\n    @given(st.lists(st.integers))\n    def test_brute_force(self, array):\n        self.assertEqual(brute_force(array), thing)\n</pre></div>\n\n\n<p>this successfully generates lists of integers that i can use against <code>brute_force</code>, but i'm not sure how to then assert whether or not the result of <code>brute_force</code> equals what i'd like it to equal (counting inversions in an array isn't a feature of hypothesis afaik). how should i be thinking about testing this fxn, given this restraint? i feel like i may be missing something..</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 100408429,
            "is_me_message": false,
            "last_edit_timestamp": 1472223470,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "sranso@gmail.com",
            "sender_full_name": "Sarah Weiss Ransohoff (F1'16)",
            "sender_id": 100027,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Stanford Algorithms course",
            "submessages": [],
            "timestamp": 1472223394,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/2b942c5d81780d60e790c1657d6e9dbc?d=identicon&version=1",
            "client": "website",
            "content": "<p>re sort-of-hint: ah cool thanks i'll take a peek!</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 100408435,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "sranso@gmail.com",
            "sender_full_name": "Sarah Weiss Ransohoff (F1'16)",
            "sender_id": 100027,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Stanford Algorithms course",
            "submessages": [],
            "timestamp": 1472223412,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/2b3883a91e0e0a59f3998bcc07ca66d2e9e760a6?x=x&version=1",
            "client": "website",
            "content": "<p>In other news, I had the dates wrong, so I'll be in for the meeting this afternoon</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 100408488,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "platt.nicholas@gmail.com",
            "sender_full_name": "Nick Platt (F1'16)",
            "sender_id": 100031,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Stanford Algorithms course",
            "submessages": [],
            "timestamp": 1472223523,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/08dcfe30cf7f6b2fadc908e814a6472fd38b4a38?x=x&version=3",
            "client": "website",
            "content": "<p><img alt=\":thumbs_up:\" class=\"emoji\" src=\"/static/third/gemoji/images/emoji/thumbs_up.png\" title=\":thumbs_up:\"> </p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 100408501,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "aissam.belhachmi@gmail.com",
            "sender_full_name": "Aissam Belhachmi (he) (F1'16)",
            "sender_id": 100040,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Stanford Algorithms course",
            "submessages": [],
            "timestamp": 1472223580,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/282da691709f4715fc3e0ff6bebd278b?d=identicon&version=1",
            "client": "website",
            "content": "<p><span class=\"user-mention\" data-user-email=\"sranso@gmail.com\">@Sarah Weiss Ransohoff (F1'16)</span>, you'd want to do something like this:</p>\n<div class=\"codehilite\"><pre><span class=\"k\">class</span> <span class=\"nc\">TestCountInversions</span><span class=\"p\">(</span><span class=\"n\">unittest</span><span class=\"o\">.</span><span class=\"n\">TestCase</span><span class=\"p\">):</span>\n    <span class=\"nd\">@given</span><span class=\"p\">(</span><span class=\"n\">st</span><span class=\"o\">.</span><span class=\"n\">lists</span><span class=\"p\">(</span><span class=\"n\">st</span><span class=\"o\">.</span><span class=\"n\">integers</span><span class=\"p\">))</span>\n    <span class=\"k\">def</span> <span class=\"nf\">test_fancy_vs_brute_force</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">array</span><span class=\"p\">):</span>\n        <span class=\"n\">copy</span> <span class=\"o\">=</span> <span class=\"n\">array</span><span class=\"p\">[:]</span> <span class=\"c\"># in case one of our methods mutates its input array.</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">assertEqual</span><span class=\"p\">(</span><span class=\"n\">brute_force</span><span class=\"p\">(</span><span class=\"n\">array</span><span class=\"p\">),</span> <span class=\"n\">fancy</span><span class=\"p\">(</span><span class=\"n\">copy</span><span class=\"p\">))</span>\n</pre></div>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 100409231,
            "is_me_message": false,
            "last_edit_timestamp": 1472225198,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "alan.m.odonnell@gmail.com",
            "sender_full_name": "Alan O'Donnell (he) (S1'19)",
            "sender_id": 813,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Stanford Algorithms course",
            "submessages": [],
            "timestamp": 1472224860,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/282da691709f4715fc3e0ff6bebd278b?d=identicon&version=1",
            "client": "website",
            "content": "<p>The idea is to test the thing you're unconfident with against the thing you are confident with. In this case, we presumably know that the brute force version works, but we're less confident in <code>fancy</code>.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 100409279,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "alan.m.odonnell@gmail.com",
            "sender_full_name": "Alan O'Donnell (he) (S1'19)",
            "sender_id": 813,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Stanford Algorithms course",
            "submessages": [],
            "timestamp": 1472224923,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/282da691709f4715fc3e0ff6bebd278b?d=identicon&version=1",
            "client": "website",
            "content": "<p>It's true that you might actually have a working <code>fancy</code> and a broken <code>brute_force</code>, but even so, the test will find input arrays where they disagree.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 100409287,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "alan.m.odonnell@gmail.com",
            "sender_full_name": "Alan O'Donnell (he) (S1'19)",
            "sender_id": 813,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Stanford Algorithms course",
            "submessages": [],
            "timestamp": 1472224977,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/282da691709f4715fc3e0ff6bebd278b?d=identicon&version=1",
            "client": "website",
            "content": "<p>For example, you might test your eventual <code>quicksort</code> implementation with:</p>\n<div class=\"codehilite\"><pre><span class=\"k\">class</span> <span class=\"nc\">TestQuickSort</span><span class=\"p\">(</span><span class=\"n\">unittest</span><span class=\"o\">.</span><span class=\"n\">TestCase</span><span class=\"p\">):</span>\n    <span class=\"nd\">@given</span><span class=\"p\">(</span><span class=\"n\">st</span><span class=\"o\">.</span><span class=\"n\">lists</span><span class=\"p\">(</span><span class=\"n\">st</span><span class=\"o\">.</span><span class=\"n\">integers</span><span class=\"p\">))</span>\n    <span class=\"k\">def</span> <span class=\"nf\">test</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">array</span><span class=\"p\">):</span>\n        <span class=\"n\">copy</span> <span class=\"o\">=</span> <span class=\"n\">array</span><span class=\"p\">[:]</span> <span class=\"c\"># in case one of our methods mutates its input array.</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">assertEqual</span><span class=\"p\">(</span><span class=\"n\">quick_sort</span><span class=\"p\">(</span><span class=\"n\">array</span><span class=\"p\">),</span> <span class=\"nb\">sorted</span><span class=\"p\">(</span><span class=\"n\">copy</span><span class=\"p\">))</span> <span class=\"c\"># where sorted is the built-in sort</span>\n</pre></div>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 100409408,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "alan.m.odonnell@gmail.com",
            "sender_full_name": "Alan O'Donnell (he) (S1'19)",
            "sender_id": 813,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Stanford Algorithms course",
            "submessages": [],
            "timestamp": 1472225256,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/85b7bffdc731ce90a89c323fb362a8be0012652e?x=x&version=2",
            "client": "website",
            "content": "<p>1:00 <img alt=\":+1:\" class=\"emoji\" src=\"/static/third/gemoji/images/emoji/+1.png\" title=\":+1:\"> I'll be there too!!</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 100410541,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "sarah.anne.friend@gmail.com",
            "sender_full_name": "Sarah Friend (she) (S2'16)",
            "sender_id": 9500,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Stanford Algorithms course",
            "submessages": [],
            "timestamp": 1472227247,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/8f95e07c22da0d35f4c212cad4a019f097d690e1?x=x&version=1",
            "client": "website",
            "content": "<p>I'll join later - I need to get some food first!</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 100412044,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "isla.carson@hotmail.co.uk",
            "sender_full_name": "Isla Carson (she) (W2'19)",
            "sender_id": 100044,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Stanford Algorithms course",
            "submessages": [],
            "timestamp": 1472229924,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/1f950f2c6fb4d92e4a4e6ea1c0b6575a7465d00c?x=x&version=1",
            "client": "website",
            "content": "<p>relevant xkcd today: <a href=\"http://xkcd.com/1725/\" target=\"_blank\" title=\"http://xkcd.com/1725/\">http://xkcd.com/1725/</a></p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 100412550,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "kgibilterra@gmail.com",
            "sender_full_name": "Kaylyn Gibilterra (S2'16)",
            "sender_id": 9508,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "machine learning",
            "submessages": [],
            "timestamp": 1472230947,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/08dcfe30cf7f6b2fadc908e814a6472fd38b4a38?x=x&version=3",
            "client": "website",
            "content": "<p>where are we meeting? </p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 100412554,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "aissam.belhachmi@gmail.com",
            "sender_full_name": "Aissam Belhachmi (he) (F1'16)",
            "sender_id": 100040,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Stanford Algorithms course",
            "submessages": [],
            "timestamp": 1472230973,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/1f950f2c6fb4d92e4a4e6ea1c0b6575a7465d00c?x=x&version=1",
            "client": "website",
            "content": "<p>couches!</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 100412569,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "kgibilterra@gmail.com",
            "sender_full_name": "Kaylyn Gibilterra (S2'16)",
            "sender_id": 9508,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Stanford Algorithms course",
            "submessages": [],
            "timestamp": 1472231036,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/1f950f2c6fb4d92e4a4e6ea1c0b6575a7465d00c?x=x&version=1",
            "client": "website",
            "content": "<p>jk library</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 100412687,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "kgibilterra@gmail.com",
            "sender_full_name": "Kaylyn Gibilterra (S2'16)",
            "sender_id": 9508,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Stanford Algorithms course",
            "submessages": [],
            "timestamp": 1472231204,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/d2d1f3e361a479849026fe298e091c50e1a4b20a?x=x&version=5",
            "client": "desktop app Mac 0.5.2",
            "content": "<p><a href=\"http://andrew-exercise.blogspot.com/2015/11/algorithms-design-and-analysis-part-1_4.html\" target=\"_blank\" title=\"http://andrew-exercise.blogspot.com/2015/11/algorithms-design-and-analysis-part-1_4.html\">http://andrew-exercise.blogspot.com/2015/11/algorithms-design-and-analysis-part-1_4.html</a></p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 100413095,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "rc@alicja.dev",
            "sender_full_name": "Alicja Karolina Raszkowska (she/they) (W2'18)",
            "sender_id": 100049,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Stanford Algorithms course",
            "submessages": [],
            "timestamp": 1472231933,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/2b942c5d81780d60e790c1657d6e9dbc?d=identicon&version=1",
            "client": "website",
            "content": "<p><span class=\"user-mention\" data-user-email=\"alan@hackerschool.com\">@Alan O'Donnell</span> ah, thank you, this is very helpful in wrapping my head around these kinds of tests!</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 100418930,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "sranso@gmail.com",
            "sender_full_name": "Sarah Weiss Ransohoff (F1'16)",
            "sender_id": 100027,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Stanford Algorithms course",
            "submessages": [],
            "timestamp": 1472242837,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/c2a1e36ca5742482a9581b5e1e753979?d=identicon&version=1",
            "client": "website",
            "content": "<p>Here's my original accepted solution in Python - <a href=\"https://gist.github.com/gudnm/f4520dfd0988fe5bdb30b0ffcf071864\" target=\"_blank\" title=\"https://gist.github.com/gudnm/f4520dfd0988fe5bdb30b0ffcf071864\">https://gist.github.com/gudnm/f4520dfd0988fe5bdb30b0ffcf071864</a>, Michael's pseudocode looks more elegant and I will try to implement it.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 100421261,
            "is_me_message": false,
            "last_edit_timestamp": 1472247044,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "dfobox@gmail.com",
            "sender_full_name": "Ivan Vashchenko (F1'16)",
            "sender_id": 100046,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Max Sum Path in Binary Tree",
            "submessages": [],
            "timestamp": 1472246967,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/c2a1e36ca5742482a9581b5e1e753979?d=identicon&version=1",
            "client": "website",
            "content": "<p>Here's my implementation of Michael's pseudocode, it takes care of negative numbers, too. It's accepted but I'm not too clear about it...</p>\n<div class=\"codehilite\"><pre>    <span class=\"k\">def</span> <span class=\"nf\">dfs</span><span class=\"p\">(</span><span class=\"n\">node</span><span class=\"p\">):</span>\n        <span class=\"n\">minint</span> <span class=\"o\">=</span> <span class=\"o\">-</span><span class=\"mi\">2</span><span class=\"o\">**</span><span class=\"mi\">31</span>\n        <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">node</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"p\">(</span><span class=\"n\">minint</span><span class=\"p\">,</span> <span class=\"n\">minint</span><span class=\"p\">)</span>\n        <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">node</span><span class=\"o\">.</span><span class=\"n\">left</span> <span class=\"ow\">and</span> <span class=\"ow\">not</span> <span class=\"n\">node</span><span class=\"o\">.</span><span class=\"n\">right</span><span class=\"p\">:</span>\n            <span class=\"n\">node</span><span class=\"o\">.</span><span class=\"n\">val</span> <span class=\"o\">=</span> <span class=\"nb\">max</span><span class=\"p\">(</span><span class=\"n\">minint</span><span class=\"p\">,</span> <span class=\"n\">node</span><span class=\"o\">.</span><span class=\"n\">val</span><span class=\"p\">)</span>\n            <span class=\"k\">return</span> <span class=\"p\">(</span><span class=\"n\">node</span><span class=\"o\">.</span><span class=\"n\">val</span><span class=\"p\">,</span> <span class=\"n\">node</span><span class=\"o\">.</span><span class=\"n\">val</span><span class=\"p\">)</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"n\">ls</span><span class=\"p\">,</span> <span class=\"n\">lb</span> <span class=\"o\">=</span> <span class=\"n\">dfs</span><span class=\"p\">(</span><span class=\"n\">node</span><span class=\"o\">.</span><span class=\"n\">left</span><span class=\"p\">)</span>\n            <span class=\"n\">rs</span><span class=\"p\">,</span> <span class=\"n\">rb</span> <span class=\"o\">=</span> <span class=\"n\">dfs</span><span class=\"p\">(</span><span class=\"n\">node</span><span class=\"o\">.</span><span class=\"n\">right</span><span class=\"p\">)</span>\n\n            <span class=\"n\">solution</span> <span class=\"o\">=</span> <span class=\"nb\">max</span><span class=\"p\">(</span><span class=\"n\">ls</span><span class=\"p\">,</span> <span class=\"n\">rs</span><span class=\"p\">,</span> <span class=\"n\">node</span><span class=\"o\">.</span><span class=\"n\">val</span><span class=\"p\">,</span> <span class=\"n\">lb</span><span class=\"o\">+</span><span class=\"n\">rb</span><span class=\"o\">+</span><span class=\"n\">node</span><span class=\"o\">.</span><span class=\"n\">val</span><span class=\"p\">)</span>\n            <span class=\"n\">branch</span> <span class=\"o\">=</span> <span class=\"nb\">max</span><span class=\"p\">(</span><span class=\"n\">minint</span><span class=\"p\">,</span> <span class=\"n\">node</span><span class=\"o\">.</span><span class=\"n\">val</span><span class=\"o\">+</span><span class=\"nb\">max</span><span class=\"p\">(</span><span class=\"n\">lb</span><span class=\"p\">,</span> <span class=\"n\">rb</span><span class=\"p\">))</span>\n\n            <span class=\"k\">return</span> <span class=\"p\">(</span><span class=\"n\">solution</span><span class=\"p\">,</span> <span class=\"n\">branch</span><span class=\"p\">)</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">maxPathSum</span><span class=\"p\">(</span><span class=\"n\">A</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"n\">dfs</span><span class=\"p\">(</span><span class=\"n\">A</span><span class=\"p\">)[</span><span class=\"mi\">0</span><span class=\"p\">]</span>\n</pre></div>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 100422051,
            "is_me_message": false,
            "last_edit_timestamp": 1472248744,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "dfobox@gmail.com",
            "sender_full_name": "Ivan Vashchenko (F1'16)",
            "sender_id": 100046,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Max Sum Path in Binary Tree",
            "submessages": [],
            "timestamp": 1472248658,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/dbbeeb0789c1e1195ddc9c35ec72f56e?d=identicon&version=1",
            "client": "website",
            "content": "<p>Is there any logic to the number of nodes that you have in a hidden layer of a neural network? I'm presuming that designing a good neural network will come later, but so far it seems kind of random how many hidden layers there are and how big they are... Is it \"the bigger the better\"?</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 100441053,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "jessetherappaport@gmail.com",
            "sender_full_name": "Jesse Rappaport (S2'16)",
            "sender_id": 9498,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "machine learning",
            "submessages": [],
            "timestamp": 1472299309,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/07a5ba69595cc839c85aabdb8ffeabee6ad0b83e?x=x&version=1",
            "client": "website",
            "content": "<p>Here's a cool blog post that deals with that a bit <a href=\"http://colah.github.io/posts/2014-03-NN-Manifolds-Topology/\" target=\"_blank\" title=\"http://colah.github.io/posts/2014-03-NN-Manifolds-Topology/\">http://colah.github.io/posts/2014-03-NN-Manifolds-Topology/</a> although it isn't all that practically-focused.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 100441140,
            "is_me_message": false,
            "last_edit_timestamp": 1472299613,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "sean.martin@nyu.edu",
            "sender_full_name": "Sean Martin (they) (S2'16)",
            "sender_id": 9495,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "machine learning",
            "submessages": [],
            "timestamp": 1472299508,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/282da691709f4715fc3e0ff6bebd278b?d=identicon&version=1",
            "client": "website",
            "content": "<p>Thought this was a fun blog post about an odd implementation detail in Scala's implementation of (immutable) maps: <a href=\"http://asyncified.io/2016/08/27/the-case-of-the-immutable-map-and-object-who-forgot-to-override-hashcode/\" target=\"_blank\" title=\"http://asyncified.io/2016/08/27/the-case-of-the-immutable-map-and-object-who-forgot-to-override-hashcode/\">http://asyncified.io/2016/08/27/the-case-of-the-immutable-map-and-object-who-forgot-to-override-hashcode/</a></p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 100441180,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "alan.m.odonnell@gmail.com",
            "sender_full_name": "Alan O'Donnell (he) (S1'19)",
            "sender_id": 813,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "hash maps (in Scala)",
            "submessages": [],
            "timestamp": 1472299587,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/dbbeeb0789c1e1195ddc9c35ec72f56e?d=identicon&version=1",
            "client": "website",
            "content": "<p>Thanks Sean, I'll take a look at that post. (I like the visualizations)</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 100441305,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "jessetherappaport@gmail.com",
            "sender_full_name": "Jesse Rappaport (S2'16)",
            "sender_id": 9498,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "machine learning",
            "submessages": [],
            "timestamp": 1472299992,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/dbbeeb0789c1e1195ddc9c35ec72f56e?d=identicon&version=1",
            "client": "website",
            "content": "<p>I was a bit impatient... Ng talks about this briefly in lesson 5.2.4. Per Ng: one hidden layer is a good default, the more hidden units the better.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 100442280,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "jessetherappaport@gmail.com",
            "sender_full_name": "Jesse Rappaport (S2'16)",
            "sender_id": 9498,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "machine learning",
            "submessages": [],
            "timestamp": 1472302770,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/f8a22a58cd678b9098bb6c07572c6a03a7752fc8?x=x&version=1",
            "client": "website",
            "content": "<p>I'm just trying to follow some reasoning about the complexity of an inefficient strategy for constructing a heap from a list of keys. I've tried to work it through a few times to get an expression for the average case and to see if it's \"approximately\" nlog(n) as stated below:</p>\n<p>This reasoning appears in the context building a priority queue using a binary heap (Interactive Python Course)</p>\n<p>\"build an entire heap from a list of keys: The first method you might think of may be like the following. Given a list of keys, you could easily build a heap by inserting each key one at a time. Since you are starting with a list of one item, the list is sorted and you could use binary search to find the right position to insert the next key at a cost of approximately O(log(n)) operations. However, remember that inserting an item in the middle of the list may require O(n) operations to shift the rest of the list over to make room for the new key. Therefore, to insert n keys into the heap would require a total of O(nlog\u2061n) operations.\"</p>\n<p>My thinking here is...</p>\n<p>For the binary search complexity:</p>\n<p><code>sum of log(i) with i ranging from 0 to n</code></p>\n<p>And for insertion for a list of length i:</p>\n<p><code>[probability of element being inserted at a given position] * \n[number of shifts of list elements required for insertion at that position]</code></p>\n<p>the probability is: <code>1 / [number of possible insertion positions]</code><br>\nthe sum of the shifts is sum of consecutive integers term: <code>i(i+1)/2</code></p>\n<p>since the probability is the same for each insertion position, the expression for average number of shifts for an insertion in a list of length  i is:</p>\n<p><code>(i+1)^-1 * i(i+1)/2</code></p>\n<p><code>i</code> is ranging from <code>0</code> to <code>n</code> here, so on average, with this method, I guess the expression for the complexity would be (?):</p>\n<p><code>sum( [(i+1)^-1 * i(i+1)/2] + log(i) )</code> with <code>i</code> ranging from <code>0</code> to <code>n</code></p>\n<p>Is that \"approximately\" <code>O(nlog(n))</code>?</p>\n<p>Apologies if that's a horrible mess. Thanks for any help or thoughts!</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 100546796,
            "is_me_message": false,
            "last_edit_timestamp": 1472564299,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "cbrookhouse8@gmail.com",
            "sender_full_name": "Charlie Brookhouse (S1'16)",
            "sender_id": 9344,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Building  a Heap- complexity",
            "submessages": [],
            "timestamp": 1472564250,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/da27a2081fcf44c802c1806cdb5bb881310dfe7c?x=x&version=5",
            "client": "website",
            "content": "<p>Hmm, you are possibly overthinking this, but I think their explanation seems flat out wrong as well.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 100548330,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "ad@lamarque.fr",
            "sender_full_name": "Adrien Lamarque (they/he) (S1'16)",
            "sender_id": 9335,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Building  a Heap- complexity",
            "submessages": [],
            "timestamp": 1472566940,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/4b6aae6cae274fb83b0d155f0255298c2d3b22b7?x=x&version=2",
            "client": "website",
            "content": "<p>Isn't the time complexity of a single insertion O(n + log n) = O(n)? Then inserting n elements should be O(n^2)</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 100548331,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "fundirap@gmail.com",
            "sender_full_name": "Panashe Machinda Fundira (he) (S1'16)",
            "sender_id": 9339,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Building  a Heap- complexity",
            "submessages": [],
            "timestamp": 1472566941,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/da27a2081fcf44c802c1806cdb5bb881310dfe7c?x=x&version=5",
            "client": "website",
            "content": "<p>Yes, that's exactly what I'm thinking Panashe.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 100548334,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "ad@lamarque.fr",
            "sender_full_name": "Adrien Lamarque (they/he) (S1'16)",
            "sender_id": 9335,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Building  a Heap- complexity",
            "submessages": [],
            "timestamp": 1472566955,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/da27a2081fcf44c802c1806cdb5bb881310dfe7c?x=x&version=5",
            "client": "website",
            "content": "<p>But on the other hand you don't really care about the cost of insertion, since you know the size of the \"list\" (which is a python list, thus it's an array, thus has O(1) insertion if you properly preallocate it which you can do here...)</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 100548350,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "ad@lamarque.fr",
            "sender_full_name": "Adrien Lamarque (they/he) (S1'16)",
            "sender_id": 9335,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Building  a Heap- complexity",
            "submessages": [],
            "timestamp": 1472567026,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/c7ecfe9f2764516cd0769548de80a3edb20d81cd?x=x&version=2",
            "client": "website",
            "content": "<p>Trying to dust off my memory of this, but building a heap is definitely O(log n)</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 100548353,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "paul.biggar@gmail.com",
            "sender_full_name": "Paul Biggar (he) (F1'16)",
            "sender_id": 100048,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Building  a Heap- complexity",
            "submessages": [],
            "timestamp": 1472567032,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/c7ecfe9f2764516cd0769548de80a3edb20d81cd?x=x&version=2",
            "client": "website",
            "content": "<p>Complexity of a single insertion is O(log n), no? Dunno how you get O(n + log n).</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 100548402,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "paul.biggar@gmail.com",
            "sender_full_name": "Paul Biggar (he) (F1'16)",
            "sender_id": 100048,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Building  a Heap- complexity",
            "submessages": [],
            "timestamp": 1472567078,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/4b6aae6cae274fb83b0d155f0255298c2d3b22b7?x=x&version=2",
            "client": "website",
            "content": "<p><span class=\"user-mention\" data-user-email=\"paul.biggar@gmail.com\">@Paul Biggar (F1'16)</span> I believe that's for a binary tree based heap. This is the \"naive\" list implementation</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 100548414,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "fundirap@gmail.com",
            "sender_full_name": "Panashe Machinda Fundira (he) (S1'16)",
            "sender_id": 9339,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Building  a Heap- complexity",
            "submessages": [],
            "timestamp": 1472567115,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/da27a2081fcf44c802c1806cdb5bb881310dfe7c?x=x&version=5",
            "client": "website",
            "content": "<p>I think they're talking about a Python list here (which is an array)</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 100548416,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "ad@lamarque.fr",
            "sender_full_name": "Adrien Lamarque (they/he) (S1'16)",
            "sender_id": 9335,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Building  a Heap- complexity",
            "submessages": [],
            "timestamp": 1472567137,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/4b6aae6cae274fb83b0d155f0255298c2d3b22b7?x=x&version=2",
            "client": "website",
            "content": "<p>Yes, I meant array. Do python lists automatically resize?</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 100548466,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "fundirap@gmail.com",
            "sender_full_name": "Panashe Machinda Fundira (he) (S1'16)",
            "sender_id": 9339,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Building  a Heap- complexity",
            "submessages": [],
            "timestamp": 1472567191,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/c7ecfe9f2764516cd0769548de80a3edb20d81cd?x=x&version=2",
            "client": "website",
            "content": "<p>Every heap I've ever used has been backed by an array :)</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 100548468,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "paul.biggar@gmail.com",
            "sender_full_name": "Paul Biggar (he) (F1'16)",
            "sender_id": 100048,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Building  a Heap- complexity",
            "submessages": [],
            "timestamp": 1472567198,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/f8a22a58cd678b9098bb6c07572c6a03a7752fc8?x=x&version=1",
            "client": "website",
            "content": "<p>I thought the same <span class=\"user-mention\" data-user-email=\"fundirap@gmail.com\">@Panashe Machinda Fundira (S1'16)</span>. I should have been clearer re. the list changing length. <span class=\"user-mention\" data-user-email=\"ad@lamarque.fr\">@Adrien Lamarque (S1'16)</span> - you're right it's known length, so I guess what I meant is that the section of the list we're searching in is increasing every time.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 100548469,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "cbrookhouse8@gmail.com",
            "sender_full_name": "Charlie Brookhouse (S1'16)",
            "sender_id": 9344,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Building  a Heap- complexity",
            "submessages": [],
            "timestamp": 1472567203,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/74df5731ba535a4fdb258101a3d49877?d=identicon&version=1",
            "client": "website",
            "content": "<p>Even if it's a list based implementation, you can get O(logn) insertion by doing repeated swaps  with a node's parents I think</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 100548472,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "jameshkatz@gmail.com",
            "sender_full_name": "James Katz (S2'16)",
            "sender_id": 9509,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Building  a Heap- complexity",
            "submessages": [],
            "timestamp": 1472567211,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/f8a22a58cd678b9098bb6c07572c6a03a7752fc8?x=x&version=1",
            "client": "website",
            "content": "<p>Also wary some overthinking may be going on on my part</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 100548474,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "cbrookhouse8@gmail.com",
            "sender_full_name": "Charlie Brookhouse (S1'16)",
            "sender_id": 9344,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Building  a Heap- complexity",
            "submessages": [],
            "timestamp": 1472567220,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/da27a2081fcf44c802c1806cdb5bb881310dfe7c?x=x&version=5",
            "client": "website",
            "content": "<p>The whole formulation is confusing here and everyone is being more confusing. The problem here is: we have a list of keys, and we want to build a heap out of this. The size n is the size of the INPUT list of keys. The size of the heap is 0.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 100548491,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "ad@lamarque.fr",
            "sender_full_name": "Adrien Lamarque (they/he) (S1'16)",
            "sender_id": 9335,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Building  a Heap- complexity",
            "submessages": [],
            "timestamp": 1472567281,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/c7ecfe9f2764516cd0769548de80a3edb20d81cd?x=x&version=2",
            "client": "website",
            "content": "<p>Might be going slightly off-topic, but younger me agrees: <a href=\"https://github.com/pbiggar/sorting-branches-caching/blob/master/docs/tech_report/heap.tex\" target=\"_blank\" title=\"https://github.com/pbiggar/sorting-branches-caching/blob/master/docs/tech_report/heap.tex\">https://github.com/pbiggar/sorting-branches-caching/blob/master/docs/tech_report/heap.tex</a></p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 100548536,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "paul.biggar@gmail.com",
            "sender_full_name": "Paul Biggar (he) (F1'16)",
            "sender_id": 100048,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Building  a Heap- complexity",
            "submessages": [],
            "timestamp": 1472567317,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/f8a22a58cd678b9098bb6c07572c6a03a7752fc8?x=x&version=1",
            "client": "website",
            "content": "<p><span class=\"user-mention\" data-user-email=\"ad@lamarque.fr\">@Adrien Lamarque (S1'16)</span> yes! I'm going to link to the page if it's helpful <a href=\"http://interactivepython.org/runestone/static/pythonds/Trees/BinaryHeapImplementation.html\" target=\"_blank\" title=\"http://interactivepython.org/runestone/static/pythonds/Trees/BinaryHeapImplementation.html\">http://interactivepython.org/runestone/static/pythonds/Trees/BinaryHeapImplementation.html</a></p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 100548538,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "cbrookhouse8@gmail.com",
            "sender_full_name": "Charlie Brookhouse (S1'16)",
            "sender_id": 9344,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Building  a Heap- complexity",
            "submessages": [],
            "timestamp": 1472567327,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/da27a2081fcf44c802c1806cdb5bb881310dfe7c?x=x&version=5",
            "client": "website",
            "content": "<p>The whole argument about taking O(n log n) boils down to: taking the n keys of the list turn by turn, each operation takes at worst O(log n) (because the heap will have length 0, 1, ., n  and we're talking about worst case here, so we can bound by O(log n), even for the first operation). So total for naive heap building: O(n log n). I think that's the argument the book tried to make, but they confused themselves in the process because what they describe is, like Panashe said, O(n^2) total.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 100548644,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "ad@lamarque.fr",
            "sender_full_name": "Adrien Lamarque (they/he) (S1'16)",
            "sender_id": 9335,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Building  a Heap- complexity",
            "submessages": [],
            "timestamp": 1472567445,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/4b6aae6cae274fb83b0d155f0255298c2d3b22b7?x=x&version=2",
            "client": "website",
            "content": "<p>So there are no shifts necessary?</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 100548825,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "fundirap@gmail.com",
            "sender_full_name": "Panashe Machinda Fundira (he) (S1'16)",
            "sender_id": 9339,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Building  a Heap- complexity",
            "submessages": [],
            "timestamp": 1472567782,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/da27a2081fcf44c802c1806cdb5bb881310dfe7c?x=x&version=5",
            "client": "website",
            "content": "<p>Not if you preallocate the array. But maybe they weren't thinking of that. I think the whole paragraph is confusing TBH. The naive way to build a heap is to repeatedly insert keys for a cost of O(n . logn). </p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 100548921,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "ad@lamarque.fr",
            "sender_full_name": "Adrien Lamarque (they/he) (S1'16)",
            "sender_id": 9335,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Building  a Heap- complexity",
            "submessages": [],
            "timestamp": 1472567994,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/da27a2081fcf44c802c1806cdb5bb881310dfe7c?x=x&version=5",
            "client": "website",
            "content": "<p>And the better way is to do what they show after: you can build a heap in O(n) that way.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 100548973,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "ad@lamarque.fr",
            "sender_full_name": "Adrien Lamarque (they/he) (S1'16)",
            "sender_id": 9335,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Building  a Heap- complexity",
            "submessages": [],
            "timestamp": 1472568023,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/4b6aae6cae274fb83b0d155f0255298c2d3b22b7?x=x&version=2",
            "client": "website",
            "content": "<p>Hmm... so in a fully implemented heap, insertion take O(log n). To me, building a heap naively would mean using that insertion operation n times, leading to O(n log n) time. But as you say, the \"optimal\" way to build a heap is O(n). </p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 100548994,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "fundirap@gmail.com",
            "sender_full_name": "Panashe Machinda Fundira (he) (S1'16)",
            "sender_id": 9339,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Building  a Heap- complexity",
            "submessages": [],
            "timestamp": 1472568074,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/da27a2081fcf44c802c1806cdb5bb881310dfe7c?x=x&version=5",
            "client": "website",
            "content": "<p>Yeah. Their version of the naive way is to do an insertion sort, basically</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 100549052,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "ad@lamarque.fr",
            "sender_full_name": "Adrien Lamarque (they/he) (S1'16)",
            "sender_id": 9335,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Building  a Heap- complexity",
            "submessages": [],
            "timestamp": 1472568147,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/f8a22a58cd678b9098bb6c07572c6a03a7752fc8?x=x&version=1",
            "client": "website",
            "content": "<p>Thanks again <span class=\"user-mention\" data-user-email=\"ad@lamarque.fr\">@Adrien Lamarque (S1'16)</span> I'm just trying to understand that. Leaving to one side space complexity or how resizable lists are implemented in Python, I see this as being about complexity of creating a sorted list of length n where you incrementally add 'keys' to that sorted list.  In this sense, the length of the list is changing. But I guess that's still O(n^2) as you've both said.</p>\n<p><span class=\"user-mention\" data-user-email=\"ad@lamarque.fr\">@Adrien Lamarque (S1'16)</span> I moved on to the O(n) method which you mention. But it was just the reasoning that was puzzling me, and so I worried I was missing something important. </p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 100549055,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "cbrookhouse8@gmail.com",
            "sender_full_name": "Charlie Brookhouse (S1'16)",
            "sender_id": 9344,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Building  a Heap- complexity",
            "submessages": [],
            "timestamp": 1472568151,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/4b6aae6cae274fb83b0d155f0255298c2d3b22b7?x=x&version=2",
            "client": "website",
            "content": "<p>It seems to me that they're explaining a different method, where the heap is not a list representing a balanced binary tree, but just an array in ascending order. In *that case*, insertion should still cause shifts (I guess shifts aren't necessary in python?). If we assume that shifts are necessary, it would be O(n^2)</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 100549064,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "fundirap@gmail.com",
            "sender_full_name": "Panashe Machinda Fundira (he) (S1'16)",
            "sender_id": 9339,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Building  a Heap- complexity",
            "submessages": [],
            "timestamp": 1472568194,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/4b6aae6cae274fb83b0d155f0255298c2d3b22b7?x=x&version=2",
            "client": "website",
            "content": "<p>I think they may possibly have meant one thing and have written another</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 100549072,
            "is_me_message": false,
            "last_edit_timestamp": 1472568246,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "fundirap@gmail.com",
            "sender_full_name": "Panashe Machinda Fundira (he) (S1'16)",
            "sender_id": 9339,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Building  a Heap- complexity",
            "submessages": [],
            "timestamp": 1472568229,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/da27a2081fcf44c802c1806cdb5bb881310dfe7c?x=x&version=5",
            "client": "website",
            "content": "<p>You're partially right: reading the rest of the page / book, they use list to mean \"python lists\", which are arrays.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 100549118,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "ad@lamarque.fr",
            "sender_full_name": "Adrien Lamarque (they/he) (S1'16)",
            "sender_id": 9335,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Building  a Heap- complexity",
            "submessages": [],
            "timestamp": 1472568252,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/f8a22a58cd678b9098bb6c07572c6a03a7752fc8?x=x&version=1",
            "client": "website",
            "content": "<p><span class=\"user-mention\" data-user-email=\"fundirap@gmail.com\">@Panashe Machinda Fundira (S1'16)</span> Yes- I think that's correct- your understanding of what they're saying, trying to say, and your proposed complexity.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 100549126,
            "is_me_message": false,
            "last_edit_timestamp": 1472568283,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "cbrookhouse8@gmail.com",
            "sender_full_name": "Charlie Brookhouse (S1'16)",
            "sender_id": 9344,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Building  a Heap- complexity",
            "submessages": [],
            "timestamp": 1472568275,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/da27a2081fcf44c802c1806cdb5bb881310dfe7c?x=x&version=5",
            "client": "website",
            "content": "<p>But for the implementation they definitely use python lists = regular arrays</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 100549128,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "ad@lamarque.fr",
            "sender_full_name": "Adrien Lamarque (they/he) (S1'16)",
            "sender_id": 9335,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Building  a Heap- complexity",
            "submessages": [],
            "timestamp": 1472568276,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/da27a2081fcf44c802c1806cdb5bb881310dfe7c?x=x&version=5",
            "client": "website",
            "content": "<p>I don't have the energy to do it now but someone should definitely send feedback about this part of the book :/ It's pretty terrible</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 100549139,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "ad@lamarque.fr",
            "sender_full_name": "Adrien Lamarque (they/he) (S1'16)",
            "sender_id": 9335,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Building  a Heap- complexity",
            "submessages": [],
            "timestamp": 1472568307,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/da27a2081fcf44c802c1806cdb5bb881310dfe7c?x=x&version=5",
            "client": "website",
            "content": "<p>Looking at the rest of the book I can't say I agree with their teaching choices: they don't mention the array as a basic data structure</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 100549156,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "ad@lamarque.fr",
            "sender_full_name": "Adrien Lamarque (they/he) (S1'16)",
            "sender_id": 9335,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Building  a Heap- complexity",
            "submessages": [],
            "timestamp": 1472568358,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/f8a22a58cd678b9098bb6c07572c6a03a7752fc8?x=x&version=1",
            "client": "website",
            "content": "<p><span class=\"user-mention\" data-user-email=\"ad@lamarque.fr\">@Adrien Lamarque (S1'16)</span> Re. quality of the explanations. Helpful to have this comment as I'm open to other resources but now I'm at this stage in the book, wouldn't know what to switch to. Maybe I should just finish it.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 100549200,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "cbrookhouse8@gmail.com",
            "sender_full_name": "Charlie Brookhouse (S1'16)",
            "sender_id": 9344,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Building  a Heap- complexity",
            "submessages": [],
            "timestamp": 1472568389,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/da27a2081fcf44c802c1806cdb5bb881310dfe7c?x=x&version=5",
            "client": "website",
            "content": "<p>There is so much material on data structures and algorithms and I can't really say what the best is for you, but I think stanford's algo class and princeton's (sedgewick) are pretty good</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 100549210,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "ad@lamarque.fr",
            "sender_full_name": "Adrien Lamarque (they/he) (S1'16)",
            "sender_id": 9335,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Building  a Heap- complexity",
            "submessages": [],
            "timestamp": 1472568451,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/da27a2081fcf44c802c1806cdb5bb881310dfe7c?x=x&version=5",
            "client": "website",
            "content": "<p>Princeton's is in Java, BTW</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 100549216,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "ad@lamarque.fr",
            "sender_full_name": "Adrien Lamarque (they/he) (S1'16)",
            "sender_id": 9335,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Building  a Heap- complexity",
            "submessages": [],
            "timestamp": 1472568465,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/da27a2081fcf44c802c1806cdb5bb881310dfe7c?x=x&version=5",
            "client": "website",
            "content": "<p>For books, the big blue book CLRS (cormen et al) is a nice reference although maybe a bit tough and long? (dont read back to back). Skiena's algorithm design manual is pretty nice as well.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 100549272,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "ad@lamarque.fr",
            "sender_full_name": "Adrien Lamarque (they/he) (S1'16)",
            "sender_id": 9335,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Building  a Heap- complexity",
            "submessages": [],
            "timestamp": 1472568532,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/da27a2081fcf44c802c1806cdb5bb881310dfe7c?x=x&version=5",
            "client": "website",
            "content": "<p>although a bit lacking on how to implement  things</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 100549280,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "ad@lamarque.fr",
            "sender_full_name": "Adrien Lamarque (they/he) (S1'16)",
            "sender_id": 9335,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Building  a Heap- complexity",
            "submessages": [],
            "timestamp": 1472568543,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/f8a22a58cd678b9098bb6c07572c6a03a7752fc8?x=x&version=1",
            "client": "website",
            "content": "<p>Thanks again everyone. Sorry that was indeed a mess to unravel. </p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 100549427,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "cbrookhouse8@gmail.com",
            "sender_full_name": "Charlie Brookhouse (S1'16)",
            "sender_id": 9344,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Building  a Heap- complexity",
            "submessages": [],
            "timestamp": 1472568742,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/282da691709f4715fc3e0ff6bebd278b?d=identicon&version=1",
            "client": "website",
            "content": "<p>The Stanford class is pretty good (but it only includes pseudo-code). Sedgewick's Princeton class/book is imo kind of bland, but it includes actual code. CLRS is fun, but also only has pseudo-code. I've had a good time bouncing between all three, plus a few others.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 100549454,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "alan.m.odonnell@gmail.com",
            "sender_full_name": "Alan O'Donnell (he) (S1'19)",
            "sender_id": 813,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Building  a Heap- complexity",
            "submessages": [],
            "timestamp": 1472568814,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/282da691709f4715fc3e0ff6bebd278b?d=identicon&version=1",
            "client": "website",
            "content": "<p>My dream algorithms book would basically be a caffeinated version of Sedgewick with everything implemented in Scala or OCaml, with both traditional imperative algorithms plus their persistent/functional cousins.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 100549531,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "alan.m.odonnell@gmail.com",
            "sender_full_name": "Alan O'Donnell (he) (S1'19)",
            "sender_id": 813,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Building  a Heap- complexity",
            "submessages": [],
            "timestamp": 1472568935,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/da27a2081fcf44c802c1806cdb5bb881310dfe7c?x=x&version=5",
            "client": "website",
            "content": "<p>Also, the Sedgewick book has pretty awesome diagrams (the 2nd edition, at least. I got that one for &lt; $10 used)</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 100549602,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "ad@lamarque.fr",
            "sender_full_name": "Adrien Lamarque (they/he) (S1'16)",
            "sender_id": 9335,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Building  a Heap- complexity",
            "submessages": [],
            "timestamp": 1472569023,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/da27a2081fcf44c802c1806cdb5bb881310dfe7c?x=x&version=5",
            "client": "website",
            "content": "<p>Agreed on the dreams algorithm book. When will you start writing :) ?</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 100549607,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "ad@lamarque.fr",
            "sender_full_name": "Adrien Lamarque (they/he) (S1'16)",
            "sender_id": 9335,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Building  a Heap- complexity",
            "submessages": [],
            "timestamp": 1472569040,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/282da691709f4715fc3e0ff6bebd278b?d=identicon&version=1",
            "client": "website",
            "content": "<p>Haha, I've actually thought about that--maybe I should just start writing it :)</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 100549654,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "alan.m.odonnell@gmail.com",
            "sender_full_name": "Alan O'Donnell (he) (S1'19)",
            "sender_id": 813,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Building  a Heap- complexity",
            "submessages": [],
            "timestamp": 1472569098,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/282da691709f4715fc3e0ff6bebd278b?d=identicon&version=1",
            "client": "website",
            "content": "<p>I have to write my Seven BitTorrent Clients in Seven Weeks book first though.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 100549657,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "alan.m.odonnell@gmail.com",
            "sender_full_name": "Alan O'Donnell (he) (S1'19)",
            "sender_id": 813,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Building  a Heap- complexity",
            "submessages": [],
            "timestamp": 1472569123,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/c7ecfe9f2764516cd0769548de80a3edb20d81cd?x=x&version=2",
            "client": "website",
            "content": "<p>I recommend the sedgewick book!</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 100549729,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "paul.biggar@gmail.com",
            "sender_full_name": "Paul Biggar (he) (F1'16)",
            "sender_id": 100048,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Building  a Heap- complexity",
            "submessages": [],
            "timestamp": 1472569228,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/da27a2081fcf44c802c1806cdb5bb881310dfe7c?x=x&version=5",
            "client": "website",
            "content": "<p>Although my dream algorithms book would also differentiate between theoretical limits and data structures and practical ones. Rarely have I seen mentioned that linked lists are completely inefficient wrt caching and that insertion sort is actually pretty good for small lists for the same reason.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 100549754,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "ad@lamarque.fr",
            "sender_full_name": "Adrien Lamarque (they/he) (S1'16)",
            "sender_id": 9335,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Building  a Heap- complexity",
            "submessages": [],
            "timestamp": 1472569280,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/c7ecfe9f2764516cd0769548de80a3edb20d81cd?x=x&version=2",
            "client": "website",
            "content": "<p>But there's no way to build a heap in O(n). Building a heap sorts it (unless you mean filling the array and then sorting the heap in place, in which case you can certainly copy an array into another array in O(n)), and the theoretical minimum for sorting an array with comparisons in O(n log n)</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 100549760,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "paul.biggar@gmail.com",
            "sender_full_name": "Paul Biggar (he) (F1'16)",
            "sender_id": 100048,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Building  a Heap- complexity",
            "submessages": [],
            "timestamp": 1472569299,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/da27a2081fcf44c802c1806cdb5bb881310dfe7c?x=x&version=5",
            "client": "website",
            "content": "<p>A heap doesn't sort, it partially sorts</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 100549804,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "ad@lamarque.fr",
            "sender_full_name": "Adrien Lamarque (they/he) (S1'16)",
            "sender_id": 9335,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Building  a Heap- complexity",
            "submessages": [],
            "timestamp": 1472569329,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/da27a2081fcf44c802c1806cdb5bb881310dfe7c?x=x&version=5",
            "client": "website",
            "content": "<p>That's why you can build it in O(n) :)</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 100549805,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "ad@lamarque.fr",
            "sender_full_name": "Adrien Lamarque (they/he) (S1'16)",
            "sender_id": 9335,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Building  a Heap- complexity",
            "submessages": [],
            "timestamp": 1472569342,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/282da691709f4715fc3e0ff6bebd278b?d=identicon&version=1",
            "client": "website",
            "content": "<p>It's actually possible to *build* the heap in O(n), but turning that back into a sorted array takes O(log n) for each \"pop min\" operation, so the overall resulting sort is still O(n log n).</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 100549810,
            "is_me_message": false,
            "last_edit_timestamp": 1472569364,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "alan.m.odonnell@gmail.com",
            "sender_full_name": "Alan O'Donnell (he) (S1'19)",
            "sender_id": 813,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Building  a Heap- complexity",
            "submessages": [],
            "timestamp": 1472569353,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/f8a22a58cd678b9098bb6c07572c6a03a7752fc8?x=x&version=1",
            "client": "website",
            "content": "<p>Yes- I understand it's possible in O(n) but haven't seen why</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 100549823,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "cbrookhouse8@gmail.com",
            "sender_full_name": "Charlie Brookhouse (S1'16)",
            "sender_id": 9344,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Building  a Heap- complexity",
            "submessages": [],
            "timestamp": 1472569393,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/c7ecfe9f2764516cd0769548de80a3edb20d81cd?x=x&version=2",
            "client": "website",
            "content": "<p>Right, I see what you mean. Yes, my memory is off here :)</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 100549826,
            "is_me_message": false,
            "last_edit_timestamp": 1472569415,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "paul.biggar@gmail.com",
            "sender_full_name": "Paul Biggar (he) (F1'16)",
            "sender_id": 100048,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Building  a Heap- complexity",
            "submessages": [],
            "timestamp": 1472569399,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/1d98a6bad543795875e03f3ec2d8f6d3a8c8b138?x=x&version=1",
            "client": "website",
            "content": "<p>the build in O(n) is pretty interesting - analysis here: <a href=\"http://www.cs.umd.edu/~meesh/351/mount/lectures/lect14-heapsort-analysis-part.pdf\" target=\"_blank\" title=\"http://www.cs.umd.edu/~meesh/351/mount/lectures/lect14-heapsort-analysis-part.pdf\">http://www.cs.umd.edu/~meesh/351/mount/lectures/lect14-heapsort-analysis-part.pdf</a></p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 100549869,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "sean.talts@gmail.com",
            "sender_full_name": "Sean Talts (F1'16)",
            "sender_id": 9337,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Building  a Heap- complexity",
            "submessages": [],
            "timestamp": 1472569444,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/da27a2081fcf44c802c1806cdb5bb881310dfe7c?x=x&version=5",
            "client": "website",
            "content": "<p>The thing is that a sorted array is a heap (it has the heap property), but the converse isn't true</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 100549892,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "ad@lamarque.fr",
            "sender_full_name": "Adrien Lamarque (they/he) (S1'16)",
            "sender_id": 9335,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Building  a Heap- complexity",
            "submessages": [],
            "timestamp": 1472569519,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/da27a2081fcf44c802c1806cdb5bb881310dfe7c?x=x&version=5",
            "client": "website",
            "content": "<p>but to build a heap you don't need to resolve all the \"sortedness\" just parts of it</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 100549900,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "ad@lamarque.fr",
            "sender_full_name": "Adrien Lamarque (they/he) (S1'16)",
            "sender_id": 9335,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Building  a Heap- complexity",
            "submessages": [],
            "timestamp": 1472569538,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/bb7f1991f31f7d940da112842cec3471a8459232?x=x&version=1",
            "client": "website",
            "content": "<p>More dataset resources! <a href=\"http://academictorrents.com/browse.php\" target=\"_blank\" title=\"http://academictorrents.com/browse.php\">http://academictorrents.com/browse.php</a></p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 100628492,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "alinen@savvysine.com",
            "sender_full_name": "Aline Normoyle (F1'16)",
            "sender_id": 100030,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "machine learning",
            "submessages": [],
            "timestamp": 1472744327,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/bb7f1991f31f7d940da112842cec3471a8459232?x=x&version=1",
            "client": "website",
            "content": "<p>And my friend pointed this resource out to me, not sure if others would find it useful: <a href=\"http://tflearn.org/\" target=\"_blank\" title=\"http://tflearn.org/\">http://tflearn.org/</a></p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 100629497,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "alinen@savvysine.com",
            "sender_full_name": "Aline Normoyle (F1'16)",
            "sender_id": 100030,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "machine learning",
            "submessages": [],
            "timestamp": 1472745981,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/dc74c778740e37ca0a7ac79ccea98f56?d=identicon&version=1",
            "client": "website",
            "content": "<p>This is a bit embarassing but this problem kicked my butt haha... <a href=\"https://www.interviewbit.com/problems/kth-smallest-element-in-tree\" target=\"_blank\" title=\"https://www.interviewbit.com/problems/kth-smallest-element-in-tree\">https://www.interviewbit.com/problems/kth-smallest-element-in-tree</a></p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 100630551,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "jjinking@gmail.com",
            "sender_full_name": "Joseph Kim (F1'16)",
            "sender_id": 100018,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "kth element in binary search tree",
            "submessages": [],
            "timestamp": 1472748037,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/c2a1e36ca5742482a9581b5e1e753979?d=identicon&version=1",
            "client": "website",
            "content": "<p><span class=\"user-mention\" data-user-email=\"jjinking@gmail.com\">@Joseph Kim (F1'16)</span> you can traverse the BST in order and count k down while doing it, and then return the element at k=0. Let me know if you need help coding it.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 100630960,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "dfobox@gmail.com",
            "sender_full_name": "Ivan Vashchenko (F1'16)",
            "sender_id": 100046,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "kth element in binary search tree",
            "submessages": [],
            "timestamp": 1472748828,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/dc74c778740e37ca0a7ac79ccea98f56?d=identicon&version=1",
            "client": "website",
            "content": "<p>Thanks <span class=\"user-mention\" data-user-email=\"dfobox@gmail.com\">@Ivan Vashchenko (F1'16)</span> you're way ahead of me. It took me forever to figure it out</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 100631014,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "jjinking@gmail.com",
            "sender_full_name": "Joseph Kim (F1'16)",
            "sender_id": 100018,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "kth element in binary search tree",
            "submessages": [],
            "timestamp": 1472748957,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/282da691709f4715fc3e0ff6bebd278b?d=identicon&version=1",
            "client": "website",
            "content": "<p>Friendly reminder for folks in this channel that's it's often good to let people futz around with stuff on their own :)</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 100631060,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "alan.m.odonnell@gmail.com",
            "sender_full_name": "Alan O'Donnell (he) (S1'19)",
            "sender_id": 813,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "kth element in binary search tree",
            "submessages": [],
            "timestamp": 1472748998,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/282da691709f4715fc3e0ff6bebd278b?d=identicon&version=1",
            "client": "website",
            "content": "<p>Or ask thought-inducing questions, etc.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 100631062,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "alan.m.odonnell@gmail.com",
            "sender_full_name": "Alan O'Donnell (he) (S1'19)",
            "sender_id": 813,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "kth element in binary search tree",
            "submessages": [],
            "timestamp": 1472749019,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/c2a1e36ca5742482a9581b5e1e753979?d=identicon&version=1",
            "client": "website",
            "content": "<p><span class=\"user-mention\" data-user-email=\"alan@hackerschool.com\">@Alan O'Donnell</span> good point</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 100631069,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "dfobox@gmail.com",
            "sender_full_name": "Ivan Vashchenko (F1'16)",
            "sender_id": 100046,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "kth element in binary search tree",
            "submessages": [],
            "timestamp": 1472749057,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/282da691709f4715fc3e0ff6bebd278b?d=identicon&version=1",
            "client": "website",
            "content": "<p>I've been really enjoying the UCSD algorithms series on Coursera: <a href=\"https://www.coursera.org/specializations/data-structures-algorithms\" target=\"_blank\" title=\"https://www.coursera.org/specializations/data-structures-algorithms\">https://www.coursera.org/specializations/data-structures-algorithms</a></p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 100744825,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "alan.m.odonnell@gmail.com",
            "sender_full_name": "Alan O'Donnell (he) (S1'19)",
            "sender_id": 813,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "ucsd plug",
            "submessages": [],
            "timestamp": 1473033009,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/282da691709f4715fc3e0ff6bebd278b?d=identicon&version=1",
            "client": "website",
            "content": "<p>Overall, I think I like it better than the Stanford and the Princeton classes. Plus the exercises are pretty fun (although you have to pay to get your answers checked).</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 100744836,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "alan.m.odonnell@gmail.com",
            "sender_full_name": "Alan O'Donnell (he) (S1'19)",
            "sender_id": 813,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "ucsd plug",
            "submessages": [],
            "timestamp": 1473033075,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/282da691709f4715fc3e0ff6bebd278b?d=identicon&version=1",
            "client": "website",
            "content": "<p>E.g. the explanation of how binary heaps work in the data structures course, week two, is really nice.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 100744845,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "alan.m.odonnell@gmail.com",
            "sender_full_name": "Alan O'Donnell (he) (S1'19)",
            "sender_id": 813,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "ucsd plug",
            "submessages": [],
            "timestamp": 1473033116,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/1a75e759ecdd84bf6be0cf4ea048f0f4?d=identicon&version=1",
            "client": "website",
            "content": "<p>I need help in understanding how to build an interval tree, which is one way to solve this problem. You can search for it on the Internet by googling \"order of people heights\".  <a href=\"http://stackoverflow.com/questions/19174796/puzzle-find-the-order-of-n-persons-standing-in-a-line-based-on-their-heights\" target=\"_blank\" title=\"http://stackoverflow.com/questions/19174796/puzzle-find-the-order-of-n-persons-standing-in-a-line-based-on-their-heights\">stackoverflow</a>. An interval tree in this case would store the number of elements in intervals root: [0, N], left: [0, N/2], right: [N/2 + 1, N], and continuing until the interval has range 0. There are lots of suggestions in various posts, but sorting heights from low to high, and inserting a person object with height starting from low, into this tree, is a way to get the correct result. Looking for help on understanding how to implement a solution.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 100828938,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "lesliebklein@gmail.com",
            "sender_full_name": "Leslie B Klein (she) (F'13)",
            "sender_id": 2904,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "interval tree problem",
            "submessages": [],
            "timestamp": 1473216127,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/21b9cce736cbbe8e0761bbb33863c7d3112d0136?x=x&version=2",
            "client": "website",
            "content": "<p>I think there may be an easier way to do this. If the last person in the in front list has number N (there are N people taller than them), you know they must be the N+1th tallest person. If you build a binary tree out of the people's heights that keeps track of the size of each branch of the binary tree, you can find the N+1th tallest height in <code>O(log n)</code> time. You can do than delete that height and recurse on the rest of the list. There may be a way to do it in <code>O(n)</code>, but I don't think so, because sorting the heights array may be necessary.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 100831346,
            "is_me_message": false,
            "last_edit_timestamp": 1473221719,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "michaelmalis2@gmail.com",
            "sender_full_name": "Michael Malis (SP2'19)",
            "sender_id": 8099,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "interval tree problem",
            "submessages": [],
            "timestamp": 1473221688,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/282da691709f4715fc3e0ff6bebd278b?d=identicon&version=1",
            "client": "website",
            "content": "<p>FYI, some test cases for week two's homework: <a href=\"https://www.coursera.org/learn/algorithm-design-analysis/discussions/weeks/2/threads/lKD8kzJBEeaHEgowKm82Aw\" target=\"_blank\" title=\"https://www.coursera.org/learn/algorithm-design-analysis/discussions/weeks/2/threads/lKD8kzJBEeaHEgowKm82Aw\">https://www.coursera.org/learn/algorithm-design-analysis/discussions/weeks/2/threads/lKD8kzJBEeaHEgowKm82Aw</a></p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 100883417,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "alan.m.odonnell@gmail.com",
            "sender_full_name": "Alan O'Donnell (he) (S1'19)",
            "sender_id": 813,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "stanford week 2",
            "submessages": [],
            "timestamp": 1473338992,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/1a75e759ecdd84bf6be0cf4ea048f0f4?d=identicon&version=1",
            "client": "website",
            "content": "<p>Looks like this course has no free option. Is that correct?</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 100889386,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "lesliebklein@gmail.com",
            "sender_full_name": "Leslie B Klein (she) (F'13)",
            "sender_id": 2904,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "ucsd plug",
            "submessages": [],
            "timestamp": 1473351050,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/282da691709f4715fc3e0ff6bebd278b?d=identicon&version=1",
            "client": "website",
            "content": "<p>You can audit it. They won't check your homework answers though.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 100889874,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "alan.m.odonnell@gmail.com",
            "sender_full_name": "Alan O'Donnell (he) (S1'19)",
            "sender_id": 813,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "ucsd plug",
            "submessages": [],
            "timestamp": 1473351954,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/1a75e759ecdd84bf6be0cf4ea048f0f4?d=identicon&version=1",
            "client": "website",
            "content": "<p>Somehow I don't see the audit option. ....</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 100890106,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "lesliebklein@gmail.com",
            "sender_full_name": "Leslie B Klein (she) (F'13)",
            "sender_id": 2904,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "ucsd plug",
            "submessages": [],
            "timestamp": 1473352432,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/1a75e759ecdd84bf6be0cf4ea048f0f4?d=identicon&version=1",
            "client": "website",
            "content": "<p>Found the audit option. Select a specific course in the specialization. Click Enroll Now. Select Audit.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 100890327,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "lesliebklein@gmail.com",
            "sender_full_name": "Leslie B Klein (she) (F'13)",
            "sender_id": 2904,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "ucsd plug",
            "submessages": [],
            "timestamp": 1473352829,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/b4d94d953db52e1e7cfc3724b95a6dc906fa9d58?x=x&version=2",
            "client": "website",
            "content": "<p><span class=\"user-mention\" data-user-email=\"lesliebklein@gmail.com\">@Leslie Klein (F'13)</span> Does it look to you like this has changed? I can't figure out how to audit these courses now.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 101037759,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "me@ballingt.com",
            "sender_full_name": "Tom Ballinger (he) (W'12)",
            "sender_id": 807,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "ucsd plug",
            "submessages": [],
            "timestamp": 1473713928,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/c2a1e36ca5742482a9581b5e1e753979?d=identicon&version=1",
            "client": "website",
            "content": "<p>I'm in Lovelace. Looks like the checkin was postponed, but if anyone wants to check in anyway, I'll hang out here until 11:30am. Disclaimer: I've done the first part of the course some time ago, but wouldn't mind to review any part of it. I'm going through some material in second part and would love to pair with anyone on implementing greedy and DP algorithms.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 101179688,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "dfobox@gmail.com",
            "sender_full_name": "Ivan Vashchenko (F1'16)",
            "sender_id": 100046,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Stanford Algorithms course",
            "submessages": [],
            "timestamp": 1474038459,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/dbbeeb0789c1e1195ddc9c35ec72f56e?d=identicon&version=1",
            "client": "website",
            "content": "<p>So, the next session of the Stanford Algorithms Coursera course starts October 3, and I'm planning to enroll. Any fellow travelers want to slog through it together? <span class=\"user-mention\" data-user-email=\"tayloraburgess@gmail.com\">@Taylor Burgess (S2'16)</span> <span class=\"user-mention\" data-user-email=\"jjkiely@gmail.com\">@John Kiely (S2'16)</span> <span class=\"user-mention\" data-user-email=\"emily.l.boynton@gmail.com\">@Emily Boynton (S2'16)</span> <span class=\"user-mention\" data-user-email=\"arpith@feedreader.co\">@Arpith Siromoney (S2'16)</span> <span class=\"user-mention\" data-user-email=\"lbaskin@gmail.com\">@Leeor Baskin (S2'16)</span> <span class=\"user-mention\" data-user-email=\"swathii@stanford.edu\">@Swathi Iyer (S2'16)</span> <span class=\"user-mention\" data-user-email=\"nhinsch@gmail.com\">@Nicolas Hinsch (S2'16)</span>  <br>\nI guess Swathi could just take it in person but it's cheaper online :)<br>\n<a href=\"https://www.coursera.org/learn/algorithm-design-analysis\" target=\"_blank\" title=\"https://www.coursera.org/learn/algorithm-design-analysis\">https://www.coursera.org/learn/algorithm-design-analysis</a></p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 101572096,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "jessetherappaport@gmail.com",
            "sender_full_name": "Jesse Rappaport (S2'16)",
            "sender_id": 9498,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Stanford Algorithms course",
            "submessages": [],
            "timestamp": 1474980906,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/e20b1f29d6f8b9d967d14737197775a086a2214f?x=x&version=1",
            "client": "website",
            "content": "<p><span class=\"user-mention\" data-user-email=\"jessetherappaport@gmail.com\">@Jesse Rappaport (S2'16)</span> I will take the course starting on October 3rd!</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 101573746,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "jonsandersss@gmail.com",
            "sender_full_name": "Jonathan Sanders (he) (F2'16)",
            "sender_id": 100207,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Stanford Algorithms course",
            "submessages": [],
            "timestamp": 1474984504,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/dff74ea13d47670e8b68585155c5db2a7c05c606?x=x&version=1",
            "client": "desktop app Mac 0.5.2",
            "content": "<p>I've enrolled as well!</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 101577588,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "denizk@gmail.com",
            "sender_full_name": "Deniz K\u00fcsefoglu (W2'17)",
            "sender_id": 100201,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Stanford Algorithms course",
            "submessages": [],
            "timestamp": 1474988891,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/884d87696c5eef10e0b3d74e1649527367aa1332?x=x&version=1",
            "client": "website",
            "content": "<p>Me too.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 101577656,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "mike@xichar.com",
            "sender_full_name": "Mike Nielsen (F1'16)",
            "sender_id": 100020,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Stanford Algorithms course",
            "submessages": [],
            "timestamp": 1474989006,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/cc8143c4a09981835e0d490b4627ffc0cd2baa37?x=x&version=2",
            "client": "desktop app Mac 0.5.2",
            "content": "<p><a href=\"https://www.amazon.com/Computer-Programming-Volumes-1-4A-Boxed/dp/0321751043/ref=sr_1_1?ie=UTF8&amp;qid=1474993131&amp;sr=8-1&amp;keywords=art+of+computer+programming\" target=\"_blank\" title=\"https://www.amazon.com/Computer-Programming-Volumes-1-4A-Boxed/dp/0321751043/ref=sr_1_1?ie=UTF8&amp;qid=1474993131&amp;sr=8-1&amp;keywords=art+of+computer+programming\">https://www.amazon.com/Computer-Programming-Volumes-1-4A-Boxed/dp/0321751043/ref=sr_1_1?ie=UTF8&amp;qid=1474993131&amp;sr=8-1&amp;keywords=art+of+computer+programming</a></p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 101580186,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "andrea@orru.io",
            "sender_full_name": "Andrea Orru (he) (m1'18)",
            "sender_id": 100195,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Art of Computer Programming - Group Buy",
            "submessages": [],
            "timestamp": 1474993189,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/cc8143c4a09981835e0d490b4627ffc0cd2baa37?x=x&version=2",
            "client": "desktop app Mac 0.5.2",
            "content": "<p>so, I'm sure everyone is familiar with this amazing set of books</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 101580224,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "andrea@orru.io",
            "sender_full_name": "Andrea Orru (he) (m1'18)",
            "sender_id": 100195,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Art of Computer Programming - Group Buy",
            "submessages": [],
            "timestamp": 1474993203,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/cc8143c4a09981835e0d490b4627ffc0cd2baa37?x=x&version=2",
            "client": "desktop app Mac 0.5.2",
            "content": "<p>it's probably the definitive resource on algorithms</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 101580231,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "andrea@orru.io",
            "sender_full_name": "Andrea Orru (he) (m1'18)",
            "sender_id": 100195,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Art of Computer Programming - Group Buy",
            "submessages": [],
            "timestamp": 1474993225,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/cc8143c4a09981835e0d490b4627ffc0cd2baa37?x=x&version=2",
            "client": "desktop app Mac 0.5.2",
            "content": "<p>it's super detailed and comprehensive</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 101580235,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "andrea@orru.io",
            "sender_full_name": "Andrea Orru (he) (m1'18)",
            "sender_id": 100195,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Art of Computer Programming - Group Buy",
            "submessages": [],
            "timestamp": 1474993235,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/cc8143c4a09981835e0d490b4627ffc0cd2baa37?x=x&version=2",
            "client": "desktop app Mac 0.5.2",
            "content": "<p>the cost for the whole set is pretty steep - around $200. I was wondering, if other people are interested we could split the cost and put in the library</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 101580248,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "andrea@orru.io",
            "sender_full_name": "Andrea Orru (he) (m1'18)",
            "sender_id": 100195,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Art of Computer Programming - Group Buy",
            "submessages": [],
            "timestamp": 1474993276,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/cc8143c4a09981835e0d490b4627ffc0cd2baa37?x=x&version=2",
            "client": "desktop app Mac 0.5.2",
            "content": "<p>I'd totally put 20-30 bucks on that. let me know!</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 101580251,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "andrea@orru.io",
            "sender_full_name": "Andrea Orru (he) (m1'18)",
            "sender_id": 100195,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Art of Computer Programming - Group Buy",
            "submessages": [],
            "timestamp": 1474993297,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/24c83c922884d915db7dbcd14e6ec628c06f6efa?x=x&version=1",
            "client": "website",
            "content": "<p>me!</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 101580252,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "andrew@nothing-to-say.org",
            "sender_full_name": "Andrew Yoon (he) (F2'16)",
            "sender_id": 100202,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Art of Computer Programming - Group Buy",
            "submessages": [],
            "timestamp": 1474993304,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/2b3883a91e0e0a59f3998bcc07ca66d2e9e760a6?x=x&version=1",
            "client": "website",
            "content": "<p>Surprised it isn't already in there, TBH. I'd contribute a tenner.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 101580416,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "platt.nicholas@gmail.com",
            "sender_full_name": "Nick Platt (F1'16)",
            "sender_id": 100031,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Art of Computer Programming - Group Buy",
            "submessages": [],
            "timestamp": 1474993672,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/24c83c922884d915db7dbcd14e6ec628c06f6efa?x=x&version=1",
            "client": "website",
            "content": "<p>Unless someone has them in their bag somewhere...</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 101580464,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "andrew@nothing-to-say.org",
            "sender_full_name": "Andrew Yoon (he) (F2'16)",
            "sender_id": 100202,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Art of Computer Programming - Group Buy",
            "submessages": [],
            "timestamp": 1474993747,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/cc8143c4a09981835e0d490b4627ffc0cd2baa37?x=x&version=2",
            "client": "desktop app Mac 0.5.2",
            "content": "<p>that would have to be a pretty big bag :D</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 101580527,
            "is_me_message": false,
            "last_edit_timestamp": 1474993865,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "andrea@orru.io",
            "sender_full_name": "Andrea Orru (he) (m1'18)",
            "sender_id": 100195,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Art of Computer Programming - Group Buy",
            "submessages": [],
            "timestamp": 1474993827,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/21420339803e1bb9b49d519e9f7f44f9?d=identicon&version=1",
            "client": "website",
            "content": "<p>I'd chip in as well</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 101580537,
            "is_me_message": false,
            "last_edit_timestamp": 1474993899,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "ivoscc@gmail.com",
            "sender_full_name": "Ivo S\u00e1nchez Checa Crosato (F1'16)",
            "sender_id": 100052,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Art of Computer Programming - Group Buy",
            "submessages": [],
            "timestamp": 1474993890,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/d41c2072197ef3417feaa21d950dcb4c?d=identicon&version=1",
            "client": "website",
            "content": "<p>Hi all, if you'll be studying algorithms while at Recurse, and if you're brand new to them, I can't recommend this book enough: Grokking Algorithms</p>\n<p><a href=\"https://www.manning.com/books/grokking-algorithms\" target=\"_blank\" title=\"https://www.manning.com/books/grokking-algorithms\">https://www.manning.com/books/grokking-algorithms</a></p>\n<p>It's a very visual introduction to them, perfect for someone with no algo background, and perfect for visual learners. If you've already done the basics like hash tables, searches and sorts, it's probably too basic for you, but even then you'll likely still enjoy reading it.</p>\n<p>Here's a sample chapter to see if it's for you. <a href=\"http://freecontent.manning.com/wp-content/uploads/2015/05/introduction-to-graphs.pdf\" target=\"_blank\" title=\"http://freecontent.manning.com/wp-content/uploads/2015/05/introduction-to-graphs.pdf\">http://freecontent.manning.com/wp-content/uploads/2015/05/introduction-to-graphs.pdf</a></p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 101580538,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "roneesh@gmail.com",
            "sender_full_name": "Roneesh Vashisht (S1'16)",
            "sender_id": 9341,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "An algo book I can't recommend enough!",
            "submessages": [],
            "timestamp": 1474993896,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/d8d41b2930940c942c8a3dcda43ca29c08f80b2e?x=x&version=2",
            "client": "desktop app Mac 0.5.2",
            "content": "<p>I enrolled!</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 101581416,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "tara.adiseshan@gmail.com",
            "sender_full_name": "T Adiseshan (they) (F2'16)",
            "sender_id": 100187,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Stanford Algorithms course",
            "submessages": [],
            "timestamp": 1474995508,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/d2d1f3e361a479849026fe298e091c50e1a4b20a?x=x&version=5",
            "client": "ZulipiOS",
            "content": "<p>I think I ought to restart my session, as I'm too far behind the plan :)</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 101581418,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "rc@alicja.dev",
            "sender_full_name": "Alicja Karolina Raszkowska (she/they) (W2'18)",
            "sender_id": 100049,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Stanford Algorithms course",
            "submessages": [],
            "timestamp": 1474995520,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/85b7bffdc731ce90a89c323fb362a8be0012652e?x=x&version=2",
            "client": "website",
            "content": "<p>I'm working on this class - currently on week 5 tho.  I'm going to be at RC Thurs/Fri if anyone wants to work on it!</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 101582002,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "sarah.anne.friend@gmail.com",
            "sender_full_name": "Sarah Friend (she) (S2'16)",
            "sender_id": 9500,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Stanford Algorithms course",
            "submessages": [],
            "timestamp": 1474996544,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/85b7bffdc731ce90a89c323fb362a8be0012652e?x=x&version=2",
            "client": "website",
            "content": "<p>In some ways, I think this class is my favourite thing i did at RC . . . </p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 101582043,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "sarah.anne.friend@gmail.com",
            "sender_full_name": "Sarah Friend (she) (S2'16)",
            "sender_id": 9500,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Stanford Algorithms course",
            "submessages": [],
            "timestamp": 1474996568,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/0a7d73219ea97d614c7db6f3f57d1ef58fc04752?x=x&version=1",
            "client": "website",
            "content": "<p>I enrolled too!</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 101582758,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "jennifer.y.hsu@gmail.com",
            "sender_full_name": "Jennifer Hsu (F2'16)",
            "sender_id": 100189,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Stanford Algorithms course",
            "submessages": [],
            "timestamp": 1474997854,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/b15fa198d8b13ae4dce3d72dad761804?d=identicon&version=1",
            "client": "website",
            "content": "<p>yup i just enrolled. </p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 101588641,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "m-krenik@hotmail.com",
            "sender_full_name": "Matthew Krenik (F2'16)",
            "sender_id": 100205,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Stanford Algorithms course",
            "submessages": [],
            "timestamp": 1475007298,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/b15fa198d8b13ae4dce3d72dad761804?d=identicon&version=1",
            "client": "website",
            "content": "<p>not sure if i'll do everything in it, but worth a look</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 101588649,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "m-krenik@hotmail.com",
            "sender_full_name": "Matthew Krenik (F2'16)",
            "sender_id": 100205,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Stanford Algorithms course",
            "submessages": [],
            "timestamp": 1475007311,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/dbbeeb0789c1e1195ddc9c35ec72f56e?d=identicon&version=1",
            "client": "website",
            "content": "<p>Great! I'm sure I'll need lots of help :)</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 101621273,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "jessetherappaport@gmail.com",
            "sender_full_name": "Jesse Rappaport (S2'16)",
            "sender_id": 9498,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Stanford Algorithms course",
            "submessages": [],
            "timestamp": 1475079380,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/630e835a9cdf4cce2bd442766c75da867196d672?x=x&version=2",
            "client": "website",
            "content": "<p>Considering enrolling! Will post when I do</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 101630204,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "tayloraburgess@gmail.com",
            "sender_full_name": "Taylor Burgess (he) (S2'16)",
            "sender_id": 9507,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Stanford Algorithms course",
            "submessages": [],
            "timestamp": 1475095230,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/0cafd2aa397b7d2709f0e917f76ddcd30d04e8e6?x=x&version=1",
            "client": "website",
            "content": "<p>i'm doing this too! i didn't know so many were on board with this :)</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 101640103,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "kangren.chia@gmail.com",
            "sender_full_name": "Kang Ren Chia (S2'16)",
            "sender_id": 9487,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Stanford Algorithms course",
            "submessages": [],
            "timestamp": 1475116415,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/f9690951b67c661578fe5cc381ff00da?d=identicon&version=1",
            "client": "desktop app Mac 0.5.2",
            "content": "<p>I'm looking for somene that has already implemented a Recurisve Descent Parser. I just made a very simple one that I'd like to talk about it :)  </p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 101661047,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "marcioklepacz@gmail.com",
            "sender_full_name": "Marcio Klepacz (F2'16)",
            "sender_id": 100196,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Recursive Descent Parser",
            "submessages": [],
            "timestamp": 1475164491,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/b4d94d953db52e1e7cfc3724b95a6dc906fa9d58?x=x&version=2",
            "client": "website",
            "content": "<p><span class=\"user-mention\" data-user-email=\"marcioklepacz@gmail.com\">@Marcio Klepacz (F2'16)</span> I'd be happy to talk about this! I've written some recursive descent parsers somewhat recently.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 101661694,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "me@ballingt.com",
            "sender_full_name": "Tom Ballinger (he) (W'12)",
            "sender_id": 807,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Recursive Descent Parser",
            "submessages": [],
            "timestamp": 1475165681,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/b4d94d953db52e1e7cfc3724b95a6dc906fa9d58?x=x&version=2",
            "client": "website",
            "content": "<p><span class=\"user-mention\" data-user-email=\"marcioklepacz@gmail.com\">@Marcio Klepacz (F2'16)</span> I'm in the space today, let me know <code>if &amp;&amp; when</code> you want to chat about this.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 101662145,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "me@ballingt.com",
            "sender_full_name": "Tom Ballinger (he) (W'12)",
            "sender_id": 807,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Recursive Descent Parser",
            "submessages": [],
            "timestamp": 1475166513,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/6d5e5a94fd7ae55388dd64dbf4da7b2732b8348e?x=x&version=1",
            "client": "website",
            "content": "<p>Hey folks. I had this problem at work some months before the RC. I'm not very knowledgeable about algos, so IDK how nice my solution was.<br>\nI made a repo so I could share the problem, maybe ppl could submit PRs with solutions, IDK: <a href=\"https://github.com/omnibs/best-order\" target=\"_blank\" title=\"https://github.com/omnibs/best-order\">https://github.com/omnibs/best-order</a></p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 101666428,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "juliano.solanho@gmail.com",
            "sender_full_name": "Juliano Bortolozzo Solanho (he) (F1'16)",
            "sender_id": 100035,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "market place order placement problem",
            "submessages": [],
            "timestamp": 1475174018,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/6d5e5a94fd7ae55388dd64dbf4da7b2732b8348e?x=x&version=1",
            "client": "website",
            "content": "<p>The TLDR is: You're a marketplace that sells food/etc to restaurants. Avg order is 50 products, on avg 2000 food resellers can fulfill that order. Pick the best combination. Each seller has shipping costs and a minimum order.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 101666472,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "juliano.solanho@gmail.com",
            "sender_full_name": "Juliano Bortolozzo Solanho (he) (F1'16)",
            "sender_id": 100035,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "market place order placement problem",
            "submessages": [],
            "timestamp": 1475174051,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/6d5e5a94fd7ae55388dd64dbf4da7b2732b8348e?x=x&version=1",
            "client": "website",
            "content": "<p>Pinging <span class=\"user-mention\" data-user-email=\"porterjamesj@gmail.com\">@James J. Porter (S'13)</span> and <span class=\"user-mention\" data-user-email=\"asinghamgoodwin@gmail.com\">@Alicia Thilani Singham Goodwin (F1'16)</span> cuz they heard me talking about it and showed some interest.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 101666484,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "juliano.solanho@gmail.com",
            "sender_full_name": "Juliano Bortolozzo Solanho (he) (F1'16)",
            "sender_id": 100035,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "market place order placement problem",
            "submessages": [],
            "timestamp": 1475174116,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/74df5731ba535a4fdb258101a3d49877?d=identicon&version=1",
            "client": "website",
            "content": "<p>This is a long shot, but I'm running into some confusing issues trying to generalize pollard's kangaroo algorithm (<a href=\"https://en.wikipedia.org/wiki/Pollard%27s_kangaroo_algorithm\" target=\"_blank\" title=\"https://en.wikipedia.org/wiki/Pollard%27s_kangaroo_algorithm\">https://en.wikipedia.org/wiki/Pollard%27s_kangaroo_algorithm</a> - less fun than the name would suggest) to elliptic curve groups. I have it up and running in the group of integers modulo n already. If you have any experience with abstract algebra / elliptic curves, would love to chat.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 101856068,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "jameshkatz@gmail.com",
            "sender_full_name": "James Katz (S2'16)",
            "sender_id": 9509,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Elliptic curve algorithms",
            "submessages": [],
            "timestamp": 1475619428,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/74df5731ba535a4fdb258101a3d49877?d=identicon&version=1",
            "client": "website",
            "content": "<p>/me wonders if there is a math stream</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 101856079,
            "is_me_message": true,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "jameshkatz@gmail.com",
            "sender_full_name": "James Katz (S2'16)",
            "sender_id": 9509,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Elliptic curve algorithms",
            "submessages": [],
            "timestamp": 1475619466,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/76eabfebc63c7549301ce6e9508ac82f?d=identicon&version=1",
            "client": "website",
            "content": "<p>There is a math stream, called <code>math</code>, but it's not very active\u2014probably doesn't help that people aren't automatically added to it (I believe)</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 101856155,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "harold@x.st",
            "sender_full_name": "Harold Cooper (he) (F2'16)",
            "sender_id": 9490,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Elliptic curve algorithms",
            "submessages": [],
            "timestamp": 1475619594,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/74df5731ba535a4fdb258101a3d49877?d=identicon&version=1",
            "client": "website",
            "content": "<p>Interesting, I tried to search streams for math and nothing came up. I may have just been searching my subscribed streams though. Seems like this is probably better for my chances of getting a response.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 101856213,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "jameshkatz@gmail.com",
            "sender_full_name": "James Katz (S2'16)",
            "sender_id": 9509,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Elliptic curve algorithms",
            "submessages": [],
            "timestamp": 1475619676,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/2b3883a91e0e0a59f3998bcc07ca66d2e9e760a6?x=x&version=1",
            "client": "website",
            "content": "<p>Yeah, I just discovered that there are streams other than the default subscriptions. When searching for a stream, it really should include results from the full list. I can't imagine there's much activity in the other streams, given their un-discoverablity. </p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 101861943,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "platt.nicholas@gmail.com",
            "sender_full_name": "Nick Platt (F1'16)",
            "sender_id": 100031,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Elliptic curve algorithms",
            "submessages": [],
            "timestamp": 1475631896,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/4b6aae6cae274fb83b0d155f0255298c2d3b22b7?x=x&version=2",
            "client": "website",
            "content": "<p>in the Zulip stream there's a thread about a feature wishlist. You should post there (I agree btw)</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 101862166,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "fundirap@gmail.com",
            "sender_full_name": "Panashe Machinda Fundira (he) (S1'16)",
            "sender_id": 9339,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Elliptic curve algorithms",
            "submessages": [],
            "timestamp": 1475632318,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/bb7f1991f31f7d940da112842cec3471a8459232?x=x&version=1",
            "client": "website",
            "content": "<p>If you're still having problems, I'm happy to  talk through problems as a sounding board. And come to think about it, <span class=\"user-mention\" data-user-email=\"aheyman11@gmail.com\">@Andrea Heyman (F1'16)</span> is a math phd and could likely help too.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 101881358,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "alinen@savvysine.com",
            "sender_full_name": "Aline Normoyle (F1'16)",
            "sender_id": 100030,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Elliptic curve algorithms",
            "submessages": [],
            "timestamp": 1475678218,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/e20b1f29d6f8b9d967d14737197775a086a2214f?x=x&version=1",
            "client": "website",
            "content": "<p>Hey everyone!  I'm having some troubles with the split inversion counting algorithm.  Anyone want to pair on it?</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 101932065,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "jonsandersss@gmail.com",
            "sender_full_name": "Jonathan Sanders (he) (F2'16)",
            "sender_id": 100207,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Stanford Algorithms course",
            "submessages": [],
            "timestamp": 1475781822,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/e20b1f29d6f8b9d967d14737197775a086a2214f?x=x&version=1",
            "client": "website",
            "content": "<p>Oh, I guess we are meeting tomorrow at 11:00, so I'll wait till then :)</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 101932467,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "jonsandersss@gmail.com",
            "sender_full_name": "Jonathan Sanders (he) (F2'16)",
            "sender_id": 100207,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Stanford Algorithms course",
            "submessages": [],
            "timestamp": 1475782531,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/2b3883a91e0e0a59f3998bcc07ca66d2e9e760a6?x=x&version=1",
            "client": "website",
            "content": "<p>If you're referring to \"Algorithms course checkins\", that's a meeting from my batch. We're not meeting anymore since we finished part 1 of the course and some of the members aren't in the space any longer. (Miss you <span class=\"user-mention\" data-user-email=\"sarah.anne.friend@gmail.com\">@Sarah Friend (S2'16)</span> <span class=\"user-mention\" data-user-email=\"aissam.belhachmi@gmail.com\">@Aissam Belhachmi</span>!)</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 101933861,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "platt.nicholas@gmail.com",
            "sender_full_name": "Nick Platt (F1'16)",
            "sender_id": 100031,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Stanford Algorithms course",
            "submessages": [],
            "timestamp": 1475784518,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/2b3883a91e0e0a59f3998bcc07ca66d2e9e760a6?x=x&version=1",
            "client": "website",
            "content": "<p>(I've deleted the event now)</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 101933874,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "platt.nicholas@gmail.com",
            "sender_full_name": "Nick Platt (F1'16)",
            "sender_id": 100031,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Stanford Algorithms course",
            "submessages": [],
            "timestamp": 1475784553,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/2b3883a91e0e0a59f3998bcc07ca66d2e9e760a6?x=x&version=1",
            "client": "website",
            "content": "<p>I actually didn't finish that programming assignment. I think <span class=\"user-mention\" data-user-email=\"sranso@gmail.com\">@Sarah Weiss Ransohoff (F1'16)</span> did though?</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 101933955,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "platt.nicholas@gmail.com",
            "sender_full_name": "Nick Platt (F1'16)",
            "sender_id": 100031,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Stanford Algorithms course",
            "submessages": [],
            "timestamp": 1475784651,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/2b942c5d81780d60e790c1657d6e9dbc?d=identicon&version=1",
            "client": "website",
            "content": "<p>merr... idk if i did.. i could attempt to give it a go with you tmw tho?</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 101936353,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "sranso@gmail.com",
            "sender_full_name": "Sarah Weiss Ransohoff (F1'16)",
            "sender_id": 100027,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Stanford Algorithms course",
            "submessages": [],
            "timestamp": 1475789086,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/e20b1f29d6f8b9d967d14737197775a086a2214f?x=x&version=1",
            "client": "website",
            "content": "<p><span class=\"user-mention\" data-user-email=\"brian.kihoon.lee@gmail.com\">@Brian Lee (F1'16)</span>  already fixed my issue :)</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 101936449,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "jonsandersss@gmail.com",
            "sender_full_name": "Jonathan Sanders (he) (F2'16)",
            "sender_id": 100207,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Stanford Algorithms course",
            "submessages": [],
            "timestamp": 1475789263,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/2b942c5d81780d60e790c1657d6e9dbc?d=identicon&version=1",
            "client": "website",
            "content": "<p>he's a star</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 101936506,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "sranso@gmail.com",
            "sender_full_name": "Sarah Weiss Ransohoff (F1'16)",
            "sender_id": 100027,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Stanford Algorithms course",
            "submessages": [],
            "timestamp": 1475789368,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/dbbeeb0789c1e1195ddc9c35ec72f56e?d=identicon&version=1",
            "client": "website",
            "content": "<p>So, people who are currently enrolled in the course... Anyone want to do (virtual) code review for the first programming assignment? I got the answer, but I'm not sure if my algorithm is correct. It's currently running in 15 seconds - is that bad? It seems bad. It's in Python. <span class=\"user-mention\" data-user-email=\"jonsandersss@gmail.com\">@Jonathan Sanders (F2'16)</span> what is your runtime, if I may ask?</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 101976871,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "jessetherappaport@gmail.com",
            "sender_full_name": "Jesse Rappaport (S2'16)",
            "sender_id": 9498,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Stanford Algorithms course",
            "submessages": [],
            "timestamp": 1475878765,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/dbbeeb0789c1e1195ddc9c35ec72f56e?d=identicon&version=1",
            "client": "website",
            "content": "<p>Yeah, I think it's bad. Based on the forums it should take like 1 second, I think.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 101976974,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "jessetherappaport@gmail.com",
            "sender_full_name": "Jesse Rappaport (S2'16)",
            "sender_id": 9498,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Stanford Algorithms course",
            "submessages": [],
            "timestamp": 1475878957,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/e20b1f29d6f8b9d967d14737197775a086a2214f?x=x&version=1",
            "client": "website",
            "content": "<p><span class=\"user-mention\" data-user-email=\"jessetherappaport@gmail.com\">@Jesse Rappaport (S2'16)</span> , something is probably off.  Mine runs in around 2-3 seconds.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 101977914,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "jonsandersss@gmail.com",
            "sender_full_name": "Jonathan Sanders (he) (F2'16)",
            "sender_id": 100207,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Stanford Algorithms course",
            "submessages": [],
            "timestamp": 1475881018,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/e20b1f29d6f8b9d967d14737197775a086a2214f?x=x&version=1",
            "client": "website",
            "content": "<p>Mine is also in python, so I'd like to compare!</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 101977930,
            "is_me_message": false,
            "last_edit_timestamp": 1475881069,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "jonsandersss@gmail.com",
            "sender_full_name": "Jonathan Sanders (he) (F2'16)",
            "sender_id": 100207,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Stanford Algorithms course",
            "submessages": [],
            "timestamp": 1475881051,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/dbbeeb0789c1e1195ddc9c35ec72f56e?d=identicon&version=1",
            "client": "website",
            "content": "<p>Yeah I'm trying to diagnose it at the moment. It looks like my MergeSort algorithm is running in O(n^2)</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 101978752,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "jessetherappaport@gmail.com",
            "sender_full_name": "Jesse Rappaport (S2'16)",
            "sender_id": 9498,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Stanford Algorithms course",
            "submessages": [],
            "timestamp": 1475882915,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/dbbeeb0789c1e1195ddc9c35ec72f56e?d=identicon&version=1",
            "client": "website",
            "content": "<p>OK I got the solution down to about 1.4 seconds</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 101980988,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "jessetherappaport@gmail.com",
            "sender_full_name": "Jesse Rappaport (S2'16)",
            "sender_id": 9498,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Stanford Algorithms course",
            "submessages": [],
            "timestamp": 1475888165,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/dbbeeb0789c1e1195ddc9c35ec72f56e?d=identicon&version=1",
            "client": "website",
            "content": "<p><a href=\"https://gist.github.com/JesseRap/3c7250c7ac5b37896db76ed9f50edead\" target=\"_blank\" title=\"https://gist.github.com/JesseRap/3c7250c7ac5b37896db76ed9f50edead\">https://gist.github.com/JesseRap/3c7250c7ac5b37896db76ed9f50edead</a></p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 101980989,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "jessetherappaport@gmail.com",
            "sender_full_name": "Jesse Rappaport (S2'16)",
            "sender_id": 9498,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Stanford Algorithms course",
            "submessages": [],
            "timestamp": 1475888170,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/4b6aae6cae274fb83b0d155f0255298c2d3b22b7?x=x&version=2",
            "client": "website",
            "content": "<p>I'm not a pythonista, nor am I taking the course, but is it a good idea to use a global variable? I don't think you need one.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 102000102,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "fundirap@gmail.com",
            "sender_full_name": "Panashe Machinda Fundira (he) (S1'16)",
            "sender_id": 9339,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Stanford Algorithms course",
            "submessages": [],
            "timestamp": 1475940866,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/28427e9335cecebc2d8cadc90c1bd46516bd589f?x=x&version=3",
            "client": "website",
            "content": "<p>HEART</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 102000612,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "darthmincho@gmail.com",
            "sender_full_name": "Carlos Rey (SP2'15)",
            "sender_id": 7875,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Stanford Algorithms course",
            "submessages": [],
            "timestamp": 1475942259,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/24c83c922884d915db7dbcd14e6ec628c06f6efa?x=x&version=1",
            "client": "website",
            "content": "<p><span class=\"user-mention\" data-user-email=\"fundirap@gmail.com\">@Panashe Machinda Fundira (S1'16)</span> yes, the <code>global</code> keyword is generally considered a smell in Python</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 102002631,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "andrew@nothing-to-say.org",
            "sender_full_name": "Andrew Yoon (he) (F2'16)",
            "sender_id": 100202,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Stanford Algorithms course",
            "submessages": [],
            "timestamp": 1475947553,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/85b7bffdc731ce90a89c323fb362a8be0012652e?x=x&version=2",
            "client": "website",
            "content": "<p><img alt=\":cry:\" class=\"emoji\" src=\"/static/third/gemoji/images/emoji/cry.png\" title=\":cry:\"> <span class=\"user-mention\" data-user-email=\"platt.nicholas@gmail.com\">@Nick Platt (F1'16)</span> <span class=\"user-mention\" data-user-email=\"aissam.belhachmi@gmail.com\">@Aissam Belhachmi</span> I'm trying to get an algorithms crew together to finish this class and do part two - or to do the Mathematics for Computer Science class Roughgarden keeps namedropping, but still in the early stages.  Toronto pals got a lot to live up to! </p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 102012052,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "sarah.anne.friend@gmail.com",
            "sender_full_name": "Sarah Friend (she) (S2'16)",
            "sender_id": 9500,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Stanford Algorithms course",
            "submessages": [],
            "timestamp": 1475971723,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/dbbeeb0789c1e1195ddc9c35ec72f56e?d=identicon&version=1",
            "client": "website",
            "content": "<p><span class=\"user-mention\" data-user-email=\"fundirap@gmail.com\">@Panashe Machinda Fundira (S1'16)</span> yeah OK you caught me. :) I thought that was non-optimal but then I had just spent a few hours graphing performance time and I was like meh</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 102015683,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "jessetherappaport@gmail.com",
            "sender_full_name": "Jesse Rappaport (S2'16)",
            "sender_id": 9498,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Stanford Algorithms course",
            "submessages": [],
            "timestamp": 1475981473,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/4b6aae6cae274fb83b0d155f0255298c2d3b22b7?x=x&version=2",
            "client": "website",
            "content": "<p>no worries <img alt=\":smile:\" class=\"emoji\" src=\"/static/third/gemoji/images/emoji/smile.png\" title=\":smile:\"> I wonder if there's a &lt; O(n^2) running time, O(1) (additional) space, solution that doesn't modify the array for counting the number of inversions.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 102034593,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "fundirap@gmail.com",
            "sender_full_name": "Panashe Machinda Fundira (he) (S1'16)",
            "sender_id": 9339,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Stanford Algorithms course",
            "submessages": [],
            "timestamp": 1476034381,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/08dcfe30cf7f6b2fadc908e814a6472fd38b4a38?x=x&version=3",
            "client": "website",
            "content": "<p><span class=\"user-mention\" data-user-email=\"sarah.anne.friend@gmail.com\">@Sarah Friend (S2'16)</span> I'm still on week 5 though,  haven't done much progress since I got back from RC <img alt=\":loudly_crying_face:\" class=\"emoji\" src=\"/static/third/gemoji/images/emoji/loudly_crying_face.png\" title=\":loudly_crying_face:\"> </p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 102038862,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "aissam.belhachmi@gmail.com",
            "sender_full_name": "Aissam Belhachmi (he) (F1'16)",
            "sender_id": 100040,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Stanford Algorithms course",
            "submessages": [],
            "timestamp": 1476045506,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/85b7bffdc731ce90a89c323fb362a8be0012652e?x=x&version=2",
            "client": "website",
            "content": "<p>Me neither <img alt=\":cry:\" class=\"emoji\" src=\"/static/third/gemoji/images/emoji/cry.png\" title=\":cry:\"> Moving is a lot of work!</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 102048980,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "sarah.anne.friend@gmail.com",
            "sender_full_name": "Sarah Friend (she) (S2'16)",
            "sender_id": 9500,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Stanford Algorithms course",
            "submessages": [],
            "timestamp": 1476066991,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/d2d1f3e361a479849026fe298e091c50e1a4b20a?x=x&version=5",
            "client": "website",
            "content": "<p>I got it down to <a href=\"https://gist.github.com/trueskawka/a4eab263a12cbec381ef8412b56b2d9a\" target=\"_blank\" title=\"https://gist.github.com/trueskawka/a4eab263a12cbec381ef8412b56b2d9a\">1.5-2 seconds</a> by playing a lot with the profiler - had a lot of len() calls at first which took around 35 seconds to run</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 102050767,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "rc@alicja.dev",
            "sender_full_name": "Alicja Karolina Raszkowska (she/they) (W2'18)",
            "sender_id": 100049,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Stanford Algorithms course",
            "submessages": [],
            "timestamp": 1476071332,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/f54e2a1936a1558e6d5199ca831ce3a4?d=identicon&version=1",
            "client": "website",
            "content": "<p>Thanks! I just got a copy of it, and about to start perusing ;-)</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 102092108,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "seabjackson@hotmail.com",
            "sender_full_name": "Seab Capeyan Jackson (SP1'16)",
            "sender_id": 9098,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "An algo book I can't recommend enough!",
            "submessages": [],
            "timestamp": 1476161208,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/c2a1e36ca5742482a9581b5e1e753979?d=identicon&version=1",
            "client": "website",
            "content": "<p>I presented <a href=\"https://github.com/gudnm/codekatas\" target=\"_blank\" title=\"https://github.com/gudnm/codekatas\">my take on code katas</a> a few weeks ago and have been adding new ones since. I also added solutions and would like to get someone to look at them (I encourage you to try and solve them before you look at solutions, though). Opinions are welcome! There are different ideas on what code katas should be, mine are exercises in algorithms and data structures. They are in Python, and use a jupyter notebook. Tests are in no way extensive, their main premise is to help communicate the problem. Thanks!</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 102105172,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "dfobox@gmail.com",
            "sender_full_name": "Ivan Vashchenko (F1'16)",
            "sender_id": 100046,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Code Katas",
            "submessages": [],
            "timestamp": 1476194092,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/d84e3106fff0d257cc5a95ca9ea44405?d=identicon&version=1",
            "client": "website",
            "content": "<p>Quite a while ago a Recurser gave a short presentation on a data structure which, as I recall, is like a trie of strings with shared substructure. I might be missing it up, but I think hey was playing with compression (I recall a reference to the Weissman as a real metric that he used at some point, but that might have been a different presentation). Anyway, I'm trying to remember what the data structure is called. Anyone?</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 102236436,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "george.w.king@gmail.com",
            "sender_full_name": "George King (he) (S'13)",
            "sender_id": 2153,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Trying to remember an alumni presentation",
            "submessages": [],
            "timestamp": 1476471175,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/3f4785d95e43ecfb2f20d49e6ec824dc?d=identicon&version=1",
            "client": "website",
            "content": "<p>I vaguely recall this too, and I have no idea who it was, so I'll ping <span class=\"user-mention\" data-user-email=\"michaelmalis2@gmail.com\">@Michael Malis (S1'15)</span>, since he might know what this data structure might be :)</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 102236721,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "nick@recurse.com",
            "sender_full_name": "Nick Bergson-Shilcock (he)",
            "sender_id": 811,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Trying to remember an alumni presentation",
            "submessages": [],
            "timestamp": 1476471679,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/74df5731ba535a4fdb258101a3d49877?d=identicon&version=1",
            "client": "website",
            "content": "<p>Huffman coding? <a href=\"https://en.wikipedia.org/wiki/Huffman_coding\" target=\"_blank\" title=\"https://en.wikipedia.org/wiki/Huffman_coding\">https://en.wikipedia.org/wiki/Huffman_coding</a></p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 102238878,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "jameshkatz@gmail.com",
            "sender_full_name": "James Katz (S2'16)",
            "sender_id": 9509,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Trying to remember an alumni presentation",
            "submessages": [],
            "timestamp": 1476475671,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/76eabfebc63c7549301ce6e9508ac82f?d=identicon&version=1",
            "client": "website",
            "content": "<p><span class=\"user-mention\" data-user-email=\"george.w.king@gmail.com\">@George King (S'14)</span> <a href=\"https://en.wikipedia.org/wiki/Finger_tree\" target=\"_blank\" title=\"https://en.wikipedia.org/wiki/Finger_tree\">Finger trees</a>?</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 102239773,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "harold@x.st",
            "sender_full_name": "Harold Cooper (he) (F2'16)",
            "sender_id": 9490,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Trying to remember an alumni presentation",
            "submessages": [],
            "timestamp": 1476477372,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/21b9cce736cbbe8e0761bbb33863c7d3112d0136?x=x&version=2",
            "client": "website",
            "content": "<p>Suffix tree?</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 102240279,
            "is_me_message": false,
            "last_edit_timestamp": 1476478247,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "michaelmalis2@gmail.com",
            "sender_full_name": "Michael Malis (SP2'19)",
            "sender_id": 8099,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Trying to remember an alumni presentation",
            "submessages": [],
            "timestamp": 1476478237,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/21b9cce736cbbe8e0761bbb33863c7d3112d0136?x=x&version=2",
            "client": "website",
            "content": "<p><a href=\"https://en.wikipedia.org/wiki/Suffix_tree\" target=\"_blank\" title=\"https://en.wikipedia.org/wiki/Suffix_tree\">https://en.wikipedia.org/wiki/Suffix_tree</a></p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 102240286,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "michaelmalis2@gmail.com",
            "sender_full_name": "Michael Malis (SP2'19)",
            "sender_id": 8099,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Trying to remember an alumni presentation",
            "submessages": [],
            "timestamp": 1476478266,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/21b9cce736cbbe8e0761bbb33863c7d3112d0136?x=x&version=2",
            "client": "website",
            "content": "<p>The naive way to construct one is O(n^2), but if you share substructure, it becomes O(n).</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 102240295,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "michaelmalis2@gmail.com",
            "sender_full_name": "Michael Malis (SP2'19)",
            "sender_id": 8099,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Trying to remember an alumni presentation",
            "submessages": [],
            "timestamp": 1476478309,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/21b9cce736cbbe8e0761bbb33863c7d3112d0136?x=x&version=2",
            "client": "website",
            "content": "<p>A suffix tree is literally a trie of all of the suffixes of a string. You can use it to locate an arbitrary substring in O(size of search string).</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 102240357,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "michaelmalis2@gmail.com",
            "sender_full_name": "Michael Malis (SP2'19)",
            "sender_id": 8099,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Trying to remember an alumni presentation",
            "submessages": [],
            "timestamp": 1476478408,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/1fdd84a57c15f7ecfdded3d0c32019ad32f8af5d?x=x&version=5",
            "client": "website",
            "content": "<p><span class=\"user-mention\" data-user-email=\"daniel.puttick@gmail.com\">@Dan Puttick (S2'16)</span> was this the data structure you were looking at?</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 102256296,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "arpith@feedreader.co",
            "sender_full_name": "Arpith Siromoney (he) (m6'20)",
            "sender_id": 9503,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Trying to remember an alumni presentation",
            "submessages": [],
            "timestamp": 1476517252,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/608df5e85758e4595345c518c8bdffb92777e943?x=x&version=1",
            "client": "website",
            "content": "<p>Was trying to merge n number of sorted lists (can be varying lengths) and kept getting tripped up...has anyone solved this or have ideas about how to do so in an elegant manner?</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 102375722,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "alenak@gmail.com",
            "sender_full_name": "Alena Kuczynski (S1'16)",
            "sender_id": 9332,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "merging n sorted lists",
            "submessages": [],
            "timestamp": 1476809328,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/8ef0cc9607b07f392f70560a43dbbb2d0efd6328?x=x&version=1",
            "client": "website",
            "content": "<p>you could keep the lists in a heap, so that picking off the next item involves a heap pop and put operation? </p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 102375848,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "brian.kihoon.lee@gmail.com",
            "sender_full_name": "Brian Lee (F1'16)",
            "sender_id": 100043,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "merging n sorted lists",
            "submessages": [],
            "timestamp": 1476809612,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/608df5e85758e4595345c518c8bdffb92777e943?x=x&version=1",
            "client": "website",
            "content": "<p><span class=\"user-mention\" data-user-email=\"brian.kihoon.lee@gmail.com\">@Brian Lee (F1'16)</span> cool -- i'm not well versed in heaps but i'll do some reading and try to implement this, thanks! :)</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 102375922,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "alenak@gmail.com",
            "sender_full_name": "Alena Kuczynski (S1'16)",
            "sender_id": 9332,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "merging n sorted lists",
            "submessages": [],
            "timestamp": 1476809753,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/74df5731ba535a4fdb258101a3d49877?d=identicon&version=1",
            "client": "website",
            "content": "<p>If you're using python and plan on using the heapq library rather than implementing your own, this discussion on stackoverflow may be useful - <a href=\"http://stackoverflow.com/questions/7803121/in-python-heapq-heapify-doesnt-take-cmp-or-key-functions-as-arguments-like-sor\" target=\"_blank\" title=\"http://stackoverflow.com/questions/7803121/in-python-heapq-heapify-doesnt-take-cmp-or-key-functions-as-arguments-like-sor\">http://stackoverflow.com/questions/7803121/in-python-heapq-heapify-doesnt-take-cmp-or-key-functions-as-arguments-like-sor</a></p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 102376229,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "jameshkatz@gmail.com",
            "sender_full_name": "James Katz (S2'16)",
            "sender_id": 9509,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "merging n sorted lists",
            "submessages": [],
            "timestamp": 1476810275,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/c7ecfe9f2764516cd0769548de80a3edb20d81cd?x=x&version=2",
            "client": "website",
            "content": "<p>how big is N? If N is small, the heap won't provide much performance gain over iterating over a list of sorted arrays (is that what you tried)? <span class=\"user-mention\" data-user-email=\"alenak@gmail.com\">@Alena Kuczynski (S1'16)</span> what are you getting tripped up by, and what did you try?</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 102376305,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "paul.biggar@gmail.com",
            "sender_full_name": "Paul Biggar (he) (F1'16)",
            "sender_id": 100048,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "merging n sorted lists",
            "submessages": [],
            "timestamp": 1476810418,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/608df5e85758e4595345c518c8bdffb92777e943?x=x&version=1",
            "client": "website",
            "content": "<p>thanks <span class=\"user-mention\" data-user-email=\"jameshkatz@gmail.com\">@James Katz (S2'16)</span> ! <span class=\"user-mention\" data-user-email=\"paul.biggar@gmail.com\">@Paul Biggar (F1'16)</span> --i was trying to iterate through the sorted arrays, compare all the correct elements, but kept got tripped up on pointers and when to terminate this comparison loop -- i think i was on the right track but it was getting messy &amp; I didn't know if there was a better way...</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 102376681,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "alenak@gmail.com",
            "sender_full_name": "Alena Kuczynski (S1'16)",
            "sender_id": 9332,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "merging n sorted lists",
            "submessages": [],
            "timestamp": 1476811146,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/74df5731ba535a4fdb258101a3d49877?d=identicon&version=1",
            "client": "website",
            "content": "<p>in python you don't actually have to iterate through the lists - if it's a list of lists, you can do <code>min( list_of_lists, key = lambda x: x[ 0 ] )</code></p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 102376728,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "jameshkatz@gmail.com",
            "sender_full_name": "James Katz (S2'16)",
            "sender_id": 9509,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "merging n sorted lists",
            "submessages": [],
            "timestamp": 1476811268,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/c7ecfe9f2764516cd0769548de80a3edb20d81cd?x=x&version=2",
            "client": "website",
            "content": "<p><span class=\"user-mention\" data-user-email=\"jameshkatz@gmail.com\">@James Katz (S2'16)</span> That's only if you pop the lists, which will change the complexity.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 102376736,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "paul.biggar@gmail.com",
            "sender_full_name": "Paul Biggar (he) (F1'16)",
            "sender_id": 100048,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "merging n sorted lists",
            "submessages": [],
            "timestamp": 1476811320,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/74df5731ba535a4fdb258101a3d49877?d=identicon&version=1",
            "client": "website",
            "content": "<p>which could make it cleaner. That will give an error when one of the lists is empty though, so you'll have to account for what should happen when you pop off the final element in one of the lists</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 102376737,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "jameshkatz@gmail.com",
            "sender_full_name": "James Katz (S2'16)",
            "sender_id": 9509,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "merging n sorted lists",
            "submessages": [],
            "timestamp": 1476811320,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/74df5731ba535a4fdb258101a3d49877?d=identicon&version=1",
            "client": "website",
            "content": "<p><span class=\"user-mention\" data-user-email=\"paul.biggar@gmail.com\">@Paul Biggar (F1'16)</span> how would you do it? keep a pointer to the current index in each list?</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 102376789,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "jameshkatz@gmail.com",
            "sender_full_name": "James Katz (S2'16)",
            "sender_id": 9509,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "merging n sorted lists",
            "submessages": [],
            "timestamp": 1476811373,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/c7ecfe9f2764516cd0769548de80a3edb20d81cd?x=x&version=2",
            "client": "website",
            "content": "<p><span class=\"user-mention\" data-user-email=\"alenak@gmail.com\">@Alena Kuczynski (S1'16)</span> Perhaps you could create sometihng with a list interface which keeps the \"pointer\" internally, and when you \"pop\" it in increments the iterator. That way you get a nice clean interface without manually managing all the pointers</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 102376793,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "paul.biggar@gmail.com",
            "sender_full_name": "Paul Biggar (he) (F1'16)",
            "sender_id": 100048,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "merging n sorted lists",
            "submessages": [],
            "timestamp": 1476811382,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/608df5e85758e4595345c518c8bdffb92777e943?x=x&version=1",
            "client": "website",
            "content": "<p><span class=\"user-mention\" data-user-email=\"jameshkatz@gmail.com\">@James Katz (S2'16)</span> yeah i was looking for a way to do it without modifying the original list of lists</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 102376798,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "alenak@gmail.com",
            "sender_full_name": "Alena Kuczynski (S1'16)",
            "sender_id": 9332,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "merging n sorted lists",
            "submessages": [],
            "timestamp": 1476811420,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/c7ecfe9f2764516cd0769548de80a3edb20d81cd?x=x&version=2",
            "client": "website",
            "content": "<p><span class=\"user-mention\" data-user-email=\"alenak@gmail.com\">@Alena Kuczynski (S1'16)</span> well, a class that points to the list, and tracks the pointer internally would probably be an easy-to-use hard-to-fuck-up interface.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 102376849,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "paul.biggar@gmail.com",
            "sender_full_name": "Paul Biggar (he) (F1'16)",
            "sender_id": 100048,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "merging n sorted lists",
            "submessages": [],
            "timestamp": 1476811483,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/608df5e85758e4595345c518c8bdffb92777e943?x=x&version=1",
            "client": "website",
            "content": "<p><span class=\"user-mention\" data-user-email=\"paul.biggar@gmail.com\">@Paul Biggar (F1'16)</span> interesting...could you elaborate a little bit on this internal pointer tracking? i was trying to manage all the pointers manually and yeah it definitely got confusing and error-prone...</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 102376862,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "alenak@gmail.com",
            "sender_full_name": "Alena Kuczynski (S1'16)",
            "sender_id": 9332,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "merging n sorted lists",
            "submessages": [],
            "timestamp": 1476811536,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/74df5731ba535a4fdb258101a3d49877?d=identicon&version=1",
            "client": "website",
            "content": "<p>kind of hack-ish but you could store a list of tuples like <code>[ ( index1, list1 ), ( index2, list2 ), ... , ( indexn, listn ) ]</code> and get the relevant list and index at each iteration using <code>index, list = min( list_of_tuples, key = lambda x: x[ 1 ][ x[ 0 ] ] )</code></p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 102376908,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "jameshkatz@gmail.com",
            "sender_full_name": "James Katz (S2'16)",
            "sender_id": 9509,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "merging n sorted lists",
            "submessages": [],
            "timestamp": 1476811594,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/74df5731ba535a4fdb258101a3d49877?d=identicon&version=1",
            "client": "website",
            "content": "<p>Actually they'd have to be lists, you need to update the index at each step and tuples are immutable. But you get the idea</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 102376919,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "jameshkatz@gmail.com",
            "sender_full_name": "James Katz (S2'16)",
            "sender_id": 9509,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "merging n sorted lists",
            "submessages": [],
            "timestamp": 1476811646,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/c7ecfe9f2764516cd0769548de80a3edb20d81cd?x=x&version=2",
            "client": "website",
            "content": "<p><span class=\"user-mention\" data-user-email=\"alenak@gmail.com\">@Alena Kuczynski (S1'16)</span> </p>\n<div class=\"codehilite\"><pre>class MyList:\n  def __init__(list):\n     this.list = list\n     this.cursor = 0\n\n  def pop():\n     if this.cursor &gt; len(this.list): return Null\n     else:\n        this.cursor++\n        return this.list[this.cursor-1]\n</pre></div>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 102377062,
            "is_me_message": false,
            "last_edit_timestamp": 1476811905,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "paul.biggar@gmail.com",
            "sender_full_name": "Paul Biggar (he) (F1'16)",
            "sender_id": 100048,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "merging n sorted lists",
            "submessages": [],
            "timestamp": 1476811862,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/608df5e85758e4595345c518c8bdffb92777e943?x=x&version=1",
            "client": "website",
            "content": "<p><span class=\"user-mention\" data-user-email=\"jameshkatz@gmail.com\">@James Katz (S2'16)</span> just to clarify - for this list of lists, would the names of the lists actually have their list # in them? </p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 102377130,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "alenak@gmail.com",
            "sender_full_name": "Alena Kuczynski (S1'16)",
            "sender_id": 9332,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "merging n sorted lists",
            "submessages": [],
            "timestamp": 1476811969,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/608df5e85758e4595345c518c8bdffb92777e943?x=x&version=1",
            "client": "website",
            "content": "<p><span class=\"user-mention\" data-user-email=\"paul.biggar@gmail.com\">@Paul Biggar (F1'16)</span> cool, so you'd create a list object for each list in the input list, and then iterate through all lists and call .pop() on each one, right?</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 102377153,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "alenak@gmail.com",
            "sender_full_name": "Alena Kuczynski (S1'16)",
            "sender_id": 9332,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "merging n sorted lists",
            "submessages": [],
            "timestamp": 1476812040,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/74df5731ba535a4fdb258101a3d49877?d=identicon&version=1",
            "client": "website",
            "content": "<p><span class=\"user-mention\" data-user-email=\"alenak@gmail.com\">@Alena Kuczynski (S1'16)</span>  No I'd imagine you're getting input in a list of lists. I just wrote it like that for clarity (fail!!). You would just have to construct the tuple/list structure I wrote using whatever format you get the input in. So if you're getting a list of lists, you could do something like <code>initial_index_tracker = [ [ 0, list ] for list in list_of_lists ]</code></p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 102377268,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "jameshkatz@gmail.com",
            "sender_full_name": "James Katz (S2'16)",
            "sender_id": 9509,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "merging n sorted lists",
            "submessages": [],
            "timestamp": 1476812174,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/c7ecfe9f2764516cd0769548de80a3edb20d81cd?x=x&version=2",
            "client": "website",
            "content": "<p>right, but I'm rethinking this approach. It's not cheap. But I guess it's a good step to getting it working. I like the heap approach a lot, having been thinking about it a bit. The next item is likely in the same list as the current item.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 102377274,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "paul.biggar@gmail.com",
            "sender_full_name": "Paul Biggar (he) (F1'16)",
            "sender_id": 100048,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "merging n sorted lists",
            "submessages": [],
            "timestamp": 1476812200,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/74df5731ba535a4fdb258101a3d49877?d=identicon&version=1",
            "client": "website",
            "content": "<p>Because you're initializing each index to 0 at the start</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 102377275,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "jameshkatz@gmail.com",
            "sender_full_name": "James Katz (S2'16)",
            "sender_id": 9509,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "merging n sorted lists",
            "submessages": [],
            "timestamp": 1476812200,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/74df5731ba535a4fdb258101a3d49877?d=identicon&version=1",
            "client": "website",
            "content": "<p><span class=\"user-mention\" data-user-email=\"paul.biggar@gmail.com\">@Paul Biggar (F1'16)</span>  Your approach actually ends up being quite elegant if you override the comparison operator</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 102377287,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "jameshkatz@gmail.com",
            "sender_full_name": "James Katz (S2'16)",
            "sender_id": 9509,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "merging n sorted lists",
            "submessages": [],
            "timestamp": 1476812231,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/608df5e85758e4595345c518c8bdffb92777e943?x=x&version=1",
            "client": "website",
            "content": "<p><span class=\"user-mention\" data-user-email=\"jameshkatz@gmail.com\">@James Katz (S2'16)</span> ah I see. i have wondered a few times if it's possible to name variables based on a variable, like for i in range(len(input)): list_i = list, or something like that </p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 102377298,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "alenak@gmail.com",
            "sender_full_name": "Alena Kuczynski (S1'16)",
            "sender_id": 9332,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "merging n sorted lists",
            "submessages": [],
            "timestamp": 1476812259,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/c7ecfe9f2764516cd0769548de80a3edb20d81cd?x=x&version=2",
            "client": "website",
            "content": "<p><span class=\"user-mention\" data-user-email=\"jameshkatz@gmail.com\">@James Katz (S2'16)</span> meh: lots of indirection is going to make this super slow...</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 102377301,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "paul.biggar@gmail.com",
            "sender_full_name": "Paul Biggar (he) (F1'16)",
            "sender_id": 100048,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "merging n sorted lists",
            "submessages": [],
            "timestamp": 1476812267,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/608df5e85758e4595345c518c8bdffb92777e943?x=x&version=1",
            "client": "website",
            "content": "<p><span class=\"user-mention\" data-user-email=\"jameshkatz@gmail.com\">@James Katz (S2'16)</span> wouldn't that copy all of the lists though?</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 102377303,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "alenak@gmail.com",
            "sender_full_name": "Alena Kuczynski (S1'16)",
            "sender_id": 9332,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "merging n sorted lists",
            "submessages": [],
            "timestamp": 1476812271,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/608df5e85758e4595345c518c8bdffb92777e943?x=x&version=1",
            "client": "website",
            "content": "<p><span class=\"user-mention\" data-user-email=\"paul.biggar@gmail.com\">@Paul Biggar (F1'16)</span> you mean not cheap because you have to iterate through n number of elements each time you do a comparison to find the minimum in all the lists?</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 102377362,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "alenak@gmail.com",
            "sender_full_name": "Alena Kuczynski (S1'16)",
            "sender_id": 9332,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "merging n sorted lists",
            "submessages": [],
            "timestamp": 1476812360,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/74df5731ba535a4fdb258101a3d49877?d=identicon&version=1",
            "client": "website",
            "content": "<p><span class=\"user-mention\" data-user-email=\"alenak@gmail.com\">@Alena Kuczynski (S1'16)</span>  no, it wouldn't. Python lists are passed by reference</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 102377376,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "jameshkatz@gmail.com",
            "sender_full_name": "James Katz (S2'16)",
            "sender_id": 9509,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "merging n sorted lists",
            "submessages": [],
            "timestamp": 1476812401,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/74df5731ba535a4fdb258101a3d49877?d=identicon&version=1",
            "client": "website",
            "content": "<p><a href=\"/user_uploads/13/pdOTaeD1CmUWuJtC7Qwx9klH/Screen-Shot-2016-10-18-at-1.39.34-PM.png\" target=\"_blank\" title=\"Screen-Shot-2016-10-18-at-1.39.34-PM.png\">Screen-Shot-2016-10-18-at-1.39.34-PM.png</a> </p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/13/pdOTaeD1CmUWuJtC7Qwx9klH/Screen-Shot-2016-10-18-at-1.39.34-PM.png\" target=\"_blank\" title=\"Screen-Shot-2016-10-18-at-1.39.34-PM.png\"><img src=\"/user_uploads/13/pdOTaeD1CmUWuJtC7Qwx9klH/Screen-Shot-2016-10-18-at-1.39.34-PM.png\"></a></div>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 102377417,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "jameshkatz@gmail.com",
            "sender_full_name": "James Katz (S2'16)",
            "sender_id": 9509,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "merging n sorted lists",
            "submessages": [],
            "timestamp": 1476812416,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/608df5e85758e4595345c518c8bdffb92777e943?x=x&version=1",
            "client": "website",
            "content": "<p><span class=\"user-mention\" data-user-email=\"jameshkatz@gmail.com\">@James Katz (S2'16)</span> ah, thanks! does the same thing happen with all mutable types?</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 102377433,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "alenak@gmail.com",
            "sender_full_name": "Alena Kuczynski (S1'16)",
            "sender_id": 9332,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "merging n sorted lists",
            "submessages": [],
            "timestamp": 1476812509,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/74df5731ba535a4fdb258101a3d49877?d=identicon&version=1",
            "client": "website",
            "content": "<p>I think so but I would test it out like I did if you're unsure :D</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 102377475,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "jameshkatz@gmail.com",
            "sender_full_name": "James Katz (S2'16)",
            "sender_id": 9509,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "merging n sorted lists",
            "submessages": [],
            "timestamp": 1476812547,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/8ef0cc9607b07f392f70560a43dbbb2d0efd6328?x=x&version=1",
            "client": "website",
            "content": "<p>same thing happens with immutable AND mutable types; it's just that immutable types are smart enough to always clone themselves when making changes</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 102377481,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "brian.kihoon.lee@gmail.com",
            "sender_full_name": "Brian Lee (F1'16)",
            "sender_id": 100043,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "merging n sorted lists",
            "submessages": [],
            "timestamp": 1476812579,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/8ef0cc9607b07f392f70560a43dbbb2d0efd6328?x=x&version=1",
            "client": "website",
            "content": "<p>if you had a tuple that was a million items long and ou passed it around everywhere, it wouldn't get copied around</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 102377488,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "brian.kihoon.lee@gmail.com",
            "sender_full_name": "Brian Lee (F1'16)",
            "sender_id": 100043,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "merging n sorted lists",
            "submessages": [],
            "timestamp": 1476812596,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/74df5731ba535a4fdb258101a3d49877?d=identicon&version=1",
            "client": "website",
            "content": "<p>For speed comparison, the heap solution will be O( m * log( n ) ) where m is the sum of the lengths of the lists. The iterative approach will be O( m * n ). So basically if m &gt;&gt; n, the iterative approach is probably ok.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 102377537,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "jameshkatz@gmail.com",
            "sender_full_name": "James Katz (S2'16)",
            "sender_id": 9509,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "merging n sorted lists",
            "submessages": [],
            "timestamp": 1476812661,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/8ef0cc9607b07f392f70560a43dbbb2d0efd6328?x=x&version=1",
            "client": "website",
            "content": "<p>not sure that follows, the relevant comparison is log(n) vs n</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 102377573,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "brian.kihoon.lee@gmail.com",
            "sender_full_name": "Brian Lee (F1'16)",
            "sender_id": 100043,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "merging n sorted lists",
            "submessages": [],
            "timestamp": 1476812736,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/c7ecfe9f2764516cd0769548de80a3edb20d81cd?x=x&version=2",
            "client": "website",
            "content": "<p><span class=\"user-mention\" data-user-email=\"brian.kihoon.lee@gmail.com\">@Brian Lee (F1'16)</span> n is the number of lists</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 102377616,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "paul.biggar@gmail.com",
            "sender_full_name": "Paul Biggar (he) (F1'16)",
            "sender_id": 100048,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "merging n sorted lists",
            "submessages": [],
            "timestamp": 1476812780,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/c7ecfe9f2764516cd0769548de80a3edb20d81cd?x=x&version=2",
            "client": "website",
            "content": "<p>I agree with <span class=\"user-mention\" data-user-email=\"jameshkatz@gmail.com\">@James Katz (S2'16)</span>'s complexity numbers</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 102377620,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "paul.biggar@gmail.com",
            "sender_full_name": "Paul Biggar (he) (F1'16)",
            "sender_id": 100048,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "merging n sorted lists",
            "submessages": [],
            "timestamp": 1476812808,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/8ef0cc9607b07f392f70560a43dbbb2d0efd6328?x=x&version=1",
            "client": "website",
            "content": "<p>I agree that some sort of pop/append call will be executed <code>m</code> times; the question is about how quickly we can figure which of the <code>n</code> lists we should pop/append from</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 102377636,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "brian.kihoon.lee@gmail.com",
            "sender_full_name": "Brian Lee (F1'16)",
            "sender_id": 100043,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "merging n sorted lists",
            "submessages": [],
            "timestamp": 1476812848,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/8ef0cc9607b07f392f70560a43dbbb2d0efd6328?x=x&version=1",
            "client": "website",
            "content": "<p>so the question is whether the <code>n</code> lists should be searched linearly or in a fancier format</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 102377642,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "brian.kihoon.lee@gmail.com",
            "sender_full_name": "Brian Lee (F1'16)",
            "sender_id": 100043,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "merging n sorted lists",
            "submessages": [],
            "timestamp": 1476812874,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/c7ecfe9f2764516cd0769548de80a3edb20d81cd?x=x&version=2",
            "client": "website",
            "content": "<p>Right, it all comes down to whether <code>m &gt;&gt; n</code> or not.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 102377690,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "paul.biggar@gmail.com",
            "sender_full_name": "Paul Biggar (he) (F1'16)",
            "sender_id": 100048,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "merging n sorted lists",
            "submessages": [],
            "timestamp": 1476812925,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/74df5731ba535a4fdb258101a3d49877?d=identicon&version=1",
            "client": "website",
            "content": "<p>I think he's saying even if m &gt;&gt; n, if n is still large enough that log( n ) &lt;&lt;&lt; n, doing the heap solution is important</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 102377692,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "jameshkatz@gmail.com",
            "sender_full_name": "James Katz (S2'16)",
            "sender_id": 9509,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "merging n sorted lists",
            "submessages": [],
            "timestamp": 1476812937,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/74df5731ba535a4fdb258101a3d49877?d=identicon&version=1",
            "client": "website",
            "content": "<p>Oh gosh my coffee shop internet is miserable right now</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 102377707,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "jameshkatz@gmail.com",
            "sender_full_name": "James Katz (S2'16)",
            "sender_id": 9509,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "merging n sorted lists",
            "submessages": [],
            "timestamp": 1476812990,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/c7ecfe9f2764516cd0769548de80a3edb20d81cd?x=x&version=2",
            "client": "website",
            "content": "<p>Ah right. that was kinda my point above. The threshold wherre sorting is better than iterating is reached very quickly, like at n==30</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 102377759,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "paul.biggar@gmail.com",
            "sender_full_name": "Paul Biggar (he) (F1'16)",
            "sender_id": 100048,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "merging n sorted lists",
            "submessages": [],
            "timestamp": 1476813016,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/c7ecfe9f2764516cd0769548de80a3edb20d81cd?x=x&version=2",
            "client": "website",
            "content": "<p>also, the more I think about how you'd implement this, the more I think you'd really inrease the simplicity of the algorithm with a heap</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 102377815,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "paul.biggar@gmail.com",
            "sender_full_name": "Paul Biggar (he) (F1'16)",
            "sender_id": 100048,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "merging n sorted lists",
            "submessages": [],
            "timestamp": 1476813098,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/74df5731ba535a4fdb258101a3d49877?d=identicon&version=1",
            "client": "website",
            "content": "<p>I think the my preferred way would be Paul's class solution with 2 member variables - the current index and the list. \"popping\" would return the item at the current index and increment the index as paul described. Then you could override __cmp__ to compare two list objects by checking the items at index1 and index2 and heapq.heapify should just work.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 102378314,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "jameshkatz@gmail.com",
            "sender_full_name": "James Katz (S2'16)",
            "sender_id": 9509,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "merging n sorted lists",
            "submessages": [],
            "timestamp": 1476813838,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/c7ecfe9f2764516cd0769548de80a3edb20d81cd?x=x&version=2",
            "client": "website",
            "content": "<p>The problem is that after you \"pop\" them, you need to do something with them. So you actually need to peek, then pop only the one you take.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 102378452,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "paul.biggar@gmail.com",
            "sender_full_name": "Paul Biggar (he) (F1'16)",
            "sender_id": 100048,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "merging n sorted lists",
            "submessages": [],
            "timestamp": 1476814077,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/74df5731ba535a4fdb258101a3d49877?d=identicon&version=1",
            "client": "website",
            "content": "<p>Well, yes</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 102378579,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "jameshkatz@gmail.com",
            "sender_full_name": "James Katz (S2'16)",
            "sender_id": 9509,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "merging n sorted lists",
            "submessages": [],
            "timestamp": 1476814254,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/74df5731ba535a4fdb258101a3d49877?d=identicon&version=1",
            "client": "website",
            "content": "<p>but as they say, that's an \"exercise best left to the reader\" <img alt=\":smile_cat:\" class=\"emoji\" src=\"/static/third/gemoji/images/emoji/smile_cat.png\" title=\":smile_cat:\"> </p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 102378589,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "jameshkatz@gmail.com",
            "sender_full_name": "James Katz (S2'16)",
            "sender_id": 9509,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "merging n sorted lists",
            "submessages": [],
            "timestamp": 1476814269,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/dc74c778740e37ca0a7ac79ccea98f56?d=identicon&version=1",
            "client": "website",
            "content": "<p>Has anyone tried to implement this? I can't seem to be able to find any articles explaining how to do this, except very theoretical math papers about the ternary goldbach conjecture, which I am not able to delve into at this time</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 102384606,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "jjinking@gmail.com",
            "sender_full_name": "Joseph Kim (F1'16)",
            "sender_id": 100018,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "helfgott's improvement  to the sieve of eratosthenes",
            "submessages": [],
            "timestamp": 1476824186,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/74df5731ba535a4fdb258101a3d49877?d=identicon&version=1",
            "client": "website",
            "content": "<p>I can't find anything online besides the abstracts of the talks he gave on this a couple months ago. He doesn't seem to have published his results yet.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 102385129,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "jameshkatz@gmail.com",
            "sender_full_name": "James Katz (S2'16)",
            "sender_id": 9509,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "helfgott's improvement  to the sieve of eratosthenes",
            "submessages": [],
            "timestamp": 1476825028,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/da27a2081fcf44c802c1806cdb5bb881310dfe7c?x=x&version=5",
            "client": "website",
            "content": "<p>Merging two lists is a \"famous\" step in the merge sort algorithms. Merging N lists could be similar. In the N=2 merge sort case, you keep 2 \"current indices\", compare the two items at the current indices, append the smallest element to the result list and increase the corresponding index.<br>\nA naive generalization of this algorithm for handling N lists would have N indices, compare the N elements and advance the index corresponding to the smallest element. That step would happen basically M times, if M is the size of the longest array. The total cost would thus be O(N * M). But you can do better than that: you're doing N - 1 comparisons at every step, but between two steps, only 1 element in the N compared has changed. It is unnecessary to do N comparisons every time in these conditions, since you only want the min element. Finding min elements efficiently is what heaps are good at: so at the beginning of your algorithm, you create a heap of size N with the first element of each list, and you loop until all the lists are empty (or as an optimization, until you only have one list with elements remaining, which you can copy), and at each step of the loop you: find the min element (and the list to which it belongs), add that min element to the result, increase the index of the corresponding list, and add the element of that new index and the list number to the heap. The resulting algorithm has a running time of O(N log N + M * N * log N), since there is only the initial N log N cost for initializing the heap, and the M * N (the number of elements for all the lists) times log N for getting the minimum from the heap of size N. <br>\nDoing the naive version (doing N comparison at every step) would have a cost of O(M * N^2), since there are M * N elements total, and every time you add an element, you need to do N comparisons before.</p>\n<p>To implement the heap version, you need a heap that allows to keep non key data alongside the key.<br>\nIn the pseudo code I assume the heap takes a tuple where the first element is the key (i. e. what the heap compares on) and the second part of the tuple is just the data (which I use to keep track of the list from which the element came from).</p>\n<div class=\"codehilite\"><pre>var list[N] // the input lists\nvar pointers[N] = { 0,  0, 0 ...}  // N times\nvar heap\nvar res // result list\nfor i from 0 to N - 1 {\n   var tuple = (list[i][0], i)\n   heap.insert(tuple) // insert the first element along with the index\n}\nwhile not heap.empty() {\n  var (elem, list_idx) = heap.findMin()\n  res.append(elem)\n  pointers[list_idx] += 1\n  var new_tuple = (list[pointers[list_idx]], list_idx)\n  heap.insert(new_tuple);\n}\nreturn res\n</pre></div>\n\n\n<p>That is how I would solve the problem off the top of my head.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 102387963,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "ad@lamarque.fr",
            "sender_full_name": "Adrien Lamarque (they/he) (S1'16)",
            "sender_id": 9335,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "merging n sorted lists",
            "submessages": [],
            "timestamp": 1476830184,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/da27a2081fcf44c802c1806cdb5bb881310dfe7c?x=x&version=5",
            "client": "website",
            "content": "<p>(I have not tested my pseudo code nor proven it correct :P)</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 102387974,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "ad@lamarque.fr",
            "sender_full_name": "Adrien Lamarque (they/he) (S1'16)",
            "sender_id": 9335,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "merging n sorted lists",
            "submessages": [],
            "timestamp": 1476830248,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/76eabfebc63c7549301ce6e9508ac82f?d=identicon&version=1",
            "client": "website",
            "content": "<p><span class=\"user-mention\" data-user-email=\"ad@lamarque.fr\">@Adrien Lamarque (S1'16)</span> Is that a Donald Knuth reference?</p>\n<blockquote>\n<p>Beware of bugs in the above code; I have only proved it correct, not tried it.</p>\n</blockquote>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 102390825,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "harold@x.st",
            "sender_full_name": "Harold Cooper (he) (F2'16)",
            "sender_id": 9490,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "merging n sorted lists",
            "submessages": [],
            "timestamp": 1476836483,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/da27a2081fcf44c802c1806cdb5bb881310dfe7c?x=x&version=5",
            "client": "website",
            "content": "<p>It was a nod, yes ;-)</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 102393835,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "ad@lamarque.fr",
            "sender_full_name": "Adrien Lamarque (they/he) (S1'16)",
            "sender_id": 9335,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "merging n sorted lists",
            "submessages": [],
            "timestamp": 1476843877,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/dc74c778740e37ca0a7ac79ccea98f56?d=identicon&version=1",
            "client": "website",
            "content": "<p><span class=\"user-mention\" data-user-email=\"jameshkatz@gmail.com\">@James Katz (S2'16)</span> ah i see.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 102398655,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "jjinking@gmail.com",
            "sender_full_name": "Joseph Kim (F1'16)",
            "sender_id": 100018,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "helfgott's improvement  to the sieve of eratosthenes",
            "submessages": [],
            "timestamp": 1476855535,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/dc74c778740e37ca0a7ac79ccea98f56?d=identicon&version=1",
            "client": "website",
            "content": "<p>Does anybody know of any good practice problems for  shortest paths and mst-type graph problems on leetcode/interviewbits/hackerrank/ctci ? <span class=\"user-mention\" data-user-email=\"jameshkatz@gmail.com\">@James Katz (S2'16)</span> <span class=\"user-mention\" data-user-email=\"miguelvilag@gmail.com\">@Miguel Vil\u00e1 (F1'16)</span>  <span class=\"user-mention\" data-user-email=\"dfobox@gmail.com\">@Ivan Vashchenko (F1'16)</span> <span class=\"user-mention\" data-user-email=\"lynfhan@gmail.com\">@Lyn Han (F2'16)</span> <span class=\"user-mention\" data-user-email=\"ivoscc@gmail.com\">@Ivo S\u00e1nchez Checa Crosato (F1'16)</span> </p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 102658004,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "jjinking@gmail.com",
            "sender_full_name": "Joseph Kim (F1'16)",
            "sender_id": 100018,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "medium/hard graph practice problems",
            "submessages": [],
            "timestamp": 1477424959,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/786748efc0c793cb976559bb6a410704794036f5?x=x&version=1",
            "client": "desktop app Mac 0.5.2",
            "content": "<p><span class=\"user-mention\" data-user-email=\"juliayu@princeton.edu\">@Julia Yu (F2'16)</span> &amp; I went over this one yesterday. (It's an MST problem)<br>\n<a href=\"https://www.hackerrank.com/challenges/johnland\" target=\"_blank\" title=\"https://www.hackerrank.com/challenges/johnland\">https://www.hackerrank.com/challenges/johnland</a><br>\nJust a note about HR, a lot of the graph problems can become largely about optimizations not directly related to the overall algorithm you're using. I find the percentage of submissions that pass to be a better test of difficulty than the easy/medium/hard rankings they give.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 102658981,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "myles.dakan@gmail.com",
            "sender_full_name": "Myles Louis Dakan (he) (F2'16)",
            "sender_id": 100194,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "medium/hard graph practice problems",
            "submessages": [],
            "timestamp": 1477426423,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/dc74c778740e37ca0a7ac79ccea98f56?d=identicon&version=1",
            "client": "website",
            "content": "<p><span class=\"user-mention\" data-user-email=\"myles.dakan@gmail.com\">@Myles Louis Dakan (F2'16)</span> Cool thanks!</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 102659052,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "jjinking@gmail.com",
            "sender_full_name": "Joseph Kim (F1'16)",
            "sender_id": 100018,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "medium/hard graph practice problems",
            "submessages": [],
            "timestamp": 1477426546,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/786748efc0c793cb976559bb6a410704794036f5?x=x&version=1",
            "client": "desktop app Mac 0.5.2",
            "content": "<p>Thinking a little more, here's another problem I enjoyed doing: <a href=\"https://www.hackerrank.com/challenges/even-tree\" target=\"_blank\" title=\"https://www.hackerrank.com/challenges/even-tree\">https://www.hackerrank.com/challenges/even-tree</a></p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 102659153,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "myles.dakan@gmail.com",
            "sender_full_name": "Myles Louis Dakan (he) (F2'16)",
            "sender_id": 100194,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "medium/hard graph practice problems",
            "submessages": [],
            "timestamp": 1477426761,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/dc74c778740e37ca0a7ac79ccea98f56?d=identicon&version=1",
            "client": "website",
            "content": "<p>Thanks!!</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 102659970,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "jjinking@gmail.com",
            "sender_full_name": "Joseph Kim (F1'16)",
            "sender_id": 100018,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "medium/hard graph practice problems",
            "submessages": [],
            "timestamp": 1477428164,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/a6a0ff0a4a9a86ae7bc4524453d439bd?d=identicon&version=1",
            "client": "website",
            "content": "<p>Does anyone have pointers for techniques to uniformly sample a very large space? In particular, I've got an array with about a hundred elements in it, and I need to find an ordering of those hundred elements which meets some set of pretty restrictive constraints- so the search space is really big, and the solution space within that search space is pretty small. <br>\nI tried what I think is called Monte Carlo or \"guess and check\" where I randomly (and hence uniformly) pick an ordering an validate whether or not it meets my constraints- but this turned out to be intractable for my problem size.<br>\nI unfortunately can't generate the ordering \"one element at a time\" because that kind of filtering introduces bias- preferring certain orderings over others, and so the sampling is no longer uniform.<br>\nI'm thinking about ways to decrease the search space, or I was thinking maybe I could estimate the amount of bias I'm introducing by picking elements one at a time and correct for it... but I was wondering:<br>\nDoes anyone have pointers for methods to look at? This seems like a common problem, but I'm having a hard time finding relevant algorithms, I might be google searching the wrong terms. </p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 102693167,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "annie.cherk@gmail.com",
            "sender_full_name": "Annie Cherkaev (she/they) (m4'18)",
            "sender_id": 9502,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "uniformly sampling a very large space?",
            "submessages": [],
            "timestamp": 1477499644,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/2de9901913d2f414b7b174d2c2c69a88?d=identicon&version=1",
            "client": "website",
            "content": "<p>I don't know the answer but I'm now I'm interested in finding it out too :)</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 102693208,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "chris@printf.net",
            "sender_full_name": "Chris Ball (SP2'15)",
            "sender_id": 7857,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "uniformly sampling a very large space?",
            "submessages": [],
            "timestamp": 1477499733,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/8ef0cc9607b07f392f70560a43dbbb2d0efd6328?x=x&version=1",
            "client": "website",
            "content": "<p>could you elaborate on this?</p>\n<blockquote>\n<blockquote>\n<blockquote>\n<p>I unfortunately can't generate the ordering \"one element at a time\" because that kind of filtering introduces bias- preferring certain orderings over others, and so the sampling is no longer uniform.</p>\n</blockquote>\n</blockquote>\n</blockquote>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 102693257,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "brian.kihoon.lee@gmail.com",
            "sender_full_name": "Brian Lee (F1'16)",
            "sender_id": 100043,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "uniformly sampling a very large space?",
            "submessages": [],
            "timestamp": 1477499811,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/7af0a4685e93e44ffcd2935fa31ff1c4?d=identicon&version=1",
            "client": "website",
            "content": "<p>Could you find all of the solutions and then randomly choose among them?  Or are there still too many solutions to do that?</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 102693262,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "novalis@novalis.org",
            "sender_full_name": "David Turner",
            "sender_id": 8449,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "uniformly sampling a very large space?",
            "submessages": [],
            "timestamp": 1477499834,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/74df5731ba535a4fdb258101a3d49877?d=identicon&version=1",
            "client": "website",
            "content": "<p>Seems like something a reservoir sampling-esque approach could work for</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 102693266,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "jameshkatz@gmail.com",
            "sender_full_name": "James Katz (S2'16)",
            "sender_id": 9509,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "uniformly sampling a very large space?",
            "submessages": [],
            "timestamp": 1477499845,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/7af0a4685e93e44ffcd2935fa31ff1c4?d=identicon&version=1",
            "client": "website",
            "content": "<p>IIRC, Knuth has a method for estimating the size of a search tree, but I can no longer remember any details about how it worked, unfortunately.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 102693311,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "novalis@novalis.org",
            "sender_full_name": "David Turner",
            "sender_id": 8449,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "uniformly sampling a very large space?",
            "submessages": [],
            "timestamp": 1477499891,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/74df5731ba535a4fdb258101a3d49877?d=identicon&version=1",
            "client": "website",
            "content": "<p>Oh just saw you already tried a monte-carlo approach. Hm. I don't know anything about your constraints but it feels like there should be a way to decrease the size of the search space to something significantly smaller than <code>100!</code></p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 102693403,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "jameshkatz@gmail.com",
            "sender_full_name": "James Katz (S2'16)",
            "sender_id": 9509,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "uniformly sampling a very large space?",
            "submessages": [],
            "timestamp": 1477500118,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/7af0a4685e93e44ffcd2935fa31ff1c4?d=identicon&version=1",
            "client": "website",
            "content": "<p>Depending on how your constraints work, you could try randomly permuting the search order.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 102693463,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "novalis@novalis.org",
            "sender_full_name": "David Turner",
            "sender_id": 8449,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "uniformly sampling a very large space?",
            "submessages": [],
            "timestamp": 1477500219,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/a6a0ff0a4a9a86ae7bc4524453d439bd?d=identicon&version=1",
            "client": "website",
            "content": "<p><span class=\"user-mention\" data-user-email=\"brian.kihoon.lee@gmail.com\">@Brian Lee (F1'16)</span> So, what I meant was: I need an ordering of 100 elements subject so some constraints. What I can't do is: look at the sequence I've built up so far and all the remaining elements that I haven't chosen yet, and filter those possible choices according to the constraints (as in \"which of these elements would it be valid for me to add as the next one in the sequence?\") and add one of those valid ones to the sequence. This is a really sweet &amp; fast solution, except that it doesn't get you a uniform sample, ie some sequences are more likely than others because of that filtering step... I don't have a formal proof of this, but I did a small example where I could demonstrate that this wasn't uniform, which is one of the things I need to guarantee...</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 102693466,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "annie.cherk@gmail.com",
            "sender_full_name": "Annie Cherkaev (she/they) (m4'18)",
            "sender_id": 9502,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "uniformly sampling a very large space?",
            "submessages": [],
            "timestamp": 1477500221,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/b05b48dffacfe8bc5336d44718f65da6?d=identicon&version=1",
            "client": "desktop app Mac 0.5.2",
            "content": "<p>I wonder whether simulated annealing/hill climbing is relevant here?</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 102693577,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "brian@glusman.me",
            "sender_full_name": "Brian Glusman (SP2'15)",
            "sender_id": 7848,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "uniformly sampling a very large space?",
            "submessages": [],
            "timestamp": 1477500367,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/b05b48dffacfe8bc5336d44718f65da6?d=identicon&version=1",
            "client": "desktop app Mac 0.5.2",
            "content": "<p>this is def. not my area, but if you can find any metrics for 'fitness' of a given ordering, you may be able to start with many/moderate number of uniform samples and \"climb\" towards higher fitness from each, with some randomness in how you iterate/which \"direction\" you climb if needed</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 102693592,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "brian@glusman.me",
            "sender_full_name": "Brian Glusman (SP2'15)",
            "sender_id": 7848,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "uniformly sampling a very large space?",
            "submessages": [],
            "timestamp": 1477500455,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/b05b48dffacfe8bc5336d44718f65da6?d=identicon&version=1",
            "client": "desktop app Mac 0.5.2",
            "content": "<p>sounds like the ultimate issue is you need uniform distribution among the solution space though right, and are just trying to get that by starting with uniform distribution of the problem space?</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 102693645,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "brian@glusman.me",
            "sender_full_name": "Brian Glusman (SP2'15)",
            "sender_id": 7848,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "uniformly sampling a very large space?",
            "submessages": [],
            "timestamp": 1477500540,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/b05b48dffacfe8bc5336d44718f65da6?d=identicon&version=1",
            "client": "desktop app Mac 0.5.2",
            "content": "<p>it sounds a little like CNF-SAT/travelling salesman so some algorithms for them may be relevant?</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 102693699,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "brian@glusman.me",
            "sender_full_name": "Brian Glusman (SP2'15)",
            "sender_id": 7848,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "uniformly sampling a very large space?",
            "submessages": [],
            "timestamp": 1477500608,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/b05b48dffacfe8bc5336d44718f65da6?d=identicon&version=1",
            "client": "desktop app Mac 0.5.2",
            "content": "<p><span class=\"user-mention\" data-user-email=\"annie.cherk@gmail.com\">@Annie Cherkaev (S2'16)</span> ^ no idea if any of that helps though, and I'm heading to lunch in a min :-)</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 102693776,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "brian@glusman.me",
            "sender_full_name": "Brian Glusman (SP2'15)",
            "sender_id": 7848,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "uniformly sampling a very large space?",
            "submessages": [],
            "timestamp": 1477500734,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/a6a0ff0a4a9a86ae7bc4524453d439bd?d=identicon&version=1",
            "client": "website",
            "content": "<p>Hmmm, okay, so I had originally thought that finding all possible valid solutions would be too computationally taxing, but I know think that maybe it would work if I used a search tree like David mentioned and doing some heavy pruning... One thing about my constraints is that they're limited to a window of about 10 elements, even though my full sequence is about 100 elements long. So I was also thinking of possibly approximating the actual true search tree of valid solutions by growing some trees of depth 10, pruning those according to the valid solutions and using the average distributions of \"valid\" leaves to approximate how much bias I introduce in the filtering technique I mentioned so that I can correct for it. I'm not sure if that's a valid approach though. And I hadn't heard of resevoir sampling, and hadn't thought about using simulated annealing... and actually it does sort of sound like satisfiability maybe I should look into interfacing with a SAT solver... <br>\nThis has all been really helpful, thanks everyone!</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 102694041,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "annie.cherk@gmail.com",
            "sender_full_name": "Annie Cherkaev (she/they) (m4'18)",
            "sender_id": 9502,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "uniformly sampling a very large space?",
            "submessages": [],
            "timestamp": 1477501308,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/8ef0cc9607b07f392f70560a43dbbb2d0efd6328?x=x&version=1",
            "client": "website",
            "content": "<p>I was curious what makes the problem so difficult to solve exactly if you know all the constraints</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 102695502,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "brian.kihoon.lee@gmail.com",
            "sender_full_name": "Brian Lee (F1'16)",
            "sender_id": 100043,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "uniformly sampling a very large space?",
            "submessages": [],
            "timestamp": 1477503843,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/a6a0ff0a4a9a86ae7bc4524453d439bd?d=identicon&version=1",
            "client": "website",
            "content": "<p>Well... I know all the constraints but I don't know how to generate a solution with *uniform* probability in the solution space. If it didn't need to be uniform, I could build up the sequence one element at a time... alternatively I could try to build all the solutions and then choose among those, I just hadn't considered that because I thought it would be too computationally expensive- it's a search tree with the top branching factor being 100, but I'm going to try implementing that today, because maybe with aggressive pruning it won't be too bad. <br>\nIs that a reasonable explanation of why this problem seems difficult? I think it would be no problem if the list had, say 8 elements, it's just the search space gets so big as the list size increases. Alternatively it also wouldn't be difficult if I didn't need to ensure a uniform sampling of the possible solutions. </p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 102696360,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "annie.cherk@gmail.com",
            "sender_full_name": "Annie Cherkaev (she/they) (m4'18)",
            "sender_id": 9502,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "uniformly sampling a very large space?",
            "submessages": [],
            "timestamp": 1477505331,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/8ef0cc9607b07f392f70560a43dbbb2d0efd6328?x=x&version=1",
            "client": "website",
            "content": "<p>if it's any inspiration, you can check out this post <a href=\"http://moderndescartes.com/essays/python_list_comprehensions\" target=\"_blank\" title=\"http://moderndescartes.com/essays/python_list_comprehensions\">http://moderndescartes.com/essays/python_list_comprehensions</a></p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 102696494,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "brian.kihoon.lee@gmail.com",
            "sender_full_name": "Brian Lee (F1'16)",
            "sender_id": 100043,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "uniformly sampling a very large space?",
            "submessages": [],
            "timestamp": 1477505631,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/a6a0ff0a4a9a86ae7bc4524453d439bd?d=identicon&version=1",
            "client": "website",
            "content": "<p>That is very much like what I need, thanks for the link!</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 102697728,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "annie.cherk@gmail.com",
            "sender_full_name": "Annie Cherkaev (she/they) (m4'18)",
            "sender_id": 9502,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "uniformly sampling a very large space?",
            "submessages": [],
            "timestamp": 1477507470,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/4b6aae6cae274fb83b0d155f0255298c2d3b22b7?x=x&version=2",
            "client": "website",
            "content": "<p>I'm a little bit confused by this bit about quicksort on Wikipedia <a href=\"https://en.wikipedia.org/wiki/Quicksort#Space_complexity\" target=\"_blank\" title=\"https://en.wikipedia.org/wiki/Quicksort#Space_complexity\">https://en.wikipedia.org/wiki/Quicksort#Space_complexity</a></p>\n<blockquote>\n<p>From a bit complexity viewpoint, variables such as lo and hi do not use constant space; it takes O(log n) bits to index into a list of n items. Because there are such variables in every stack frame, quicksort using Sedgewick's trick requires O((log n)\u00b2) bits of space. This space requirement isn't too terrible, though, since if the list contained distinct elements, it would need at least O(n log n) bits of space.</p>\n</blockquote>\n<p>is this counting the space required to hold a binary integer representing the indices? If you use a fixed 32-bit integer, then this would not be an issue, right?</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 102846414,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "fundirap@gmail.com",
            "sender_full_name": "Panashe Machinda Fundira (he) (S1'16)",
            "sender_id": 9339,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Index into a list in O(log n) time?",
            "submessages": [],
            "timestamp": 1477840539,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/4b6aae6cae274fb83b0d155f0255298c2d3b22b7?x=x&version=2",
            "client": "website",
            "content": "<p>(which I suppose implicitly places a limit on the size of the list to be sorted)</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 102846620,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "fundirap@gmail.com",
            "sender_full_name": "Panashe Machinda Fundira (he) (S1'16)",
            "sender_id": 9339,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Index into a list in O(log n) time?",
            "submessages": [],
            "timestamp": 1477841088,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/c52df4d54166ed7db0141bdb21c7935e502d6ddc?x=x&version=1",
            "client": "website",
            "content": "<p>Yes, that's right.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 102848484,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "darius@wry.me",
            "sender_full_name": "Darius Bacon (W1'16)",
            "sender_id": 902,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Index into a list in O(log n) time?",
            "submessages": [],
            "timestamp": 1477846091,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/da27a2081fcf44c802c1806cdb5bb881310dfe7c?x=x&version=5",
            "client": "website",
            "content": "<p>Yes, this is my understanding as well. I think it is a strange digression in the wikipedia article, since for all intents and purposes it doesn't matter at all.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 102848485,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "ad@lamarque.fr",
            "sender_full_name": "Adrien Lamarque (they/he) (S1'16)",
            "sender_id": 9335,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Index into a list in O(log n) time?",
            "submessages": [],
            "timestamp": 1477846130,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/c52df4d54166ed7db0141bdb21c7935e502d6ddc?x=x&version=1",
            "client": "website",
            "content": "<p>Generally when you say an algorithm takes O(n log n) time or whatever, that's implicitly according to some machine model, and the model can be more or less detailed.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 102848491,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "darius@wry.me",
            "sender_full_name": "Darius Bacon (W1'16)",
            "sender_id": 902,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Index into a list in O(log n) time?",
            "submessages": [],
            "timestamp": 1477846160,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/4b6aae6cae274fb83b0d155f0255298c2d3b22b7?x=x&version=2",
            "client": "website",
            "content": "<p>Cool, this is the first time I've seen the description of an algorithm call the extra space for a pointer variable O(log n)</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 102859728,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "fundirap@gmail.com",
            "sender_full_name": "Panashe Machinda Fundira (he) (S1'16)",
            "sender_id": 9339,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Index into a list in O(log n) time?",
            "submessages": [],
            "timestamp": 1477873885,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/4b6aae6cae274fb83b0d155f0255298c2d3b22b7?x=x&version=2",
            "client": "website",
            "content": "<p>in an asymptotic sense, it still requires O(n log n) space because n log n grows faster (log n)^2</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 102859814,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "fundirap@gmail.com",
            "sender_full_name": "Panashe Machinda Fundira (he) (S1'16)",
            "sender_id": 9339,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Index into a list in O(log n) time?",
            "submessages": [],
            "timestamp": 1477874080,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/e4681bc5bff25e25068895223319c149ef4d898f?x=x&version=1",
            "client": "desktop app Mac 0.5.2",
            "content": "<p>is there existing text on the directed-acyclic-graph of the construction of every bipartite graph of N nodes?<br>\n<a href=\"/user_uploads/13/zlvCrJ7NflCvirsvvi8LQj6w/15133849_10154192530663380_827994394_o.jpg\" target=\"_blank\" title=\"15133849_10154192530663380_827994394_o.jpg\">15133849_10154192530663380_827994394_o.jpg</a> <br>\n(i got lazy with the graphs on the bottom)</p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/13/zlvCrJ7NflCvirsvvi8LQj6w/15133849_10154192530663380_827994394_o.jpg\" target=\"_blank\" title=\"15133849_10154192530663380_827994394_o.jpg\"><img src=\"/user_uploads/13/zlvCrJ7NflCvirsvvi8LQj6w/15133849_10154192530663380_827994394_o.jpg\"></a></div>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 103738264,
            "is_me_message": false,
            "last_edit_timestamp": 1479796891,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "davidelu93@gmail.com",
            "sender_full_name": "David E Lu (he) (W1'16)",
            "sender_id": 100322,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "dag of bipartite graphs",
            "submessages": [],
            "timestamp": 1479796479,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/e4681bc5bff25e25068895223319c149ef4d898f?x=x&version=1",
            "client": "desktop app Mac 0.5.2",
            "content": "<p>(need this info for the crossword generator i'm working on)</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 103738325,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "davidelu93@gmail.com",
            "sender_full_name": "David E Lu (he) (W1'16)",
            "sender_id": 100322,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "dag of bipartite graphs",
            "submessages": [],
            "timestamp": 1479796612,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/e4681bc5bff25e25068895223319c149ef4d898f?x=x&version=1",
            "client": "desktop app Mac 0.5.2",
            "content": "<p>specific problem:<br>\nGiven a bipartite graph G with some root node, how many ancestors does G have? (ancestors, as in, a graph where, if you add a node in a particular way, it brings you to G)</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 103738778,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "davidelu93@gmail.com",
            "sender_full_name": "David E Lu (he) (W1'16)",
            "sender_id": 100322,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "dag of bipartite graphs",
            "submessages": [],
            "timestamp": 1479797738,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/e4681bc5bff25e25068895223319c149ef4d898f?x=x&version=1",
            "client": "desktop app Mac 0.5.2",
            "content": "<p>the only solution at the top of my head is:<br>\nfor each node, remove the node and see if the graph is still fully connected (depth-first search from root node)<br>\nthe runtime is O(N^2) (or O(NlogN) if you do it in parallel)</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 103738844,
            "is_me_message": false,
            "last_edit_timestamp": 1479798378,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "davidelu93@gmail.com",
            "sender_full_name": "David E Lu (he) (W1'16)",
            "sender_id": 100322,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "dag of bipartite graphs",
            "submessages": [],
            "timestamp": 1479797878,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/21b9cce736cbbe8e0761bbb33863c7d3112d0136?x=x&version=2",
            "client": "website",
            "content": "<p>If I understand you correctly, you are looking for <code>|V| - # of cut vertices</code>. There is an algorithm on how to find the number of cut vertices in linear time <a href=\"https://en.wikipedia.org/wiki/Biconnected_component\" target=\"_blank\" title=\"https://en.wikipedia.org/wiki/Biconnected_component\">here</a>.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 103739348,
            "is_me_message": false,
            "last_edit_timestamp": 1479799277,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "michaelmalis2@gmail.com",
            "sender_full_name": "Michael Malis (SP2'19)",
            "sender_id": 8099,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "dag of bipartite graphs",
            "submessages": [],
            "timestamp": 1479798992,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/d802a6b7fe44da112d1dfbe0a1c786b222e53a61?x=x&version=5",
            "client": "desktop app Mac 0.5.2",
            "content": "<p>That's a beauty of an algorithm!</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 103749899,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "mdheaton@gmail.com",
            "sender_full_name": "Mike Heaton (F2'16)",
            "sender_id": 100191,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "dag of bipartite graphs",
            "submessages": [],
            "timestamp": 1479824542,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/e4681bc5bff25e25068895223319c149ef4d898f?x=x&version=1",
            "client": "desktop app Mac 0.5.2",
            "content": "<p>yes, this looks like what i'm looking for! also, there's a parallel algorithm in O(log n) time <img alt=\":eyes:\" class=\"emoji\" src=\"/static/third/gemoji/images/emoji/eyes.png\" title=\":eyes:\"> </p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 103753094,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "davidelu93@gmail.com",
            "sender_full_name": "David E Lu (he) (W1'16)",
            "sender_id": 100322,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "dag of bipartite graphs",
            "submessages": [],
            "timestamp": 1479830890,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/f2793e7c0de9bb00c6c88c585bc865c5?d=identicon&version=1",
            "client": "website",
            "content": "<p><span class=\"user-mention\" data-user-email=\"roneesh@gmail.com\">@Roneesh Vashisht (S1'16)</span> Thanks for sharing the book. I picked up during my batch and completed now. I thoroughly enjoyed the book and learning/solving algorithm is fun after reading the book.  </p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 105459552,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "me@kracekumar.com",
            "sender_full_name": "Kracekumar R (F2'16)",
            "sender_id": 100188,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "An algo book I can't recommend enough!",
            "submessages": [],
            "timestamp": 1483689291,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/8756446588cfc2014859f5f1fa68c850?d=identicon&version=1",
            "client": "desktop app Linux 0.4.4",
            "content": "<p>I'm super excite! Anyone want to pair on something before lunch?</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 105472621,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "jason.a.owen@gmail.com",
            "sender_full_name": "Jason Owen (SP2'19)",
            "sender_id": 100450,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Algorithm Friday",
            "submessages": [],
            "timestamp": 1483720911,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/2fdcf43e487e593178b3d47e3a104b30?d=identicon&version=1",
            "client": "desktop app Linux 0.5.1",
            "content": "<p><a href=\"https://www.youtube.com/user/AlgoRythmics/videos\" target=\"_blank\" title=\"https://www.youtube.com/user/AlgoRythmics/videos\">https://www.youtube.com/user/AlgoRythmics/videos</a></p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 105764846,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "quijax@gmail.com",
            "sender_full_name": "Miriam Kates (W2'17)",
            "sender_id": 100442,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Dance your algorithms!",
            "submessages": [],
            "timestamp": 1484322498,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/786748efc0c793cb976559bb6a410704794036f5?x=x&version=1",
            "client": "desktop app Mac 0.5.2",
            "content": "<p>That is fantastic!</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 105765657,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "myles.dakan@gmail.com",
            "sender_full_name": "Myles Louis Dakan (he) (F2'16)",
            "sender_id": 100194,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Dance your algorithms!",
            "submessages": [],
            "timestamp": 1484323693,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/ffdcc278c496d182c0192b1c29d534591fecf3bb?x=x&version=2",
            "client": "website",
            "content": "<p><img alt=\":double_exclamation_mark:\" class=\"emoji\" src=\"/static/generated/emoji/images/emoji/double_exclamation_mark.png\" title=\":double_exclamation_mark:\"> </p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 105808241,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "aglee@mac.com",
            "sender_full_name": "Andy Lee (F1'16)",
            "sender_id": 100026,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Dance your algorithms!",
            "submessages": [],
            "timestamp": 1484413111,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/bff5e819cb1d23b7fbc90ef7181ae7073befe6c9?x=x&version=1",
            "client": "website",
            "content": "<p>Hi does anyone want to pair on solving some of the famous dynamic programming problems anytime soon? I'm finding it a bit difficult recognising when I can use bottom up DP approaches instead of always trying to recurse + memoize. Thanks</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 105996855,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "husseinfarah93@gmail.com",
            "sender_full_name": "Hussein Farah (W2'17)",
            "sender_id": 100449,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Dynamic Programming Pairing/Help",
            "submessages": [],
            "timestamp": 1484813684,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/0a7d73219ea97d614c7db6f3f57d1ef58fc04752?x=x&version=1",
            "client": "website",
            "content": "<p>I found <span class=\"user-mention\" data-user-email=\"jameshkatz@gmail.com\">@James Katz (S2'16)</span> 's presentation last fall to be super helpful: <a href=\"https://github.com/james727/Dynamic-Programming-Workshop\" target=\"_blank\" title=\"https://github.com/james727/Dynamic-Programming-Workshop\">https://github.com/james727/Dynamic-Programming-Workshop</a></p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 106009927,
            "is_me_message": false,
            "reactions": [
                {
                    "emoji_code": "1f44d",
                    "emoji_name": "+1",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "husseinfarah93@gmail.com",
                        "full_name": "Hussein Farah (W2'17)",
                        "id": 100449
                    },
                    "user_id": 100449
                },
                {
                    "emoji_code": "1f44d",
                    "emoji_name": "+1",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "aglee@mac.com",
                        "full_name": "Andy Lee (F1'16)",
                        "id": 100026
                    },
                    "user_id": 100026
                },
                {
                    "emoji_code": "1f44d",
                    "emoji_name": "+1",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "vaibhavsagar@gmail.com",
                        "full_name": "Vaibhav Sagar (he) (F1'16)",
                        "id": 100041
                    },
                    "user_id": 100041
                },
                {
                    "emoji_code": "1f44d",
                    "emoji_name": "+1",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "myles.dakan@gmail.com",
                        "full_name": "Myles Louis Dakan (he) (F2'16)",
                        "id": 100194
                    },
                    "user_id": 100194
                },
                {
                    "emoji_code": "1f44d",
                    "emoji_name": "+1",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "stanley@zheng.nyc",
                        "full_name": "Stanley Zheng (they) (W1'19)",
                        "id": 100315
                    },
                    "user_id": 100315
                }
            ],
            "recipient_id": 24954,
            "sender_email": "jennifer.y.hsu@gmail.com",
            "sender_full_name": "Jennifer Hsu (F2'16)",
            "sender_id": 100189,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Dynamic Programming Pairing/Help",
            "submessages": [],
            "timestamp": 1484841481,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/ff22292433214ccd87cf6ff9ae34e54ac477eab8?x=x&version=1",
            "client": "website",
            "content": "<p><span class=\"user-mention\" data-user-email=\"jameshkatz@gmail.com\">@James Katz (S2'16)</span> has a phd in dynamic programming</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 106014516,
            "is_me_message": false,
            "reactions": [
                {
                    "emoji_code": "1f606",
                    "emoji_name": "laughing",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "stanley@zheng.nyc",
                        "full_name": "Stanley Zheng (they) (W1'19)",
                        "id": 100315
                    },
                    "user_id": 100315
                },
                {
                    "emoji_code": "1f606",
                    "emoji_name": "laughing",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "me@kracekumar.com",
                        "full_name": "Kracekumar R (F2'16)",
                        "id": 100188
                    },
                    "user_id": 100188
                },
                {
                    "emoji_code": "1f606",
                    "emoji_name": "laughing",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "husseinfarah93@gmail.com",
                        "full_name": "Hussein Farah (W2'17)",
                        "id": 100449
                    },
                    "user_id": 100449
                }
            ],
            "recipient_id": 24954,
            "sender_email": "ds2643@columbia.edu",
            "sender_full_name": "David Shaked (W2'16)",
            "sender_id": 8995,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Dynamic Programming Pairing/Help",
            "submessages": [],
            "timestamp": 1484849142,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/d84e3106fff0d257cc5a95ca9ea44405?d=identicon&version=1",
            "client": "website",
            "content": "<p>Does anyone have any interest/insight in how to implement pattern matching for a a statically typed, compiled language?</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 107419137,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "george.w.king@gmail.com",
            "sender_full_name": "George King (he) (S'13)",
            "sender_id": 2153,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Pattern Matching",
            "submessages": [],
            "timestamp": 1487689830,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/68c07aa24ae39681409794daff1a921b08e5e324?x=x&version=2",
            "client": "website",
            "content": "<p>^ <span class=\"user-mention\" data-user-email=\"adityavkk@gmail.com\" data-user-id=\"100340\">@Aditya Kumarakrishnan (SP1'17)</span> <span class=\"user-mention\" data-user-email=\"arjan.singh@aya.yale.edu\" data-user-id=\"895\">@Arjan Singh (W1'16)</span></p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 107420288,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "james@recurse.com",
            "sender_full_name": "James J. Porter (he) (S'13)",
            "sender_id": 2113,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Pattern Matching",
            "submessages": [],
            "timestamp": 1487691675,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/8f3e3f13689ac077fe4ae537e33bde345a57cb22?x=x&version=2",
            "client": "website",
            "content": "<p>Like in Rust?</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 107420687,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "recurse@ardent.nebcorp.com",
            "sender_full_name": "Joe Ardent (he) (SP1'17)",
            "sender_id": 9097,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Pattern Matching",
            "submessages": [],
            "timestamp": 1487692351,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/1a7b7bb06ea84ea8aa68986ba5a3d936?d=identicon&version=2",
            "client": "website",
            "content": "<p><span class=\"user-mention\" data-user-email=\"george.w.king@gmail.com\" data-user-id=\"2153\">@George King (S'14)</span>  I haven't read it, but you might find this book by Simon Peyton Jones useful. From the table of contents it seems like they talk a lot about implementing pattern matching: <a href=\"https://www.microsoft.com/en-us/research/wp-content/uploads/1987/01/slpj-book-1987-small.pdf\" target=\"_blank\" title=\"https://www.microsoft.com/en-us/research/wp-content/uploads/1987/01/slpj-book-1987-small.pdf\">https://www.microsoft.com/en-us/research/wp-content/uploads/1987/01/slpj-book-1987-small.pdf</a></p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 107421044,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "clample@crimson.ua.edu",
            "sender_full_name": "Chris Lample (he) (W2'17)",
            "sender_id": 100452,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Pattern Matching",
            "submessages": [],
            "timestamp": 1487692954,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/4a640d570251bb87bb6b20d02bd6f59e?d=identicon&version=1",
            "client": "website",
            "content": "<p>+1 on the SPJ book <br>\n<span class=\"user-mention\" data-user-email=\"arjan.singh@aya.yale.edu\" data-user-id=\"895\">@Arjan Singh (W1'16)</span>  and I implemented a basic haskell style pattern matching library in JS, would be happy to chat about it</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 107421427,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "adityavkk@gmail.com",
            "sender_full_name": "Aditya Kumarakrishnan (SP1'17)",
            "sender_id": 100340,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Pattern Matching",
            "submessages": [],
            "timestamp": 1487693612,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/21b9cce736cbbe8e0761bbb33863c7d3112d0136?x=x&version=2",
            "client": "website",
            "content": "<p><a href=\"https://www.youtube.com/watch?v=amf5lTZ0UTc\" target=\"_blank\" title=\"https://www.youtube.com/watch?v=amf5lTZ0UTc\">One of the lectures in the SICP video series</a> demonstrates one way of implementing pattern matching in Scheme. In a statically typed language, the general idea is you convert each pattern into a test, with some bindings if the test succeeds. For example, a pattern such as <code>(1 x 3)</code> can be turned into roughly the following pseudo-code:</p>\n<div class=\"codehilite\"><pre><span></span>if xs[0] == 1 &amp;&amp; xs[2] == 3\n  var x = xs[1]\n  &lt;Code if pattern matches.&gt;\n&lt;Other patterns.&gt;\n...\n</pre></div>\n\n\n<div class=\"youtube-video message_inline_image\"><a data-id=\"amf5lTZ0UTc\" href=\"https://www.youtube.com/watch?v=amf5lTZ0UTc\" target=\"_blank\" title=\"https://www.youtube.com/watch?v=amf5lTZ0UTc\"><img src=\"https://i.ytimg.com/vi/amf5lTZ0UTc/default.jpg\"></a></div>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 107422623,
            "is_me_message": false,
            "last_edit_timestamp": 1487695615,
            "reactions": [
                {
                    "emoji_code": "1f44d",
                    "emoji_name": "+1",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "adityavkk@gmail.com",
                        "full_name": "Aditya Kumarakrishnan (SP1'17)",
                        "id": 100340
                    },
                    "user_id": 100340
                }
            ],
            "recipient_id": 24954,
            "sender_email": "michaelmalis2@gmail.com",
            "sender_full_name": "Michael Malis (SP2'19)",
            "sender_id": 8099,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Pattern Matching",
            "submessages": [],
            "timestamp": 1487695472,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/d84e3106fff0d257cc5a95ca9ea44405?d=identicon&version=1",
            "client": "website",
            "content": "<p>Thanks everyone for the input. <span class=\"user-mention\" data-user-email=\"adityavkk@gmail.com\" data-user-id=\"100340\">@Aditya Kumarakrishnan (SP1'17)</span> i'd be very interested in seeing your JS implementation.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 107424278,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "george.w.king@gmail.com",
            "sender_full_name": "George King (he) (S'13)",
            "sender_id": 2153,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Pattern Matching",
            "submessages": [],
            "timestamp": 1487698087,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/2a6345cc359fb9370ce011d04d4965f20e0cf051?x=x&version=2",
            "client": "website",
            "content": "<p>I will work on gerrymandering problems today (Monday). Feel free to join in if you want. I am in New Jersey so we'll have to work remotely. The problem statements are as follows.</p>\n<p>1. An incumbents has the advantage over a non-incumbent in an election. We have two neighboring Congressional districts where both incumbents are Republicans and there is an upcoming election. How should we redraw the district border to maximize the number residents living in Democratic districts? How should we redraw the border to maximize the number of Republican districts?</p>\n<p>2. Using the information about the incumbent's advantage in #1, how should we redraw district borders to best prevent a single incumbent from winning re-election?</p>\n<p>3. You want to divide a state into N Congressional districts. You are given a file that includes each voter's full name, street address, longitude &amp; latitude, and vote probabilities (Democrat, Republican, stay at home). Design an algorithm that maximizes the number of residents living in a Democratic district. Assume there are only two parties - Democrat and Republican. A district can be any shape but it must be contiguous.</p>\n<p>4. You are given the following information:<br>\n- Voters - full name, street address with longitude &amp; latitude, party affiliation, political campaign donation history, which elections they've previously voted in<br>\n- Cities/towns - longitude &amp; latitude, marital status statistics, racial makeup, education level distribution, income distribution, population, population density, age/sex population pyramid<br>\n- Voting behavior of each of the above demographics (e.g. 58% of whites vote Republican)<br>\nConstruct a model that predicts how a city/town will vote.</p>\n<p>5. Let's say a new law is passed that says a district must have an area:border ratio of at least R. How would you redraw the districts to maximize the power of a single party while meeting this criteria?</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 108228052,
            "is_me_message": false,
            "last_edit_timestamp": 1489425401,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "ljeng@icloud.com",
            "sender_full_name": "Lareine Jeng (S2'16)",
            "sender_id": 9516,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Advanced gerrymandering tactics",
            "submessages": [],
            "timestamp": 1489383205,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/2a6345cc359fb9370ce011d04d4965f20e0cf051?x=x&version=2",
            "client": "website",
            "content": "<p>Answers so far:<br>\n1. Let P be the probability of an incumbent Republican win against non-incumbent Democrat, Q be the probability of an incumbent Republican winning against a non-incumbent Republican, and R be the probability of a non-incumbent Republican winning against a non-incumbent Democrat. Since the incumbent always has the advantage, P &gt; R. And since the probability of any candidate winning is greater than 0 and less than 1, 0 &lt; R &lt; P &lt; 1 and 0 &lt; Q &lt; 1.<br>\nIf we keep the district border the same the probability of:<br>\nBoth Republicans winning = P^2<br>\nOne Republican winning = 2P(1 - P)<br>\nLet A be the average number of districts won by Republicans. A = 2P^2 + 2P(1 - P) = 2P^2 + 2P - 2P^2 = 2P<br>\nIn the second scenario we redraw the district line such that both incumbents are forced to run against each other in the same district. In this scenario, the probability of:<br>\nThe incumbent winning both primary and general election = PQ<br>\nThe non-incumbent Republican winning primary and general election = (1 - Q)R<br>\nA Republican winning the district where both incumbents are running = PQ + (1 - Q)R<br>\nBoth districts won by a Republican = [PQ + (1 - Q)R]R<br>\nOne district won by Republican = <a href=\"http://1%20-%20R\" target=\"_blank\" title=\"http://1%20-%20R\">PQ + (1 - Q)R</a> + {1 - [PQ + (1 - Q)R]}R<br>\nAverage number of districts won by Republicans B = 2[PQ + (1 - Q)R]R + <a href=\"http://1%20-%20R\" target=\"_blank\" title=\"http://1%20-%20R\">PQ + (1 - Q)R</a> + {1 - [PQ + (1 - Q)R]}R = 2(PQ + R - QR)R + (PQ + R - QR)(1 - R) + [1 - (PQ + R - QR)]R = 2PQR + 2R^2 - 2QR^2 + PQ + R - QR - PQR - R^2 + QR^2 + (1 - PQ - R + QR)R = PQR + R^2 - QR^2 + PQ + R - QR + R - PQR - R^2 + QR^2 = PQ + R - QR + R = PQ - QR + 2R<br>\nWe can prove that A &gt; B by showing that A - B &gt; 0:</p>\n<p>A - B = 2P - PQ + QR - 2R = 2(P - R) - Q(P - R) = (2 - Q)(P - R)<br>\nSince P &gt; R and Q &lt; 1, P - R &gt; 0 and 2 - Q &gt; 1 which means (2 - Q)(P - R) &gt; 0<br>\nThus A - B &gt; 0 and A &gt; B<br>\nRepublicans will win more districts if we don't redraw the district line. Thus it would be advantageous for the Democrats to redraw that district line to force both incumbents to run against each other in any case, and this is the mathematical proof for it.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 108230177,
            "is_me_message": false,
            "last_edit_timestamp": 1489425511,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "ljeng@icloud.com",
            "sender_full_name": "Lareine Jeng (S2'16)",
            "sender_id": 9516,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Advanced gerrymandering tactics",
            "submessages": [],
            "timestamp": 1489388254,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/ad0a2dd3306606ccbd235ecca26f9c64?d=identicon&version=1",
            "client": "website",
            "content": "<p>Do you happen to have data for district subdivisions, that could be used to actually test an algorithm for gerrymandering? I feel this is an interesting example to illustrate a non-trivial integer linear programming problem.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 108344210,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "ant6nd@gmail.com",
            "sender_full_name": "Ant6n Dubrau (W2'17)",
            "sender_id": 100465,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Advanced gerrymandering tactics",
            "submessages": [],
            "timestamp": 1489609601,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/d84e3106fff0d257cc5a95ca9ea44405?d=identicon&version=1",
            "client": "website",
            "content": "<p>Just following up on this inquiry from last month, for those who are interested. I wrote a first implementation of <code>match</code> that does not do any destructuring, just equality comparisons on each \"pattern\" (where pattern is not really a pattern, just a value expression to compare against). This is for ploy, an experimental language that i'm designing. The interesting part of this experience was that I found it easier to synthesize <code>if</code> expressions and feed those into the compiler, rather than reimplement the type checking / code emission for the new <code>match</code> form. This is the first time that I tried synthesizing expressions in the compiler, and it was surprisingly easy. Maybe I'm biased towards lisp in general, but it made me wish I could just implement <code>match</code> as a macro. Anyway, thanks again for the various inputs; <span class=\"user-mention\" data-user-email=\"adityavkk@gmail.com\" data-user-id=\"100340\">@Aditya Kumarakrishnan (SP1'17)</span> can you send me a link to your implementation?</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 108432598,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "george.w.king@gmail.com",
            "sender_full_name": "George King (he) (S'13)",
            "sender_id": 2153,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Pattern Matching",
            "submessages": [],
            "timestamp": 1489774589,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/2a6345cc359fb9370ce011d04d4965f20e0cf051?x=x&version=2",
            "client": "website",
            "content": "<p>I'm using the districts in Central Jersey as an example. This is what I ended up with for pro-Democrat gerrymandering using U.S. Census data and 2016 presidential voter demographics from the National Election Pool collected by Edison Research. Population 738k as of 2015,  predicted Democrat = 51%, predicted Republican = 40%. New Jersey is capable of getting all 12 districts to vote fro a Democratic candidate. <a href=\"https://scontent.fewr1-1.fna.fbcdn.net/v/t1.0-9/17352428_10210111931407456_8706132976106058997_n.jpg?oh=5a96e9df4cb0c1a7a4b402957fff4e01&amp;oe=5964259A\" target=\"_blank\" title=\"https://scontent.fewr1-1.fna.fbcdn.net/v/t1.0-9/17352428_10210111931407456_8706132976106058997_n.jpg?oh=5a96e9df4cb0c1a7a4b402957fff4e01&amp;oe=5964259A\">https://scontent.fewr1-1.fna.fbcdn.net/v/t1.0-9/17352428_10210111931407456_8706132976106058997_n.jpg?oh=5a96e9df4cb0c1a7a4b402957fff4e01&amp;oe=5964259A</a></p>\n<div class=\"message_inline_image\"><a href=\"https://scontent.fewr1-1.fna.fbcdn.net/v/t1.0-9/17352428_10210111931407456_8706132976106058997_n.jpg?oh=5a96e9df4cb0c1a7a4b402957fff4e01&amp;oe=5964259A\" target=\"_blank\" title=\"https://scontent.fewr1-1.fna.fbcdn.net/v/t1.0-9/17352428_10210111931407456_8706132976106058997_n.jpg?oh=5a96e9df4cb0c1a7a4b402957fff4e01&amp;oe=5964259A\"><img src=\"https://scontent.fewr1-1.fna.fbcdn.net/v/t1.0-9/17352428_10210111931407456_8706132976106058997_n.jpg?oh=5a96e9df4cb0c1a7a4b402957fff4e01&amp;oe=5964259A\"></a></div>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 108675234,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "ljeng@icloud.com",
            "sender_full_name": "Lareine Jeng (S2'16)",
            "sender_id": 9516,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Advanced gerrymandering tactics",
            "submessages": [],
            "timestamp": 1490250824,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/2a6345cc359fb9370ce011d04d4965f20e0cf051?x=x&version=2",
            "client": "website",
            "content": "<p>Demographic mapping</p>\n<p>Male:female ratio: <a href=\"https://scontent.fewr1-1.fna.fbcdn.net/v/t1.0-9/17362569_10210111946767840_348561871764330499_n.jpg?oh=8ee7c822c8ab46a0163639d2831e100c&amp;oe=596DF936\" target=\"_blank\" title=\"https://scontent.fewr1-1.fna.fbcdn.net/v/t1.0-9/17362569_10210111946767840_348561871764330499_n.jpg?oh=8ee7c822c8ab46a0163639d2831e100c&amp;oe=596DF936\">https://scontent.fewr1-1.fna.fbcdn.net/v/t1.0-9/17362569_10210111946767840_348561871764330499_n.jpg?oh=8ee7c822c8ab46a0163639d2831e100c&amp;oe=596DF936</a><br>\nBlue = Under 0.90<br>\nLight blue = 0.90-0.93<br>\nViolet = 0.93-0.97<br>\nPink = 0.97-1.02<br>\nRed = Over 1.02</p>\n<p>Median age: <a href=\"https://scontent.fewr1-1.fna.fbcdn.net/v/t1.0-9/17352181_10210111966368330_675531665170420780_n.jpg?oh=9716051f6701a3481f8813768f875a86&amp;oe=59675E75\" target=\"_blank\" title=\"https://scontent.fewr1-1.fna.fbcdn.net/v/t1.0-9/17352181_10210111966368330_675531665170420780_n.jpg?oh=9716051f6701a3481f8813768f875a86&amp;oe=59675E75\">https://scontent.fewr1-1.fna.fbcdn.net/v/t1.0-9/17352181_10210111966368330_675531665170420780_n.jpg?oh=9716051f6701a3481f8813768f875a86&amp;oe=59675E75</a><br>\nBlue = Under 40<br>\nLight blue = 40-42<br>\nViolet = 42-44<br>\nPink = 44-45<br>\nRed = Over 45</p>\n<p>Race: <a href=\"https://scontent.fewr1-1.fna.fbcdn.net/v/t1.0-9/17361861_10210111977768615_7992171378539040093_n.jpg?oh=dec51bfa88db20f1820cd9bb224544d4&amp;oe=5967F158\" target=\"_blank\" title=\"https://scontent.fewr1-1.fna.fbcdn.net/v/t1.0-9/17361861_10210111977768615_7992171378539040093_n.jpg?oh=dec51bfa88db20f1820cd9bb224544d4&amp;oe=5967F158\">https://scontent.fewr1-1.fna.fbcdn.net/v/t1.0-9/17361861_10210111977768615_7992171378539040093_n.jpg?oh=dec51bfa88db20f1820cd9bb224544d4&amp;oe=5967F158</a><br>\nBlue = Under 75% white<br>\nLight blue = 75-80% white<br>\nViolet = 80-87% white<br>\nPink = 87-92% white<br>\nRed = Over 92% white</p>\n<p>Average family income: <a href=\"https://scontent.fewr1-1.fna.fbcdn.net/v/t1.0-9/17362448_10210111986488833_4254857557572594415_n.jpg?oh=fdba8f8b303bf259f7e864c56bec31c9&amp;oe=596BE1B0\" target=\"_blank\" title=\"https://scontent.fewr1-1.fna.fbcdn.net/v/t1.0-9/17362448_10210111986488833_4254857557572594415_n.jpg?oh=fdba8f8b303bf259f7e864c56bec31c9&amp;oe=596BE1B0\">https://scontent.fewr1-1.fna.fbcdn.net/v/t1.0-9/17362448_10210111986488833_4254857557572594415_n.jpg?oh=fdba8f8b303bf259f7e864c56bec31c9&amp;oe=596BE1B0</a><br>\nBlue = Under 150k<br>\nLight blue = 150-200k<br>\nViolet = 200-250k<br>\nPink = 250-300k<br>\nRed = Over 300k</p>\n<p>Education: <a href=\"https://scontent.fewr1-1.fna.fbcdn.net/v/t1.0-9/17362917_10210112000569185_5852458690712907231_n.jpg?oh=984c422e710ee63f5746fcf085b37b5c&amp;oe=596F3FE1\" target=\"_blank\" title=\"https://scontent.fewr1-1.fna.fbcdn.net/v/t1.0-9/17362917_10210112000569185_5852458690712907231_n.jpg?oh=984c422e710ee63f5746fcf085b37b5c&amp;oe=596F3FE1\">https://scontent.fewr1-1.fna.fbcdn.net/v/t1.0-9/17362917_10210112000569185_5852458690712907231_n.jpg?oh=984c422e710ee63f5746fcf085b37b5c&amp;oe=596F3FE1</a><br>\nPurple = mostly no degree<br>\nRed = mostly bachelor's degree<br>\nBlue = mostly postgraduate degree</p>\n<div class=\"message_inline_image\"><a href=\"https://scontent.fewr1-1.fna.fbcdn.net/v/t1.0-9/17362917_10210112000569185_5852458690712907231_n.jpg?oh=984c422e710ee63f5746fcf085b37b5c&amp;oe=596F3FE1\" target=\"_blank\" title=\"https://scontent.fewr1-1.fna.fbcdn.net/v/t1.0-9/17362917_10210112000569185_5852458690712907231_n.jpg?oh=984c422e710ee63f5746fcf085b37b5c&amp;oe=596F3FE1\"><img src=\"https://scontent.fewr1-1.fna.fbcdn.net/v/t1.0-9/17362917_10210112000569185_5852458690712907231_n.jpg?oh=984c422e710ee63f5746fcf085b37b5c&amp;oe=596F3FE1\"></a></div><div class=\"message_inline_image\"><a href=\"https://scontent.fewr1-1.fna.fbcdn.net/v/t1.0-9/17362448_10210111986488833_4254857557572594415_n.jpg?oh=fdba8f8b303bf259f7e864c56bec31c9&amp;oe=596BE1B0\" target=\"_blank\" title=\"https://scontent.fewr1-1.fna.fbcdn.net/v/t1.0-9/17362448_10210111986488833_4254857557572594415_n.jpg?oh=fdba8f8b303bf259f7e864c56bec31c9&amp;oe=596BE1B0\"><img src=\"https://scontent.fewr1-1.fna.fbcdn.net/v/t1.0-9/17362448_10210111986488833_4254857557572594415_n.jpg?oh=fdba8f8b303bf259f7e864c56bec31c9&amp;oe=596BE1B0\"></a></div><div class=\"message_inline_image\"><a href=\"https://scontent.fewr1-1.fna.fbcdn.net/v/t1.0-9/17361861_10210111977768615_7992171378539040093_n.jpg?oh=dec51bfa88db20f1820cd9bb224544d4&amp;oe=5967F158\" target=\"_blank\" title=\"https://scontent.fewr1-1.fna.fbcdn.net/v/t1.0-9/17361861_10210111977768615_7992171378539040093_n.jpg?oh=dec51bfa88db20f1820cd9bb224544d4&amp;oe=5967F158\"><img src=\"https://scontent.fewr1-1.fna.fbcdn.net/v/t1.0-9/17361861_10210111977768615_7992171378539040093_n.jpg?oh=dec51bfa88db20f1820cd9bb224544d4&amp;oe=5967F158\"></a></div><div class=\"message_inline_image\"><a href=\"https://scontent.fewr1-1.fna.fbcdn.net/v/t1.0-9/17352181_10210111966368330_675531665170420780_n.jpg?oh=9716051f6701a3481f8813768f875a86&amp;oe=59675E75\" target=\"_blank\" title=\"https://scontent.fewr1-1.fna.fbcdn.net/v/t1.0-9/17352181_10210111966368330_675531665170420780_n.jpg?oh=9716051f6701a3481f8813768f875a86&amp;oe=59675E75\"><img src=\"https://scontent.fewr1-1.fna.fbcdn.net/v/t1.0-9/17352181_10210111966368330_675531665170420780_n.jpg?oh=9716051f6701a3481f8813768f875a86&amp;oe=59675E75\"></a></div><div class=\"message_inline_image\"><a href=\"https://scontent.fewr1-1.fna.fbcdn.net/v/t1.0-9/17362569_10210111946767840_348561871764330499_n.jpg?oh=8ee7c822c8ab46a0163639d2831e100c&amp;oe=596DF936\" target=\"_blank\" title=\"https://scontent.fewr1-1.fna.fbcdn.net/v/t1.0-9/17362569_10210111946767840_348561871764330499_n.jpg?oh=8ee7c822c8ab46a0163639d2831e100c&amp;oe=596DF936\"><img src=\"https://scontent.fewr1-1.fna.fbcdn.net/v/t1.0-9/17362569_10210111946767840_348561871764330499_n.jpg?oh=8ee7c822c8ab46a0163639d2831e100c&amp;oe=596DF936\"></a></div>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 108743333,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "ljeng@icloud.com",
            "sender_full_name": "Lareine Jeng (S2'16)",
            "sender_id": 9516,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Advanced gerrymandering tactics",
            "submessages": [],
            "timestamp": 1490379249,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/7f89b22589ca6f3490f8a75591a699adc0e02fcc?x=x&version=1",
            "client": "website",
            "content": "<p><span class=\"user-mention\" data-user-email=\"dominic@spadacene.com\" data-user-id=\"100778\">@Dominic Michael Spadacene (SP2'17)</span> is that Erdos in your zulip profile photo?</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 108905071,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "ark.email@gmail.com",
            "sender_full_name": "Adam Bratschi-Kaye (he) (SP1'17)",
            "sender_id": 100532,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Erdos",
            "submessages": [],
            "timestamp": 1490737629,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/462d5cb1668a697d179a6db0ba9a316640789ea1?x=x&version=2",
            "client": "website",
            "content": "<p>yes! or as he likes to be known, PGOM</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 108905974,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "dominic@spadacene.com",
            "sender_full_name": "Dominic Michael Spadacene (SP2'17)",
            "sender_id": 100778,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Erdos",
            "submessages": [],
            "timestamp": 1490739404,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/15cc6e65f5cb0faac87d0b88dae865281ba57899?x=x&version=2",
            "client": "website",
            "content": "<p>what does that mean?</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 108908184,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "moritz.neeb@posteo.net",
            "sender_full_name": "Moritz Neeb (he) (SP1'17)",
            "sender_id": 100515,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Erdos",
            "submessages": [],
            "timestamp": 1490743581,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/7f89b22589ca6f3490f8a75591a699adc0e02fcc?x=x&version=1",
            "client": "website",
            "content": "<p>See here: <a href=\"https://en.m.wikipedia.org/wiki/Paul_Erd\u0151s#Signature\" target=\"_blank\" title=\"https://en.m.wikipedia.org/wiki/Paul_Erd\u0151s#Signature\">https://en.m.wikipedia.org/wiki/Paul_Erd\u0151s#Signature</a></p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 108908857,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "ark.email@gmail.com",
            "sender_full_name": "Adam Bratschi-Kaye (he) (SP1'17)",
            "sender_id": 100532,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Erdos",
            "submessages": [],
            "timestamp": 1490744914,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/15cc6e65f5cb0faac87d0b88dae865281ba57899?x=x&version=2",
            "client": "website",
            "content": "<p>oh, thanks :) I had searched the wiki site for PGOM, but not P.G.O.M. :P</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 108909083,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "moritz.neeb@posteo.net",
            "sender_full_name": "Moritz Neeb (he) (SP1'17)",
            "sender_id": 100515,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Erdos",
            "submessages": [],
            "timestamp": 1490745443,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/8583df6c401e50a991e66a538516386bb528840e?x=x&version=1",
            "client": "website",
            "content": "<p>Hello,</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 109263810,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "carmen.mitru@gmail.com",
            "sender_full_name": "Carmen Mitru (W1'16)",
            "sender_id": 100328,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Material for learning algorithms",
            "submessages": [],
            "timestamp": 1491460436,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/8583df6c401e50a991e66a538516386bb528840e?x=x&version=1",
            "client": "website",
            "content": "<p>I started to learn algorithms to prepare for interviews and I was searching for materials.I want to learn algorithms with python.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 109263850,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "carmen.mitru@gmail.com",
            "sender_full_name": "Carmen Mitru (W1'16)",
            "sender_id": 100328,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Material for learning algorithms",
            "submessages": [],
            "timestamp": 1491460481,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/8583df6c401e50a991e66a538516386bb528840e?x=x&version=1",
            "client": "website",
            "content": "<p>Can you please help me with materials  : books,courses ,youtube channels of tips&amp;tricks ?</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 109263856,
            "is_me_message": false,
            "last_edit_timestamp": 1491460683,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "carmen.mitru@gmail.com",
            "sender_full_name": "Carmen Mitru (W1'16)",
            "sender_id": 100328,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Material for learning algorithms",
            "submessages": [],
            "timestamp": 1491460508,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/5fc3428127f9bf92b1d03f9694617e10?d=identicon&version=1",
            "client": "website",
            "content": "<p>i haven't tried it yet, but this person put together some jupyter notebooks <a href=\"https://github.com/donnemartin/interactive-coding-challenges\" target=\"_blank\" title=\"https://github.com/donnemartin/interactive-coding-challenges\">https://github.com/donnemartin/interactive-coding-challenges</a> that look promising also hackerrank has some videos from the author of cracking hte coding interview <a href=\"https://www.youtube.com/results?search_query=hackerrank\" target=\"_blank\" title=\"https://www.youtube.com/results?search_query=hackerrank\">https://www.youtube.com/results?search_query=hackerrank</a> hope that helps <span class=\"user-mention\" data-user-email=\"carmen.mitru@gmail.com\" data-user-id=\"100328\">@Carmen Mitru (W1'16)</span></p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 109273423,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "irvin.hwang@gmail.com",
            "sender_full_name": "Irvin Hwang (m6'19)",
            "sender_id": 6916,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Material for learning algorithms",
            "submessages": [],
            "timestamp": 1491482375,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/5fc3428127f9bf92b1d03f9694617e10?d=identicon&version=1",
            "client": "website",
            "content": "<p>i've also used <a href=\"http://interviewbit.com\" target=\"_blank\" title=\"http://interviewbit.com\">interviewbit.com</a> since it has a nice grouping of problems by topic although i've found i sometimes need to actually submit the problems on leetcode (there's a big overlap) since i use javascript and the answers tend to be better on <a href=\"http://leetcode.com\" target=\"_blank\" title=\"http://leetcode.com\">leetcode.com</a></p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 109273549,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "irvin.hwang@gmail.com",
            "sender_full_name": "Irvin Hwang (m6'19)",
            "sender_id": 6916,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Material for learning algorithms",
            "submessages": [],
            "timestamp": 1491482558,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/dca5d128e87793d471460d1c3a46617b?d=identicon&version=1",
            "client": "website",
            "content": "<p>Hey <span class=\"user-mention\" data-user-email=\"ryan.riddle7@gmail.com\" data-user-id=\"100526\">@Ryan Riddle (SP1'17)</span>, yesterday <span class=\"user-mention\" data-user-email=\"bebirchall@gmail.com\" data-user-id=\"833\">@Be Birchall (SP1'17)</span> mentioned that you did some work on representing the subway as nodes and edges. It's a cool idea! Do you have any links to it?</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 109516023,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "roche.a@gmail.com",
            "sender_full_name": "Alistair Roche (SP2'17)",
            "sender_id": 100782,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "NYC subway as graph",
            "submessages": [],
            "timestamp": 1492005112,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/dca5d128e87793d471460d1c3a46617b?d=identicon&version=1",
            "client": "website",
            "content": "<p>I'm compiling a list of physical metaphors that people use for the fundamental data structures / algorithms: <a href=\"https://paper.dropbox.com/doc/Physical-metaphor-in-CS-6slJLVFBqKgYQYpKPcpoP\" target=\"_blank\" title=\"https://paper.dropbox.com/doc/Physical-metaphor-in-CS-6slJLVFBqKgYQYpKPcpoP\">https://paper.dropbox.com/doc/Physical-metaphor-in-CS-6slJLVFBqKgYQYpKPcpoP</a></p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 109516353,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "roche.a@gmail.com",
            "sender_full_name": "Alistair Roche (SP2'17)",
            "sender_id": 100782,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "NYC subway as graph",
            "submessages": [],
            "timestamp": 1492005731,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/d69eea077f983d581cec34e6a4c78747ef8f29ff?x=x&version=2",
            "client": "ZulipAndroid",
            "content": "<p>Yes! <a href=\"http://ryanriddle.github.io/subway.html\" target=\"_blank\" title=\"http://ryanriddle.github.io/subway.html\">ryanriddle.github.io/subway.html</a> might help. If you want to talk about it, just come find me</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 109516473,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "ryan.riddle7@gmail.com",
            "sender_full_name": "Ryan Riddle (SP1'17)",
            "sender_id": 100526,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "NYC subway as graph",
            "submessages": [],
            "timestamp": 1492005966,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/dca5d128e87793d471460d1c3a46617b?d=identicon&version=1",
            "client": "website",
            "content": "<p>thanks!</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 109516609,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "roche.a@gmail.com",
            "sender_full_name": "Alistair Roche (SP2'17)",
            "sender_id": 100782,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "NYC subway as graph",
            "submessages": [],
            "timestamp": 1492006321,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/6485c74622306264ff53449c6f0ca540?d=identicon&version=1",
            "client": "website",
            "content": "<p><span class=\"user-mention\" data-user-email=\"roche.a@gmail.com\" data-user-id=\"100782\">@Alistair Roche (SP2'17)</span> the question reminds me (tangentially!) of <a href=\"https://medium.com/transit-app/how-we-built-the-worlds-prettiest-auto-generated-transit-maps-12d0c6fa502f\" target=\"_blank\" title=\"https://medium.com/transit-app/how-we-built-the-worlds-prettiest-auto-generated-transit-maps-12d0c6fa502f\">https://medium.com/transit-app/how-we-built-the-worlds-prettiest-auto-generated-transit-maps-12d0c6fa502f</a></p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 109519458,
            "is_me_message": false,
            "reactions": [
                {
                    "emoji_code": "1f5fa",
                    "emoji_name": "world_map",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "agusanzorena@gmail.com",
                        "full_name": "Agustin Ramos Anzorena (he) (SP1'19)",
                        "id": 203423
                    },
                    "user_id": 203423
                },
                {
                    "emoji_code": "1f5fa",
                    "emoji_name": "world_map",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "jason.a.owen@gmail.com",
                        "full_name": "Jason Owen (SP2'19)",
                        "id": 100450
                    },
                    "user_id": 100450
                },
                {
                    "emoji_code": "1f68b",
                    "emoji_name": "train",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "jason.a.owen@gmail.com",
                        "full_name": "Jason Owen (SP2'19)",
                        "id": 100450
                    },
                    "user_id": 100450
                }
            ],
            "recipient_id": 24954,
            "sender_email": "iain@mccoy.id.au",
            "sender_full_name": "Iain McCoy (he) (SP2'17)",
            "sender_id": 100806,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "NYC subway as graph",
            "submessages": [],
            "timestamp": 1492011412,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/8f3e3f13689ac077fe4ae537e33bde345a57cb22?x=x&version=2",
            "client": "website",
            "content": "<p><span class=\"user-mention\" data-user-email=\"iain@mccoy.id.au\" data-user-id=\"100806\">@Iain McCoy (SP2'17)</span> , <span class=\"user-mention\" data-user-email=\"ant6nd@gmail.com\" data-user-id=\"100465\">@Ant6n Dubrau (W2'17)</span> was just here at RC :)</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 109519512,
            "is_me_message": false,
            "reactions": [
                {
                    "emoji_code": "1f389",
                    "emoji_name": "tada",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "eliasdorneles@gmail.com",
                        "full_name": "Elias Dorneles (he) (SP1'17)",
                        "id": 100512
                    },
                    "user_id": 100512
                },
                {
                    "emoji_code": "1f389",
                    "emoji_name": "tada",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "ant6nd@gmail.com",
                        "full_name": "Ant6n Dubrau (W2'17)",
                        "id": 100465
                    },
                    "user_id": 100465
                }
            ],
            "recipient_id": 24954,
            "sender_email": "recurse@ardent.nebcorp.com",
            "sender_full_name": "Joe Ardent (he) (SP1'17)",
            "sender_id": 9097,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "NYC subway as graph",
            "submessages": [],
            "timestamp": 1492011495,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/dca5d128e87793d471460d1c3a46617b?d=identicon&version=1",
            "client": "website",
            "content": "<p>nice one, thanks</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 109519727,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "roche.a@gmail.com",
            "sender_full_name": "Alistair Roche (SP2'17)",
            "sender_id": 100782,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "NYC subway as graph",
            "submessages": [],
            "timestamp": 1492011895,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/3bd35932199b20a4bbd31d285f204d6784a3c7bd?x=x&version=2",
            "client": "website",
            "content": "<p>Hi!</p>\n<p>There's an algorithm competition next Friday, June 2nd, at 11:00 am. It is online, at Hackerrank. Here's the <a href=\"https://www.hackerrank.com/hourrank-21\" target=\"_blank\" title=\"https://www.hackerrank.com/hourrank-21\">link to the competition page</a>. It's just 1 hour of coding and you have to solve from 3 to 5 problems increasing in difficulty level.</p>\n<p>I will do it and I was wondering if any other person would like to join the challenge as well.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 111529118,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "dangonrei@gmail.com",
            "sender_full_name": "Daniel Gonz\u00e1lez Reina (he) (S1'17)",
            "sender_id": 101095,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Hourrank 21",
            "submessages": [],
            "timestamp": 1496260869,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/a6a0ff0a4a9a86ae7bc4524453d439bd?d=identicon&version=1",
            "client": "website",
            "content": "<p>Sounds fun, I just signed up :)</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 111530903,
            "is_me_message": false,
            "reactions": [
                {
                    "emoji_code": "1f44d",
                    "emoji_name": "+1",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "dangonrei@gmail.com",
                        "full_name": "Daniel Gonz\u00e1lez Reina (he) (S1'17)",
                        "id": 101095
                    },
                    "user_id": 101095
                }
            ],
            "recipient_id": 24954,
            "sender_email": "annie.cherk@gmail.com",
            "sender_full_name": "Annie Cherkaev (she/they) (m4'18)",
            "sender_id": 9502,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Hourrank 21",
            "submessages": [],
            "timestamp": 1496264366,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/5ab3c0306ee4ef8d2f926da8207cfbec9d4bf6e4?x=x&version=2",
            "client": "ZulipElectron",
            "content": "<p>For anyone at RC planning to do this in the building, we are going to grab space in Lovelace at 11 AM</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 111600942,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "jeffarn12@gmail.com",
            "sender_full_name": "Jeff Arn (S1'17)",
            "sender_id": 101079,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Hourrank 21",
            "submessages": [],
            "timestamp": 1496413827,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/a6a0ff0a4a9a86ae7bc4524453d439bd?d=identicon&version=1",
            "client": "website",
            "content": "<p>Anyone finish the first one? I pass the sample test cases but fail a few of the tests in the suite and I feel like I'm missing an edge case but I'm not sure what it is...</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 111603718,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "annie.cherk@gmail.com",
            "sender_full_name": "Annie Cherkaev (she/they) (m4'18)",
            "sender_id": 9502,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Hourrank 21",
            "submessages": [],
            "timestamp": 1496418381,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/a6a0ff0a4a9a86ae7bc4524453d439bd?d=identicon&version=1",
            "client": "website",
            "content": "<p>I tried filtering out non-positive velocities, but then saw that you are actually guaranteed positive velocities (and also positions!)</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 111603730,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "annie.cherk@gmail.com",
            "sender_full_name": "Annie Cherkaev (she/they) (m4'18)",
            "sender_id": 9502,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Hourrank 21",
            "submessages": [],
            "timestamp": 1496418417,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/5ab3c0306ee4ef8d2f926da8207cfbec9d4bf6e4?x=x&version=2",
            "client": "ZulipElectron",
            "content": "<p>Jeeeezzz numbers 2 and 3.... I need to study</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 111603924,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "jeffarn12@gmail.com",
            "sender_full_name": "Jeff Arn (S1'17)",
            "sender_id": 101079,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Hourrank 21",
            "submessages": [],
            "timestamp": 1496418827,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/5ab3c0306ee4ef8d2f926da8207cfbec9d4bf6e4?x=x&version=2",
            "client": "ZulipElectron",
            "content": "<p><span class=\"user-mention\" data-user-email=\"annie.cherk@gmail.com\" data-user-id=\"9502\">@Annie Cherkaev (S2'16)</span>  here was my solution for question 1:</p>\n<div class=\"codehilite\"><pre><span></span>def whoGetsTheCatch(n, x, X, V):\n  # Complete this function\n  # n = number of catchers\n  # x = pokemon location\n  # X = catchers location\n  # V = catchers velocity\n\n  time = []\n\n  for i in range(0, n):\n    time.append(abs(X[i] - x) / V[i])\n\n  fastest = min(time)\n\n  if time.count(fastest) &gt; 1:\n     return -1\n\n  for i in range(0, len(time)):\n     if time[i] == fastest:\n        return i;\n</pre></div>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 111604231,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "jeffarn12@gmail.com",
            "sender_full_name": "Jeff Arn (S1'17)",
            "sender_id": 101079,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Hourrank 21",
            "submessages": [],
            "timestamp": 1496419277,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/a6a0ff0a4a9a86ae7bc4524453d439bd?d=identicon&version=1",
            "client": "website",
            "content": "<p>hmmm I think I did about the same thing, I wonder what I'm missing... my solution is in haskell so slightly illegible but it was:</p>\n<div class=\"codehilite\"><pre><span></span>-- xs is the catchers&#39; locations\n-- vs is the catchers&#39; velocities\n-- x is the pokemon location\n\n    let sorted = sort $ zip (zipWith (\\y v-&gt; div (abs (x-y)) v) xs vs) [0..]\n    print $\n        if length (map fst sorted) == length (nub (map fst sorted))\n        then snd $ head sorted\n        else (-1)\n</pre></div>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 111605153,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "annie.cherk@gmail.com",
            "sender_full_name": "Annie Cherkaev (she/they) (m4'18)",
            "sender_id": 9502,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Hourrank 21",
            "submessages": [],
            "timestamp": 1496420937,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/a6a0ff0a4a9a86ae7bc4524453d439bd?d=identicon&version=1",
            "client": "website",
            "content": "<p>So that top line is doing:  <br>\n1.   make a list of |x - anElemOfXs| / anElemOfVs            (ie |x - Xs[i]| / Vs[i] )<br>\n2. sort them (and also store them in a tuple with their index)</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 111605169,
            "is_me_message": false,
            "last_edit_timestamp": 1496421101,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "annie.cherk@gmail.com",
            "sender_full_name": "Annie Cherkaev (she/they) (m4'18)",
            "sender_id": 9502,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Hourrank 21",
            "submessages": [],
            "timestamp": 1496420995,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/a6a0ff0a4a9a86ae7bc4524453d439bd?d=identicon&version=1",
            "client": "website",
            "content": "<p>and then the if is doing:<br>\n-  if there's a repeat time, return -1, or else return the index of the fastest one</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 111605219,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "annie.cherk@gmail.com",
            "sender_full_name": "Annie Cherkaev (she/they) (m4'18)",
            "sender_id": 9502,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Hourrank 21",
            "submessages": [],
            "timestamp": 1496421011,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/a6a0ff0a4a9a86ae7bc4524453d439bd?d=identicon&version=1",
            "client": "website",
            "content": "<p>Which looks like the same logic as what your solution does... I think. hmmm</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 111605234,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "annie.cherk@gmail.com",
            "sender_full_name": "Annie Cherkaev (she/they) (m4'18)",
            "sender_id": 9502,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Hourrank 21",
            "submessages": [],
            "timestamp": 1496421072,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/5ab3c0306ee4ef8d2f926da8207cfbec9d4bf6e4?x=x&version=2",
            "client": "ZulipElectron",
            "content": "<p><span class=\"user-mention\" data-user-email=\"annie.cherk@gmail.com\" data-user-id=\"9502\">@Annie Cherkaev (S2'16)</span>  Are you looking for a repeat time in general or only if the lowest time repeats? Repeat times are fine, but the criteria was to ensure that you return <code>-1</code> IFF two lowest times clashed.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 111606187,
            "is_me_message": false,
            "last_edit_timestamp": 1496423006,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "jeffarn12@gmail.com",
            "sender_full_name": "Jeff Arn (S1'17)",
            "sender_id": 101079,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Hourrank 21",
            "submessages": [],
            "timestamp": 1496422951,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/5ab3c0306ee4ef8d2f926da8207cfbec9d4bf6e4?x=x&version=2",
            "client": "ZulipElectron",
            "content": "<p>Apologies if your code answers that question... I don't know Haskell and that all looked like greek to me :)</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 111606192,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "jeffarn12@gmail.com",
            "sender_full_name": "Jeff Arn (S1'17)",
            "sender_id": 101079,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Hourrank 21",
            "submessages": [],
            "timestamp": 1496422973,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/a6a0ff0a4a9a86ae7bc4524453d439bd?d=identicon&version=1",
            "client": "website",
            "content": "<p>oh! you're right! that's the problem- I'm seeing if there are <em>any</em> duplicates! That makes so much more sense now, thanks!!</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 111606241,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "annie.cherk@gmail.com",
            "sender_full_name": "Annie Cherkaev (she/they) (m4'18)",
            "sender_id": 9502,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Hourrank 21",
            "submessages": [],
            "timestamp": 1496423080,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/5ab3c0306ee4ef8d2f926da8207cfbec9d4bf6e4?x=x&version=2",
            "client": "ZulipElectron",
            "content": "<p>Nice! Glad that helped.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 111606311,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "jeffarn12@gmail.com",
            "sender_full_name": "Jeff Arn (S1'17)",
            "sender_id": 101079,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Hourrank 21",
            "submessages": [],
            "timestamp": 1496423245,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/ec744a06627e6ec9061a398bc83ec7d196ec4d8e?x=x&version=2",
            "client": "website",
            "content": "<p>Anyone here interested in learning about automatic differentiation? </p>\n<p>The gist: A magical data type which computes the first derivative of your code when you use it like a regular number. </p>\n<p>If there's interest, I may schedule an informal talk.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 111758154,
            "is_me_message": false,
            "last_edit_timestamp": 1496768018,
            "reactions": [
                {
                    "emoji_code": "1f44d",
                    "emoji_name": "+1",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "vaibhavsagar@gmail.com",
                        "full_name": "Vaibhav Sagar (he) (F1'16)",
                        "id": 100041
                    },
                    "user_id": 100041
                },
                {
                    "emoji_code": "1f44d",
                    "emoji_name": "+1",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "alokbeniwal@gmail.com",
                        "full_name": "Alok Singh (S1'17)",
                        "id": 101076
                    },
                    "user_id": 101076
                }
            ],
            "recipient_id": 24954,
            "sender_email": "trbabb@gmail.com",
            "sender_full_name": "Tim Babb (S1'17)",
            "sender_id": 101091,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Automatic Differentiation",
            "submessages": [],
            "timestamp": 1496767977,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/ff7f41de2091a8d3f5ff0a0722bdeda1ab87faa3?x=x&version=2",
            "client": "website",
            "content": "<p>Yeah I'm interested!</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 111758214,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "jroutley@gmail.com",
            "sender_full_name": "James Routley (S1'17)",
            "sender_id": 101082,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Automatic Differentiation",
            "submessages": [],
            "timestamp": 1496768076,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/40e1eb4186c76edfecca264f74e088ed0e62af25?x=x&version=2",
            "client": "website",
            "content": "<p>Me <img alt=\":point_up_2:\" class=\"emoji\" src=\"/static/generated/emoji/images/emoji/unicode/1f446.png\" title=\":point_up_2:\"></p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 111758421,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "jaseemabid@gmail.com",
            "sender_full_name": "Jaseem Abid (he) (S1'17)",
            "sender_id": 101128,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Automatic Differentiation",
            "submessages": [],
            "timestamp": 1496768455,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/4687710da2244427f2d813b5e0f831f4?d=identicon&version=1",
            "client": "website",
            "content": "<p>Me, too.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 111758617,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "joshua.hudelson@gmail.com",
            "sender_full_name": "Joshua Hudelson (S1'17)",
            "sender_id": 101108,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Automatic Differentiation",
            "submessages": [],
            "timestamp": 1496768843,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/0e74dfe9b92822b1371cae0f22538b2e?d=identicon&version=1",
            "client": "website",
            "content": "<p>Interested.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 111759113,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "indradhanush.gupta@gmail.com",
            "sender_full_name": "Indradhanush Gupta (he) (S1'17)",
            "sender_id": 101105,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Automatic Differentiation",
            "submessages": [],
            "timestamp": 1496769644,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/661412d42ecbf0c0bd354116859a5af3562f8e5f?x=x&version=4",
            "client": "website",
            "content": "<p>yes!</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 111759118,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "veit@veitheller.de",
            "sender_full_name": "Veit Heller (he) (S1'17)",
            "sender_id": 101103,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Automatic Differentiation",
            "submessages": [],
            "timestamp": 1496769666,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/ec744a06627e6ec9061a398bc83ec7d196ec4d8e?x=x&version=2",
            "client": "website",
            "content": "<p><span class=\"user-mention\" data-user-email=\"jaseemabid@gmail.com\" data-user-id=\"101128\">@Jaseem Abid (S1'17)</span> Something just reminded me of a conversation we had a week ago about random floats. I mentioned <a href=\"http://allendowney.com/research/rand/downey07randfloat.pdf\" target=\"_blank\" title=\"http://allendowney.com/research/rand/downey07randfloat.pdf\">this paper</a>, but I forget if I sent it to you.</p>\n<p>Picking a \"random\" float like <code>rand() / RAND_MAX</code> excludes the vast majority of floating point numbers between 0 and 1, since most of them don't have rational representations with a denominator less than RAND_MAX! The paper shows how to pick floats where all representable numbers are possible, and also maintain a uniform distribution. Also great for understanding how floating point works.</p>\n<p>(<span class=\"user-mention\" data-user-email=\"joshua.hudelson@gmail.com\" data-user-id=\"101108\">@Joshua Hudelson (S1'17)</span> I think it was you who was just asking about RNGs? Might be of interest to you too).</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 111759584,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "trbabb@gmail.com",
            "sender_full_name": "Tim Babb (S1'17)",
            "sender_id": 101091,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Pseudorandom floating point numbers",
            "submessages": [],
            "timestamp": 1496770532,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/40e1eb4186c76edfecca264f74e088ed0e62af25?x=x&version=2",
            "client": "website",
            "content": "<p>This is awesome. Will surely read.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 111759659,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "jaseemabid@gmail.com",
            "sender_full_name": "Jaseem Abid (he) (S1'17)",
            "sender_id": 101128,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Pseudorandom floating point numbers",
            "submessages": [],
            "timestamp": 1496770628,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/4687710da2244427f2d813b5e0f831f4?d=identicon&version=1",
            "client": "website",
            "content": "<p>Thanks!</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 111759662,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "joshua.hudelson@gmail.com",
            "sender_full_name": "Joshua Hudelson (S1'17)",
            "sender_id": 101108,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Pseudorandom floating point numbers",
            "submessages": [],
            "timestamp": 1496770634,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/cdcdcd18a8a06824768b7b3d6c04eed0a3f0529c?x=x&version=2",
            "client": "website",
            "content": "<p>It's super cool, one of the magics of CS. I used it to find the max value in Perlin Noise at some point <a href=\"https://github.com/rudi-c/perlin-range\" target=\"_blank\" title=\"https://github.com/rudi-c/perlin-range\">https://github.com/rudi-c/perlin-range</a></p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 111759668,
            "is_me_message": false,
            "reactions": [
                {
                    "emoji_code": "1f62f",
                    "emoji_name": "hushed",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "trbabb@gmail.com",
                        "full_name": "Tim Babb (S1'17)",
                        "id": 101091
                    },
                    "user_id": 101091
                }
            ],
            "recipient_id": 24954,
            "sender_email": "rudichen@gmail.com",
            "sender_full_name": "Rudi Chen (S1'17)",
            "sender_id": 101102,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Automatic Differentiation",
            "submessages": [],
            "timestamp": 1496770644,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/40e1eb4186c76edfecca264f74e088ed0e62af25?x=x&version=2",
            "client": "website",
            "content": "<p>Since we are sharing interesting math papers, here is one of my fav ones. The paper (presentation) talks about the nuances of the IEEE notation and how to do better.   <a href=\"/user_uploads/13/OwYOKAw3teZlBbPQ26Zui47X/The-end-of-numerical-error.pdf\" target=\"_blank\" title=\"The-end-of-numerical-error.pdf\">The-end-of-numerical-error.pdf</a></p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 111759734,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "jaseemabid@gmail.com",
            "sender_full_name": "Jaseem Abid (he) (S1'17)",
            "sender_id": 101128,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Pseudorandom floating point numbers",
            "submessages": [],
            "timestamp": 1496770766,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/ec744a06627e6ec9061a398bc83ec7d196ec4d8e?x=x&version=2",
            "client": "website",
            "content": "<p><span class=\"user-mention\" data-user-email=\"jaseemabid@gmail.com\" data-user-id=\"101128\">@Jaseem Abid (S1'17)</span> Wow, that's a cool idea. Now I want to use that data type!</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 111760839,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "trbabb@gmail.com",
            "sender_full_name": "Tim Babb (S1'17)",
            "sender_id": 101091,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Pseudorandom floating point numbers",
            "submessages": [],
            "timestamp": 1496772608,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/40e1eb4186c76edfecca264f74e088ed0e62af25?x=x&version=2",
            "client": "website",
            "content": "<p>Focus :D :D</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 111760867,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "jaseemabid@gmail.com",
            "sender_full_name": "Jaseem Abid (he) (S1'17)",
            "sender_id": 101128,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Pseudorandom floating point numbers",
            "submessages": [],
            "timestamp": 1496772666,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/3f6bef626649c46b4cc3fd9f67c151a19170da5e?x=x&version=21",
            "client": "website",
            "content": "<p>Interested in this as well.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 111761124,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "jkozak@fmail.co.uk",
            "sender_full_name": "Jake \u26e4 Prozvyshe (they) (W1'17)",
            "sender_id": 8478,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Automatic Differentiation",
            "submessages": [],
            "timestamp": 1496773016,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/3f6bef626649c46b4cc3fd9f67c151a19170da5e?x=x&version=21",
            "client": "website",
            "content": "<p>BTW, <span class=\"user-mention\" data-user-email=\"trbabb@gmail.com\" data-user-id=\"101091\">@Tim Babb (S1'17)</span> , here's the book I mentioned before when we were discussing automatic differentiation yesterday: <a href=\"http://djm.cc/library/Calculus_Made_Easy_Thompson.pdf\" target=\"_blank\" title=\"http://djm.cc/library/Calculus_Made_Easy_Thompson.pdf\">http://djm.cc/library/Calculus_Made_Easy_Thompson.pdf</a></p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 111761145,
            "is_me_message": false,
            "reactions": [
                {
                    "emoji_code": "1f4d1",
                    "emoji_name": "bookmark_tabs",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "trbabb@gmail.com",
                        "full_name": "Tim Babb (S1'17)",
                        "id": 101091
                    },
                    "user_id": 101091
                },
                {
                    "emoji_code": "1f44d",
                    "emoji_name": "+1",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "trbabb@gmail.com",
                        "full_name": "Tim Babb (S1'17)",
                        "id": 101091
                    },
                    "user_id": 101091
                }
            ],
            "recipient_id": 24954,
            "sender_email": "jkozak@fmail.co.uk",
            "sender_full_name": "Jake \u26e4 Prozvyshe (they) (W1'17)",
            "sender_id": 8478,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Automatic Differentiation",
            "submessages": [],
            "timestamp": 1496773062,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/3f6bef626649c46b4cc3fd9f67c151a19170da5e?x=x&version=21",
            "client": "website",
            "content": "<p>This was a book written back when the term \"reckoning\" was more common than \"computing\". I still wish I could live in the world of steampunk reckoning machines and be a Reckoning Scientist.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 111761191,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "jkozak@fmail.co.uk",
            "sender_full_name": "Jake \u26e4 Prozvyshe (they) (W1'17)",
            "sender_id": 8478,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Automatic Differentiation",
            "submessages": [],
            "timestamp": 1496773108,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/3f6bef626649c46b4cc3fd9f67c151a19170da5e?x=x&version=21",
            "client": "website",
            "content": "<p>Chapter IV is the part that I referred to yesterday where the author does handwavy math with infinitesimals which is vaguely related to automatic differentiation.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 111761288,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "jkozak@fmail.co.uk",
            "sender_full_name": "Jake \u26e4 Prozvyshe (they) (W1'17)",
            "sender_id": 8478,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Automatic Differentiation",
            "submessages": [],
            "timestamp": 1496773252,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/3bd35932199b20a4bbd31d285f204d6784a3c7bd?x=x&version=2",
            "client": "website",
            "content": "<p>I'm interested too!</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 111763390,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "dangonrei@gmail.com",
            "sender_full_name": "Daniel Gonz\u00e1lez Reina (he) (S1'17)",
            "sender_id": 101095,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Automatic Differentiation",
            "submessages": [],
            "timestamp": 1496776574,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/4401c7ea9c62aa8e62f7c8907b1db771?d=identicon&version=1",
            "client": "website",
            "content": "<p>\"TO DELIVER YOU FROM THE PRELIMINARY TERRORS\" has to be the best chapter title in the history of mathematics books!</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 111763571,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "katz.stephenj@gmail.com",
            "sender_full_name": "Steve Katz (he) (F'13)",
            "sender_id": 2872,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Automatic Differentiation",
            "submessages": [],
            "timestamp": 1496776922,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/661412d42ecbf0c0bd354116859a5af3562f8e5f?x=x&version=4",
            "client": "website",
            "content": "<p>neat, <span class=\"user-mention\" data-user-email=\"trbabb@gmail.com\" data-user-id=\"101091\">@Tim Babb (S1'17)</span>! i had(/have) a bug in zeptos random number generator that stumped me for quite some time (because i actually implemented RSA when it turned up and i had to go from there into the math package to find it... such is the way of the lone warrior): <a href=\"https://github.com/zepto-lang/zepto-stdlib/issues/1\" target=\"_blank\" title=\"https://github.com/zepto-lang/zepto-stdlib/issues/1\">https://github.com/zepto-lang/zepto-stdlib/issues/1</a></p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 111767030,
            "is_me_message": false,
            "reactions": [
                {
                    "emoji_code": "1f3b2",
                    "emoji_name": "game_die",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "trbabb@gmail.com",
                        "full_name": "Tim Babb (S1'17)",
                        "id": 101091
                    },
                    "user_id": 101091
                }
            ],
            "recipient_id": 24954,
            "sender_email": "veit@veitheller.de",
            "sender_full_name": "Veit Heller (he) (S1'17)",
            "sender_id": 101103,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Pseudorandom floating point numbers",
            "submessages": [],
            "timestamp": 1496782395,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/b08b367b726fe19144e009125698285f7b7c0d2d?x=x&version=4",
            "client": "website",
            "content": "<p>yes please!</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 111798529,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "n.saphra@ed.ac.uk",
            "sender_full_name": "Naomi Saphra (m3'18)",
            "sender_id": 100801,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Automatic Differentiation",
            "submessages": [],
            "timestamp": 1496849777,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/3f6bef626649c46b4cc3fd9f67c151a19170da5e?x=x&version=21",
            "client": "website",
            "content": "<p><span class=\"user-mention\" data-user-email=\"katz.stephenj@gmail.com\" data-user-id=\"2872\">@Steve Katz (F'13)</span> Isn't it great?</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 111802540,
            "is_me_message": false,
            "reactions": [
                {
                    "emoji_code": "1f44d",
                    "emoji_name": "+1",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "katz.stephenj@gmail.com",
                        "full_name": "Steve Katz (he) (F'13)",
                        "id": 2872
                    },
                    "user_id": 2872
                }
            ],
            "recipient_id": 24954,
            "sender_email": "jkozak@fmail.co.uk",
            "sender_full_name": "Jake \u26e4 Prozvyshe (they) (W1'17)",
            "sender_id": 8478,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Automatic Differentiation",
            "submessages": [],
            "timestamp": 1496856641,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/661412d42ecbf0c0bd354116859a5af3562f8e5f?x=x&version=4",
            "client": "website",
            "content": "<p>do we have a time yet?</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 111802633,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "veit@veitheller.de",
            "sender_full_name": "Veit Heller (he) (S1'17)",
            "sender_id": 101103,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Automatic Differentiation",
            "submessages": [],
            "timestamp": 1496856805,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/3f6bef626649c46b4cc3fd9f67c151a19170da5e?x=x&version=21",
            "client": "website",
            "content": "<p><span class=\"user-mention\" data-user-email=\"veit@veitheller.de\" data-user-id=\"101103\">@Veit Heller (S1'17)</span> nothing on the calendar yet as far as I can see</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 111802761,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "jkozak@fmail.co.uk",
            "sender_full_name": "Jake \u26e4 Prozvyshe (they) (W1'17)",
            "sender_id": 8478,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Automatic Differentiation",
            "submessages": [],
            "timestamp": 1496856985,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/ec744a06627e6ec9061a398bc83ec7d196ec4d8e?x=x&version=2",
            "client": "website",
            "content": "<p>Will add something shortly. stand by</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 111802942,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "trbabb@gmail.com",
            "sender_full_name": "Tim Babb (S1'17)",
            "sender_id": 101091,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Automatic Differentiation",
            "submessages": [],
            "timestamp": 1496857298,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/ec744a06627e6ec9061a398bc83ec7d196ec4d8e?x=x&version=2",
            "client": "website",
            "content": "<p>How's Thurs 5p sound?</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 111802999,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "trbabb@gmail.com",
            "sender_full_name": "Tim Babb (S1'17)",
            "sender_id": 101091,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Automatic Differentiation",
            "submessages": [],
            "timestamp": 1496857344,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/661412d42ecbf0c0bd354116859a5af3562f8e5f?x=x&version=4",
            "client": "website",
            "content": "<p>thursday as in tomorrow, right?</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 111803002,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "veit@veitheller.de",
            "sender_full_name": "Veit Heller (he) (S1'17)",
            "sender_id": 101103,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Automatic Differentiation",
            "submessages": [],
            "timestamp": 1496857363,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/661412d42ecbf0c0bd354116859a5af3562f8e5f?x=x&version=4",
            "client": "website",
            "content": "<p>sounds good for me <img alt=\":+1:\" class=\"emoji\" src=\"/static/generated/emoji/images/emoji/unicode/1f44d.png\" title=\":+1:\"></p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 111803019,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "veit@veitheller.de",
            "sender_full_name": "Veit Heller (he) (S1'17)",
            "sender_id": 101103,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Automatic Differentiation",
            "submessages": [],
            "timestamp": 1496857424,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/a7cfba3d94a1b727e5d91ed13aad1a25ff02ba79?x=x&version=2",
            "client": "website",
            "content": "<p>Isn't there going to be presentations at 5:30p? Is 30 mins enough time?</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 111803060,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "business@stefan-lesser.com",
            "sender_full_name": "Stefan Lesser (S1'17)",
            "sender_id": 101083,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Automatic Differentiation",
            "submessages": [],
            "timestamp": 1496857452,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/ec744a06627e6ec9061a398bc83ec7d196ec4d8e?x=x&version=2",
            "client": "website",
            "content": "<p>Ah, right, forgot about that. (It's not an event on the calendar for some reason).</p>\n<p>4p?</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 111803154,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "trbabb@gmail.com",
            "sender_full_name": "Tim Babb (S1'17)",
            "sender_id": 101091,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Automatic Differentiation",
            "submessages": [],
            "timestamp": 1496857634,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/661412d42ecbf0c0bd354116859a5af3562f8e5f?x=x&version=4",
            "client": "website",
            "content": "<p><img alt=\":+1:\" class=\"emoji\" src=\"/static/generated/emoji/images/emoji/unicode/1f44d.png\" title=\":+1:\"> again (also, good catch <span class=\"user-mention\" data-user-email=\"business@stefan-lesser.com\" data-user-id=\"101083\">@Stefan Lesser (S1'17)</span>)</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 111803206,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "veit@veitheller.de",
            "sender_full_name": "Veit Heller (he) (S1'17)",
            "sender_id": 101103,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Automatic Differentiation",
            "submessages": [],
            "timestamp": 1496857690,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/3bd35932199b20a4bbd31d285f204d6784a3c7bd?x=x&version=2",
            "client": "website",
            "content": "<p>Good for mee too!</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 111808740,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "dangonrei@gmail.com",
            "sender_full_name": "Daniel Gonz\u00e1lez Reina (he) (S1'17)",
            "sender_id": 101095,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Automatic Differentiation",
            "submessages": [],
            "timestamp": 1496867761,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/07a5ba69595cc839c85aabdb8ffeabee6ad0b83e?x=x&version=1",
            "client": "website",
            "content": "<p>I can't be there in person, but if there are slides/notes you're willing to share, I'd very much appreciate seeing them afterward.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 111818124,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "sean.martin@nyu.edu",
            "sender_full_name": "Sean Martin (they) (S2'16)",
            "sender_id": 9495,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Automatic Differentiation",
            "submessages": [],
            "timestamp": 1496886510,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/1d98a6bad543795875e03f3ec2d8f6d3a8c8b138?x=x&version=1",
            "client": "website",
            "content": "<p>Same as Sean</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 111819070,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "sean.talts@gmail.com",
            "sender_full_name": "Sean Talts (F1'16)",
            "sender_id": 9337,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Automatic Differentiation",
            "submessages": [],
            "timestamp": 1496888887,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/ec744a06627e6ec9061a398bc83ec7d196ec4d8e?x=x&version=2",
            "client": "website",
            "content": "<p>Some resources:</p>\n<p><a href=\"http://alexey.radul.name/ideas/2013/introduction-to-automatic-differentiation/\" target=\"_blank\" title=\"http://alexey.radul.name/ideas/2013/introduction-to-automatic-differentiation/\">Intro to automatic differentiation</a><br>\n<a href=\"http://www.autodiff.org/\" target=\"_blank\" title=\"http://www.autodiff.org/\">Autodiff.org - Libraries and resources</a><br>\n<a href=\"https://github.com/trbabb/geomc/blob/master/geomc/function/Dual.h\" target=\"_blank\" title=\"https://github.com/trbabb/geomc/blob/master/geomc/function/Dual.h\">My C++ implementation</a> (docs unfinished)<br>\n<a href=\"https://github.com/trbabb/kalman\" target=\"_blank\" title=\"https://github.com/trbabb/kalman\">Implementing an extended Kalman filter with AD</a></p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 111857515,
            "is_me_message": false,
            "last_edit_timestamp": 1496955567,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "trbabb@gmail.com",
            "sender_full_name": "Tim Babb (S1'17)",
            "sender_id": 101091,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Automatic Differentiation",
            "submessages": [],
            "timestamp": 1496955403,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/661412d42ecbf0c0bd354116859a5af3562f8e5f?x=x&version=4",
            "client": "website",
            "content": "<p>thank you! this was amazingly simple. i love it!</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 111857528,
            "is_me_message": false,
            "reactions": [
                {
                    "emoji_code": "1f44d",
                    "emoji_name": "+1",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "trbabb@gmail.com",
                        "full_name": "Tim Babb (S1'17)",
                        "id": 101091
                    },
                    "user_id": 101091
                }
            ],
            "recipient_id": 24954,
            "sender_email": "veit@veitheller.de",
            "sender_full_name": "Veit Heller (he) (S1'17)",
            "sender_id": 101103,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Automatic Differentiation",
            "submessages": [],
            "timestamp": 1496955451,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/3bd35932199b20a4bbd31d285f204d6784a3c7bd?x=x&version=2",
            "client": "website",
            "content": "<p>Hi! Tomorrow there's another challenge in hackerrank, from 11 am to 2 pm. A total of 3 hours to solve 5 problems, so my guess is that we'll have easier problems than last time in HourRank 21.</p>\n<p><span class=\"user-mention\" data-user-email=\"jeffarn12@gmail.com\" data-user-id=\"101079\">@Jeff Arn (S1'17)</span> <span class=\"user-mention\" data-user-email=\"abehmiel@gmail.com\" data-user-id=\"101122\">@Abraham Hmiel (S1'17)</span> <span class=\"user-mention\" data-user-email=\"mattmurch@gmail.com\" data-user-id=\"100783\">@Matthew Murch (SP2'17)</span> are you interested in doing them together?</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 112297396,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "dangonrei@gmail.com",
            "sender_full_name": "Daniel Gonz\u00e1lez Reina (he) (S1'17)",
            "sender_id": 101095,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "[CONTEST] 101 Hack",
            "submessages": [],
            "timestamp": 1497900524,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/9215bb579885c95648d66b39d99ae45c4550d564?x=x&version=4",
            "client": "website",
            "content": "<p>I haven't heard of this before. Is there an incentive?</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 112297414,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "mattmurch@gmail.com",
            "sender_full_name": "Matthew Murch (SP2'17)",
            "sender_id": 100783,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "[CONTEST] 101 Hack",
            "submessages": [],
            "timestamp": 1497900592,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/3bd35932199b20a4bbd31d285f204d6784a3c7bd?x=x&version=2",
            "client": "website",
            "content": "<p><span class=\"user-mention\" data-user-email=\"mattmurch@gmail.com\" data-user-id=\"100783\">@Matthew Murch (SP2'17)</span> Here's the <a href=\"https://www.hackerrank.com/101hack50\" target=\"_blank\" title=\"https://www.hackerrank.com/101hack50\">link to the contest page</a>. You can win a shirt if you end up in the top 10, although it is really hard to achieve this because there are people really good doing those competitions. The biggest incentive for me is to practice algorithms and be able to discuss them with other people that worked on the same problems.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 112298070,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "dangonrei@gmail.com",
            "sender_full_name": "Daniel Gonz\u00e1lez Reina (he) (S1'17)",
            "sender_id": 101095,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "[CONTEST] 101 Hack",
            "submessages": [],
            "timestamp": 1497901615,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/5ab3c0306ee4ef8d2f926da8207cfbec9d4bf6e4?x=x&version=2",
            "client": "ZulipAndroid",
            "content": "<p><span class=\"user-mention\" data-user-email=\"dangonrei@gmail.com\" data-user-id=\"101095\">@Daniel Gonz\u00e1lez Reina (S1'17)</span> I'm definitely in</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 112301673,
            "is_me_message": false,
            "reactions": [
                {
                    "emoji_code": "1f389",
                    "emoji_name": "tada",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "dangonrei@gmail.com",
                        "full_name": "Daniel Gonz\u00e1lez Reina (he) (S1'17)",
                        "id": 101095
                    },
                    "user_id": 101095
                }
            ],
            "recipient_id": 24954,
            "sender_email": "jeffarn12@gmail.com",
            "sender_full_name": "Jeff Arn (S1'17)",
            "sender_id": 101079,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "[CONTEST] 101 Hack",
            "submessages": [],
            "timestamp": 1497907727,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/ff7f41de2091a8d3f5ff0a0722bdeda1ab87faa3?x=x&version=2",
            "client": "website",
            "content": "<p>I've also signed up</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 112302583,
            "is_me_message": false,
            "reactions": [
                {
                    "emoji_code": "1f389",
                    "emoji_name": "tada",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "dangonrei@gmail.com",
                        "full_name": "Daniel Gonz\u00e1lez Reina (he) (S1'17)",
                        "id": 101095
                    },
                    "user_id": 101095
                }
            ],
            "recipient_id": 24954,
            "sender_email": "jroutley@gmail.com",
            "sender_full_name": "James Routley (S1'17)",
            "sender_id": 101082,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "[CONTEST] 101 Hack",
            "submessages": [],
            "timestamp": 1497909393,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/3bd35932199b20a4bbd31d285f204d6784a3c7bd?x=x&version=2",
            "client": "website",
            "content": "<p>Great! I think I'll book Lovelace for the contest</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 112303311,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "dangonrei@gmail.com",
            "sender_full_name": "Daniel Gonz\u00e1lez Reina (he) (S1'17)",
            "sender_id": 101095,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "[CONTEST] 101 Hack",
            "submessages": [],
            "timestamp": 1497910568,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/3bd35932199b20a4bbd31d285f204d6784a3c7bd?x=x&version=2",
            "client": "website",
            "content": "<p><span class=\"user-mention\" data-user-email=\"annie.cherk@gmail.com\" data-user-id=\"9502\">@Annie Cherkaev (S2'16)</span> Sorry I forgot to mention you! Would you like to join us in this one too?</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 112303322,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "dangonrei@gmail.com",
            "sender_full_name": "Daniel Gonz\u00e1lez Reina (he) (S1'17)",
            "sender_id": 101095,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "[CONTEST] 101 Hack",
            "submessages": [],
            "timestamp": 1497910595,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/3bd35932199b20a4bbd31d285f204d6784a3c7bd?x=x&version=2",
            "client": "website",
            "content": "<p>I just created <a href=\"https://www.recurse.com/calendar/211\" target=\"_blank\" title=\"https://www.recurse.com/calendar/211\">this event</a> in the calendar, although I have no idea about how to do the RSVP things.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 112303668,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "dangonrei@gmail.com",
            "sender_full_name": "Daniel Gonz\u00e1lez Reina (he) (S1'17)",
            "sender_id": 101095,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "[CONTEST] 101 Hack",
            "submessages": [],
            "timestamp": 1497911084,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/6485c74622306264ff53449c6f0ca540?d=identicon&version=1",
            "client": "website",
            "content": "<p>Look over there ----&gt; <a href=\"https://recurse.zulipchat.com/#narrow/stream/RSVPs/topic/algorithms.20.20.3E.20.5BCONTEST.5D.20101.20Hack\" target=\"_blank\" title=\"https://recurse.zulipchat.com/#narrow/stream/RSVPs/topic/algorithms.20.20.3E.20.5BCONTEST.5D.20101.20Hack\">https://recurse.zulipchat.com/#narrow/stream/RSVPs/topic/algorithms.20.20.3E.20.5BCONTEST.5D.20101.20Hack</a></p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 112303899,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "iain@mccoy.id.au",
            "sender_full_name": "Iain McCoy (he) (SP2'17)",
            "sender_id": 100806,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "[CONTEST] 101 Hack",
            "submessages": [],
            "timestamp": 1497911465,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/6485c74622306264ff53449c6f0ca540?d=identicon&version=1",
            "client": "website",
            "content": "<p>(you just create a topic, grab the calendar url, and do <code>rsvp init $url</code> in the stream)</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 112303905,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "iain@mccoy.id.au",
            "sender_full_name": "Iain McCoy (he) (SP2'17)",
            "sender_id": 100806,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "[CONTEST] 101 Hack",
            "submessages": [],
            "timestamp": 1497911488,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/a6a0ff0a4a9a86ae7bc4524453d439bd?d=identicon&version=1",
            "client": "website",
            "content": "<p><span class=\"user-mention\" data-user-email=\"dangonrei@gmail.com\" data-user-id=\"101095\">@Daniel Gonz\u00e1lez Reina (S1'17)</span> Thanks for the offer but I think 3 hours is slightly more than I want to dedicate to a programming competition on a Tuesday :) I'm thinking of trying the next 1 hour one, though, on July 2nd</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 112304678,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "annie.cherk@gmail.com",
            "sender_full_name": "Annie Cherkaev (she/they) (m4'18)",
            "sender_id": 9502,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "[CONTEST] 101 Hack",
            "submessages": [],
            "timestamp": 1497912919,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/5ab3c0306ee4ef8d2f926da8207cfbec9d4bf6e4?x=x&version=2",
            "client": "ZulipElectron",
            "content": "<p>I'm in lovelace for anyone who is doing 101 hack.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 112330551,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "jeffarn12@gmail.com",
            "sender_full_name": "Jeff Arn (S1'17)",
            "sender_id": 101079,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "[CONTEST] 101 Hack",
            "submessages": [],
            "timestamp": 1497970541,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/3bd35932199b20a4bbd31d285f204d6784a3c7bd?x=x&version=2",
            "client": "website",
            "content": "<p>I'm here now!</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 112331118,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "dangonrei@gmail.com",
            "sender_full_name": "Daniel Gonz\u00e1lez Reina (he) (S1'17)",
            "sender_id": 101095,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "[CONTEST] 101 Hack",
            "submessages": [],
            "timestamp": 1497971428,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/3bd35932199b20a4bbd31d285f204d6784a3c7bd?x=x&version=2",
            "client": "website",
            "content": "<p>Well, this one was really hard to, without taking the first problem into account.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 112338497,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "dangonrei@gmail.com",
            "sender_full_name": "Daniel Gonz\u00e1lez Reina (he) (S1'17)",
            "sender_id": 101095,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "[CONTEST] 101 Hack",
            "submessages": [],
            "timestamp": 1497983263,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/3bd35932199b20a4bbd31d285f204d6784a3c7bd?x=x&version=2",
            "client": "website",
            "content": "<p>I'd love if someone more experienced in solving algorithms could go through them with us, and we could ask questions about why something was done in a specific way.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 112338541,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "dangonrei@gmail.com",
            "sender_full_name": "Daniel Gonz\u00e1lez Reina (he) (S1'17)",
            "sender_id": 101095,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "[CONTEST] 101 Hack",
            "submessages": [],
            "timestamp": 1497983287,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/3bd35932199b20a4bbd31d285f204d6784a3c7bd?x=x&version=2",
            "client": "website",
            "content": "<p>Any volunteers? :)</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 112338543,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "dangonrei@gmail.com",
            "sender_full_name": "Daniel Gonz\u00e1lez Reina (he) (S1'17)",
            "sender_id": 101095,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "[CONTEST] 101 Hack",
            "submessages": [],
            "timestamp": 1497983295,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/4c1c5789a9ec48818bbc90f3fdc324560d9a2021?x=x&version=2",
            "client": "website",
            "content": "<p>These are the visualizations I found for the presentation I gave today -- I think <span class=\"user-mention\" data-user-email=\"jeffarn12@gmail.com\" data-user-id=\"101079\">@Jeff Arn (S1'17)</span> at least expressed interest in seeing them:<br>\nBinary/linear search: <a href=\"https://www.cs.usfca.edu/~galles/visualization/Search.html\" target=\"_blank\" title=\"https://www.cs.usfca.edu/~galles/visualization/Search.html\">https://www.cs.usfca.edu/~galles/visualization/Search.html</a><br>\nBST: <a href=\"https://cs.usfca.edu/~galles/visualization/BST.html\" target=\"_blank\" title=\"https://cs.usfca.edu/~galles/visualization/BST.html\">https://cs.usfca.edu/~galles/visualization/BST.html</a><br>\nRed-black tree: <a href=\"http://cs.usfca.edu/~galles/visualization/RedBlack.html\" target=\"_blank\" title=\"http://cs.usfca.edu/~galles/visualization/RedBlack.html\">http://cs.usfca.edu/~galles/visualization/RedBlack.html</a><br>\nB-tree: <a href=\"https://www.cs.usfca.edu/~galles/visualization/BTree.html\" target=\"_blank\" title=\"https://www.cs.usfca.edu/~galles/visualization/BTree.html\">https://www.cs.usfca.edu/~galles/visualization/BTree.html</a><br>\nAnd hash tables, which I didn't get to: <a href=\"http://cs.usfca.edu/~galles/visualization/OpenHash.html\" target=\"_blank\" title=\"http://cs.usfca.edu/~galles/visualization/OpenHash.html\">http://cs.usfca.edu/~galles/visualization/OpenHash.html</a></p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 112471446,
            "is_me_message": false,
            "reactions": [
                {
                    "emoji_code": "1f44d",
                    "emoji_name": "+1",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "dabbagh.aos@gmail.com",
                        "full_name": "Aos Dabbagh (S2'17)",
                        "id": 101320
                    },
                    "user_id": 101320
                }
            ],
            "recipient_id": 24954,
            "sender_email": "logan.buckley@gmail.com",
            "sender_full_name": "Logan Buckley (S1'17)",
            "sender_id": 101096,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Search tree visualizations",
            "submessages": [],
            "timestamp": 1498179983,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/5ab3c0306ee4ef8d2f926da8207cfbec9d4bf6e4?x=x&version=2",
            "client": "ZulipElectron",
            "content": "<p><span class=\"user-mention\" data-user-email=\"logan.buckley@gmail.com\" data-user-id=\"101096\">@Logan Buckley (S1'17)</span> thank you for sharing. These are great!</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 112493546,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "jeffarn12@gmail.com",
            "sender_full_name": "Jeff Arn (S1'17)",
            "sender_id": 101079,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Search tree visualizations",
            "submessages": [],
            "timestamp": 1498230382,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/5ab3c0306ee4ef8d2f926da8207cfbec9d4bf6e4?x=x&version=2",
            "client": "ZulipElectron",
            "content": "<p>If anyone likes using Anki to study, I've made some decks for the time complexity of the most common data structures and algorithms. I'm attaching them here. If it helps anyone study then awesome, but a disclaimer that I'm by no means adept with Algorithms. I use Big-O only in the cards (with a few exceptions) and the info is pulled from wikipedia.</p>\n<p>If anyone wants to use this and has any additions or fact checks, please feel free to adapt them and share them back :)<br>\n<a href=\"/user_uploads/13/5FyttwQ_PilzfW_ffqtmMc97/Data-Structures.apkg\" target=\"_blank\" title=\"Data-Structures.apkg\">Data-Structures.apkg</a></p>\n<p><a href=\"/user_uploads/13/EH4hMI9A8asyqU2IzBbf7BRW/Algorithms.apkg\" target=\"_blank\" title=\"Algorithms.apkg\">Algorithms.apkg</a></p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 112504776,
            "is_me_message": false,
            "last_edit_timestamp": 1498248763,
            "reactions": [
                {
                    "emoji_code": "1f4af",
                    "emoji_name": "100",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "rosenzweig.ea@gmail.com",
                        "full_name": "Elizabeth Rosenzweig (she) (S2'17)",
                        "id": 101481
                    },
                    "user_id": 101481
                }
            ],
            "recipient_id": 24954,
            "sender_email": "jeffarn12@gmail.com",
            "sender_full_name": "Jeff Arn (S1'17)",
            "sender_id": 101079,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Anki Decks for Data Structures and Algorithms",
            "submessages": [],
            "timestamp": 1498248750,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/32721626292fa2708ee74d852696e44f426cd631?x=x&version=2",
            "client": "website",
            "content": "<p>Thanks <span class=\"user-mention\" data-user-email=\"jeffarn12@gmail.com\" data-user-id=\"101079\">@Jeff Arn (S1'17)</span> ! I am going to start studying DS&amp;A soon. I am planning on building a vue flashcards web app but I might use anki in the meantime</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 112659996,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "dabbagh.aos@gmail.com",
            "sender_full_name": "Aos Dabbagh (S2'17)",
            "sender_id": 101320,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Anki Decks for Data Structures and Algorithms",
            "submessages": [],
            "timestamp": 1498589364,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/4c1c5789a9ec48818bbc90f3fdc324560d9a2021?x=x&version=2",
            "client": "website",
            "content": "<p><span class=\"user-mention\" data-user-email=\"moniquetuin2@gmail.com\" data-user-id=\"101478\">@Monique Tuin</span> (is that the right Monique?) this is the thread I was talking about. There's also these, which are for more specialized algorithms but they're amazing visuals: <a href=\"https://bost.ocks.org/mike/algorithms/\" target=\"_blank\" title=\"https://bost.ocks.org/mike/algorithms/\">https://bost.ocks.org/mike/algorithms/</a></p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 112980368,
            "is_me_message": false,
            "reactions": [
                {
                    "emoji_code": "1f389",
                    "emoji_name": "tada",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "moniquetuin2@gmail.com",
                        "full_name": "Monique Tuin (S2'17)",
                        "id": 101478
                    },
                    "user_id": 101478
                }
            ],
            "recipient_id": 24954,
            "sender_email": "logan.buckley@gmail.com",
            "sender_full_name": "Logan Buckley (S1'17)",
            "sender_id": 101096,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Search tree visualizations",
            "submessages": [],
            "timestamp": 1499277831,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/db3bb2e8cfa9c62e206a0fa100a024da6f6e41df?x=x&version=4",
            "client": "website",
            "content": "<p>This is a pretty specialized question. I'm trying to convert <a href=\"http://fmv.jku.at/tracecheck/README.tracecheck\" target=\"_blank\" title=\"http://fmv.jku.at/tracecheck/README.tracecheck\">TraceCheck</a> proofs of SAT unsatisfiability into actual proofs using resolution as a deduction rule. It's all conceptually straightforward except for the bit of sorting the antecedents. That doc (and pretty much everything else I could find) just says the checker will sort them. I get the feeling that someone who knows SAT solvers would know how to do this.</p>\n<p>Incidentally, I also tried looking at the \"simple\" tracecheck verifier <a href=\"http://www.satcompetition.org/2013/stc.c\" target=\"_blank\" title=\"http://www.satcompetition.org/2013/stc.c\">stc.c</a> but found that code almost unreadable, and am still not sure it actually sorts the antecedents in a meaningful way. I wouldn't be surprised if it just decides whether a resolution proof exists.</p>\n<p>For reference, the clearest explanation of TraceCheck I found is <a href=\"http://www.easychair.org/smart-program/VSL2014/APPA-invited-paper-2.pdf\" target=\"_blank\" title=\"http://www.easychair.org/smart-program/VSL2014/APPA-invited-paper-2.pdf\">Satisfiability Solvers</a> by Marijn Heule and Armin Biere.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 114878060,
            "is_me_message": false,
            "last_edit_timestamp": 1503327537,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "raph.levien@gmail.com",
            "sender_full_name": "Raph Levien (F1'17)",
            "sender_id": 101701,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Does anybody know how to sort antecedents in TraceCheck?",
            "submessages": [],
            "timestamp": 1503326884,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/db3bb2e8cfa9c62e206a0fa100a024da6f6e41df?x=x&version=4",
            "client": "website",
            "content": "<p>If nobody has the answer at the ready, this is something I'd love to pair on. I think the answer is some variant of topological sort. I already have a pretty good idea what the constraints are, but the precise solution is eluding me so far.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 114879301,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "raph.levien@gmail.com",
            "sender_full_name": "Raph Levien (F1'17)",
            "sender_id": 101701,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Does anybody know how to sort antecedents in TraceCheck?",
            "submessages": [],
            "timestamp": 1503329149,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/f6bd929465d6d225def8062d5a9d3f3f?d=identicon&version=1",
            "client": "website",
            "content": "<p><span class=\"user-mention\" data-user-email=\"dmoon1221@gmail.com\" data-user-id=\"100050\">@David Moon (F1'16)</span> might know the answer to this.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 114882116,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "danluu@gmail.com",
            "sender_full_name": "Dan Luu (W'13)",
            "sender_id": 820,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Does anybody know how to sort antecedents in TraceCheck?",
            "submessages": [],
            "timestamp": 1503334569,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/8f97b480b0f8de1fad66c1c1fc81ff73?d=identicon&version=1",
            "client": "website",
            "content": "<p>Why does fib(5) == 5? Isn't 5 supposed to be index 4? The nth fibonacci of 3 is 2 as well. when I do the fibonacci sequence to return the nth number I thought it was to return the index or even the literal place of the number. 0,1,1,2,3,5,8. For the nth number 0 and 1 is 0th place but where do I start counting at one to get the 5th place, i I start at the second 1 the 5th place will be 8. </p>\n<div class=\"codehilite\"><pre><span></span>def fib(n):\n\n    n2 =0\n    n1 = 1\n\n    if n ==0:\n        return n2\n    elif n == 1:\n        return n1\n    else:\n        for i in xrange(2, n+1):\n            temp = n1 + n2\n            n2 =n1\n            n1 = temp\n        return n1\n</pre></div>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 115693344,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "jhilene@gmail.com",
            "sender_full_name": "Jhilene Walker (F2'16)",
            "sender_id": 100190,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Fibonacci of 5",
            "submessages": [],
            "timestamp": 1505065128,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/db3bb2e8cfa9c62e206a0fa100a024da6f6e41df?x=x&version=4",
            "client": "website",
            "content": "<p>People use definitions that start (1, 1) and also definitions that start (0, 1). I think the latter is a bit \"newer\", ie it's what's used in the <a href=\"https://oeis.org/A000045\" target=\"_blank\" title=\"https://oeis.org/A000045\">OEIS definition</a>.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 115693440,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "raph.levien@gmail.com",
            "sender_full_name": "Raph Levien (F1'17)",
            "sender_id": 101701,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Fibonacci of 5",
            "submessages": [],
            "timestamp": 1505065328,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/8f97b480b0f8de1fad66c1c1fc81ff73?d=identicon&version=1",
            "client": "website",
            "content": "<p>okay ty but when I start counting from (1,1) 5 is the 5th and 8 is the 6th, but why is 3 the 2nd? <span class=\"user-mention\" data-user-email=\"raph.levien@gmail.com\" data-user-id=\"101701\">@Raph Levien (F1'17)</span></p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 115693827,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "jhilene@gmail.com",
            "sender_full_name": "Jhilene Walker (F2'16)",
            "sender_id": 100190,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Fibonacci of 5",
            "submessages": [],
            "timestamp": 1505066305,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/286db2fe3ae6145dc9fda2a25ffca1b2?d=identicon&version=1",
            "client": "website",
            "content": "<p>by that indexing scheme, 3 comes immediately before 5, it's the 4th<br>\n1, 1, 2, 3, 5, 8 values<br>\n1, 2, 3, 4, 5, 6 indexes<br>\nthis may be a case of confusing yourself with \"off by ones\". your code seems correct to me, so it's probably not a problem (unless something still feels off to you)</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 115695061,
            "is_me_message": false,
            "reactions": [
                {
                    "emoji_code": "1f642",
                    "emoji_name": "simple_smile",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "jhilene@gmail.com",
                        "full_name": "Jhilene Walker (F2'16)",
                        "id": 100190
                    },
                    "user_id": 100190
                }
            ],
            "recipient_id": 24954,
            "sender_email": "maxbittker@gmail.com",
            "sender_full_name": "Max Bittker (S1'16)",
            "sender_id": 9345,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Fibonacci of 5",
            "submessages": [],
            "timestamp": 1505069332,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/1fdd84a57c15f7ecfdded3d0c32019ad32f8af5d?x=x&version=5",
            "client": "website",
            "content": "<p>I recently read this neat method to find the median of five elements with six comparisons <a href=\"https://cs.stackexchange.com/a/45379\" target=\"_blank\" title=\"https://cs.stackexchange.com/a/45379\">https://cs.stackexchange.com/a/45379</a>. </p>\n<p>The main idea I think is that to find the median, you don't really care about the ordering of the two smallest elements (and likewise for the two largest elements). You're only looking for the element with only two elements smaller (and two elements larger). Or put another way, you're eliminating elements that have at least three elements larger (and ones that have at least three elements smaller).</p>\n<p>The strategy is as follows: we can find the smallest of the first four elements in n - 1 = 3 comparisons. But we do this in a tournament style so we can reuse one of the comparisons later <img alt=\":smile:\" class=\"emoji\" src=\"/static/generated/emoji/images/emoji/unicode/1f604.png\" title=\"smile\"> </p>\n<div class=\"codehilite\"><pre><span></span>a  b   c   d\n \\/     \\/\n  b     d\n   \\  /\n    d\n</pre></div>\n\n\n<p>Now we eliminate the winner (since it has three elements bigger than it), replace it with the fifth element and conduct another tournament. Note that in this tournament, we already know the result of one of the matches, and therefore only need 2 comparisons to find the winner.</p>\n<div class=\"codehilite\"><pre><span></span>a   b   c   e\n \\/      \\/\n  b      c\n    \\  /\n     c\n</pre></div>\n\n\n<p>So now we can eliminate another element that has three elements bigger than it. This leaves three elements to examine, and the smallest of these three will be the median (the other two will have each have at least three elements smaller than them). Once again, we can use the result of one of the earlier matches. This means we can identify the median with one comparison (comparing the smaller of the \"known\" pair with the third element).</p>\n<p>Total number of comparisons is 3 + 2 + 1. I found this pretty cool because it's much lower than my initial strategy of 9 comparisons (ordering a, b and c in 3 comparisons and then comparing the other two to these three in 6 comparisons) and even better than the faster way of finding min1, min2 and min3 (n -1 + log n - 1 + log log n -1 = 4 + 2 + 1 comparisons)</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 116593953,
            "is_me_message": false,
            "last_edit_timestamp": 1506969934,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "arpith@feedreader.co",
            "sender_full_name": "Arpith Siromoney (he) (m6'20)",
            "sender_id": 9503,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Median of 5 elements in 6 comparisons",
            "submessages": [],
            "timestamp": 1506969597,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/32721626292fa2708ee74d852696e44f426cd631?x=x&version=2",
            "client": "website",
            "content": "<p>This is great. Thanks for sharing. I've been going through CLRS and I'm at the chapter about median finding and ith order selection. Alternatively, it is possible to find the median in <code>O(n)</code> time for input of size <code>n</code> using a randomized selection algorithm piggy-backing on quicksort's <code>partition</code> subroutine.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 116640935,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "dabbagh.aos@gmail.com",
            "sender_full_name": "Aos Dabbagh (S2'17)",
            "sender_id": 101320,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Median of 5 elements in 6 comparisons",
            "submessages": [],
            "timestamp": 1507061819,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/b3969612f0d6f4b398a1eec04087aafc0a38475e?x=x&version=2",
            "client": "ZulipElectron",
            "content": "<p>Today's Algorithms and Data Structures Study Group was great! We talked in-depth about linked lists, their supported operations, and lots of different options when it comes to optimizing them (maintaining a TAIL pointer in a singly-linked list, auto-sorting as you add to the list, etc.). Then we implemented a doubly-linked list together in Python on the board. Thanks for coming <span class=\"user-mention\" data-user-email=\"justyna.janczyszyn@gmail.com\" data-user-id=\"101996\">@Justyna Lidia Janczyszyn (F2'17)</span>, <span class=\"user-mention\" data-user-email=\"laura.peskin@gmail.com\" data-user-id=\"102045\">@Laura Peskin (F2'17)</span>, <span class=\"user-mention\" data-user-email=\"nephilim.eric@gmail.com\" data-user-id=\"102032\">@Eric Michael Lindgren (F2'17)</span>, <span class=\"user-mention\" data-user-email=\"kadeemnibbs@gmail.com\" data-user-id=\"102108\">@Kadeem Nibbs (F2'17)</span>, <span class=\"user-mention\" data-user-email=\"danweasel@gmail.com\" data-user-id=\"101997\">@Andrew Nichols (F2'17)</span></p>\n<p>Next week we'll be covering Hash Tables, so come check it out. <a href=\"https://www.recurse.com/calendar/1196\" target=\"_blank\" title=\"https://www.recurse.com/calendar/1196\">https://www.recurse.com/calendar/1196</a></p>\n<p>Let's use this space to talk about DS+Algo, ask each other questions, and set up time to pair together on problem sets and implementations.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 116723257,
            "is_me_message": false,
            "reactions": [
                {
                    "emoji_code": "1f389",
                    "emoji_name": "tada",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "justyna.janczyszyn@gmail.com",
                        "full_name": "Justyna Lidia Janczyszyn (she) (F2'17)",
                        "id": 101996
                    },
                    "user_id": 101996
                },
                {
                    "emoji_code": "1f64c",
                    "emoji_name": "raised_hands",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "justyna.janczyszyn@gmail.com",
                        "full_name": "Justyna Lidia Janczyszyn (she) (F2'17)",
                        "id": 101996
                    },
                    "user_id": 101996
                },
                {
                    "emoji_code": "1f389",
                    "emoji_name": "tada",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "nephilim.eric@gmail.com",
                        "full_name": "Eric Lindgren (he) (F2'17)",
                        "id": 102032
                    },
                    "user_id": 102032
                },
                {
                    "emoji_code": "1f64c",
                    "emoji_name": "raised_hands",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "rc@alicja.dev",
                        "full_name": "Alicja Karolina Raszkowska (she/they) (W2'18)",
                        "id": 100049
                    },
                    "user_id": 100049
                }
            ],
            "recipient_id": 24954,
            "sender_email": "joebeach@gmail.com",
            "sender_full_name": "Joe Beach (F2'17)",
            "sender_id": 102026,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Study Group",
            "submessages": [],
            "timestamp": 1507223898,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/d2d1f3e361a479849026fe298e091c50e1a4b20a?x=x&version=5",
            "client": "website",
            "content": "<p>mefargen!</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 116727089,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "rc@alicja.dev",
            "sender_full_name": "Alicja Karolina Raszkowska (she/they) (W2'18)",
            "sender_id": 100049,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Study Group",
            "submessages": [],
            "timestamp": 1507230032,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/2a3b2f2a163b32e922484c97c898501ee65eb6bb?x=x&version=2",
            "client": "website",
            "content": "<p>Oooh!  I'm curious about hash tables.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 116739459,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "mccartykim@zoho.com",
            "sender_full_name": "Kimberly Michelle McCarty (W1'17)",
            "sender_id": 101726,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Study Group",
            "submessages": [],
            "timestamp": 1507250807,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/1fdd84a57c15f7ecfdded3d0c32019ad32f8af5d?x=x&version=5",
            "client": "website",
            "content": "<p>Neat! There is also a deterministic algorithm for n that breaks up the array into groups of 5 <span class=\"user-mention\" data-user-email=\"dabbagh.awsen@gmail.com\" data-user-id=\"101320\">@Aos Dabbagh (S2'17)</span></p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 116960132,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "arpith@feedreader.co",
            "sender_full_name": "Arpith Siromoney (he) (m6'20)",
            "sender_id": 9503,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Median of 5 elements in 6 comparisons",
            "submessages": [],
            "timestamp": 1507737206,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/1fdd84a57c15f7ecfdded3d0c32019ad32f8af5d?x=x&version=5",
            "client": "website",
            "content": "<p>Happy to talk about it (if only to understand it better) if you're interested</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 116960134,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "arpith@feedreader.co",
            "sender_full_name": "Arpith Siromoney (he) (m6'20)",
            "sender_id": 9503,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Median of 5 elements in 6 comparisons",
            "submessages": [],
            "timestamp": 1507737225,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/1fdd84a57c15f7ecfdded3d0c32019ad32f8af5d?x=x&version=5",
            "client": "website",
            "content": "<p>Yesterday, I learned a cool trick to sort 5 elements with 7 comparisons. Here it is:<br>\nFind the minimum of the first four elements using a tournament (three comparisons)</p>\n<div class=\"codehilite\"><pre><span></span>a   b   c   d\n   a       d\n       a\n</pre></div>\n\n\n<p>we can rewrite this as</p>\n<div class=\"codehilite\"><pre><span></span>   a\nb    c\n         d\n</pre></div>\n\n\n<p>Now put the fifth element e into the longer side of the tree, in two comparisons (if it is bigger than the middle,<br>\ncheck it with the top, otherwise with the bottom)<br>\nSo now we have</p>\n<div class=\"codehilite\"><pre><span></span>   a\nb    e\n        c\n          d\n</pre></div>\n\n\n<p>Again, we can put b (the first loser to the winner of the initial tournament) in the longer side in two comparisons. We know it is smaller than a. So we just have to insert it into an array of three as before (if it is bigger than the middle, we check it with the top, otherwise with the bottom)</p>\n<p>So the total number of comparisons we've done is 3 + 2 + 2 = 7</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 116960456,
            "is_me_message": false,
            "last_edit_timestamp": 1507760150,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "arpith@feedreader.co",
            "sender_full_name": "Arpith Siromoney (he) (m6'20)",
            "sender_id": 9503,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Sorting 5 elements in 7 comparisons",
            "submessages": [],
            "timestamp": 1507737672,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/1fdd84a57c15f7ecfdded3d0c32019ad32f8af5d?x=x&version=5",
            "client": "website",
            "content": "<p>Sooo.. My algorithms professor gave us a bunch of problems to practice for the midterm, and they're pretty fun! Here they are, happy to discuss them if anyone's interested</p>\n<p>1. Let A be an array of n distinct integers sorted in increasing order. Determine if there is an index i such that A[i] = i. How many comparisons do you make? (worst case)</p>\n<p>2. Let A be sorted in increasing order and B be sorted in decreasing order. Determine if there is an index i such that A[i] = B[i]. How many comparisons do you make? (worst case)</p>\n<p>3. Let A be sorted in increasing order and B be sorted in decreasing order (all positive integers). k is also a positive integer. Determine if there are two indices i &amp; j such that A[i] + B[j] = k. How many additions do you make? (worst case)</p>\n<p>4. A and B are identical if it is possible to reorder both of them such that A[i] = B[i] for all i. Determine if two unsorted arrays A and B are identical. </p>\n<p>5. A is k-sorted if for any index i, if j is the location of A[i] when A is sorted, then |i -j| &lt;= k (A[i] is at most k locations away from its position in the sorted version of A). Note that a sorted array is a 0-sorted array, and any array is an (n-1)-sorted array (but maybe a k-sorted array for k &lt; n-1). Given an arbitrary array A, make it an (n/2)-sorted array. How many comparisons do you make? (worst case)</p>\n<p>6. An array  of distinct integers is called a hill array if there is an index m such that the array is in increasing order from 1 to m and in decreasing order from m to n. If A is a hill array, find m! How many comparisons do you make? (worst case)</p>\n<p>7. A is an unsorted array. For any index i from 1 to n, let B[i] be the smallest index j such that A[j] &gt; A[i] and i&lt;j. If there is no such j, let B[i] be n+1. Construct the array B. How many comparisons do you make? worst case.</p>\n<p>8. A is an array of n integers (positive). T is the sum of all the numbers in A. Let S[i] = T - A[i]. Construct S without subtraction in linear time.</p>\n<p>9. A and B are unsorted with n integers (positive) each. All the numbers are distinct. Let's say that A is totally greater than B if it's possible to reorder both arrays in a way that A[i] &gt; B[i] for every i. Find out if A is totally greater than B. How many comparisons do you make? (worst case)</p>\n<p>10. You're given an array A of n distinct positive integers that's sorted. Its length is a power of 2. Let x be some positive even integer. Find i such that x/2 &lt;= A[i] &lt;= 2x (if such an index exists). That is, search for any number in A that is between x/2 and 2x. How many comparisons do you make? Be exact :)</p>\n<p>11. D is unsorted and has 3n distinct integers (but you can't use Radix-sort style algorithms). Partition D into three arrays A, B and C each of size n. A should have the n largest numbers from D, C should have the n smallest numbers, and B should have the rest.. How many comparisons do you make?</p>\n<p>12. A is sorted. Find the number of times x appears in A  in O(log(n))</p>\n<p>13. A and B are two sorted arrays of length n (positive distinct integers). Count the number of pairs i and j for which A[i] &gt; B[j].. This can be done in linear time :P</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 116961426,
            "is_me_message": false,
            "last_edit_timestamp": 1507739327,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "arpith@feedreader.co",
            "sender_full_name": "Arpith Siromoney (he) (m6'20)",
            "sender_id": 9503,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "A bunch of algorithm problems \ud83d\ude0a",
            "submessages": [],
            "timestamp": 1507739145,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/1fdd84a57c15f7ecfdded3d0c32019ad32f8af5d?x=x&version=5",
            "client": "website",
            "content": "<p>A note on these problems.. There is always a straightforward solution which won't get you a lot of points.. Then there is a better solution that will give you most of the points.. and sometimes there is an even better solution that gets you the full score on the problem..</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 116961487,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "arpith@feedreader.co",
            "sender_full_name": "Arpith Siromoney (he) (m6'20)",
            "sender_id": 9503,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "A bunch of algorithm problems \ud83d\ude0a",
            "submessages": [],
            "timestamp": 1507739255,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/1fdd84a57c15f7ecfdded3d0c32019ad32f8af5d?x=x&version=5",
            "client": "website",
            "content": "<p>For example, I think the linear solution in 13 is the best that is expected..</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 116961539,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "arpith@feedreader.co",
            "sender_full_name": "Arpith Siromoney (he) (m6'20)",
            "sender_id": 9503,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "A bunch of algorithm problems \ud83d\ude0a",
            "submessages": [],
            "timestamp": 1507739291,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/b3969612f0d6f4b398a1eec04087aafc0a38475e?x=x&version=2",
            "client": "ZulipElectron",
            "content": "<p>Hey y'all we'll be starting in 5 minutes in Turing</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 117002320,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "joebeach@gmail.com",
            "sender_full_name": "Joe Beach (F2'17)",
            "sender_id": 102026,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Study Group",
            "submessages": [],
            "timestamp": 1507820251,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/b3969612f0d6f4b398a1eec04087aafc0a38475e?x=x&version=2",
            "client": "ZulipElectron",
            "content": "<p>Moving to Hopper</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 117002857,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "joebeach@gmail.com",
            "sender_full_name": "Joe Beach (F2'17)",
            "sender_id": 102026,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Study Group",
            "submessages": [],
            "timestamp": 1507821071,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/8ede63f05c0a949ad0dce6b1e120fa5f2a1cc72a?x=x&version=2",
            "client": "website",
            "content": "<p>Instead of what I intended to work on today, I kept pushing until I had managed to implement a hashtable in Haskell! <span class=\"user-mention\" data-user-email=\"o.awomosu@gmail.com\" data-user-id=\"101990\">@Femi Awomosu (F2'17)</span> </p>\n<p><a href=\"https://gist.github.com/frenata/0298b2288f1dff4c6b8ac0b25b4685bc\" target=\"_blank\" title=\"https://gist.github.com/frenata/0298b2288f1dff4c6b8ac0b25b4685bc\">https://gist.github.com/frenata/0298b2288f1dff4c6b8ac0b25b4685bc</a></p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 117015810,
            "is_me_message": false,
            "reactions": [
                {
                    "emoji_code": "1104",
                    "emoji_name": "haskell",
                    "reaction_type": "realm_emoji",
                    "user": {
                        "email": "indradhanush.gupta@gmail.com",
                        "full_name": "Indradhanush Gupta (he) (S1'17)",
                        "id": 101105
                    },
                    "user_id": 101105
                },
                {
                    "emoji_code": "1104",
                    "emoji_name": "haskell",
                    "reaction_type": "realm_emoji",
                    "user": {
                        "email": "vaibhavsagar@gmail.com",
                        "full_name": "Vaibhav Sagar (he) (F1'16)",
                        "id": 100041
                    },
                    "user_id": 100041
                },
                {
                    "emoji_code": "1f389",
                    "emoji_name": "tada",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "vaibhavsagar@gmail.com",
                        "full_name": "Vaibhav Sagar (he) (F1'16)",
                        "id": 100041
                    },
                    "user_id": 100041
                },
                {
                    "emoji_code": "1f600",
                    "emoji_name": "grinning",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "vaibhavsagar@gmail.com",
                        "full_name": "Vaibhav Sagar (he) (F1'16)",
                        "id": 100041
                    },
                    "user_id": 100041
                },
                {
                    "emoji_code": "0023-20e3",
                    "emoji_name": "hash",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "vaibhavsagar@gmail.com",
                        "full_name": "Vaibhav Sagar (he) (F1'16)",
                        "id": 100041
                    },
                    "user_id": 100041
                },
                {
                    "emoji_code": "0023-20e3",
                    "emoji_name": "hash",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "rc@alicja.dev",
                        "full_name": "Alicja Karolina Raszkowska (she/they) (W2'18)",
                        "id": 100049
                    },
                    "user_id": 100049
                },
                {
                    "emoji_code": "1f600",
                    "emoji_name": "grinning",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "o.awomosu@gmail.com",
                        "full_name": "Femi Awomosu (m6'19)",
                        "id": 101990
                    },
                    "user_id": 101990
                },
                {
                    "emoji_code": "1f389",
                    "emoji_name": "tada",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "o.awomosu@gmail.com",
                        "full_name": "Femi Awomosu (m6'19)",
                        "id": 101990
                    },
                    "user_id": 101990
                },
                {
                    "emoji_code": "1f389",
                    "emoji_name": "tada",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "nathanwshane@gmail.com",
                        "full_name": "Nathan Weeks Shane (F1'17)",
                        "id": 101725
                    },
                    "user_id": 101725
                }
            ],
            "recipient_id": 24954,
            "sender_email": "danweasel@gmail.com",
            "sender_full_name": "Andrew Nichols (he) (F2'17)",
            "sender_id": 101997,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "HashTable",
            "submessages": [],
            "timestamp": 1507840837,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/a2cc22089e70c6b1e9a84d91ac82118ab06aa82a?x=x&version=2",
            "client": "website",
            "content": "<p>That's great! And a nice use of <code>|&gt;</code>.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 117019644,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "peter@push.cx",
            "sender_full_name": "Peter Bhat Harkins (he) (F2'17)",
            "sender_id": 102004,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "HashTable",
            "submessages": [],
            "timestamp": 1507847186,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/1a6b4da7376fc80448030d18fb4bd345308a04ac?x=x&version=2",
            "client": "ZulipMobile",
            "content": "<p>Hey all. I\u2019ve also had a hard time putting down hash tables. I have a couple thoughts on how optimize tombstone cleanup and would love to compare and maybe benchmark two different approaches.</p>\n<p>One rehashing the table periodically and prioritizing frequently accessed elements to the front of their queue. The other doing some kind of reference counting to determine whether we can just delete an element or whether we need to maintain a tombstone. </p>\n<p>If anyone feels like pairing and coding up either of these approaches on Monday I\u2019d love to do that! Hit me up <span class=\"emoji emoji-1f642\" title=\"simple smile\">:simple_smile:</span></p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 117117198,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "nephilim.eric@gmail.com",
            "sender_full_name": "Eric Lindgren (he) (F2'17)",
            "sender_id": 102032,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "HashTable",
            "submessages": [],
            "timestamp": 1508032180,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/b3969612f0d6f4b398a1eec04087aafc0a38475e?x=x&version=2",
            "client": "ZulipElectron",
            "content": "<p>Here's the calendar event for this week: <a href=\"https://www.recurse.com/calendar/1256\" target=\"_blank\" title=\"https://www.recurse.com/calendar/1256\">https://www.recurse.com/calendar/1256</a></p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 117172324,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "joebeach@gmail.com",
            "sender_full_name": "Joe Beach (F2'17)",
            "sender_id": 102026,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Study Group",
            "submessages": [],
            "timestamp": 1508166401,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/159e0dcf4be0b3add35f61779cc41c89ea10c398?x=x&version=2",
            "client": "ZulipElectron",
            "content": "<p><a href=\"https://www.toptal.com/developers/sorting-algorithms\" target=\"_blank\" title=\"https://www.toptal.com/developers/sorting-algorithms\">https://www.toptal.com/developers/sorting-algorithms</a></p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 117380865,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "o.awomosu@gmail.com",
            "sender_full_name": "Femi Awomosu (m6'19)",
            "sender_id": 101990,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Study Group",
            "submessages": [],
            "timestamp": 1508426426,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/b3969612f0d6f4b398a1eec04087aafc0a38475e?x=x&version=2",
            "client": "ZulipElectron",
            "content": "<p>Here's this week's event: <a href=\"https://www.recurse.com/calendar/1277\" target=\"_blank\" title=\"https://www.recurse.com/calendar/1277\">https://www.recurse.com/calendar/1277</a></p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 117545362,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "joebeach@gmail.com",
            "sender_full_name": "Joe Beach (F2'17)",
            "sender_id": 102026,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Study Group",
            "submessages": [],
            "timestamp": 1508788096,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/1d52035dd955895981db2493a8fdbf0da83a69e3?x=x&version=2",
            "client": "website",
            "content": "<p><a href=\"http://interactivepython.org/courselib/static/pythonds/index.html\" target=\"_blank\" title=\"http://interactivepython.org/courselib/static/pythonds/index.html\">http://interactivepython.org/courselib/static/pythonds/index.html</a> is a really cool collection of well explained algorithms ect in Python</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 117590396,
            "is_me_message": false,
            "reactions": [
                {
                    "emoji_code": "1f44d",
                    "emoji_name": "thumbs_up",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "stanley@zheng.nyc",
                        "full_name": "Stanley Zheng (they) (W1'19)",
                        "id": 100315
                    },
                    "user_id": 100315
                },
                {
                    "emoji_code": "1f44d",
                    "emoji_name": "thumbs_up",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "mccartykim@zoho.com",
                        "full_name": "Kimberly Michelle McCarty (W1'17)",
                        "id": 101726
                    },
                    "user_id": 101726
                },
                {
                    "emoji_code": "1f44d",
                    "emoji_name": "thumbs_up",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "joebeach@gmail.com",
                        "full_name": "Joe Beach (F2'17)",
                        "id": 102026
                    },
                    "user_id": 102026
                }
            ],
            "recipient_id": 24954,
            "sender_email": "justyna.janczyszyn@gmail.com",
            "sender_full_name": "Justyna Lidia Janczyszyn (she) (F2'17)",
            "sender_id": 101996,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Study Group",
            "submessages": [],
            "timestamp": 1508874466,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/1d52035dd955895981db2493a8fdbf0da83a69e3?x=x&version=2",
            "client": "website",
            "content": "<p>Also I really like the explanations in Sedgewick e.g. <a href=\"https://algs4.cs.princeton.edu/24pq/\" target=\"_blank\" title=\"https://algs4.cs.princeton.edu/24pq/\">https://algs4.cs.princeton.edu/24pq/</a></p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 117591224,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "justyna.janczyszyn@gmail.com",
            "sender_full_name": "Justyna Lidia Janczyszyn (she) (F2'17)",
            "sender_id": 101996,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Study Group",
            "submessages": [],
            "timestamp": 1508875675,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/1d52035dd955895981db2493a8fdbf0da83a69e3?x=x&version=2",
            "client": "website",
            "content": "<p>and also really cool <a href=\"https://www.cs.usfca.edu/~galles/visualization/HeapSort.html\" target=\"_blank\" title=\"https://www.cs.usfca.edu/~galles/visualization/HeapSort.html\">https://www.cs.usfca.edu/~galles/visualization/HeapSort.html</a></p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 117591366,
            "is_me_message": false,
            "reactions": [
                {
                    "emoji_code": "1f6e0",
                    "emoji_name": "hammer_and_wrench",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "stanley@zheng.nyc",
                        "full_name": "Stanley Zheng (they) (W1'19)",
                        "id": 100315
                    },
                    "user_id": 100315
                },
                {
                    "emoji_code": "1f6e0",
                    "emoji_name": "hammer_and_wrench",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "kadeemnibbs@gmail.com",
                        "full_name": "Kadeem Nibbs (W2'18)",
                        "id": 102108
                    },
                    "user_id": 102108
                }
            ],
            "recipient_id": 24954,
            "sender_email": "justyna.janczyszyn@gmail.com",
            "sender_full_name": "Justyna Lidia Janczyszyn (she) (F2'17)",
            "sender_id": 101996,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Study Group",
            "submessages": [],
            "timestamp": 1508875819,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/1d52035dd955895981db2493a8fdbf0da83a69e3?x=x&version=2",
            "client": "website",
            "content": "<p>and here's the index for all of the visualisations they have: <a href=\"https://www.cs.usfca.edu/~galles/visualization/Algorithms.html\" target=\"_blank\" title=\"https://www.cs.usfca.edu/~galles/visualization/Algorithms.html\">https://www.cs.usfca.edu/~galles/visualization/Algorithms.html</a> (The best thing ever in my opinion <span class=\"emoji emoji-2764\" title=\"heart\">:heart:</span> )</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 117670791,
            "is_me_message": false,
            "reactions": [
                {
                    "emoji_code": "2764",
                    "emoji_name": "heart",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "mccartykim@zoho.com",
                        "full_name": "Kimberly Michelle McCarty (W1'17)",
                        "id": 101726
                    },
                    "user_id": 101726
                },
                {
                    "emoji_code": "1f389",
                    "emoji_name": "tada",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "aalbertuntung@gmail.com",
                        "full_name": "Albert Untung (F2'17)",
                        "id": 102003
                    },
                    "user_id": 102003
                },
                {
                    "emoji_code": "1f389",
                    "emoji_name": "tada",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "chilaou@gmail.com",
                        "full_name": "David Englund (F2'17)",
                        "id": 102001
                    },
                    "user_id": 102001
                },
                {
                    "emoji_code": "2764",
                    "emoji_name": "heart",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "jrubinovitz@gmail.com",
                        "full_name": "JB Rubinovitz (W2'18)",
                        "id": 101692
                    },
                    "user_id": 101692
                }
            ],
            "recipient_id": 24954,
            "sender_email": "justyna.janczyszyn@gmail.com",
            "sender_full_name": "Justyna Lidia Janczyszyn (she) (F2'17)",
            "sender_id": 101996,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Study Group",
            "submessages": [],
            "timestamp": 1509033303,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/b3969612f0d6f4b398a1eec04087aafc0a38475e?x=x&version=2",
            "client": "ZulipElectron",
            "content": "<p>I created an event for this week: <a href=\"https://www.recurse.com/calendar/1319\" target=\"_blank\" title=\"https://www.recurse.com/calendar/1319\">https://www.recurse.com/calendar/1319</a></p>\n<p><span class=\"user-mention\" data-user-email=\"danweasel@gmail.com\" data-user-id=\"101997\">@Andrew Nichols (F2'17)</span> said y'all chose <strong>Searching</strong> as the next topic. Is that right? <span class=\"user-mention\" data-user-email=\"justyna.janczyszyn@gmail.com\" data-user-id=\"101996\">@Justyna Lidia Janczyszyn (F2'17)</span> <span class=\"user-mention\" data-user-email=\"o.awomosu@gmail.com\" data-user-id=\"101990\">@Femi Awomosu (F2'17)</span></p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 117871476,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "joebeach@gmail.com",
            "sender_full_name": "Joe Beach (F2'17)",
            "sender_id": 102026,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Study Group",
            "submessages": [],
            "timestamp": 1509457965,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/1d52035dd955895981db2493a8fdbf0da83a69e3?x=x&version=2",
            "client": "website",
            "content": "<p><span class=\"user-mention\" data-user-email=\"joebeach@gmail.com\" data-user-id=\"102026\">@Joe Beach (F2'17)</span>  yes, I don't remember the context exactly but it was supposed to be connecting trees and graphs and searching...</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 117886787,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "justyna.janczyszyn@gmail.com",
            "sender_full_name": "Justyna Lidia Janczyszyn (she) (F2'17)",
            "sender_id": 101996,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Study Group",
            "submessages": [],
            "timestamp": 1509482552,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/7697687bd5a37936a29e9882880550c7?d=identicon&version=1",
            "client": "website",
            "content": "<p>Is anyone a pro at recursive functions? I have an off by one type error and was wondering if anyone could lend a hand. Thanks :)</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 117944441,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "dylanshinenyc@gmail.com",
            "sender_full_name": "Dylan Shine (F1'17)",
            "sender_id": 101708,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Recursive Functions",
            "submessages": [],
            "timestamp": 1509595087,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/3f6bef626649c46b4cc3fd9f67c151a19170da5e?x=x&version=21",
            "client": "website",
            "content": "<p><span class=\"user-mention\" data-user-email=\"dylanshinenyc@gmail.com\" data-user-id=\"101708\">@Dylan Shine (F1'17)</span> go on</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 117944452,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "jkozak@fmail.co.uk",
            "sender_full_name": "Jake \u26e4 Prozvyshe (they) (W1'17)",
            "sender_id": 8478,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Recursive Functions",
            "submessages": [],
            "timestamp": 1509595166,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/7697687bd5a37936a29e9882880550c7?d=identicon&version=1",
            "client": "website",
            "content": "<p>Essentially I have a tree of nodes. Each node represents a view that has a frame (x, y, width, height). Each node has an array of sub-nodes, nodes that perfect fit within its superviews frame. My goal is given a point,  (x,y), see the lowest node contains that point.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 117944576,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "dylanshinenyc@gmail.com",
            "sender_full_name": "Dylan Shine (F1'17)",
            "sender_id": 101708,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Recursive Functions",
            "submessages": [],
            "timestamp": 1509595404,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/7697687bd5a37936a29e9882880550c7?d=identicon&version=1",
            "client": "website",
            "content": "<p>So I wrote a recursive function <br>\n static func findPathToNode(rootNode: Node, drawnAtPixel pixel: CGPoint) -&gt; [String]{</p>\n<div class=\"codehilite\"><pre><span></span>    if !rootNode.frame.contains(pixel) {\n        return []\n    }\n\n    for child in rootNode.children.reversed() {\n        var path = [rootNode.nodeId]\n\n        if !child.children.isEmpty {\n            path += findPathToNode(rootNode: child, drawnAtPixel: pixel)\n        }\n\n        if child.frame.contains(pixel) {\n            return path\n        }\n    }\n\n    if rootNode.frame.contains(pixel) {\n        return [rootNode.nodeId]\n    }\n\n    return []\n}\n</pre></div>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 117944578,
            "is_me_message": false,
            "last_edit_timestamp": 1509595438,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "dylanshinenyc@gmail.com",
            "sender_full_name": "Dylan Shine (F1'17)",
            "sender_id": 101708,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Recursive Functions",
            "submessages": [],
            "timestamp": 1509595419,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/7697687bd5a37936a29e9882880550c7?d=identicon&version=1",
            "client": "website",
            "content": "<p>Sorry about the formatting</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 117944625,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "dylanshinenyc@gmail.com",
            "sender_full_name": "Dylan Shine (F1'17)",
            "sender_id": 101708,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Recursive Functions",
            "submessages": [],
            "timestamp": 1509595466,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/7697687bd5a37936a29e9882880550c7?d=identicon&version=1",
            "client": "website",
            "content": "<p>Mind you this function returns the path to the lowest sub-node</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 117944634,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "dylanshinenyc@gmail.com",
            "sender_full_name": "Dylan Shine (F1'17)",
            "sender_id": 101708,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Recursive Functions",
            "submessages": [],
            "timestamp": 1509595520,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/7af0a4685e93e44ffcd2935fa31ff1c4?d=identicon&version=1",
            "client": "website",
            "content": "<p>So, one thing that's kind of bad is that you recurse before you check whether child.frame.contains(pixel)</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 117944641,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "novalis@novalis.org",
            "sender_full_name": "David Turner",
            "sender_id": 8449,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Recursive Functions",
            "submessages": [],
            "timestamp": 1509595550,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/7697687bd5a37936a29e9882880550c7?d=identicon&version=1",
            "client": "website",
            "content": "<p>So if the rootNode doesn't contain the pixel, I can assume the subviews don't contain them either and I can return empty</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 117944642,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "dylanshinenyc@gmail.com",
            "sender_full_name": "Dylan Shine (F1'17)",
            "sender_id": 101708,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Recursive Functions",
            "submessages": [],
            "timestamp": 1509595556,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/7697687bd5a37936a29e9882880550c7?d=identicon&version=1",
            "client": "website",
            "content": "<p>Ok</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 117944681,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "dylanshinenyc@gmail.com",
            "sender_full_name": "Dylan Shine (F1'17)",
            "sender_id": 101708,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Recursive Functions",
            "submessages": [],
            "timestamp": 1509595590,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/7af0a4685e93e44ffcd2935fa31ff1c4?d=identicon&version=1",
            "client": "website",
            "content": "<p>Also, you're looking at child.children</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 117944682,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "novalis@novalis.org",
            "sender_full_name": "David Turner",
            "sender_id": 8449,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Recursive Functions",
            "submessages": [],
            "timestamp": 1509595613,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/7af0a4685e93e44ffcd2935fa31ff1c4?d=identicon&version=1",
            "client": "website",
            "content": "<p>Which you shouldn't need to do</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 117944683,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "novalis@novalis.org",
            "sender_full_name": "David Turner",
            "sender_id": 8449,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Recursive Functions",
            "submessages": [],
            "timestamp": 1509595621,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/7af0a4685e93e44ffcd2935fa31ff1c4?d=identicon&version=1",
            "client": "website",
            "content": "<p>That's your grandchild.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 117944688,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "novalis@novalis.org",
            "sender_full_name": "David Turner",
            "sender_id": 8449,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Recursive Functions",
            "submessages": [],
            "timestamp": 1509595630,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/7697687bd5a37936a29e9882880550c7?d=identicon&version=1",
            "client": "website",
            "content": "<p>Pardon?</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 117944689,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "dylanshinenyc@gmail.com",
            "sender_full_name": "Dylan Shine (F1'17)",
            "sender_id": 101708,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Recursive Functions",
            "submessages": [],
            "timestamp": 1509595645,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/7697687bd5a37936a29e9882880550c7?d=identicon&version=1",
            "client": "website",
            "content": "<p>The reason I need to look at the childrens children is because I have to determine the lowest sub-node possible</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 117944737,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "dylanshinenyc@gmail.com",
            "sender_full_name": "Dylan Shine (F1'17)",
            "sender_id": 101708,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Recursive Functions",
            "submessages": [],
            "timestamp": 1509595704,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/7697687bd5a37936a29e9882880550c7?d=identicon&version=1",
            "client": "website",
            "content": "<p>and work my way up from there</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 117944740,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "dylanshinenyc@gmail.com",
            "sender_full_name": "Dylan Shine (F1'17)",
            "sender_id": 101708,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Recursive Functions",
            "submessages": [],
            "timestamp": 1509595712,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/7af0a4685e93e44ffcd2935fa31ff1c4?d=identicon&version=1",
            "client": "website",
            "content": "<p>but that's why you're recursing</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 117944744,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "novalis@novalis.org",
            "sender_full_name": "David Turner",
            "sender_id": 8449,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Recursive Functions",
            "submessages": [],
            "timestamp": 1509595740,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/7af0a4685e93e44ffcd2935fa31ff1c4?d=identicon&version=1",
            "client": "website",
            "content": "<p>(also, can we assume that children don't overlap?)</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 117944753,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "novalis@novalis.org",
            "sender_full_name": "David Turner",
            "sender_id": 8449,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Recursive Functions",
            "submessages": [],
            "timestamp": 1509595801,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/7697687bd5a37936a29e9882880550c7?d=identicon&version=1",
            "client": "website",
            "content": "<p>They can overlap, but we only care about the node that has the highest index, hence the reverse on the for loop, should of mentioned that</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 117944799,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "dylanshinenyc@gmail.com",
            "sender_full_name": "Dylan Shine (F1'17)",
            "sender_id": 101708,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Recursive Functions",
            "submessages": [],
            "timestamp": 1509595858,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/7af0a4685e93e44ffcd2935fa31ff1c4?d=identicon&version=1",
            "client": "website",
            "content": "<p>Not sure what you mean by \"highest index\" -- consider the case where node A has the highest index but node B is lower in the tree (on a lower-index parent).</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 117944846,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "novalis@novalis.org",
            "sender_full_name": "David Turner",
            "sender_id": 8449,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Recursive Functions",
            "submessages": [],
            "timestamp": 1509595955,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/7af0a4685e93e44ffcd2935fa31ff1c4?d=identicon&version=1",
            "client": "website",
            "content": "<div class=\"codehilite\"><pre><span></span>static func findPathToNode(rootNode: Node, drawnAtPixel pixel: CGPoint) -&gt; [String]{\n    if !rootNode.frame.contains(pixel) {\n        return []\n    }\n\n    var path = [rootNode.nodeId]\n    for child in rootNode.children.reversed() {\n        if child.frame.contains(pixel) {\n            return path + findPathToNode(rootNode: child, drawnAtPixel: pixel)\n        }\n    }\n\n    return path\n}\n</pre></div>\n\n\n<p>is I think what I would do</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 117944847,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "novalis@novalis.org",
            "sender_full_name": "David Turner",
            "sender_id": 8449,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Recursive Functions",
            "submessages": [],
            "timestamp": 1509595972,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/7af0a4685e93e44ffcd2935fa31ff1c4?d=identicon&version=1",
            "client": "website",
            "content": "<p>In general, looking at grandchildren directly in a recursive algorithm is an anti-pattern (except in the case of tree rotations, where you have no choice).</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 117944854,
            "is_me_message": false,
            "reactions": [
                {
                    "emoji_code": "1f44d",
                    "emoji_name": "thumbs_up",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "julian@cipht.net",
                        "full_name": "Julian Squires (he) (F2'17)",
                        "id": 101992
                    },
                    "user_id": 101992
                }
            ],
            "recipient_id": 24954,
            "sender_email": "novalis@novalis.org",
            "sender_full_name": "David Turner",
            "sender_id": 8449,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Recursive Functions",
            "submessages": [],
            "timestamp": 1509596006,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/7697687bd5a37936a29e9882880550c7?d=identicon&version=1",
            "client": "website",
            "content": "<p>What I mean by highest index is if two subnodes in the same collection of children share the some point, we will only include the later one, thats what I mean by highest</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 117944856,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "dylanshinenyc@gmail.com",
            "sender_full_name": "Dylan Shine (F1'17)",
            "sender_id": 101708,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Recursive Functions",
            "submessages": [],
            "timestamp": 1509596033,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/7af0a4685e93e44ffcd2935fa31ff1c4?d=identicon&version=1",
            "client": "website",
            "content": "<p>OK, that makes sense.  So, lexicographically highest, I guess.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 117944896,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "novalis@novalis.org",
            "sender_full_name": "David Turner",
            "sender_id": 8449,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Recursive Functions",
            "submessages": [],
            "timestamp": 1509596080,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/7af0a4685e93e44ffcd2935fa31ff1c4?d=identicon&version=1",
            "client": "website",
            "content": "<p>Anyway, does my proposed code pass your test cases?</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 117944906,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "novalis@novalis.org",
            "sender_full_name": "David Turner",
            "sender_id": 8449,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Recursive Functions",
            "submessages": [],
            "timestamp": 1509596129,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/7697687bd5a37936a29e9882880550c7?d=identicon&version=1",
            "client": "website",
            "content": "<p>The issue with your solution, as with mine, is that it doesn't include the final node in the path string</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 117944910,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "dylanshinenyc@gmail.com",
            "sender_full_name": "Dylan Shine (F1'17)",
            "sender_id": 101708,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Recursive Functions",
            "submessages": [],
            "timestamp": 1509596154,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/7af0a4685e93e44ffcd2935fa31ff1c4?d=identicon&version=1",
            "client": "website",
            "content": "<p>Yes it does.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 117944936,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "novalis@novalis.org",
            "sender_full_name": "David Turner",
            "sender_id": 8449,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Recursive Functions",
            "submessages": [],
            "timestamp": 1509596162,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/7af0a4685e93e44ffcd2935fa31ff1c4?d=identicon&version=1",
            "client": "website",
            "content": "<p>Consider the case where the root node is the only node.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 117944951,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "novalis@novalis.org",
            "sender_full_name": "David Turner",
            "sender_id": 8449,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Recursive Functions",
            "submessages": [],
            "timestamp": 1509596178,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/7af0a4685e93e44ffcd2935fa31ff1c4?d=identicon&version=1",
            "client": "website",
            "content": "<p>path = [rootNode.nodeId] and then we return path</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 117944953,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "novalis@novalis.org",
            "sender_full_name": "David Turner",
            "sender_id": 8449,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Recursive Functions",
            "submessages": [],
            "timestamp": 1509596193,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/7697687bd5a37936a29e9882880550c7?d=identicon&version=1",
            "client": "website",
            "content": "<p>it builds up to, but not including the lowest child that contains the pixel</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 117944956,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "dylanshinenyc@gmail.com",
            "sender_full_name": "Dylan Shine (F1'17)",
            "sender_id": 101708,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Recursive Functions",
            "submessages": [],
            "timestamp": 1509596209,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/7af0a4685e93e44ffcd2935fa31ff1c4?d=identicon&version=1",
            "client": "website",
            "content": "<p>Can you show me a failing test case?</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 117944969,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "novalis@novalis.org",
            "sender_full_name": "David Turner",
            "sender_id": 8449,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Recursive Functions",
            "submessages": [],
            "timestamp": 1509596248,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/7af0a4685e93e44ffcd2935fa31ff1c4?d=identicon&version=1",
            "client": "website",
            "content": "<p>(I don't even know what programming language this is, or I would just write some...)</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 117945008,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "novalis@novalis.org",
            "sender_full_name": "David Turner",
            "sender_id": 8449,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Recursive Functions",
            "submessages": [],
            "timestamp": 1509596284,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/7697687bd5a37936a29e9882880550c7?d=identicon&version=1",
            "client": "website",
            "content": "<p>If I post the tree it is going to be gigantic</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 117945016,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "dylanshinenyc@gmail.com",
            "sender_full_name": "Dylan Shine (F1'17)",
            "sender_id": 101708,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Recursive Functions",
            "submessages": [],
            "timestamp": 1509596343,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/7697687bd5a37936a29e9882880550c7?d=identicon&version=1",
            "client": "website",
            "content": "<p>its Swift btw</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 117945021,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "dylanshinenyc@gmail.com",
            "sender_full_name": "Dylan Shine (F1'17)",
            "sender_id": 101708,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Recursive Functions",
            "submessages": [],
            "timestamp": 1509596349,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/7af0a4685e93e44ffcd2935fa31ff1c4?d=identicon&version=1",
            "client": "website",
            "content": "<p>Oh, I don't think that's in Debian :(</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 117945068,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "novalis@novalis.org",
            "sender_full_name": "David Turner",
            "sender_id": 8449,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Recursive Functions",
            "submessages": [],
            "timestamp": 1509596411,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/7697687bd5a37936a29e9882880550c7?d=identicon&version=1",
            "client": "website",
            "content": "<p>One sec</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 117945070,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "dylanshinenyc@gmail.com",
            "sender_full_name": "Dylan Shine (F1'17)",
            "sender_id": 101708,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Recursive Functions",
            "submessages": [],
            "timestamp": 1509596418,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/7697687bd5a37936a29e9882880550c7?d=identicon&version=1",
            "client": "website",
            "content": "<p>Im trying to create a break point for the exact case</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 117945081,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "dylanshinenyc@gmail.com",
            "sender_full_name": "Dylan Shine (F1'17)",
            "sender_id": 101708,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Recursive Functions",
            "submessages": [],
            "timestamp": 1509596490,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/7697687bd5a37936a29e9882880550c7?d=identicon&version=1",
            "client": "website",
            "content": "<p>since it tests thousands of pixels...</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 117945082,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "dylanshinenyc@gmail.com",
            "sender_full_name": "Dylan Shine (F1'17)",
            "sender_id": 101708,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Recursive Functions",
            "submessages": [],
            "timestamp": 1509596502,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/7af0a4685e93e44ffcd2935fa31ff1c4?d=identicon&version=1",
            "client": "website",
            "content": "<p>Are you sure your nodes are absolutely positioned?</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 117945124,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "novalis@novalis.org",
            "sender_full_name": "David Turner",
            "sender_id": 8449,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Recursive Functions",
            "submessages": [],
            "timestamp": 1509596544,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/7697687bd5a37936a29e9882880550c7?d=identicon&version=1",
            "client": "website",
            "content": "<p>By absolute you mean static?</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 117945175,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "dylanshinenyc@gmail.com",
            "sender_full_name": "Dylan Shine (F1'17)",
            "sender_id": 101708,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Recursive Functions",
            "submessages": [],
            "timestamp": 1509596677,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/7697687bd5a37936a29e9882880550c7?d=identicon&version=1",
            "client": "website",
            "content": "<p>And if so yes they are</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 117945177,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "dylanshinenyc@gmail.com",
            "sender_full_name": "Dylan Shine (F1'17)",
            "sender_id": 101708,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Recursive Functions",
            "submessages": [],
            "timestamp": 1509596682,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/7af0a4685e93e44ffcd2935fa31ff1c4?d=identicon&version=1",
            "client": "website",
            "content": "<p>No, by absolute I mean that their coordinates are not relative to their parent's coordinates.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 117945184,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "novalis@novalis.org",
            "sender_full_name": "David Turner",
            "sender_id": 8449,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Recursive Functions",
            "submessages": [],
            "timestamp": 1509596725,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/7697687bd5a37936a29e9882880550c7?d=identicon&version=1",
            "client": "website",
            "content": "<p>they are relative</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 117945239,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "dylanshinenyc@gmail.com",
            "sender_full_name": "Dylan Shine (F1'17)",
            "sender_id": 101708,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Recursive Functions",
            "submessages": [],
            "timestamp": 1509596877,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/7697687bd5a37936a29e9882880550c7?d=identicon&version=1",
            "client": "website",
            "content": "<p><a href=\"/user_uploads/13/enl98kisckKPh2M6iWYgSfn7/tree\" target=\"_blank\" title=\"tree\">tree</a></p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 117945287,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "dylanshinenyc@gmail.com",
            "sender_full_name": "Dylan Shine (F1'17)",
            "sender_id": 101708,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Recursive Functions",
            "submessages": [],
            "timestamp": 1509596946,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/7af0a4685e93e44ffcd2935fa31ff1c4?d=identicon&version=1",
            "client": "website",
            "content": "<p>Oh, but they know what their parents' coordinates are, so that contains still works?  Or do you need to munge the coordinates as you descend?</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 117945289,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "novalis@novalis.org",
            "sender_full_name": "David Turner",
            "sender_id": 8449,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Recursive Functions",
            "submessages": [],
            "timestamp": 1509596955,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/7697687bd5a37936a29e9882880550c7?d=identicon&version=1",
            "client": "website",
            "content": "<p><a href=\"/user_uploads/13/BEbDcoNdz5OCSQ3oTaspy9t1/screenshot.png\" target=\"_blank\" title=\"screenshot.png\">screenshot.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/13/BEbDcoNdz5OCSQ3oTaspy9t1/screenshot.png\" target=\"_blank\" title=\"screenshot.png\"><img src=\"/user_uploads/13/BEbDcoNdz5OCSQ3oTaspy9t1/screenshot.png\"></a></div>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 117945291,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "dylanshinenyc@gmail.com",
            "sender_full_name": "Dylan Shine (F1'17)",
            "sender_id": 101708,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Recursive Functions",
            "submessages": [],
            "timestamp": 1509596978,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/7697687bd5a37936a29e9882880550c7?d=identicon&version=1",
            "client": "website",
            "content": "<p>I sent the tree in a file and a screenshot of the case</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 117945339,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "dylanshinenyc@gmail.com",
            "sender_full_name": "Dylan Shine (F1'17)",
            "sender_id": 101708,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Recursive Functions",
            "submessages": [],
            "timestamp": 1509597019,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/7af0a4685e93e44ffcd2935fa31ff1c4?d=identicon&version=1",
            "client": "website",
            "content": "<p>Is x==22 inside a rectangle of x==0, width==22 ?</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 117945344,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "novalis@novalis.org",
            "sender_full_name": "David Turner",
            "sender_id": 8449,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Recursive Functions",
            "submessages": [],
            "timestamp": 1509597060,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/7af0a4685e93e44ffcd2935fa31ff1c4?d=identicon&version=1",
            "client": "website",
            "content": "<p>er, sorry, I meant y and height</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 117945349,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "novalis@novalis.org",
            "sender_full_name": "David Turner",
            "sender_id": 8449,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Recursive Functions",
            "submessages": [],
            "timestamp": 1509597075,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/7af0a4685e93e44ffcd2935fa31ff1c4?d=identicon&version=1",
            "client": "website",
            "content": "<p>That is, is your off-by-one in pixels?</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 117945389,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "novalis@novalis.org",
            "sender_full_name": "David Turner",
            "sender_id": 8449,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Recursive Functions",
            "submessages": [],
            "timestamp": 1509597145,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/7697687bd5a37936a29e9882880550c7?d=identicon&version=1",
            "client": "website",
            "content": "<p>Node(nodeId: \"node-1-0-6\", frame: CGRect(x: 0, y: 0, width: 12, height: 22), children: [])</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 117945398,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "dylanshinenyc@gmail.com",
            "sender_full_name": "Dylan Shine (F1'17)",
            "sender_id": 101708,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Recursive Functions",
            "submessages": [],
            "timestamp": 1509597208,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/7697687bd5a37936a29e9882880550c7?d=identicon&version=1",
            "client": "website",
            "content": "<p>Its stating that the point (0,22) should be inside the node posted above</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 117945437,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "dylanshinenyc@gmail.com",
            "sender_full_name": "Dylan Shine (F1'17)",
            "sender_id": 101708,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Recursive Functions",
            "submessages": [],
            "timestamp": 1509597256,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/7697687bd5a37936a29e9882880550c7?d=identicon&version=1",
            "client": "website",
            "content": "<p>which it is</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 117945438,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "dylanshinenyc@gmail.com",
            "sender_full_name": "Dylan Shine (F1'17)",
            "sender_id": 101708,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Recursive Functions",
            "submessages": [],
            "timestamp": 1509597261,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/7af0a4685e93e44ffcd2935fa31ff1c4?d=identicon&version=1",
            "client": "website",
            "content": "<p>ok, hang on, let me test a thing.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 117945439,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "novalis@novalis.org",
            "sender_full_name": "David Turner",
            "sender_id": 8449,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Recursive Functions",
            "submessages": [],
            "timestamp": 1509597283,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/7af0a4685e93e44ffcd2935fa31ff1c4?d=identicon&version=1",
            "client": "website",
            "content": "<p>I just banged together a version of this to test, and my version seems to work in a simple case...</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 117945586,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "novalis@novalis.org",
            "sender_full_name": "David Turner",
            "sender_id": 8449,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Recursive Functions",
            "submessages": [],
            "timestamp": 1509597633,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/7af0a4685e93e44ffcd2935fa31ff1c4?d=identicon&version=1",
            "client": "website",
            "content": "<p><a href=\"http://swift.sandbox.bluemix.net/#/repl/59faa1dec7135166d2e4109e\" target=\"_blank\" title=\"http://swift.sandbox.bluemix.net/#/repl/59faa1dec7135166d2e4109e\">http://swift.sandbox.bluemix.net/#/repl/59faa1dec7135166d2e4109e</a></p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 117945592,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "novalis@novalis.org",
            "sender_full_name": "David Turner",
            "sender_id": 8449,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Recursive Functions",
            "submessages": [],
            "timestamp": 1509597670,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/7af0a4685e93e44ffcd2935fa31ff1c4?d=identicon&version=1",
            "client": "website",
            "content": "<p>Just to confirm: if you just ask whether that node (node-1-0-6) contains that pixel, does it?</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 117945690,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "novalis@novalis.org",
            "sender_full_name": "David Turner",
            "sender_id": 8449,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Recursive Functions",
            "submessages": [],
            "timestamp": 1509597907,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/7af0a4685e93e44ffcd2935fa31ff1c4?d=identicon&version=1",
            "client": "website",
            "content": "<p>Also, sorry to abandon you, but I am going to fall asleep unfortunately.  Best of luck.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 117945695,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "novalis@novalis.org",
            "sender_full_name": "David Turner",
            "sender_id": 8449,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Recursive Functions",
            "submessages": [],
            "timestamp": 1509597952,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/7697687bd5a37936a29e9882880550c7?d=identicon&version=1",
            "client": "website",
            "content": "<p>lol thanks for your help</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 117945734,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "dylanshinenyc@gmail.com",
            "sender_full_name": "Dylan Shine (F1'17)",
            "sender_id": 101708,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Recursive Functions",
            "submessages": [],
            "timestamp": 1509598012,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/7697687bd5a37936a29e9882880550c7?d=identicon&version=1",
            "client": "website",
            "content": "<p>yea it contains it</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 117945736,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "dylanshinenyc@gmail.com",
            "sender_full_name": "Dylan Shine (F1'17)",
            "sender_id": 101708,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Recursive Functions",
            "submessages": [],
            "timestamp": 1509598019,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/3f6bef626649c46b4cc3fd9f67c151a19170da5e?x=x&version=21",
            "client": "website",
            "content": "<p>i can help from here</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 117946121,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "jkozak@fmail.co.uk",
            "sender_full_name": "Jake \u26e4 Prozvyshe (they) (W1'17)",
            "sender_id": 8478,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Recursive Functions",
            "submessages": [],
            "timestamp": 1509598873,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/3f6bef626649c46b4cc3fd9f67c151a19170da5e?x=x&version=21",
            "client": "website",
            "content": "<p>for until I fall asleep from tired</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 117946123,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "jkozak@fmail.co.uk",
            "sender_full_name": "Jake \u26e4 Prozvyshe (they) (W1'17)",
            "sender_id": 8478,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Recursive Functions",
            "submessages": [],
            "timestamp": 1509598881,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/3f6bef626649c46b4cc3fd9f67c151a19170da5e?x=x&version=21",
            "client": "website",
            "content": "<p>what is the problem at this point?</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 117946171,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "jkozak@fmail.co.uk",
            "sender_full_name": "Jake \u26e4 Prozvyshe (they) (W1'17)",
            "sender_id": 8478,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Recursive Functions",
            "submessages": [],
            "timestamp": 1509598930,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/7697687bd5a37936a29e9882880550c7?d=identicon&version=1",
            "client": "website",
            "content": "<p>I think the test suite is broken</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 117946890,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "dylanshinenyc@gmail.com",
            "sender_full_name": "Dylan Shine (F1'17)",
            "sender_id": 101708,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Recursive Functions",
            "submessages": [],
            "timestamp": 1509600623,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/7697687bd5a37936a29e9882880550c7?d=identicon&version=1",
            "client": "website",
            "content": "<p>its starting not to make sense</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 117946891,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "dylanshinenyc@gmail.com",
            "sender_full_name": "Dylan Shine (F1'17)",
            "sender_id": 101708,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Recursive Functions",
            "submessages": [],
            "timestamp": 1509600630,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/7697687bd5a37936a29e9882880550c7?d=identicon&version=1",
            "client": "website",
            "content": "<p>Pixel: (0.0, 23.0), Child:node-1-0 true<br>\n[iOSTestTests.ViewHierarchyTests test3_Hard] : XCTAssertEqual failed: (\"[\"node\", \"node-1\", \"node-1-0\"]\") is not equal to (\"[\"node\", \"node-1\", \"node-1-0\", \"node-1-0-6\"]\")</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 117946892,
            "is_me_message": false,
            "last_edit_timestamp": 1509600659,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "dylanshinenyc@gmail.com",
            "sender_full_name": "Dylan Shine (F1'17)",
            "sender_id": 101708,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Recursive Functions",
            "submessages": [],
            "timestamp": 1509600647,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/7697687bd5a37936a29e9882880550c7?d=identicon&version=1",
            "client": "website",
            "content": "<p>What that test is saying is that (0.0, 23.0) should be view node-1-0-6</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 117946900,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "dylanshinenyc@gmail.com",
            "sender_full_name": "Dylan Shine (F1'17)",
            "sender_id": 101708,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Recursive Functions",
            "submessages": [],
            "timestamp": 1509600702,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/7697687bd5a37936a29e9882880550c7?d=identicon&version=1",
            "client": "website",
            "content": "<p>But the node is Node(nodeId: \"node-1-0-6\", frame: CGRect(x: 0, y: 0, width: 12, height: 22), children: [])</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 117946939,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "dylanshinenyc@gmail.com",
            "sender_full_name": "Dylan Shine (F1'17)",
            "sender_id": 101708,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Recursive Functions",
            "submessages": [],
            "timestamp": 1509600728,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/7697687bd5a37936a29e9882880550c7?d=identicon&version=1",
            "client": "website",
            "content": "<p>a Y of 23 would not be found in that CGRect</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 117946940,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "dylanshinenyc@gmail.com",
            "sender_full_name": "Dylan Shine (F1'17)",
            "sender_id": 101708,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Recursive Functions",
            "submessages": [],
            "timestamp": 1509600760,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/b3969612f0d6f4b398a1eec04087aafc0a38475e?x=x&version=2",
            "client": "ZulipElectron",
            "content": "<p>Starting in 5 mins in Turing</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 117961795,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "joebeach@gmail.com",
            "sender_full_name": "Joe Beach (F2'17)",
            "sender_id": 102026,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Study Group",
            "submessages": [],
            "timestamp": 1509634527,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/7af0a4685e93e44ffcd2935fa31ff1c4?d=identicon&version=1",
            "client": "website",
            "content": "<p>Did you figure this out?  I forgot to suggest it last night, but I think the best strategy is to try to break the test down into the smallest possible failing case.  For instance, if your suspicion is that the last component is always being skipped, remove everything except node, node-1, node-1-0, and node-1-0-6.  Then remove node-1-0-6 to see if node-1-0 disappears from the output.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 117964688,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "novalis@novalis.org",
            "sender_full_name": "David Turner",
            "sender_id": 8449,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Recursive Functions",
            "submessages": [],
            "timestamp": 1509639236,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/b3969612f0d6f4b398a1eec04087aafc0a38475e?x=x&version=2",
            "client": "ZulipElectron",
            "content": "<p>Here's this week's event: <a href=\"https://www.recurse.com/calendar/1368\" target=\"_blank\" title=\"https://www.recurse.com/calendar/1368\">https://www.recurse.com/calendar/1368</a></p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 118161769,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "joebeach@gmail.com",
            "sender_full_name": "Joe Beach (F2'17)",
            "sender_id": 102026,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Study Group",
            "submessages": [],
            "timestamp": 1510063414,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/b3969612f0d6f4b398a1eec04087aafc0a38475e?x=x&version=2",
            "client": "ZulipElectron",
            "content": "<p>Starting in 3 minutes in Turing. DYNAMIC PROGRAMMING huzzah!</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 118259568,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "joebeach@gmail.com",
            "sender_full_name": "Joe Beach (F2'17)",
            "sender_id": 102026,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Study Group",
            "submessages": [],
            "timestamp": 1510243033,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/b3969612f0d6f4b398a1eec04087aafc0a38475e?x=x&version=2",
            "client": "ZulipElectron",
            "content": "<p><span class=\"user-mention\" data-user-email=\"nephilim.eric@gmail.com\" data-user-id=\"102032\">@Eric Michael Lindgren (F2'17)</span> <span class=\"user-mention\" data-user-email=\"o.awomosu@gmail.com\" data-user-id=\"101990\">@Femi Awomosu (F2'17)</span> <span class=\"user-mention\" data-user-email=\"danweasel@gmail.com\" data-user-id=\"101997\">@Andrew Nichols (F2'17)</span> <span class=\"user-mention\" data-user-email=\"coleamurphy@gmail.com\" data-user-id=\"7859\">@Cole Murphy (W1'17)</span> <span class=\"user-mention\" data-user-email=\"jacquin.mininger@gmail.com\" data-user-id=\"102005\">@Jacquin Mininger (F2'17)</span> <span class=\"user-mention\" data-user-email=\"justyna.janczyszyn@gmail.com\" data-user-id=\"101996\">@Justyna Lidia Janczyszyn (F2'17)</span> <span class=\"user-mention\" data-user-email=\"kadeemnibbs@gmail.com\" data-user-id=\"102108\">@Kadeem Nibbs (F2'17)</span></p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 118259585,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "joebeach@gmail.com",
            "sender_full_name": "Joe Beach (F2'17)",
            "sender_id": 102026,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Study Group",
            "submessages": [],
            "timestamp": 1510243065,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/b3969612f0d6f4b398a1eec04087aafc0a38475e?x=x&version=2",
            "client": "ZulipElectron",
            "content": "<p>Actually we're going to be in Lovelace today</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 118259801,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "joebeach@gmail.com",
            "sender_full_name": "Joe Beach (F2'17)",
            "sender_id": 102026,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Study Group",
            "submessages": [],
            "timestamp": 1510243358,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/d84e3106fff0d257cc5a95ca9ea44405?d=identicon&version=1",
            "client": "website",
            "content": "<p>Hi all, I'm trying to estimate the complexity of a tree algorithm and could use some help. The problem domain is UI view hierarchies; assume that the max number of children per view (tree degree in classical terminology) is <code>width</code> and the depth of the tree is <code>depth</code>. Then the size of the tree (number of nodes) is <code>O(width^depth)</code>. The question is, if for each node in the tree I generate and cache some data whose storage size O(n) where n is the size of that subtree, what is the total size? The upper bound is <code>n == O(w^d)</code> so total size would be <code>O((w^d)^2)</code> but I'm guessing it can be expressed more tightly.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 120928223,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "george.w.king@gmail.com",
            "sender_full_name": "George King (he) (S'13)",
            "sender_id": 2153,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Tree algorithm complexity",
            "submessages": [],
            "timestamp": 1515692997,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/187931dc9ca73b56a4e014e6009c00a1?d=identicon&version=1",
            "client": "website",
            "content": "<p>Take this with a grain of salt because I haven't taken too much time to check my work, but...<br>\nThe nth level of the tree has w^n nodes in it, and each of these nodes has a subtree of size w^(d-n). That means that the total data size of that level is O(w^d), making your total size O(w^d * d).</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 120931360,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "me@joeym.org",
            "sender_full_name": "Joey Marianer (he) (m1'18)",
            "sender_id": 105228,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Tree algorithm complexity",
            "submessages": [],
            "timestamp": 1515697485,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/d84e3106fff0d257cc5a95ca9ea44405?d=identicon&version=1",
            "client": "website",
            "content": "<p><span class=\"user-mention\" data-user-email=\"me@joeym.org\" data-user-id=\"105228\">@Joey Marianer (m1'18)</span> I don't follow your logic but I'll keep thinking about it!</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 120933295,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "george.w.king@gmail.com",
            "sender_full_name": "George King (he) (S'13)",
            "sender_id": 2153,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Tree algorithm complexity",
            "submessages": [],
            "timestamp": 1515699893,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/b6389a3870b2757624fefd85d08b75b08f6dc815?x=x&version=2",
            "client": "website",
            "content": "<p>.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 121178042,
            "is_me_message": false,
            "last_edit_timestamp": 1516205167,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "robert@schuessler.org",
            "sender_full_name": "Robert Schuessler (W1'17)",
            "sender_id": 103047,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Tree algorithm complexity",
            "submessages": [],
            "timestamp": 1516205139,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/b6389a3870b2757624fefd85d08b75b08f6dc815?x=x&version=2",
            "client": "website",
            "content": "<p>I continued <span class=\"user-mention\" data-user-email=\"logan.williams@alum.mit.edu\" data-user-id=\"105229\">@Logan Williams (W2'18)</span>'s Algorithms meeting reservations for the next five weeks: Wednesdays at 3:00, review first part of pset; Fridays at 3:00, complete pset, discuss proof.</p>\n<p><a href=\"https://www.recurse.com/calendar/1588\" target=\"_blank\" title=\"https://www.recurse.com/calendar/1588\">https://www.recurse.com/calendar/1588</a><br>\n<a href=\"https://www.recurse.com/calendar/1593\" target=\"_blank\" title=\"https://www.recurse.com/calendar/1593\">https://www.recurse.com/calendar/1593</a></p>\n<p>If anyone wants to catch up with this group, we can do that any time this afternoon. Lectures, etc. are here: <a href=\"https://ocw.mit.edu/courses/electrical-engineering-and-computer-science/6-006-introduction-to-algorithms-fall-2011/\" target=\"_blank\" title=\"https://ocw.mit.edu/courses/electrical-engineering-and-computer-science/6-006-introduction-to-algorithms-fall-2011/\">https://ocw.mit.edu/courses/electrical-engineering-and-computer-science/6-006-introduction-to-algorithms-fall-2011/</a></p>\n<p><span class=\"user-mention\" data-user-email=\"cameron@tomyumcorp.com\" data-user-id=\"103055\">@Cameron Finucane (W1'17)</span>, <span class=\"user-mention\" data-user-email=\"nicole.leffel@gmail.com\" data-user-id=\"103187\">@nicole leffel (W1'17)</span>, <span class=\"user-mention\" data-user-email=\"mburtless@threepnet.com\" data-user-id=\"105176\">@Matthew Burtless (W2'18)</span>, <span class=\"user-mention\" data-user-email=\"ethanrodkin@gmail.com\" data-user-id=\"105054\">@Ethan Rodkin (W2'18)</span>, <span class=\"user-mention\" data-user-email=\"logan.williams@alum.mit.edu\" data-user-id=\"105229\">@Logan Williams (W2'18)</span>, <span class=\"user-mention\" data-user-email=\"ondoheer@gmail.com\" data-user-id=\"105145\">@Pedro Alejandro Baumann Cornejo (W2'18)</span>, <span class=\"user-mention\" data-user-email=\"vcabre4@gmail.com\" data-user-id=\"105056\">@Victor Raphael Cabrera (W2'18)</span>, <span class=\"user-mention\" data-user-email=\"tiburona@gmail.com\" data-user-id=\"105443\">@Katie Surrence (W2'18)</span></p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 121178094,
            "is_me_message": false,
            "last_edit_timestamp": 1516205201,
            "reactions": [
                {
                    "emoji_code": "1f44d",
                    "emoji_name": "thumbs_up",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "mburtless@threepnet.com",
                        "full_name": "Matthew Burtless (he) (W2'18)",
                        "id": 105176
                    },
                    "user_id": 105176
                },
                {
                    "emoji_code": "1f419",
                    "emoji_name": "octopus",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "ethanrodkin@gmail.com",
                        "full_name": "Ethan Rodkin (he) (SP2'18)",
                        "id": 105054
                    },
                    "user_id": 105054
                }
            ],
            "recipient_id": 24954,
            "sender_email": "robert@schuessler.org",
            "sender_full_name": "Robert Schuessler (W1'17)",
            "sender_id": 103047,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Algorithms Meetings",
            "submessages": [],
            "timestamp": 1516205178,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/d78ab1df3a0ad57e48ac2f39be4af853ddb1db17?x=x&version=3",
            "client": "ZulipElectron",
            "content": "<p>This week's problem set is two (long) problems, so we'll try to discuss problem 1 this afternoon.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 121178105,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "logan.williams@alum.mit.edu",
            "sender_full_name": "Logan Williams (he) (W2'18)",
            "sender_id": 105229,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Algorithms Meetings",
            "submessages": [],
            "timestamp": 1516205222,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/47d545529e036682e7075910a2489214?d=identicon&version=1",
            "client": "ZulipElectron",
            "content": "<blockquote>\n<p>This week's problem set is two (long) problems, so we'll try to discuss problem 1 this afternoon.</p>\n</blockquote>\n<p>Great, I'm just finishing the class video</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 121178196,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "ondoheer@gmail.com",
            "sender_full_name": "Pedro Alejandro Baumann Cornejo (he) (W2'18)",
            "sender_id": 105145,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Algorithms Meetings",
            "submessages": [],
            "timestamp": 1516205370,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/6026a80c57f6d1d949cee04bcd1ad817?d=identicon&version=1",
            "client": "website",
            "content": "<p>a) I'm refreshed by exercise  and b) I'm finding context switching is a lot of work.  So <span class=\"user-mention\" data-user-email=\"logan.williams@alum.mit.edu\" data-user-id=\"105229\">@Logan Williams (W2'18)</span>  <span class=\"user-mention\" data-user-email=\"robert@schuessler.org\" data-user-id=\"103047\">@Robert Schuessler (W1'17)</span> or <span class=\"user-mention\" data-user-email=\"thisisbryanchu@gmail.com\" data-user-id=\"105710\">@Bryan Chu (W2'18)</span> if you want to go ahead and switch to problem 2 it might be a relief to have thought it through well before our meeting.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 121191977,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "tiburona@gmail.com",
            "sender_full_name": "Katie Surrence (she) (W2'18)",
            "sender_id": 105443,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Algorithms Meetings",
            "submessages": [],
            "timestamp": 1516225144,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/b6389a3870b2757624fefd85d08b75b08f6dc815?x=x&version=2",
            "client": "website",
            "content": "<p>Pinging <span class=\"user-mention\" data-user-email=\"kadeemnibbs@gmail.com\" data-user-id=\"102108\">@Kadeem Nibbs (W2'18)</span> for the meetings <span class=\"emoji emoji-261d\" title=\"point up\">:point_up:</span> </p>\n<p>Two things:</p>\n<ul>\n<li>I forgot I'll be out tomorrow -- a friend is visiting this weekend. I used the method mentioned in my checkin to solve the second half of pset 2.</li>\n<li><span class=\"user-mention\" data-user-email=\"ethanrodkin@gmail.com\" data-user-id=\"105054\">@Ethan Rodkin (W2'18)</span> discovered that we got the order wrong for the first complexity ranking problem in pset 1 -- it's probably worth going over that tomorrow</li>\n</ul>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 121216123,
            "is_me_message": false,
            "last_edit_timestamp": 1516275044,
            "reactions": [
                {
                    "emoji_code": "1f44d",
                    "emoji_name": "thumbs_up",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "kadeemnibbs@gmail.com",
                        "full_name": "Kadeem Nibbs (W2'18)",
                        "id": 102108
                    },
                    "user_id": 102108
                }
            ],
            "recipient_id": 24954,
            "sender_email": "robert@schuessler.org",
            "sender_full_name": "Robert Schuessler (W1'17)",
            "sender_id": 103047,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Algorithms Meetings",
            "submessages": [],
            "timestamp": 1516275015,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/6026a80c57f6d1d949cee04bcd1ad817?d=identicon&version=1",
            "client": "website",
            "content": "<p>hi all, just letting you know I am not going to be in today, but I worked with <span class=\"user-mention\" data-user-email=\"robert@schuessler.org\" data-user-id=\"103047\">@Robert Schuessler (W1'17)</span> on the second half of pset 2, so I'm probably ok.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 121273091,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "tiburona@gmail.com",
            "sender_full_name": "Katie Surrence (she) (W2'18)",
            "sender_id": 105443,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Algorithms Meetings",
            "submessages": [],
            "timestamp": 1516378671,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/cb7cb674ca838c0492bb3a6b298368b7?d=identicon&version=1",
            "client": "ZulipElectron",
            "content": "<p><a href=\"/user_uploads/13/dixxkTWbopqsb3AQ_VrNkQp6/pasted_image.png\" target=\"_blank\" title=\"pasted_image.png\">pasted image</a> </p>\n<p>This is the output I got from cProfile, if it saves anyone the time of running the profiler themselves</p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/13/dixxkTWbopqsb3AQ_VrNkQp6/pasted_image.png\" target=\"_blank\" title=\"pasted image\"><img src=\"/user_uploads/13/dixxkTWbopqsb3AQ_VrNkQp6/pasted_image.png\"></a></div>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 121276234,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "thisisbryanchu@gmail.com",
            "sender_full_name": "Bryan Chu (SP2'18)",
            "sender_id": 105710,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Algorithms Meetings",
            "submessages": [],
            "timestamp": 1516383800,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/d78ab1df3a0ad57e48ac2f39be4af853ddb1db17?x=x&version=3",
            "client": "ZulipElectron",
            "content": "<p><span class=\"user-mention\" data-user-email=\"tiburona@gmail.com\" data-user-id=\"105443\">@Katie Surrence (W2'18)</span> is your conflict on Friday recurring? We could move it to Wednesday/Thursday or something else instead?</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 121276772,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "logan.williams@alum.mit.edu",
            "sender_full_name": "Logan Williams (he) (W2'18)",
            "sender_id": 105229,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Algorithms Meetings",
            "submessages": [],
            "timestamp": 1516384662,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/6026a80c57f6d1d949cee04bcd1ad817?d=identicon&version=1",
            "client": "website",
            "content": "<p>no, it's not recurring.  There are different reasons I wasn't around last Friday and this, and I was thinking of rescheduling the meeting I had today but then since I paired on the solution I didn't think it was necessary.  I'll just make sure not to make appointments on Friday afternoons!  Thanks!</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 121276847,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "tiburona@gmail.com",
            "sender_full_name": "Katie Surrence (she) (W2'18)",
            "sender_id": 105443,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Algorithms Meetings",
            "submessages": [],
            "timestamp": 1516384778,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/cb7cb674ca838c0492bb3a6b298368b7?d=identicon&version=1",
            "client": "ZulipElectron",
            "content": "<p><a href=\"https://ocw.mit.edu/courses/electrical-engineering-and-computer-science/6-006-introduction-to-algorithms-fall-2011/assignments/\" target=\"_blank\" title=\"https://ocw.mit.edu/courses/electrical-engineering-and-computer-science/6-006-introduction-to-algorithms-fall-2011/assignments/\">https://ocw.mit.edu/courses/electrical-engineering-and-computer-science/6-006-introduction-to-algorithms-fall-2011/assignments/</a></p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 121282659,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "thisisbryanchu@gmail.com",
            "sender_full_name": "Bryan Chu (SP2'18)",
            "sender_id": 105710,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Algorithms Meetings",
            "submessages": [],
            "timestamp": 1516393920,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/cb7cb674ca838c0492bb3a6b298368b7?d=identicon&version=1",
            "client": "ZulipElectron",
            "content": "<p><span class=\"user-mention\" data-user-email=\"bootandy@gmail.com\" data-user-id=\"105172\">@andrew boot (W2'18)</span></p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 121283689,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "thisisbryanchu@gmail.com",
            "sender_full_name": "Bryan Chu (SP2'18)",
            "sender_id": 105710,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Algorithms Meetings",
            "submessages": [],
            "timestamp": 1516395582,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/6026a80c57f6d1d949cee04bcd1ad817?d=identicon&version=1",
            "client": "website",
            "content": "<p>hey, all.  I am trying to make sure that in trying to do these psets I don't lose track of actually just knowing the basic algorithms that are discussed in lecture (which sort of confusingly aren't exactly on the psets).  </p>\n<p>I'm trying to construct a list of things to understand about an algorithm.</p>\n<p>Here's a stab at such a list:</p>\n<p>1) Can I fluently implement it in Python?</p>\n<p>2) What is the time complexity of the algorithm?  Can I write the write a recurrence relationship that demonstrates that?</p>\n<p>3) What are the circumstances in which this algorithm would be useful?  [Does it make more sense to talk about data structures and the time and space complexity of the processes you can do with them as opposed to dividing this up by the procedure?]</p>\n<p>I'm just trying to systematize what I think I should know about the material covered -- does anyone have suggestions for how they would make such a list or alter this one?</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 121390977,
            "is_me_message": false,
            "last_edit_timestamp": 1516641794,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "tiburona@gmail.com",
            "sender_full_name": "Katie Surrence (she) (W2'18)",
            "sender_id": 105443,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Algorithms Meetings",
            "submessages": [],
            "timestamp": 1516641633,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/b6389a3870b2757624fefd85d08b75b08f6dc815?x=x&version=2",
            "client": "website",
            "content": "<p>I think these are all good ideas. I am doing the first two, and think the third is important but I'm not doing it.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 121391281,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "robert@schuessler.org",
            "sender_full_name": "Robert Schuessler (W1'17)",
            "sender_id": 103047,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Algorithms Meetings",
            "submessages": [],
            "timestamp": 1516642136,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/b6389a3870b2757624fefd85d08b75b08f6dc815?x=x&version=2",
            "client": "website",
            "content": "<p>Actually my non-technical presentation tonight might help with 2).</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 121391551,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "robert@schuessler.org",
            "sender_full_name": "Robert Schuessler (W1'17)",
            "sender_id": 103047,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Algorithms Meetings",
            "submessages": [],
            "timestamp": 1516642574,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/6026a80c57f6d1d949cee04bcd1ad817?d=identicon&version=1",
            "client": "ZulipElectron",
            "content": "<p>ok, I have a question about recurrence equations that I think I can't perfectly articulate, but maybe I'll just note it here and we could talk about it in a meeting?  In recitation video 5 around 13 minutes: I understand what he did with the tree, but I don't understand that system of three equations (visible on the board at 13:19) or whether he did some math with them that's implied in what he wrote there.  It's not that I don't understand intuitively why merge sort is O(NlogN), but I would like to feel like I actually knew how he is solving for O (or whether he is) and I don't.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 121433990,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "tiburona@gmail.com",
            "sender_full_name": "Katie Surrence (she) (W2'18)",
            "sender_id": 105443,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Algorithms Meetings",
            "submessages": [],
            "timestamp": 1516722960,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/b6389a3870b2757624fefd85d08b75b08f6dc815?x=x&version=2",
            "client": "website",
            "content": "<p>I found this useful for the heap vs insort question that <span class=\"user-mention\" data-user-email=\"thisisbryanchu@gmail.com\" data-user-id=\"105710\">@Bryan Chu (W2'18)</span>, <span class=\"user-mention\" data-user-email=\"vcabre4@gmail.com\" data-user-id=\"105056\">@Victor Raphael Cabrera (W2'18)</span>, and <span class=\"user-mention\" data-user-email=\"tiburona@gmail.com\" data-user-id=\"105443\">@Katie Surrence (W2'18)</span> raised:</p>\n<p>tl;dr: They are right</p>\n<p><a href=\"https://stackoverflow.com/questions/19979518/what-is-pythons-heapq-module\" target=\"_blank\" title=\"https://stackoverflow.com/questions/19979518/what-is-pythons-heapq-module\">https://stackoverflow.com/questions/19979518/what-is-pythons-heapq-module</a></p>\n<p>Quoted from above link:</p>\n<p>\"As you demonstrate, a heap is not a sorted list (though a sorted list is a heap). What is a heap? To quote Skiena's Algorithm Design Manual</p>\n<p><code>Heaps are a simple and elegant data structure for efficiently supporting the priority queue operations insert and extract-min. They work by maintaining a partial order on the set of elements which is weaker than the sorted order (so it can be efficient to maintain) yet stronger than random order (so the minimum element can be quickly identified).</code></p>\n<p>Compared to a sorted list, a heap obeys a weaker condition the heap invariant. Before defining it, first think why relaxing the condition might be useful. The answer is the weaker condition is easier to maintain. You can do less with a heap, but you can do it faster.</p>\n<p>A heap has three operations:</p>\n<ul>\n<li>Find-Minimum is O(1)</li>\n<li>Insert O(log n)</li>\n<li>Remove-Min O(log n)</li>\n</ul>\n<p><strong>Crucially Insert is O(log n) which beats O(n) for a sorted list.</strong></p>\n<p>What is the heap invariant? \"A binary tree where parents dominate their children\". That is, \"p \u2264 c for all children c of p\". Skiena illustrates with pictures and goes on to demonstrate the algorithm for inserting elements while maintaining the invariant. If you think a while, you can invent them yourself. (Hint: they are known as bubble up and bubble down)</p>\n<p>The good news is that batteries-included Python implements everything for you, in the heapq module. It doesn't define a heap type (which I think would be easier to use), but provides them as helper functions on list.</p>\n<p><strong>Moral: If you write an algorithm using a sorted list but only ever inspect and remove from one end, then you can make the algorithm more efficient by using a heap.</strong>\"</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 121445367,
            "is_me_message": false,
            "last_edit_timestamp": 1516740649,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "robert@schuessler.org",
            "sender_full_name": "Robert Schuessler (W1'17)",
            "sender_id": 103047,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Algorithms Meetings",
            "submessages": [],
            "timestamp": 1516739903,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/6026a80c57f6d1d949cee04bcd1ad817?d=identicon&version=1",
            "client": "website",
            "content": "<p>If anyone wants to pair today on the wire crossing, I would like to.  [Deleted description of my current understanding of problem in case it was mildly spoiler-y.]</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 121572605,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "tiburona@gmail.com",
            "sender_full_name": "Katie Surrence (she) (W2'18)",
            "sender_id": 105443,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Algorithms Meetings",
            "submessages": [],
            "timestamp": 1516980089,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/cb7cb674ca838c0492bb3a6b298368b7?d=identicon&version=1",
            "client": "ZulipElectron",
            "content": "<p><a href=\"/user_uploads/13/nW02gfdwLUWtUMJEgcF4Zza7/pasted_image.png\" target=\"_blank\" title=\"pasted_image.png\">pasted image</a> </p>\n<p>My cProfile output!</p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/13/nW02gfdwLUWtUMJEgcF4Zza7/pasted_image.png\" target=\"_blank\" title=\"pasted image\"><img src=\"/user_uploads/13/nW02gfdwLUWtUMJEgcF4Zza7/pasted_image.png\"></a></div>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 121576476,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "thisisbryanchu@gmail.com",
            "sender_full_name": "Bryan Chu (SP2'18)",
            "sender_id": 105710,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Algorithms Meetings",
            "submessages": [],
            "timestamp": 1516985943,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/6026a80c57f6d1d949cee04bcd1ad817?d=identicon&version=1",
            "client": "website",
            "content": "<p>New pairing invitation!  I had a really good time pairing with <span class=\"user-mention\" data-user-email=\"ondoheer@gmail.com\" data-user-id=\"105145\">@Pedro Alejandro Baumann Cornejo (W2'18)</span>  and I think we spent 2.5 hours coming to roughly the same conclusion as our intuition at the beginning, but now it's based on a good understanding of the code!  I would take a pair for implementing an AVL binary tree for the wire crossing finder, because I'm having trouble striking a balance between feeling confused about how to proceed and essentially looking up the answer in Python.  I've done this in JavaScript (at least the BST part, not the balancing) within the past year; it kind of disturbs me how little it sticks. :/</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 121581107,
            "is_me_message": false,
            "last_edit_timestamp": 1516991633,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "tiburona@gmail.com",
            "sender_full_name": "Katie Surrence (she) (W2'18)",
            "sender_id": 105443,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Algorithms Meetings",
            "submessages": [],
            "timestamp": 1516991574,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/d78ab1df3a0ad57e48ac2f39be4af853ddb1db17?x=x&version=3",
            "client": "ZulipElectron",
            "content": "<p>Has anyone gotten the visualizer to work?</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 121582191,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "logan.williams@alum.mit.edu",
            "sender_full_name": "Logan Williams (he) (W2'18)",
            "sender_id": 105229,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Algorithms Meetings",
            "submessages": [],
            "timestamp": 1516992943,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/6026a80c57f6d1d949cee04bcd1ad817?d=identicon&version=1",
            "client": "website",
            "content": "<p>we did.  It doesn't work till you copy over the good trace jsonb file.  did you do that?</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 121582343,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "tiburona@gmail.com",
            "sender_full_name": "Katie Surrence (she) (W2'18)",
            "sender_id": 105443,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Algorithms Meetings",
            "submessages": [],
            "timestamp": 1516993140,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/d78ab1df3a0ad57e48ac2f39be4af853ddb1db17?x=x&version=3",
            "client": "ZulipElectron",
            "content": "<p>Yeah, I'm having Ruby trouble</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 121582577,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "logan.williams@alum.mit.edu",
            "sender_full_name": "Logan Williams (he) (W2'18)",
            "sender_id": 105229,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Algorithms Meetings",
            "submessages": [],
            "timestamp": 1516993357,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/d78ab1df3a0ad57e48ac2f39be4af853ddb1db17?x=x&version=3",
            "client": "ZulipElectron",
            "content": "<p><code>rake aborted!\nundefined method `empty?' for nil:NilClass</code></p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 121582603,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "logan.williams@alum.mit.edu",
            "sender_full_name": "Logan Williams (he) (W2'18)",
            "sender_id": 105229,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Algorithms Meetings",
            "submessages": [],
            "timestamp": 1516993375,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/d78ab1df3a0ad57e48ac2f39be4af853ddb1db17?x=x&version=3",
            "client": "ZulipElectron",
            "content": "<p>oh, nevermind, it actually works even though it gives that error</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 121582790,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "logan.williams@alum.mit.edu",
            "sender_full_name": "Logan Williams (he) (W2'18)",
            "sender_id": 105229,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Algorithms Meetings",
            "submessages": [],
            "timestamp": 1516993584,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/d78ab1df3a0ad57e48ac2f39be4af853ddb1db17?x=x&version=3",
            "client": "ZulipElectron",
            "content": "<p>\u00af\\_(\u30c4)_/\u00af</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 121582799,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "logan.williams@alum.mit.edu",
            "sender_full_name": "Logan Williams (he) (W2'18)",
            "sender_id": 105229,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Algorithms Meetings",
            "submessages": [],
            "timestamp": 1516993602,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/b6389a3870b2757624fefd85d08b75b08f6dc815?x=x&version=2",
            "client": "website",
            "content": "<p><a href=\"http://www.columbia.edu/~cs2035/courses/csor4231.F05/heap-invariant.pdf\" target=\"_blank\" title=\"http://www.columbia.edu/~cs2035/courses/csor4231.F05/heap-invariant.pdf\">http://www.columbia.edu/~cs2035/courses/csor4231.F05/heap-invariant.pdf</a></p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 121586099,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "robert@schuessler.org",
            "sender_full_name": "Robert Schuessler (W1'17)",
            "sender_id": 103047,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Algorithms Meetings",
            "submessages": [],
            "timestamp": 1516998265,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/aabd3f5b0d85a5cd43367315223e784a0b18b740?x=x&version=2",
            "client": "website",
            "content": "<p>I'd like to join this group. Where should I pick up?</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 121678621,
            "is_me_message": false,
            "reactions": [
                {
                    "emoji_code": "1f44d",
                    "emoji_name": "thumbs_up",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "robert@schuessler.org",
                        "full_name": "Robert Schuessler (W1'17)",
                        "id": 103047
                    },
                    "user_id": 103047
                }
            ],
            "recipient_id": 24954,
            "sender_email": "levimroth@gmail.com",
            "sender_full_name": "Levi Roth (he) (W2'18)",
            "sender_id": 105051,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Algorithms Meetings",
            "submessages": [],
            "timestamp": 1517164632,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/d78ab1df3a0ad57e48ac2f39be4af853ddb1db17?x=x&version=3",
            "client": "ZulipElectron",
            "content": "<p>Hey Levi. We're going to be working on Problem Set 4 this week!</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 121738218,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "logan.williams@alum.mit.edu",
            "sender_full_name": "Logan Williams (he) (W2'18)",
            "sender_id": 105229,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Algorithms Meetings",
            "submessages": [],
            "timestamp": 1517238587,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/606962c7ae66817bdd0830cc619b69a1?d=identicon&version=1",
            "client": "website",
            "content": "<p>We just went over the third problem set on Friday, which ~covers the first 7 or so lectures. So if you want to pick up in the middle, probably start with lecture eight. If you plan on going over the earlier problem sets to get caught up, I certainly wouldn't mind the opportunity to refresh and make sure I understand them.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 121738221,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "ethanrodkin@gmail.com",
            "sender_full_name": "Ethan Rodkin (he) (SP2'18)",
            "sender_id": 105054,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Algorithms Meetings",
            "submessages": [],
            "timestamp": 1517238591,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/6026a80c57f6d1d949cee04bcd1ad817?d=identicon&version=1",
            "client": "website",
            "content": "<p>I would definitely be up for talking about how to solve recurrences if that gets covered in your review; I don't think I yet understand.  This is what I was alluding to in my Jan 26 comment in this thread.  And maybe more generally how any of the proofs have worked.  (Maybe I'm behind but I think Lecture 7 wasn't covered by the last homework.)</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 121750706,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "tiburona@gmail.com",
            "sender_full_name": "Katie Surrence (she) (W2'18)",
            "sender_id": 105443,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Algorithms Meetings",
            "submessages": [],
            "timestamp": 1517258330,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/d78ab1df3a0ad57e48ac2f39be4af853ddb1db17?x=x&version=3",
            "client": "ZulipElectron",
            "content": "<p>I'm having trouble getting my code to run quickly, even with AVL trees. Does anyone want to walk through my code with me?</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 121751963,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "logan.williams@alum.mit.edu",
            "sender_full_name": "Logan Williams (he) (W2'18)",
            "sender_id": 105229,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Problem set 3-2 l)",
            "submessages": [],
            "timestamp": 1517260340,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/6026a80c57f6d1d949cee04bcd1ad817?d=identicon&version=1",
            "client": "website",
            "content": "<p>I'll come look at it; not sure how helpful I'll be.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 121752337,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "tiburona@gmail.com",
            "sender_full_name": "Katie Surrence (she) (W2'18)",
            "sender_id": 105443,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Problem set 3-2 l)",
            "submessages": [],
            "timestamp": 1517260949,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/6026a80c57f6d1d949cee04bcd1ad817?d=identicon&version=1",
            "client": "website",
            "content": "<p>where are you?</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 121752341,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "tiburona@gmail.com",
            "sender_full_name": "Katie Surrence (she) (W2'18)",
            "sender_id": 105443,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Problem set 3-2 l)",
            "submessages": [],
            "timestamp": 1517260958,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/d78ab1df3a0ad57e48ac2f39be4af853ddb1db17?x=x&version=3",
            "client": "ZulipElectron",
            "content": "<p>Lecture 8 explains why you can't do this! It makes sense!</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 121803819,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "logan.williams@alum.mit.edu",
            "sender_full_name": "Logan Williams (he) (W2'18)",
            "sender_id": 105229,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Python list as dictionary key",
            "submessages": [],
            "timestamp": 1517352032,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/6026a80c57f6d1d949cee04bcd1ad817?d=identicon&version=1",
            "client": "website",
            "content": "<p>is there a typo here? if not, can anyone explain \"enlarging a table of<br>\nsize m into a table of size m\"?:</p>\n<p>Suppose that Alyssa decides to implement resizing. If Alyssa is enlarging a table of<br>\nsize m into a table of size m, and the table contains n elements, what is the best time<br>\ncomplexity she can achieve?</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 121841403,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "tiburona@gmail.com",
            "sender_full_name": "Katie Surrence (she) (W2'18)",
            "sender_id": 105443,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Algorithms Meetings",
            "submessages": [],
            "timestamp": 1517422920,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/aabd3f5b0d85a5cd43367315223e784a0b18b740?x=x&version=2",
            "client": "website",
            "content": "<p>I assumed the second <code>m</code> was supposed to be an <code>m'</code>.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 121841444,
            "is_me_message": false,
            "reactions": [
                {
                    "emoji_code": "1f44d",
                    "emoji_name": "thumbs_up",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "bootandy@gmail.com",
                        "full_name": "andrew boot (W2'18)",
                        "id": 105172
                    },
                    "user_id": 105172
                },
                {
                    "emoji_code": "1f44d",
                    "emoji_name": "thumbs_up",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "mburtless@threepnet.com",
                        "full_name": "Matthew Burtless (he) (W2'18)",
                        "id": 105176
                    },
                    "user_id": 105176
                },
                {
                    "emoji_code": "1f44d",
                    "emoji_name": "thumbs_up",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "tiburona@gmail.com",
                        "full_name": "Katie Surrence (she) (W2'18)",
                        "id": 105443
                    },
                    "user_id": 105443
                }
            ],
            "recipient_id": 24954,
            "sender_email": "levimroth@gmail.com",
            "sender_full_name": "Levi Roth (he) (W2'18)",
            "sender_id": 105051,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Algorithms Meetings",
            "submessages": [],
            "timestamp": 1517422942,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/cb7cb674ca838c0492bb3a6b298368b7?d=identicon&version=1",
            "client": "ZulipElectron",
            "content": "<p><a href=\"https://en.wikipedia.org/wiki/Hash_table#Perfect_hash_function\" target=\"_blank\" title=\"https://en.wikipedia.org/wiki/Hash_table#Perfect_hash_function\">https://en.wikipedia.org/wiki/Hash_table#Perfect_hash_function</a></p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 121847904,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "thisisbryanchu@gmail.com",
            "sender_full_name": "Bryan Chu (SP2'18)",
            "sender_id": 105710,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Algorithms Meetings",
            "submessages": [],
            "timestamp": 1517431115,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/b6389a3870b2757624fefd85d08b75b08f6dc815?x=x&version=2",
            "client": "website",
            "content": "<p>If you maximize the videos on the MIT OCW webpage, the YouTube logo appears bottom right. If you click on the YouTube logo, the video opens on YouTube's site, where you can speed up the video via the gear options.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 121879963,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "robert@schuessler.org",
            "sender_full_name": "Robert Schuessler (W1'17)",
            "sender_id": 103047,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Algorithms Meetings",
            "submessages": [],
            "timestamp": 1517492464,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/aabd3f5b0d85a5cd43367315223e784a0b18b740?x=x&version=2",
            "client": "website",
            "content": "<p>There's also a playlist: <a href=\"https://www.youtube.com/playlist?list=PLUl4u3cNGP61Oq3tWYp6V_F-5jb5L2iHb\" target=\"_blank\" title=\"https://www.youtube.com/playlist?list=PLUl4u3cNGP61Oq3tWYp6V_F-5jb5L2iHb\">https://www.youtube.com/playlist?list=PLUl4u3cNGP61Oq3tWYp6V_F-5jb5L2iHb</a></p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 121880205,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "levimroth@gmail.com",
            "sender_full_name": "Levi Roth (he) (W2'18)",
            "sender_id": 105051,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Algorithms Meetings",
            "submessages": [],
            "timestamp": 1517493001,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/6026a80c57f6d1d949cee04bcd1ad817?d=identicon&version=1",
            "client": "website",
            "content": "<p>I'm trying to work on the quiz, and I was wondering if there was someone to whom I could ask a question about recurrences.  I don't think I ever quite understood this and have written out one step of the T(n/3) + T(2n/3) + O(n) one and am confused about the next step.  It seems like the ultimate right answer is some sort of exponential because two recursive calls are made at every step but I don't know or remember how to reduce it.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 121936084,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "tiburona@gmail.com",
            "sender_full_name": "Katie Surrence (she) (W2'18)",
            "sender_id": 105443,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Algorithms Meetings",
            "submessages": [],
            "timestamp": 1517592929,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/b6389a3870b2757624fefd85d08b75b08f6dc815?x=x&version=2",
            "client": "website",
            "content": "<p>I only have two weeks left, so my plan is to skip the assignments for the rest of the current section and the next (which is on calculating to arbitrary precision).</p>\n<p>The two sections after these  are <strong>bread-first/depth-first search+shortest path</strong> and <strong>dynamic programming</strong>. I'm keen to go over these both in detail. Just letting everyone know what I'm thinking in case there is general interest in skipping one module ahead. If not, no worries!</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 121938359,
            "is_me_message": false,
            "last_edit_timestamp": 1517601804,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "robert@schuessler.org",
            "sender_full_name": "Robert Schuessler (W1'17)",
            "sender_id": 103047,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Algorithms Meetings",
            "submessages": [],
            "timestamp": 1517596750,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/d78ab1df3a0ad57e48ac2f39be4af853ddb1db17?x=x&version=3",
            "client": "ZulipElectron",
            "content": "<p>I'm working with the Mapbox folks and won't make it to our meeting today. If anyone wants to compare Quiz answers on Monday, I'd be game.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 121940970,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "logan.williams@alum.mit.edu",
            "sender_full_name": "Logan Williams (he) (W2'18)",
            "sender_id": 105229,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Algorithms Meetings",
            "submessages": [],
            "timestamp": 1517600691,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/b6389a3870b2757624fefd85d08b75b08f6dc815?x=x&version=2",
            "client": "website",
            "content": "<p>Let's cancel today's session -- let's check in before next Wednesday to make sure we're aiming for the same thing next week.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 121941772,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "robert@schuessler.org",
            "sender_full_name": "Robert Schuessler (W1'17)",
            "sender_id": 103047,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Algorithms Meetings",
            "submessages": [],
            "timestamp": 1517601776,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/3f6bef626649c46b4cc3fd9f67c151a19170da5e?x=x&version=21",
            "client": "website",
            "content": "<p>I would definitely prioritize graph algorithms over recurrence relations; i can't remember ever having used a recurrence relation in my daily work but graph stuff happens all the time</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 121941773,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "jkozak@fmail.co.uk",
            "sender_full_name": "Jake \u26e4 Prozvyshe (they) (W1'17)",
            "sender_id": 8478,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Algorithms Meetings",
            "submessages": [],
            "timestamp": 1517601780,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/3f6bef626649c46b4cc3fd9f67c151a19170da5e?x=x&version=21",
            "client": "website",
            "content": "<p>dynamic programming is also important, but more of something you should know is the solution to certain problems but don't need to actually use. like, you should be able to spot when a problem has a dynamic programming solution and when greedy algorithms fail.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 121941792,
            "is_me_message": false,
            "reactions": [
                {
                    "emoji_code": "1f44d",
                    "emoji_name": "thumbs_up",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "jrubinovitz@gmail.com",
                        "full_name": "JB Rubinovitz (W2'18)",
                        "id": 101692
                    },
                    "user_id": 101692
                },
                {
                    "emoji_code": "1f44d",
                    "emoji_name": "thumbs_up",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "vcabre4@gmail.com",
                        "full_name": "Victor R. Cabrera (they/he) (SP2'18)",
                        "id": 105056
                    },
                    "user_id": 105056
                },
                {
                    "emoji_code": "1f44d",
                    "emoji_name": "thumbs_up",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "robert@schuessler.org",
                        "full_name": "Robert Schuessler (W1'17)",
                        "id": 103047
                    },
                    "user_id": 103047
                }
            ],
            "recipient_id": 24954,
            "sender_email": "jkozak@fmail.co.uk",
            "sender_full_name": "Jake \u26e4 Prozvyshe (they) (W1'17)",
            "sender_id": 8478,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Algorithms Meetings",
            "submessages": [],
            "timestamp": 1517601824,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/a405c007ecaa730208d3dbe88b5b14d0b4a7ec9a?x=x&version=2",
            "client": "ZulipElectron",
            "content": "<p>Yeah I am with Jacob and Robert on skipping. I watched these lectures last year and I can tell you the recurrence relation/mathematics lecture week is pretty much the candy of the course. It's cool stuff to learn superficially but I would definitely prioritize working as a group for graphs algos and dynamic programming, especially given Robert's time left and given how magical DP is at first.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 121942088,
            "is_me_message": false,
            "last_edit_timestamp": 1517602337,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "vcabre4@gmail.com",
            "sender_full_name": "Victor R. Cabrera (they/he) (SP2'18)",
            "sender_id": 105056,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Algorithms Meetings",
            "submessages": [],
            "timestamp": 1517602241,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/a405c007ecaa730208d3dbe88b5b14d0b4a7ec9a?x=x&version=2",
            "client": "ZulipElectron",
            "content": "<p>I also think graph problems are simple enough that if you wanted you could even fuse those two weeks together, given how much one topic lends to the next. But if not, definitely focus on graph stuff.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 121942157,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "vcabre4@gmail.com",
            "sender_full_name": "Victor R. Cabrera (they/he) (SP2'18)",
            "sender_id": 105056,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Algorithms Meetings",
            "submessages": [],
            "timestamp": 1517602342,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/d78ab1df3a0ad57e48ac2f39be4af853ddb1db17?x=x&version=3",
            "client": "ZulipElectron",
            "content": "<p>I'm fine skipping/rearranging things.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 121944641,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "logan.williams@alum.mit.edu",
            "sender_full_name": "Logan Williams (he) (W2'18)",
            "sender_id": 105229,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Algorithms Meetings",
            "submessages": [],
            "timestamp": 1517606044,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/606962c7ae66817bdd0830cc619b69a1?d=identicon&version=1",
            "client": "website",
            "content": "<p>Happy to work with whatever y'all think is best.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 121944686,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "ethanrodkin@gmail.com",
            "sender_full_name": "Ethan Rodkin (he) (SP2'18)",
            "sender_id": 105054,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Algorithms Meetings",
            "submessages": [],
            "timestamp": 1517606158,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/b6389a3870b2757624fefd85d08b75b08f6dc815?x=x&version=2",
            "client": "website",
            "content": "<p>If everyone is OK with this, let's continue next week with Lecture 13: <a href=\"https://ocw.mit.edu/courses/electrical-engineering-and-computer-science/6-006-introduction-to-algorithms-fall-2011/lecture-videos/lecture-13-breadth-first-search-bfs/\" target=\"_blank\" title=\"https://ocw.mit.edu/courses/electrical-engineering-and-computer-science/6-006-introduction-to-algorithms-fall-2011/lecture-videos/lecture-13-breadth-first-search-bfs/\">https://ocw.mit.edu/courses/electrical-engineering-and-computer-science/6-006-introduction-to-algorithms-fall-2011/lecture-videos/lecture-13-breadth-first-search-bfs/</a></p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 121945203,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "robert@schuessler.org",
            "sender_full_name": "Robert Schuessler (W1'17)",
            "sender_id": 103047,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Algorithms Meetings",
            "submessages": [],
            "timestamp": 1517606919,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/d78ab1df3a0ad57e48ac2f39be4af853ddb1db17?x=x&version=3",
            "client": "ZulipElectron",
            "content": "<p>Okay, so are we are doing Problem Set 6 this week?</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 122062453,
            "is_me_message": false,
            "reactions": [
                {
                    "emoji_code": "1f44d",
                    "emoji_name": "thumbs_up",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "ethanrodkin@gmail.com",
                        "full_name": "Ethan Rodkin (he) (SP2'18)",
                        "id": 105054
                    },
                    "user_id": 105054
                },
                {
                    "emoji_code": "1f44d",
                    "emoji_name": "thumbs_up",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "thisisbryanchu@gmail.com",
                        "full_name": "Bryan Chu (SP2'18)",
                        "id": 105710
                    },
                    "user_id": 105710
                }
            ],
            "recipient_id": 24954,
            "sender_email": "logan.williams@alum.mit.edu",
            "sender_full_name": "Logan Williams (he) (W2'18)",
            "sender_id": 105229,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Algorithms Meetings",
            "submessages": [],
            "timestamp": 1517864901,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/d78ab1df3a0ad57e48ac2f39be4af853ddb1db17?x=x&version=3",
            "client": "ZulipElectron",
            "content": "<p>That problem set corresponds to lectures 15, 16, 17, and 18.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 122062468,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "logan.williams@alum.mit.edu",
            "sender_full_name": "Logan Williams (he) (W2'18)",
            "sender_id": 105229,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Algorithms Meetings",
            "submessages": [],
            "timestamp": 1517864932,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/b6389a3870b2757624fefd85d08b75b08f6dc815?x=x&version=2",
            "client": "website",
            "content": "<p>Yes, that's the aim!</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 122063806,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "robert@schuessler.org",
            "sender_full_name": "Robert Schuessler (W1'17)",
            "sender_id": 103047,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Algorithms Meetings",
            "submessages": [],
            "timestamp": 1517866872,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/b6389a3870b2757624fefd85d08b75b08f6dc815?x=x&version=2",
            "client": "website",
            "content": "<p>Lectures 13 and 14 on search are relevant to problem set 6</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 122063902,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "robert@schuessler.org",
            "sender_full_name": "Robert Schuessler (W1'17)",
            "sender_id": 103047,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Algorithms Meetings",
            "submessages": [],
            "timestamp": 1517866982,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/a405c007ecaa730208d3dbe88b5b14d0b4a7ec9a?x=x&version=2",
            "client": "ZulipElectron",
            "content": "<p>Hello all, I wanted to recommend it as a supplementary material, but the RC has copies of the textbook 'Artificial Intelligence: A Modern Approach 3rd Edition' by Stuart Russell and Peter Norvig and chapter 3 of that texbook gives an amazing rundown of graph problems and practical applications for them.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 122096839,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "vcabre4@gmail.com",
            "sender_full_name": "Victor R. Cabrera (they/he) (SP2'18)",
            "sender_id": 105056,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Algorithms Meetings",
            "submessages": [],
            "timestamp": 1517932315,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/a405c007ecaa730208d3dbe88b5b14d0b4a7ec9a?x=x&version=2",
            "client": "ZulipElectron",
            "content": "<p>It's more dense than what you'll learn in the lectures but I think seeing more examples of greedy and heuristic graph search algos is really helpful for digesting the topic as a whole, and otherwise I just think graphs are really neat and are totally worth learning just for fun :)</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 122096912,
            "is_me_message": false,
            "reactions": [
                {
                    "emoji_code": "1f44d",
                    "emoji_name": "thumbs_up",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "ethanrodkin@gmail.com",
                        "full_name": "Ethan Rodkin (he) (SP2'18)",
                        "id": 105054
                    },
                    "user_id": 105054
                }
            ],
            "recipient_id": 24954,
            "sender_email": "vcabre4@gmail.com",
            "sender_full_name": "Victor R. Cabrera (they/he) (SP2'18)",
            "sender_id": 105056,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Algorithms Meetings",
            "submessages": [],
            "timestamp": 1517932419,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/cb7cb674ca838c0492bb3a6b298368b7?d=identicon&version=1",
            "client": "ZulipElectron",
            "content": "<p>We're in Hopper!</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 122153677,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "thisisbryanchu@gmail.com",
            "sender_full_name": "Bryan Chu (SP2'18)",
            "sender_id": 105710,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Algorithms Meetings",
            "submessages": [],
            "timestamp": 1518033675,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/6026a80c57f6d1d949cee04bcd1ad817?d=identicon&version=1",
            "client": "website",
            "content": "<p><span class=\"user-mention\" data-user-email=\"atmalagon@gmail.com\" data-user-id=\"103124\">@Ana Malagon (W1'17)</span> and I worked together on writing some code for the first question on the graphs pset and we are observing a phenomenon we don't understand that is really about Python, but we're posting it here because y'all have context for the problem.  </p>\n<div class=\"codehilite\"><pre><span></span>from random import random\n\nbest_strengths = {&#39;s&#39;: 1}\n\ndef edge_rank(a, b):\n    if (a, b) not in edge_rank_dict:\n        edge_rank_dict[(a, b)] = random()\n    return edge_rank_dict[(a, b)]\n\nadjacency_matrix = {&#39;s&#39;: [&#39;v0&#39;, &#39;v1&#39;, &#39;v2&#39;], &#39;v0&#39;: [&#39;s&#39;, &#39;v3&#39;], &#39;v1&#39;: [&#39;s&#39;,&#39;v9&#39;, &#39;v4&#39;], &#39;v2&#39;: [&#39;s&#39;, &#39;v5&#39;], &#39;v3&#39;: [&#39;v4&#39;, &#39;v0&#39;], &#39;v4&#39;: [&#39;v1&#39;, &#39;v9&#39;], &#39;v5&#39;: [&#39;v7&#39;, &#39;v2&#39;], &#39;v9&#39;: [&#39;v4&#39;, &#39;v8&#39;, &#39;v1&#39;], &#39;v7&#39;: [&#39;v5&#39;], &#39;v8&#39;: [&#39;v9&#39;] }\n\nedge_rank_dict = {}\n\ndef depth_first_strengths(node, max_depth, curr_path, curr_strength, came_from = None):\n    curr_path = curr_path + [node]\n    print(&quot;curr_path&quot;, curr_path)\n    # curr_path.append(node)\n    # print(&quot;curr_path is&quot;, curr_path)\n    neighbors = adjacency_matrix[node]\n    if came_from in neighbors: neighbors.remove(came_from)\n    if len(curr_path) &gt; max_depth: return\n    for neighbor in neighbors:\n        if neighbor in curr_path:\n            return\n        else:\n            if len(curr_path) == 0:\n              strength = 1\n            else:\n              strength = curr_strength * edge_rank(curr_path[-1], node)\n        if (node not in best_strengths) or (best_strengths[node] &lt; strength):\n            best_strengths[node] = strength\n        if len(curr_path) &lt; max_depth:\n            depth_first_strengths(neighbor, max_depth, curr_path, strength, node)\n\ndepth_first_strengths(&#39;s&#39;, 3, [], 1)\n\nprint(best_strengths)\n</pre></div>\n\n\n<p>Right now, if run as written, this code gives us output that looks like what we want.  We haven't done anything fancy like write tests, but the printout for curr_paths reflects a recursion structure that we expect.  In the process of analyzing the time complexity, we thought we could explore the various list concatenation methods in python.  What is totally mystifying us is that we think that if we comment out </p>\n<div class=\"codehilite\"><pre><span></span>    curr_path = curr_path + [node]\n    print(&quot;curr_path&quot;, curr_path)\n</pre></div>\n\n\n<p>and uncomment the next lines, it should be equivalent in terms of result, even if implemented differently under the hood.  But it's not: we get a totally different, truncated, wrong, recursion structure.  </p>\n<p>if we try running these two lines at the same spot in the function:</p>\n<div class=\"codehilite\"><pre><span></span>    curr_path1 = curr_path + [node]\n    print(&quot;curr_path1&quot;, curr_path1)\n    curr_path.append(node)\n    print(&quot;curr_path is&quot;, curr_path)\n</pre></div>\n\n\n<p>It prints out the same stuff for currpath1 and curr_path (and leads to the wrong, bad, truncated recursion pattern).  </p>\n<p>Can anyone explain Python lists to us?  We are confused.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 122202931,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "tiburona@gmail.com",
            "sender_full_name": "Katie Surrence (she) (W2'18)",
            "sender_id": 105443,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Algorithms Meetings",
            "submessages": [],
            "timestamp": 1518126004,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/aabd3f5b0d85a5cd43367315223e784a0b18b740?x=x&version=2",
            "client": "website",
            "content": "<p>Strongly recommend <a href=\"https://nedbatchelder.com/text/names.html\" target=\"_blank\" title=\"https://nedbatchelder.com/text/names.html\">this article</a> which gets into part of the issue here.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 122202987,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "levimroth@gmail.com",
            "sender_full_name": "Levi Roth (he) (W2'18)",
            "sender_id": 105051,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Algorithms Meetings",
            "submessages": [],
            "timestamp": 1518126139,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/aabd3f5b0d85a5cd43367315223e784a0b18b740?x=x&version=2",
            "client": "website",
            "content": "<p><code>curr_path = curr_path + [node]</code> means \"Copy everything in <code>curr_path</code> and <code>[node]</code> into a new list, and reassign the name '<code>curr_path</code>' to point to that new list.\"</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 122202995,
            "is_me_message": false,
            "last_edit_timestamp": 1518126337,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "levimroth@gmail.com",
            "sender_full_name": "Levi Roth (he) (W2'18)",
            "sender_id": 105051,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Algorithms Meetings",
            "submessages": [],
            "timestamp": 1518126185,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/aabd3f5b0d85a5cd43367315223e784a0b18b740?x=x&version=2",
            "client": "website",
            "content": "<p>On the other hand, <code>curr_path.append(node)</code> means \"Add <code>node</code> onto the end of <code>curr_path</code>.\"</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 122203004,
            "is_me_message": false,
            "last_edit_timestamp": 1518126217,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "levimroth@gmail.com",
            "sender_full_name": "Levi Roth (he) (W2'18)",
            "sender_id": 105051,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Algorithms Meetings",
            "submessages": [],
            "timestamp": 1518126204,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/aabd3f5b0d85a5cd43367315223e784a0b18b740?x=x&version=2",
            "client": "website",
            "content": "<p>So there are differences in terms of 1) mutation and 2) time complexity</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 122203010,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "levimroth@gmail.com",
            "sender_full_name": "Levi Roth (he) (W2'18)",
            "sender_id": 105051,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Algorithms Meetings",
            "submessages": [],
            "timestamp": 1518126240,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/aabd3f5b0d85a5cd43367315223e784a0b18b740?x=x&version=2",
            "client": "website",
            "content": "<p>I.e., the first version does not mutate <code>curr_path</code> but has running time that's linear in the size of that list, while the second version mutates the list but runs in constant time w/r/t the list's size.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 122203052,
            "is_me_message": false,
            "last_edit_timestamp": 1518126318,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "levimroth@gmail.com",
            "sender_full_name": "Levi Roth (he) (W2'18)",
            "sender_id": 105051,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Algorithms Meetings",
            "submessages": [],
            "timestamp": 1518126283,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/6026a80c57f6d1d949cee04bcd1ad817?d=identicon&version=1",
            "client": "website",
            "content": "<p>So maybe I shouldn't say this without reading the article, but we knew there were differences in mutation and time complexity -- that's why we were messing around with various options in the first place.  But isn't it true that in both cases the result should be that curr_path is the same thing no matter what method we use?  That's what's confusing us.  Here's a repl to demonstrate that it should be so and yet it doesn't seem to be in our code:</p>\n<p><a href=\"https://repl.it/@tiburona/ParchedWarlikeSmew\" target=\"_blank\" title=\"https://repl.it/@tiburona/ParchedWarlikeSmew\">https://repl.it/@tiburona/ParchedWarlikeSmew</a></p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 122203381,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "tiburona@gmail.com",
            "sender_full_name": "Katie Surrence (she) (W2'18)",
            "sender_id": 105443,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Algorithms Meetings",
            "submessages": [],
            "timestamp": 1518126749,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/aabd3f5b0d85a5cd43367315223e784a0b18b740?x=x&version=2",
            "client": "website",
            "content": "<p>(The issue turned out to be that, in the <code>.append</code> version, the mutation was persisting across different recursive calls.)</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 122203777,
            "is_me_message": false,
            "reactions": [
                {
                    "emoji_code": "1f389",
                    "emoji_name": "tada",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "tiburona@gmail.com",
                        "full_name": "Katie Surrence (she) (W2'18)",
                        "id": 105443
                    },
                    "user_id": 105443
                }
            ],
            "recipient_id": 24954,
            "sender_email": "levimroth@gmail.com",
            "sender_full_name": "Levi Roth (he) (W2'18)",
            "sender_id": 105051,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Algorithms Meetings",
            "submessages": [],
            "timestamp": 1518127368,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/b6389a3870b2757624fefd85d08b75b08f6dc815?x=x&version=2",
            "client": "website",
            "content": "<p>Looks like we are skipping today's code review for pset 6? We can share algorithms next week before continuing with Dynamic Programming (in my last week!)</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 122246543,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "robert@schuessler.org",
            "sender_full_name": "Robert Schuessler (W1'17)",
            "sender_id": 103047,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Algorithms Meetings",
            "submessages": [],
            "timestamp": 1518207044,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/aabd3f5b0d85a5cd43367315223e784a0b18b740?x=x&version=2",
            "client": "website",
            "content": "<p>Sorry, I was running quite late. Happy to look over things right now if you'd like.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 122247896,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "levimroth@gmail.com",
            "sender_full_name": "Levi Roth (he) (W2'18)",
            "sender_id": 105051,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Algorithms Meetings",
            "submessages": [],
            "timestamp": 1518209281,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/d78ab1df3a0ad57e48ac2f39be4af853ddb1db17?x=x&version=3",
            "client": "ZulipElectron",
            "content": "<p>What problem are we talking about today? This week, the first part is coding and the second part is theory.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 122449740,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "logan.williams@alum.mit.edu",
            "sender_full_name": "Logan Williams (he) (W2'18)",
            "sender_id": 105229,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Pset 7",
            "submessages": [],
            "timestamp": 1518626215,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/d78ab1df3a0ad57e48ac2f39be4af853ddb1db17?x=x&version=3",
            "client": "ZulipElectron",
            "content": "<p><span class=\"user-mention\" data-user-email=\"robert@schuessler.org\" data-user-id=\"103047\">@Robert Schuessler (W1'17)</span></p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 122449884,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "logan.williams@alum.mit.edu",
            "sender_full_name": "Logan Williams (he) (W2'18)",
            "sender_id": 105229,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Pset 7",
            "submessages": [],
            "timestamp": 1518626430,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/b6389a3870b2757624fefd85d08b75b08f6dc815?x=x&version=2",
            "client": "website",
            "content": "<p>I was just looking at that too -- I think we should do 7-2 together today. What do you all think?</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 122450037,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "robert@schuessler.org",
            "sender_full_name": "Robert Schuessler (W1'17)",
            "sender_id": 103047,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Pset 7",
            "submessages": [],
            "timestamp": 1518626703,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/d78ab1df3a0ad57e48ac2f39be4af853ddb1db17?x=x&version=3",
            "client": "ZulipElectron",
            "content": "<p>I think so too</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 122450119,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "logan.williams@alum.mit.edu",
            "sender_full_name": "Logan Williams (he) (W2'18)",
            "sender_id": 105229,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Pset 7",
            "submessages": [],
            "timestamp": 1518626811,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/19b902ba8de18103698c1375b8b316c781ade49e?x=x&version=2",
            "client": "ZulipElectron",
            "content": "<p>Just wanted to give yinz a heads up that I've been tied up on a Go project, so I'm not caught up on this week's material or pset.  I'll be sitting this week's meetings out.</p>\n<p>Sorry to miss your last week <span class=\"user-mention\" data-user-email=\"robert@schuessler.org\" data-user-id=\"103047\">@Robert Schuessler (W1'17)</span> !</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 122457139,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "mburtless@threepnet.com",
            "sender_full_name": "Matthew Burtless (he) (W2'18)",
            "sender_id": 105176,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Pset 7",
            "submessages": [],
            "timestamp": 1518637264,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/b6389a3870b2757624fefd85d08b75b08f6dc815?x=x&version=2",
            "client": "website",
            "content": "<p>No worries. Where are you from that you say \"yinz\"? I heard that in Pittsburgh when my mom was in grad school there.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 122457215,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "robert@schuessler.org",
            "sender_full_name": "Robert Schuessler (W1'17)",
            "sender_id": 103047,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Pset 7",
            "submessages": [],
            "timestamp": 1518637356,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/b6389a3870b2757624fefd85d08b75b08f6dc815?x=x&version=2",
            "client": "website",
            "content": "<p><span class=\"user-mention\" data-user-email=\"mburtless@threepnet.com\" data-user-id=\"105176\">@Matthew Burtless (W2'18)</span> <span class=\"emoji emoji-261d\" title=\"point up\">:point_up:</span></p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 122457232,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "robert@schuessler.org",
            "sender_full_name": "Robert Schuessler (W1'17)",
            "sender_id": 103047,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Pset 7",
            "submessages": [],
            "timestamp": 1518637384,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/19b902ba8de18103698c1375b8b316c781ade49e?x=x&version=2",
            "client": "ZulipElectron",
            "content": "<p>Haha you guessed it, I lived in Pittsburgh for 5 years after college and it stuck.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 122457392,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "mburtless@threepnet.com",
            "sender_full_name": "Matthew Burtless (he) (W2'18)",
            "sender_id": 105176,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Pset 7",
            "submessages": [],
            "timestamp": 1518637564,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/d78ab1df3a0ad57e48ac2f39be4af853ddb1db17?x=x&version=3",
            "client": "ZulipElectron",
            "content": "<p>Finally finished Quiz 1, if anyone wants to talk about it, let me know</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 122504736,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "logan.williams@alum.mit.edu",
            "sender_full_name": "Logan Williams (he) (W2'18)",
            "sender_id": 105229,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Quiz 1",
            "submessages": [],
            "timestamp": 1518723438,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/b6389a3870b2757624fefd85d08b75b08f6dc815?x=x&version=2",
            "client": "ZulipMobile",
            "content": "<p>I\u2019m at the Met, but there\u2019s no escaping Algorithms</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 122594115,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "robert@schuessler.org",
            "sender_full_name": "Robert Schuessler (W1'17)",
            "sender_id": 103047,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Everywhere",
            "submessages": [],
            "timestamp": 1518821117,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/b4b9e2320f242abf40bf5391ee07269f?d=identicon&version=1",
            "client": "website",
            "content": "<p>what do you see?</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 122594137,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "dave@recurse.com",
            "sender_full_name": "David Albert (he)",
            "sender_id": 810,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Everywhere",
            "submessages": [],
            "timestamp": 1518821146,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/b6389a3870b2757624fefd85d08b75b08f6dc815?x=x&version=2",
            "client": "ZulipMobile",
            "content": "<p>The picture is not coming through \u2014 it\u2019s a mobile like the one on the cover of CLRS</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 122594191,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "robert@schuessler.org",
            "sender_full_name": "Robert Schuessler (W1'17)",
            "sender_id": 103047,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Everywhere",
            "submessages": [],
            "timestamp": 1518821228,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/b6389a3870b2757624fefd85d08b75b08f6dc815?x=x&version=2",
            "client": "ZulipMobile",
            "content": "<p>.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 122594197,
            "is_me_message": false,
            "last_edit_timestamp": 1518822469,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "robert@schuessler.org",
            "sender_full_name": "Robert Schuessler (W1'17)",
            "sender_id": 103047,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Everywhere",
            "submessages": [],
            "timestamp": 1518821279,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/b4b9e2320f242abf40bf5391ee07269f?d=identicon&version=1",
            "client": "website",
            "content": "<p>Cool! Must be a Calder (the one on CLRS is). I think <span class=\"user-mention\" data-user-email=\"nick@recurse.com\" data-user-id=\"811\">@Nick Bergson-Shilcock</span>'s family was friends with him many decades ago :)</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 122594246,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "dave@recurse.com",
            "sender_full_name": "David Albert (he)",
            "sender_id": 810,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Everywhere",
            "submessages": [],
            "timestamp": 1518821333,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/b6389a3870b2757624fefd85d08b75b08f6dc815?x=x&version=2",
            "client": "ZulipMobile",
            "content": "<p>You\u2019re right! Alexander Calder.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 122594347,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "robert@schuessler.org",
            "sender_full_name": "Robert Schuessler (W1'17)",
            "sender_id": 103047,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Everywhere",
            "submessages": [],
            "timestamp": 1518821500,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/b6389a3870b2757624fefd85d08b75b08f6dc815?x=x&version=2",
            "client": "ZulipMobile",
            "content": "<p><a href=\"/user_uploads/13/SrrzFlmAk5kOlJ8BkRl5BxSa/IMG_1217.JPG\" target=\"_blank\" title=\"IMG_1217.JPG\">IMG_1217.JPG</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/13/SrrzFlmAk5kOlJ8BkRl5BxSa/IMG_1217.JPG\" target=\"_blank\" title=\"IMG_1217.JPG\"><img src=\"/user_uploads/13/SrrzFlmAk5kOlJ8BkRl5BxSa/IMG_1217.JPG\"></a></div>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 122594984,
            "is_me_message": false,
            "reactions": [
                {
                    "emoji_code": "1f606",
                    "emoji_name": "laughing",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "stanley@zheng.nyc",
                        "full_name": "Stanley Zheng (they) (W1'19)",
                        "id": 100315
                    },
                    "user_id": 100315
                },
                {
                    "emoji_code": "1f606",
                    "emoji_name": "laughing",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "kadeemnibbs@gmail.com",
                        "full_name": "Kadeem Nibbs (W2'18)",
                        "id": 102108
                    },
                    "user_id": 102108
                },
                {
                    "emoji_code": "1f606",
                    "emoji_name": "laughing",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "roberto.n.thais@gmail.com",
                        "full_name": "Roberto Thais (he) (W2'18)",
                        "id": 105531
                    },
                    "user_id": 105531
                },
                {
                    "emoji_code": "1f606",
                    "emoji_name": "laughing",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "bootandy@gmail.com",
                        "full_name": "andrew boot (W2'18)",
                        "id": 105172
                    },
                    "user_id": 105172
                }
            ],
            "recipient_id": 24954,
            "sender_email": "robert@schuessler.org",
            "sender_full_name": "Robert Schuessler (W1'17)",
            "sender_id": 103047,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Everywhere",
            "submessages": [],
            "timestamp": 1518822424,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/d78ab1df3a0ad57e48ac2f39be4af853ddb1db17?x=x&version=3",
            "client": "ZulipElectron",
            "content": "<p>I kind of want to circle back and do the pset we skipped over. Interest?</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 122702574,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "logan.williams@alum.mit.edu",
            "sender_full_name": "Logan Williams (he) (W2'18)",
            "sender_id": 105229,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "This week",
            "submessages": [],
            "timestamp": 1519067144,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/d78ab1df3a0ad57e48ac2f39be4af853ddb1db17?x=x&version=3",
            "client": "ZulipElectron",
            "content": "<p>I propose wednesday meeting for the theory part of the pset</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 122702625,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "logan.williams@alum.mit.edu",
            "sender_full_name": "Logan Williams (he) (W2'18)",
            "sender_id": 105229,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "This week",
            "submessages": [],
            "timestamp": 1519067237,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/cb7cb674ca838c0492bb3a6b298368b7?d=identicon&version=1",
            "client": "ZulipElectron",
            "content": "<p>I'm on board!  Which pset was it again?</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 122702864,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "thisisbryanchu@gmail.com",
            "sender_full_name": "Bryan Chu (SP2'18)",
            "sender_id": 105710,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "This week",
            "submessages": [],
            "timestamp": 1519067750,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/cb7cb674ca838c0492bb3a6b298368b7?d=identicon&version=1",
            "client": "ZulipElectron",
            "content": "<p><span class=\"user-mention\" data-user-email=\"marlenefdez@gmail.com\" data-user-id=\"109654\">@Marlene Fernandez (SP1'18)</span>  <span class=\"user-mention\" data-user-email=\"emperrotta@gmail.com\" data-user-id=\"109159\">@Eric Perrotta (SP1'18)</span></p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 122703036,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "thisisbryanchu@gmail.com",
            "sender_full_name": "Bryan Chu (SP2'18)",
            "sender_id": 105710,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "This week",
            "submessages": [],
            "timestamp": 1519068116,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/606962c7ae66817bdd0830cc619b69a1?d=identicon&version=1",
            "client": "website",
            "content": "<p>I'm in. It's pset 5. For new folks, the course link is here: <a href=\"https://ocw.mit.edu/courses/electrical-engineering-and-computer-science/6-006-introduction-to-algorithms-fall-2011/index.htm\" target=\"_blank\" title=\"https://ocw.mit.edu/courses/electrical-engineering-and-computer-science/6-006-introduction-to-algorithms-fall-2011/index.htm\">https://ocw.mit.edu/courses/electrical-engineering-and-computer-science/6-006-introduction-to-algorithms-fall-2011/index.htm</a></p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 122705548,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "ethanrodkin@gmail.com",
            "sender_full_name": "Ethan Rodkin (he) (SP2'18)",
            "sender_id": 105054,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "This week",
            "submessages": [],
            "timestamp": 1519073449,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/e92d09f5fc22b08f4dde0a7c76f059ce2c668ec9?x=x&version=2",
            "client": "website",
            "content": "<p>Hi, was wondering if anyone knew the reasoning behind the maths for the MD5 algorithm? I've gone through the algorithm and understand generally whats happening, but curious why those particular functions are good for hashing?</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 122788992,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "sean.rankine@me.com",
            "sender_full_name": "Sean Rankine (he) (SP1'18)",
            "sender_id": 109426,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Explaining MD5",
            "submessages": [],
            "timestamp": 1519225185,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/47cdb42d5b80601f2957b6bbf20a52102fd6a013?x=x&version=2",
            "client": "website",
            "content": "<p>is <a href=\"https://en.wikipedia.org/wiki/Merkle%E2%80%93Damg%C3%A5rd_construction\" target=\"_blank\" title=\"https://en.wikipedia.org/wiki/Merkle%E2%80%93Damg%C3%A5rd_construction\">https://en.wikipedia.org/wiki/Merkle%E2%80%93Damg%C3%A5rd_construction</a> helpful to answering your question?</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 122806415,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "\"#!$%&'*+-/=?^_`{}|~\"@tomyumcorp.com",
            "sender_full_name": "Cameron Finucane (they) (SP1'18)",
            "sender_id": 103055,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Explaining MD5",
            "submessages": [],
            "timestamp": 1519252777,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/47cdb42d5b80601f2957b6bbf20a52102fd6a013?x=x&version=2",
            "client": "website",
            "content": "<p>i guess that article isn't super great, sorry.  i think <span class=\"user-mention\" data-user-email=\"laura.peskin@gmail.com\" data-user-id=\"102045\">@Laura Peskin (F2'17)</span> was investigating a similar question w/r/t md4</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 122806689,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "\"#!$%&'*+-/=?^_`{}|~\"@tomyumcorp.com",
            "sender_full_name": "Cameron Finucane (they) (SP1'18)",
            "sender_id": 103055,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Explaining MD5",
            "submessages": [],
            "timestamp": 1519253281,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/e92d09f5fc22b08f4dde0a7c76f059ce2c668ec9?x=x&version=2",
            "client": "website",
            "content": "<p>Ah thanks - still need to give it a proper read, but this is along the lines of what I was looking for!</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 122807429,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "sean.rankine@me.com",
            "sender_full_name": "Sean Rankine (he) (SP1'18)",
            "sender_id": 109426,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Explaining MD5",
            "submessages": [],
            "timestamp": 1519254560,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/d78ab1df3a0ad57e48ac2f39be4af853ddb1db17?x=x&version=3",
            "client": "ZulipElectron",
            "content": "<p><a href=\"https://twitter.com/MIT_CSAIL/status/969618340015730688\" target=\"_blank\" title=\"https://twitter.com/MIT_CSAIL/status/969618340015730688\">https://twitter.com/MIT_CSAIL/status/969618340015730688</a></p>\n<div class=\"inline-preview-twitter\"><div class=\"twitter-tweet\"><a href=\"https://twitter.com/MIT_CSAIL/status/969618340015730688\" target=\"_blank\"><img class=\"twitter-avatar\" src=\"https://uploads.zulipusercontent.net/c5b017704c1f8d281746e2b0b258b47fb72b17b0/687474703a2f2f7062732e7477696d672e636f6d2f70726f66696c655f696d616765732f3838353530353935363237323131353731322f55383148704478625f6e6f726d616c2e6a7067\"></a><p>How you know you\u2019re old: the \u201cIntroduction to Algorithms\u201d book was published #otd nearly 30 years ago, in 1990. It\u2019s sold half a million copies &amp; is the world\u2019s most cited CS text w/9K citations: <a href=\"https://t.co/2gOKhlNPkp\" target=\"_blank\" title=\"https://t.co/2gOKhlNPkp\">http://bit.ly/2Fyhjmd</a> <a href=\"https://t.co/G607huOAnL\" target=\"_blank\" title=\"https://t.co/G607huOAnL\">https://twitter.com/MIT_CSAIL/status/969618340015730688/photo/1</a></p><span>- CSAIL at MIT (@MIT_CSAIL)</span><div class=\"twitter-image\"><a href=\"https://t.co/G607huOAnL\" target=\"_blank\" title=\"https://t.co/G607huOAnL\"><img src=\"https://pbs.twimg.com/media/DXJjAqGWkAA8Hb2.jpg:thumb\"></a></div></div></div>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 123191416,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "logan.williams@alum.mit.edu",
            "sender_full_name": "Logan Williams (he) (W2'18)",
            "sender_id": 105229,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "happy birthday CLRS",
            "submessages": [],
            "timestamp": 1520010885,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/3e43390501b11697fd95f7066d5e2b4a?d=identicon&version=1",
            "client": "ZulipElectron",
            "content": "<p>Could anyone please give a review to the task description for the problem I was trying to solve? I think the description is broken but i'm not sure. Every time I see ambiguity in problem description I think that's my fault and sometimes it's really is. But this time it doesn't really make much sense to me at all.</p>\n<p>I don't know how long this link will be accessible (let me know if it's not): <a href=\"https://www.pramp.com/challenge/gKQ5zA52mySBOA5GALj9\" target=\"_blank\" title=\"https://www.pramp.com/challenge/gKQ5zA52mySBOA5GALj9\">https://www.pramp.com/challenge/gKQ5zA52mySBOA5GALj9</a></p>\n<p>From the description: \"You\u2019re asked to return the first one you encounter (considering the results are sorted)\". Isn't the first one I encounter will depend on the algorithm of my choice? What's that even mean: considering the results are sorted? Aren't results supposed to be sorted after I identify all the numbers of the result and not before? Maybe they meant \"considering the inputs are sorted\"?</p>\n<p>Basically when I test my naive O(n^4) solution, it's not passing the checks because of the wrong order. If I sort the input before, then it's working well. Is that what they meant, I have to sort the input array before solving to ensure the right order? If that's the case why not to give the input already sorted or to state it explicitly?</p>\n<p>Can anyone confirm if that confuse you as well? Or there's something I'm missing from the picture?</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 124686733,
            "is_me_message": false,
            "last_edit_timestamp": 1522957941,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "mikkqu@gmail.com",
            "sender_full_name": "Mikhail Kalashnikov (SP1'17)",
            "sender_id": 100511,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Array Quadruplet practice task",
            "submessages": [],
            "timestamp": 1522957889,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/8ef0cc9607b07f392f70560a43dbbb2d0efd6328?x=x&version=1",
            "client": "website",
            "content": "<p>I can't access</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 124690119,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "brian.kihoon.lee@gmail.com",
            "sender_full_name": "Brian Lee (F1'16)",
            "sender_id": 100043,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Array Quadruplet practice task",
            "submessages": [],
            "timestamp": 1522962929,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/3e43390501b11697fd95f7066d5e2b4a?d=identicon&version=1",
            "client": "ZulipElectron",
            "content": "<p>Oh, sorry, here's a description attached<br>\n<a href=\"/user_uploads/13/99Awao0JdkdhNtvtyNkqI77b/Screen-Shot-2018-04-05-at-10.42.15-PM.png\" target=\"_blank\" title=\"Screen-Shot-2018-04-05-at-10.42.15-PM.png\">Array Quadruplet practice task</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/13/99Awao0JdkdhNtvtyNkqI77b/Screen-Shot-2018-04-05-at-10.42.15-PM.png\" target=\"_blank\" title=\"Array Quadruplet practice task\"><img src=\"/user_uploads/13/99Awao0JdkdhNtvtyNkqI77b/Screen-Shot-2018-04-05-at-10.42.15-PM.png\"></a></div>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 124692177,
            "is_me_message": false,
            "last_edit_timestamp": 1522967942,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "mikkqu@gmail.com",
            "sender_full_name": "Mikhail Kalashnikov (SP1'17)",
            "sender_id": 100511,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Array Quadruplet practice task",
            "submessages": [],
            "timestamp": 1522965812,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/21b9cce736cbbe8e0761bbb33863c7d3112d0136?x=x&version=2",
            "client": "website",
            "content": "<p>I think it's saying you take the result that is the smallest lexicographically when sorted. They list three results:</p>\n<div class=\"codehilite\"><pre><span></span>7, 4, 0, 9\n7, 9, 1, 3\n2, 4, 9, 5\n</pre></div>\n\n\n<p>When sorted these become:</p>\n<div class=\"codehilite\"><pre><span></span>0, 4, 7, 9\n1, 3, 7, 9\n2, 4, 5, 9\n</pre></div>\n\n\n<p>Since the first one comes first lexicographically, you return that one.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 124694909,
            "is_me_message": false,
            "last_edit_timestamp": 1522970019,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "michaelmalis2@gmail.com",
            "sender_full_name": "Michael Malis (SP2'19)",
            "sender_id": 8099,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Array Quadruplet practice task",
            "submessages": [],
            "timestamp": 1522970008,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/f59b1bd52e790e176d04d3610ea3ada8?d=identicon&version=1",
            "client": "website",
            "content": "<p>I hate it when these kinds of problems aren't super explicit; I read \"You're asked to return the first one you encounter\" as \"traverse the array, and once you've encountered four numbers that add up to 20, immediately return those four without bothering to parse the rest of the array\".  Given the array [2,7,4,0,9,5,1,3] like in the problem, you can find the quadruplet (7,4,0,9) once you've gotten to the fifth character in the array (the 9), while you'd have to read to the sixth character (the 5) to get (2,4,9,5), and the eighth character (the 3) to get (2,4,9,5), which is why neither of those two options are returned (at least according to my interpretation of what's written).   As for the \"ascending order\" part, I believe they just want the quadruplet itself to be sorted in ascending order before you return it (e.i. convert 7409 to 0479).  But I could be wrong; is this a take home question for an interview?  If so, could you call/write them and ask them to clarify?</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 124703838,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "adeshar00@gmail.com",
            "sender_full_name": "Andrew Desharnais (he) (W1'20)",
            "sender_id": 8863,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Array Quadruplet practice task",
            "submessages": [],
            "timestamp": 1522989365,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/3e43390501b11697fd95f7066d5e2b4a?d=identicon&version=1",
            "client": "ZulipElectron",
            "content": "<p><span class=\"user-mention\" data-user-id=\"8099\">@Michael Malis (S1'15)</span> Ahh, so \"results\" in description means not the digits in array, but all the arrays satisfying condition if there's more than one! (\"considering the results are sorted\" =&gt; \"considering the quadruplets you've found sorted lexicographically\"). That makes sense now, thank you!</p>\n<p><span class=\"user-mention\" data-user-id=\"8863\">@Andrew Desharnais (SP1'16)</span> I think, it's just slightly changed interpretation of quite popular 4SUM problem, such that you have to return specific quadruplet instead of all possible sets. The way it's stated left me confused. Apparently there's nothing wrong with the description, I assumed a wrong thing under \"results\".</p>\n<p>It's not a take home question, there's a free service called <strong>pramp</strong> that I'm trying to play around for the first time. It's purpose is to pair two random person into interviewing each other. It gives a task to every person beforehand that you'll have to ask your mate to solve it online, then you swap the roles and that's how it works. Sounds like pretty fun way to prepare for interviews, so let's see. Maybe someone else also will find it useful.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 124717020,
            "is_me_message": false,
            "last_edit_timestamp": 1523016490,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "mikkqu@gmail.com",
            "sender_full_name": "Mikhail Kalashnikov (SP1'17)",
            "sender_id": 100511,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Array Quadruplet practice task",
            "submessages": [],
            "timestamp": 1523016383,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/8583df6c401e50a991e66a538516386bb528840e?x=x&version=1",
            "client": "website",
            "content": "<p>Hello guys,</p>\n<p>For 4 months I have worked on a course related to data structures and algorithms. After I've participated in RC and studied algorithms and data structures I was thinking about how can I can learn other people to do this in an effiecient way.(I know there are a lot of books, articles or videos). This course help you to understand how you can solve problems like ones from Leetcode.</p>\n<p>This is the link to the course: <a href=\"https://www.udemy.com/data-structures-and-algorithms-from-0-to-hero/\" target=\"_blank\" title=\"https://www.udemy.com/data-structures-and-algorithms-from-0-to-hero/\">https://www.udemy.com/data-structures-and-algorithms-from-0-to-hero/</a><br>\n PS: I am still updating the course with new lectures<br>\n Thanks :)</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 125134555,
            "is_me_message": false,
            "last_edit_timestamp": 1523882723,
            "reactions": [
                {
                    "emoji_code": "1f44d",
                    "emoji_name": "thumbs_up",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "jo.chasinga@gmail.com",
                        "full_name": "Joe Chasinga (S2'17)",
                        "id": 101482
                    },
                    "user_id": 101482
                },
                {
                    "emoji_code": "1f44d",
                    "emoji_name": "thumbs_up",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "chungjsm@gmail.com",
                        "full_name": "Mike Chung (W2'17)",
                        "id": 100445
                    },
                    "user_id": 100445
                }
            ],
            "recipient_id": 24954,
            "sender_email": "carmen.mitru@gmail.com",
            "sender_full_name": "Carmen Mitru (W1'16)",
            "sender_id": 100328,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "FREE udemy course",
            "submessages": [],
            "timestamp": 1523853975,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/8b0373befcb9fe1ca27ee0ac86fccc63eb8ccabe?x=x&version=2",
            "client": "website",
            "content": "<p>Need some guidance on my Big O assumptions and improving my Python implementation.<br>\nI'm sharing here too just so I can get more exposure. <br>\n<a href=\"#narrow/stream/27513-interview-prep/subject/efficient.20merge.20sort.20procedure.20in.20Python/near/128754305\" title=\"#narrow/stream/27513-interview-prep/subject/efficient.20merge.20sort.20procedure.20in.20Python/near/128754305\">https://recurse.zulipchat.com/#narrow/stream/27513-interview-prep/subject/efficient.20merge.20sort.20procedure.20in.20Python/near/128754305</a></p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 128754474,
            "is_me_message": false,
            "last_edit_timestamp": 1530161260,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "jo.chasinga@gmail.com",
            "sender_full_name": "Joe Chasinga (S2'17)",
            "sender_id": 101482,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Efficient merge sort in Python",
            "submessages": [],
            "timestamp": 1530161194,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/ae10295946402ccf3e7f7dd024cc2ab5?d=identicon&version=1",
            "client": "website",
            "content": "<p>I think I'd need to brush off CLRS and remember the master theorem to be sure what the asymptotic performance of the buggy version is, but it's at least \\Omega(n\u00b2)  (\\Omega(\u00b7\u00b7\u00b7) is like O(\u00b7\u00b7\u00b7) but it describes a lower bound, not an upper bound).</p>\n<p>Your idea to maintain an index and not delete from the lists is absolutely correct -- that's the basic idea for how one implements a list merge efficiently.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 128756777,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "nelhage@nelhage.com",
            "sender_full_name": "Nelson Elhage",
            "sender_id": 100476,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Efficient merge sort in Python",
            "submessages": [],
            "timestamp": 1530165989,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/21b9cce736cbbe8e0761bbb33863c7d3112d0136?x=x&version=2",
            "client": "website",
            "content": "<p>By master's theorem, I believe it winds up being <code>O(n^2)</code>.</p>\n<p>I recall the master's theorem by remembering the intuition behind it. In this case, thinking about how much time is spent in the merge step:</p>\n<p>The <code>mergesort</code> function is called once with size <code>n</code>. The merge step in this case takes time <code>O(n^2)</code> for a total of <code>1 * O(n^2)</code>.<br>\nThe <code>mergesort</code> function is called twice with size <code>n/2</code>. The merge step in this case takes time <code>O((n/2)^2)</code>  for a total of <code>2 * O((n/2)^2)</code>.<br>\nThe <code>mergesort</code> function is called four times with size <code>n/4</code>. The merge step in this case takes time <code>O((n/4)^2)</code> for a total of <code>4 * O((n/4)^2</code>.<br>\n...<br>\nThe <code>mergesort</code> function is called <code>n</code> times with size <code>n/n</code>. The merge step in this case takes time <code>O(1)</code> for a total of <code>n * O(1)</code>.</p>\n<p>Summing these times we get a sum like:</p>\n<p><code>1 * O(n^2) + 2 * O((n/2)^2) + 4 * O((n/4)^2) + ... n * O((n/n)^2) = 1/1 * O(n^2) + 1/2 * O(n^2) + 1/4 * O(n^2) + ... + 1/n * O(n^2) = O(n^2) * (1 + 1/2 + 1/4 + ... + 1/n) = O(n^2) * (use formula for geometric sum) = O(n^2) * (some constant) = O(n^2)</code></p>\n<p>Ordinary mergesort hits a different case of master's theorem. Following the same logic, the sum is instead:</p>\n<p><code>1 * O(n) + 2 * O(n/2) + 4 * O(n/4) + ... = O(n) + O(n) + O(n) + ...</code></p>\n<p>Since there are <code>log(n)</code> terms, the result winds up being <code>O(n) * log(n) = O(n*log(n))</code></p>\n<p>The third case of master's theorem is when the ratio between terms increases. For example, under certain circumstances the sum could have been:</p>\n<p><code>1 * O(n) + 2 * O(n) + ... + n/2 * O(n) + n * O(n) = O(n) * (n + n/2 + ... + 1) = O(n) * n * (1 + 1/2 + ... + 1/n) = O(n^2) * (formula for geometric sum) = O(n^2) + (some constant) = O(n^2).</code></p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 128807283,
            "is_me_message": false,
            "last_edit_timestamp": 1530240815,
            "reactions": [
                {
                    "emoji_code": "1f44d",
                    "emoji_name": "thumbs_up",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "jo.chasinga@gmail.com",
                        "full_name": "Joe Chasinga (S2'17)",
                        "id": 101482
                    },
                    "user_id": 101482
                }
            ],
            "recipient_id": 24954,
            "sender_email": "michaelmalis2@gmail.com",
            "sender_full_name": "Michael Malis (SP2'19)",
            "sender_id": 8099,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Efficient merge sort in Python",
            "submessages": [],
            "timestamp": 1530240745,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/8b0373befcb9fe1ca27ee0ac86fccc63eb8ccabe?x=x&version=2",
            "client": "website",
            "content": "<p>My question is about this simple problem: Can we verify if a string is a palindrome more efficiently than O(n)?</p>\n<p>I've come up with two solutions:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"k\">def</span> <span class=\"nf\">is_palindrome</span><span class=\"p\">(</span><span class=\"n\">word</span><span class=\"p\">):</span>\n    <span class=\"k\">if</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">word</span><span class=\"p\">)</span> <span class=\"o\">&lt;</span> <span class=\"mi\">2</span><span class=\"p\">:</span>\n        <span class=\"k\">return</span> <span class=\"bp\">True</span>\n\n    <span class=\"k\">return</span> <span class=\"n\">word</span> <span class=\"o\">==</span> <span class=\"n\">word</span><span class=\"p\">[::</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">]</span>\n</pre></div>\n\n\n<p>But afaik reversal takes O(n) time<br>\nSo this will always take O(n) for all cases.</p>\n<p>Another way which sacrifice a bit more space and simplicity is to find symmetry by using left and right pointers to compare <br>\n<code>a</code> and <code>N - a - 1</code>elements:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"k\">def</span> <span class=\"nf\">is_palindrome</span><span class=\"p\">(</span><span class=\"n\">word</span><span class=\"p\">):</span>\n    <span class=\"k\">if</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">word</span><span class=\"p\">)</span> <span class=\"o\">&lt;</span> <span class=\"mi\">2</span><span class=\"p\">:</span>\n        <span class=\"k\">return</span> <span class=\"bp\">True</span>\n\n    <span class=\"k\">while</span> <span class=\"n\">word</span><span class=\"p\">[</span><span class=\"n\">left</span><span class=\"p\">]</span> <span class=\"o\">==</span> <span class=\"n\">word</span><span class=\"p\">[</span><span class=\"n\">right</span><span class=\"p\">]:</span>\n        <span class=\"k\">if</span> <span class=\"n\">left</span> <span class=\"o\">==</span> <span class=\"n\">right</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"bp\">True</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n           <span class=\"n\">left</span> <span class=\"o\">+=</span> <span class=\"mi\">1</span>\n           <span class=\"n\">right</span> <span class=\"o\">-=</span> <span class=\"mi\">1</span>\n\n    <span class=\"k\">return</span> <span class=\"bp\">True</span>\n</pre></div>\n\n\n<p>This seems to have the worst case at <code>O(n)</code> but average / best cases can be <code>O(k)</code> where <code>k</code> is the steps either pointer has to take in order to decide if that word is a palindrome.</p>\n<p>Is there any more way to get better runtime? Please correct me if I'm wrong too.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 129184696,
            "is_me_message": false,
            "last_edit_timestamp": 1530858060,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "jo.chasinga@gmail.com",
            "sender_full_name": "Joe Chasinga (S2'17)",
            "sender_id": 101482,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Verify a palindrome in less than O(n)",
            "submessages": [],
            "timestamp": 1530858030,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/4d074af6cc341ef51b25bb2f738cdb11?d=identicon&version=1",
            "client": "website",
            "content": "<p>I don't think it's possible to do better than <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>O</mi><mo>(</mo><mi>n</mi><mo>)</mo></mrow><annotation encoding=\"application/x-tex\">O(n)</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"strut\" style=\"height:0.75em;\"></span><span class=\"strut bottom\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"base\"><span class=\"mord mathit\" style=\"margin-right:0.02778em;\">O</span><span class=\"mopen\">(</span><span class=\"mord mathit\">n</span><span class=\"mclose\">)</span></span></span></span> in the worst case because you have to look at each character in the string and I can't see a way of doing that in less than <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>O</mi><mo>(</mo><mi>n</mi><mo>)</mo></mrow><annotation encoding=\"application/x-tex\">O(n)</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"strut\" style=\"height:0.75em;\"></span><span class=\"strut bottom\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"base\"><span class=\"mord mathit\" style=\"margin-right:0.02778em;\">O</span><span class=\"mopen\">(</span><span class=\"mord mathit\">n</span><span class=\"mclose\">)</span></span></span></span> time.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 129184916,
            "is_me_message": false,
            "reactions": [
                {
                    "emoji_code": "1f44d",
                    "emoji_name": "thumbs_up",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "lukeadba@gmail.com",
                        "full_name": "Luke Barone-Adesi (he) (F'13)",
                        "id": 2903
                    },
                    "user_id": 2903
                },
                {
                    "emoji_code": "1f44d",
                    "emoji_name": "thumbs_up",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "marlenefdez@gmail.com",
                        "full_name": "Marlene Fernandez (she) (SP1'18)",
                        "id": 109654
                    },
                    "user_id": 109654
                },
                {
                    "emoji_code": "1f44d",
                    "emoji_name": "thumbs_up",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "okay.zed@gmail.com",
                        "full_name": "okay zed (S1'18)",
                        "id": 117513
                    },
                    "user_id": 117513
                },
                {
                    "emoji_code": "1f44d",
                    "emoji_name": "thumbs_up",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "alan.m.odonnell@gmail.com",
                        "full_name": "Alan O'Donnell (he) (S1'19)",
                        "id": 813
                    },
                    "user_id": 813
                },
                {
                    "emoji_code": "1f44d",
                    "emoji_name": "thumbs_up",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "jo.chasinga@gmail.com",
                        "full_name": "Joe Chasinga (S2'17)",
                        "id": 101482
                    },
                    "user_id": 101482
                }
            ],
            "recipient_id": 24954,
            "sender_email": "vaibhavsagar@gmail.com",
            "sender_full_name": "Vaibhav Sagar (he) (F1'16)",
            "sender_id": 100041,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Verify a palindrome in less than O(n)",
            "submessages": [],
            "timestamp": 1530858594,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/282da691709f4715fc3e0ff6bebd278b?d=identicon&version=1",
            "client": "website",
            "content": "<p><span class=\"user-mention\" data-user-id=\"101482\">@Panisuan Chasinga (S2'17)</span> <code>word[::-1]</code> will create a copy of the input string, so the left/right pointer version will use less space.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 129195985,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "alan.m.odonnell@gmail.com",
            "sender_full_name": "Alan O'Donnell (he) (S1'19)",
            "sender_id": 813,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Verify a palindrome in less than O(n)",
            "submessages": [],
            "timestamp": 1530876776,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/282da691709f4715fc3e0ff6bebd278b?d=identicon&version=1",
            "client": "website",
            "content": "<p>I also saw a fun short version of the left/right pointer idea recently: <code>all(word[i] == word[-1 - i] for i in range(len(word) // 2))</code> :)</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 129196108,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "alan.m.odonnell@gmail.com",
            "sender_full_name": "Alan O'Donnell (he) (S1'19)",
            "sender_id": 813,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Verify a palindrome in less than O(n)",
            "submessages": [],
            "timestamp": 1530876965,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/ea5ab7f7d6e19ffdee32487a6e145475c956689b?x=x&version=3",
            "client": "website",
            "content": "<blockquote>\n<p>But afaik reversal takes O(n) time.</p>\n</blockquote>\n<p>I believe the comparison (<code>==</code> operation) would also take O(n) time (in the worst case)!</p>\n<p>If relying on parallel computing, it is possible to achieve O(log n) time.</p>\n<div class=\"codehilite\"><pre><span></span>def parallel_palindrome(s):\n    N = len(s)  # Assume that N is 16 for this example. It makes part 2 simpler.\n    matches = N // 2\n\n    # Part 1: Compare all mirrored characters. O(1)\n\n    # Assume all operations in this for loop happen in parallel aka in constant time.\n    for i in range(N // 2):\n        matches[i] = s[i] == s[N-i-1]\n\n    # Part 2: Check that all values in matches are True. O(log N)\n\n    # Part 2a: There are O(log N) loops.\n    for M in [4, 2, 1]:\n\n        # Part 2b: This for loop can run in parallel also. O(1)\n        for i in range(M):\n            matches[i] = matches[i] and matches[i + M]\n\n    # If the first element in matches is True, then s is a palindrome!\n\n    return matches[0]\n</pre></div>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 129215264,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "andrew@mrdrozdov.com",
            "sender_full_name": "Andrew Drozdov (S2'16)",
            "sender_id": 7630,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Verify a palindrome in less than O(n)",
            "submessages": [],
            "timestamp": 1530899241,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/ea5ab7f7d6e19ffdee32487a6e145475c956689b?x=x&version=3",
            "client": "website",
            "content": "<p>If interested, it is also possible to find the \"Longest Palindromic Substring\" in O(n) time using <a href=\"https://www.geeksforgeeks.org/manachers-algorithm-linear-time-longest-palindromic-substring-part-1/\" target=\"_blank\" title=\"https://www.geeksforgeeks.org/manachers-algorithm-linear-time-longest-palindromic-substring-part-1/\">Manacher's Algorithm</a>.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 129215353,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "andrew@mrdrozdov.com",
            "sender_full_name": "Andrew Drozdov (S2'16)",
            "sender_id": 7630,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Verify a palindrome in less than O(n)",
            "submessages": [],
            "timestamp": 1530899356,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/8b0373befcb9fe1ca27ee0ac86fccc63eb8ccabe?x=x&version=2",
            "client": "website",
            "content": "<p>Normally one would expect it to performs on average <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>O</mi><mo>(</mo><msup><mi>N</mi><mn>2</mn></msup><mo>)</mo></mrow><annotation encoding=\"application/x-tex\"> O(N^{2 })</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"strut\" style=\"height:0.8141079999999999em;\"></span><span class=\"strut bottom\" style=\"height:1.064108em;vertical-align:-0.25em;\"></span><span class=\"base\"><span class=\"mord mathit\" style=\"margin-right:0.02778em;\">O</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathit\" style=\"margin-right:0.10903em;\">N</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141079999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">2</span></span></span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span> since for every <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>N</mi></mrow><annotation encoding=\"application/x-tex\">N</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"strut\" style=\"height:0.68333em;\"></span><span class=\"strut bottom\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"base\"><span class=\"mord mathit\" style=\"margin-right:0.10903em;\">N</span></span></span></span> element <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>N</mi><mo>\u2212</mo><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">N-1</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"strut\" style=\"height:0.68333em;\"></span><span class=\"strut bottom\" style=\"height:0.76666em;vertical-align:-0.08333em;\"></span><span class=\"base\"><span class=\"mord mathit\" style=\"margin-right:0.10903em;\">N</span><span class=\"mbin\">\u2212</span><span class=\"mord mathrm\">1</span></span></span></span> elements must be iterated over. However, when the minimum element (or in the case of reverse sorting, maxinum) is concluded, it usually needs to be removed from the original array. Deleting an element from an array in Python cost an addition <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>O</mi><mo>(</mo><mi>N</mi><mo>)</mo></mrow><annotation encoding=\"application/x-tex\">O(N)</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"strut\" style=\"height:0.75em;\"></span><span class=\"strut bottom\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"base\"><span class=\"mord mathit\" style=\"margin-right:0.02778em;\">O</span><span class=\"mopen\">(</span><span class=\"mord mathit\" style=\"margin-right:0.10903em;\">N</span><span class=\"mclose\">)</span></span></span></span>.</p>\n<p>Would that possibly make it incurs <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>O</mi><mo>(</mo><msup><mi>N</mi><mn>3</mn></msup><mo>)</mo></mrow><annotation encoding=\"application/x-tex\">O(N^{3})</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"strut\" style=\"height:0.8141079999999999em;\"></span><span class=\"strut bottom\" style=\"height:1.064108em;vertical-align:-0.25em;\"></span><span class=\"base\"><span class=\"mord mathit\" style=\"margin-right:0.02778em;\">O</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathit\" style=\"margin-right:0.10903em;\">N</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141079999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">3</span></span></span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span> runtime?</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 129423061,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "jo.chasinga@gmail.com",
            "sender_full_name": "Joe Chasinga (S2'17)",
            "sender_id": 101482,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Is selection sort in Python possible of O(N*N*N)?",
            "submessages": [],
            "timestamp": 1531243413,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/282da691709f4715fc3e0ff6bebd278b?d=identicon&version=1",
            "client": "website",
            "content": "<p>How come you need to remove something from the array? Not sure I'm following.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 129423774,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "alan.m.odonnell@gmail.com",
            "sender_full_name": "Alan O'Donnell (he) (S1'19)",
            "sender_id": 813,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Is selection sort in Python possible of O(N*N*N)?",
            "submessages": [],
            "timestamp": 1531244242,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/3ca604eb0c0cfa22b4a10fc739c056c8?d=identicon&version=1",
            "client": "website",
            "content": "<p><span class=\"user-mention\" data-user-id=\"101482\">@Panisuan Chasinga (S2'17)</span> even if you did need to delete elements, that seems like an additive rather than multiplicative cost to me.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 129424277,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "lukeadba@gmail.com",
            "sender_full_name": "Luke Barone-Adesi (he) (F'13)",
            "sender_id": 2903,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Is selection sort in Python possible of O(N*N*N)?",
            "submessages": [],
            "timestamp": 1531244926,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/8b0373befcb9fe1ca27ee0ac86fccc63eb8ccabe?x=x&version=2",
            "client": "website",
            "content": "<p><span class=\"user-mention\" data-user-id=\"2903\">@Luke Barone-Adesi (F'13)</span>  thanks for the lead. Are you suggesting it looks like <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>O</mi><mo>(</mo><mi>N</mi><mo>\u2217</mo><mi>N</mi><mo>+</mo><mi>N</mi><mo>)</mo></mrow><annotation encoding=\"application/x-tex\">O(N * N + N)</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"strut\" style=\"height:0.75em;\"></span><span class=\"strut bottom\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"base\"><span class=\"mord mathit\" style=\"margin-right:0.02778em;\">O</span><span class=\"mopen\">(</span><span class=\"mord mathit\" style=\"margin-right:0.10903em;\">N</span><span class=\"mbin\">\u2217</span><span class=\"mord mathit\" style=\"margin-right:0.10903em;\">N</span><span class=\"mbin\">+</span><span class=\"mord mathit\" style=\"margin-right:0.10903em;\">N</span><span class=\"mclose\">)</span></span></span></span> where the last added <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>N</mi></mrow><annotation encoding=\"application/x-tex\">N</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"strut\" style=\"height:0.68333em;\"></span><span class=\"strut bottom\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"base\"><span class=\"mord mathit\" style=\"margin-right:0.10903em;\">N</span></span></span></span> comes from the deletion? Can you elaborate how that happens since it (the deletion) does happen for every <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>N</mi></mrow><annotation encoding=\"application/x-tex\">N</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"strut\" style=\"height:0.68333em;\"></span><span class=\"strut bottom\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"base\"><span class=\"mord mathit\" style=\"margin-right:0.10903em;\">N</span></span></span></span> element?</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 129424583,
            "is_me_message": false,
            "last_edit_timestamp": 1531245372,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "jo.chasinga@gmail.com",
            "sender_full_name": "Joe Chasinga (S2'17)",
            "sender_id": 101482,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Is selection sort in Python possible of O(N*N*N)?",
            "submessages": [],
            "timestamp": 1531245258,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/8b0373befcb9fe1ca27ee0ac86fccc63eb8ccabe?x=x&version=2",
            "client": "website",
            "content": "<p><span class=\"user-mention\" data-user-id=\"813\">@Alan O'Donnell</span> I assumed removing the selected element from the original array as one appends it to the resulting array.</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"k\">def</span> <span class=\"nf\">selection_sort</span><span class=\"p\">(</span><span class=\"n\">arr</span><span class=\"p\">):</span>\n    <span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n    <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">arr</span><span class=\"p\">)):</span>\n        <span class=\"n\">min_index</span> <span class=\"o\">=</span> <span class=\"n\">find_min_index</span><span class=\"p\">(</span><span class=\"n\">arr</span><span class=\"p\">)</span>          <span class=\"o\">//</span> <span class=\"n\">find_min_index</span> <span class=\"n\">incurs</span> <span class=\"n\">O</span><span class=\"p\">(</span><span class=\"n\">n</span><span class=\"p\">)</span>\n        <span class=\"n\">result</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">arr</span><span class=\"o\">.</span><span class=\"n\">pop</span><span class=\"p\">(</span><span class=\"n\">min_index</span><span class=\"p\">))</span>     <span class=\"o\">//</span> <span class=\"n\">removing</span> <span class=\"o\">/</span> <span class=\"n\">popping</span> <span class=\"n\">an</span> <span class=\"n\">element</span> <span class=\"n\">also</span> <span class=\"n\">costs</span> <span class=\"n\">O</span><span class=\"p\">(</span><span class=\"n\">n</span><span class=\"p\">)</span> <span class=\"err\">?</span>\n    <span class=\"k\">return</span> <span class=\"n\">result</span>\n</pre></div>\n\n\n<p>I assume the <code>Array.pop()</code> method is the <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>O</mi><mo>(</mo><mi>N</mi><mo>)</mo></mrow><annotation encoding=\"application/x-tex\">O(N)</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"strut\" style=\"height:0.75em;\"></span><span class=\"strut bottom\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"base\"><span class=\"mord mathit\" style=\"margin-right:0.02778em;\">O</span><span class=\"mopen\">(</span><span class=\"mord mathit\" style=\"margin-right:0.10903em;\">N</span><span class=\"mclose\">)</span></span></span></span> deletion.</p>\n<p>p.s. <span class=\"user-mention\" data-user-id=\"2903\">@Luke Barone-Adesi (F'13)</span> oh looking at the code I wrote now I think I know why it's additive.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 129425186,
            "is_me_message": false,
            "last_edit_timestamp": 1531246031,
            "reactions": [
                {
                    "emoji_code": "1f44d",
                    "emoji_name": "thumbs_up",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "levimroth@gmail.com",
                        "full_name": "Levi Roth (he) (W2'18)",
                        "id": 105051
                    },
                    "user_id": 105051
                },
                {
                    "emoji_code": "1f44d",
                    "emoji_name": "thumbs_up",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "lukeadba@gmail.com",
                        "full_name": "Luke Barone-Adesi (he) (F'13)",
                        "id": 2903
                    },
                    "user_id": 2903
                }
            ],
            "recipient_id": 24954,
            "sender_email": "jo.chasinga@gmail.com",
            "sender_full_name": "Joe Chasinga (S2'17)",
            "sender_id": 101482,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Is selection sort in Python possible of O(N*N*N)?",
            "submessages": [],
            "timestamp": 1531245897,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/ca9f8cb0bcede6fa920c47295ad4e7a972c9f863?x=x&version=2",
            "client": "ZulipElectron",
            "content": "<p>Hey guys it has been recommended we put everything in a stream so I'm posting here for people doing the stanford algorithms course. <span class=\"user-mention\" data-user-id=\"130084\">@Sonja Lea Heinze (F2'18)</span> <span class=\"user-mention\" data-user-id=\"134467\">@Michelle Ho (W1'18)</span>  <span class=\"user-mention\" data-user-id=\"129926\">@Kat Kitay (F2'18)</span> <span class=\"user-mention\" data-user-id=\"130447\">@Elisha White Atkinson (F2'18)</span> <span class=\"user-mention\" data-user-id=\"129944\">@Maira Kodama (F2'18)</span> <span class=\"user-mention\" data-user-id=\"130326\">@Carl Schubert (F2'18)</span> please tag anyone i missed. Sorry for the mass tagging!</p>\n<p>Also here are my solutions: <a href=\"https://git.chunli.me/algorithms2.git/tree/\" target=\"_blank\" title=\"https://git.chunli.me/algorithms2.git/tree/\">https://git.chunli.me/algorithms2.git/tree/</a> ; my union find structure is <a href=\"https://git.chunli.me/algorithms2.git/tree/w2/unionfind.py\" target=\"_blank\" title=\"https://git.chunli.me/algorithms2.git/tree/w2/unionfind.py\">https://git.chunli.me/algorithms2.git/tree/w2/unionfind.py</a></p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 148144682,
            "is_me_message": false,
            "last_edit_timestamp": 1543010849,
            "reactions": [
                {
                    "emoji_code": "1f419",
                    "emoji_name": "octopus",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "okay.zed@gmail.com",
                        "full_name": "okay zed (S1'18)",
                        "id": 117513
                    },
                    "user_id": 117513
                }
            ],
            "recipient_id": 24954,
            "sender_email": "chunli.developer@gmail.com",
            "sender_full_name": "Chun Li (he) (F2'18)",
            "sender_id": 129956,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Stanford Algorithms Course",
            "submessages": [],
            "timestamp": 1542844590,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/71197eae9ccbfe8bac564b94ff51a368f091b337?x=x&version=3",
            "client": "ZulipElectron",
            "content": "<p>Hey folks, I've changed the time we meet for algorithms on Wednesday from 3:30 to 1:30 so it would not conflict with JavaScript Wiz as discussed in our last meeting. </p>\n<p><a href=\"https://www.recurse.com/calendar/4002?date=2018-11-25\" target=\"_blank\" title=\"https://www.recurse.com/calendar/4002?date=2018-11-25\">https://www.recurse.com/calendar/4002?date=2018-11-25</a></p>\n<p><span class=\"user-mention\" data-user-id=\"134467\">@Michelle Ho (W1'18)</span> <span class=\"user-mention\" data-user-id=\"134214\">@Patrick Schneeweis (W1'18)</span> <span class=\"user-mention\" data-user-id=\"134599\">@Patrick McCarver (W1'18)</span> <span class=\"user-mention\" data-user-id=\"130440\">@Jack Wilson (F2'18)</span> <span class=\"user-mention\" data-user-id=\"134400\">@Jackie Liu (W1'18)</span> <span class=\"user-mention\" data-user-id=\"129929\">@Douglas Gordon (F2'18)</span> <span class=\"user-mention\" data-user-id=\"134181\">@Douglas Lerner (W1'18)</span></p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 148368685,
            "is_me_message": false,
            "reactions": [
                {
                    "emoji_code": "1f44d",
                    "emoji_name": "+1",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "michellemmh@gmail.com",
                        "full_name": "Michelle Ho (she) (W1'18)",
                        "id": 134467
                    },
                    "user_id": 134467
                },
                {
                    "emoji_code": "1f44d",
                    "emoji_name": "+1",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "jackwilsonv@gmail.com",
                        "full_name": "Jack Wilson (F2'18)",
                        "id": 130440
                    },
                    "user_id": 130440
                }
            ],
            "recipient_id": 24954,
            "sender_email": "alancodes@gmail.com",
            "sender_full_name": "Alan Chu (he) (SP2'19)",
            "sender_id": 134387,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Change of Schedule",
            "submessages": [],
            "timestamp": 1543241117,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/f244e3545a6792c557adf5475475c0cc2e6d5d7b?x=x&version=3",
            "client": "ZulipElectron",
            "content": "<p>Cross post from <a class=\"stream\" data-stream-id=\"18957\" href=\"/#narrow/stream/18957-programming\">#programming</a>: I finished a coding interview this morning with a problem that really stumped me. It was part of a set of questions (I thankfully didn't have to answer it in the interview) but I copied it down after it was over and cannot piece together a solution </p>\n<p>It's lengthy to type out but if anyone in the space wants to puzzle over it with me I'm on 4th! I'm here until 6pm</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 148403420,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "aatigar@gmail.com",
            "sender_full_name": "Adam Avery Tigar (he) (F2'18)",
            "sender_id": 130218,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Tricky problem",
            "submessages": [],
            "timestamp": 1543271345,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/89ca9a012749d846c25306ce17aebb57?d=identicon&version=1",
            "client": "website",
            "content": "<p>I'm not in the space, but am interested in the problem - hope you solved it!</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 148416468,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "okay.zed@gmail.com",
            "sender_full_name": "okay zed (S1'18)",
            "sender_id": 117513,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Tricky problem",
            "submessages": [],
            "timestamp": 1543289102,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/51eb74b84b6765b1128907e8bfac5454c5e693dd?x=x&version=2",
            "client": "ZulipElectron",
            "content": "<p>Poll: who wants to work on HW3 or HW2 tomorrow?</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 148676785,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "michellemmh@gmail.com",
            "sender_full_name": "Michelle Ho (she) (W1'18)",
            "sender_id": 134467,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Change of Schedule",
            "submessages": [],
            "timestamp": 1543361572,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/f0fe2f68b0f71aa5add88f2e250496b9a203ad96?x=x&version=2",
            "client": "ZulipElectron",
            "content": "<p>I'm on homework 3</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 148716854,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "djchenoweth@gmail.com",
            "sender_full_name": "Dan Chenoweth (he) (W1'18)",
            "sender_id": 134186,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Change of Schedule",
            "submessages": [],
            "timestamp": 1543417258,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/af9419ae56711b71b16ff6c08aca6589?d=identicon&version=1",
            "client": "website",
            "content": "<p>I forgot we moved this.. gonna be late. may actually skip depending on what yall are doing when i get there :/</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 148731685,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "jackwilsonv@gmail.com",
            "sender_full_name": "Jack Wilson (F2'18)",
            "sender_id": 130440,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Change of Schedule",
            "submessages": [],
            "timestamp": 1543429226,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/787f392240856522f98bd4d40db71ec20edb3d2e?x=x&version=3",
            "client": "ZulipElectron",
            "content": "<p>Looks like nobody has shown up? I didn't finish the week 3 videos anyways, could try week 2 programming homework though if someone wants to pair</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 148732426,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "pmmhy4@mst.edu",
            "sender_full_name": "Patrick McCarver (they/he) (SP1'19)",
            "sender_id": 134599,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Change of Schedule",
            "submessages": [],
            "timestamp": 1543429954,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/51eb74b84b6765b1128907e8bfac5454c5e693dd?x=x&version=2",
            "client": "ZulipElectron",
            "content": "<p>Did anyone do Programming Assignment 2 (QuickSort with different pivot choice methods)? Alan and I are working on it now <span class=\"user-mention\" data-user-id=\"130440\">@Jack Wilson (F2'18)</span> <span class=\"user-mention\" data-user-id=\"134599\">@Patrick McCarver (W1'18)</span> <span class=\"user-mention\" data-user-id=\"134186\">@Dan Chenoweth (W1'18)</span> <span class=\"user-mention\" data-user-id=\"134400\">@Jackie Liu (W1'18)</span></p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 148813318,
            "is_me_message": false,
            "last_edit_timestamp": 1543521038,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "michellemmh@gmail.com",
            "sender_full_name": "Michelle Ho (she) (W1'18)",
            "sender_id": 134467,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Change of Schedule",
            "submessages": [],
            "timestamp": 1543520999,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/51eb74b84b6765b1128907e8bfac5454c5e693dd?x=x&version=2",
            "client": "ZulipElectron",
            "content": "<p>We got a QuickSort function working, but our method for counting comparisons is a <em>little</em> bit off from what the the Stanford HW is expecting... so it's really hard to trouble-shoot</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 148813479,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "michellemmh@gmail.com",
            "sender_full_name": "Michelle Ho (she) (W1'18)",
            "sender_id": 134467,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Change of Schedule",
            "submessages": [],
            "timestamp": 1543521086,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/af9419ae56711b71b16ff6c08aca6589?d=identicon&version=1",
            "client": "website",
            "content": "<p>down to help.. where are yall?</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 148815281,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "jackwilsonv@gmail.com",
            "sender_full_name": "Jack Wilson (F2'18)",
            "sender_id": 130440,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Change of Schedule",
            "submessages": [],
            "timestamp": 1543522451,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/f0fe2f68b0f71aa5add88f2e250496b9a203ad96?x=x&version=2",
            "client": "ZulipElectron",
            "content": "<p>Here's what I was working with for using the first element as the partition. Not heavily tested but works for the test case here. I was swapping the partition element into place at the end:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"n\">a</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"mi\">3</span><span class=\"p\">,</span><span class=\"mi\">8</span><span class=\"p\">,</span><span class=\"mi\">2</span><span class=\"p\">,</span><span class=\"mi\">5</span><span class=\"p\">,</span><span class=\"mi\">3</span><span class=\"p\">,</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">4</span><span class=\"p\">,</span><span class=\"mi\">7</span><span class=\"p\">,</span><span class=\"mi\">6</span><span class=\"p\">]</span>\n\n<span class=\"k\">def</span> <span class=\"nf\">partition</span><span class=\"p\">(</span><span class=\"n\">array</span><span class=\"p\">,</span> <span class=\"n\">start_index</span><span class=\"p\">,</span> <span class=\"n\">end_index</span><span class=\"p\">):</span>\n\n  <span class=\"c1\"># Base Case</span>\n  <span class=\"k\">if</span> <span class=\"n\">end_index</span> <span class=\"o\">-</span> <span class=\"n\">start_index</span> <span class=\"o\">&lt;=</span> <span class=\"mi\">1</span><span class=\"p\">:</span>\n    <span class=\"k\">return</span>\n\n  <span class=\"n\">comparison_val</span> <span class=\"o\">=</span> <span class=\"n\">array</span><span class=\"p\">[</span><span class=\"n\">start_index</span><span class=\"p\">]</span>\n  <span class=\"n\">partition_index</span> <span class=\"o\">=</span> <span class=\"n\">start_index</span> <span class=\"o\">+</span> <span class=\"mi\">1</span>\n  <span class=\"n\">check_index</span> <span class=\"o\">=</span> <span class=\"n\">partition_index</span>\n\n  <span class=\"c1\"># Iterate through values</span>\n  <span class=\"k\">while</span> <span class=\"n\">check_index</span> <span class=\"o\">&lt;</span> <span class=\"n\">end_index</span><span class=\"p\">:</span>\n    <span class=\"c1\"># If the value is less than the partition,</span>\n    <span class=\"c1\"># swap it with the first value greater than</span>\n    <span class=\"c1\"># the partition.</span>\n    <span class=\"k\">if</span> <span class=\"n\">array</span><span class=\"p\">[</span><span class=\"n\">check_index</span><span class=\"p\">]</span> <span class=\"o\">&lt;</span> <span class=\"n\">comparison_val</span><span class=\"p\">:</span>\n      <span class=\"n\">array</span><span class=\"p\">[</span><span class=\"n\">check_index</span><span class=\"p\">],</span> <span class=\"n\">array</span><span class=\"p\">[</span><span class=\"n\">partition_index</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">array</span><span class=\"p\">[</span><span class=\"n\">partition_index</span><span class=\"p\">],</span> <span class=\"n\">array</span><span class=\"p\">[</span><span class=\"n\">check_index</span><span class=\"p\">]</span>\n\n      <span class=\"c1\">#Expand the partition size</span>\n      <span class=\"n\">partition_index</span> <span class=\"o\">+=</span> <span class=\"mi\">1</span>\n\n    <span class=\"c1\"># Move on to the next</span>\n    <span class=\"n\">check_index</span> <span class=\"o\">+=</span> <span class=\"mi\">1</span>\n\n  <span class=\"c1\"># Swap partition value into the correct place.</span>\n  <span class=\"n\">array</span><span class=\"p\">[</span><span class=\"n\">start_index</span><span class=\"p\">],</span> <span class=\"n\">array</span><span class=\"p\">[</span><span class=\"n\">partition_index</span> <span class=\"o\">-</span> <span class=\"mi\">1</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">array</span><span class=\"p\">[</span><span class=\"n\">partition_index</span> <span class=\"o\">-</span> <span class=\"mi\">1</span><span class=\"p\">],</span> <span class=\"n\">array</span><span class=\"p\">[</span><span class=\"n\">start_index</span><span class=\"p\">]</span>\n\n  <span class=\"c1\"># Recurse on first partition</span>\n  <span class=\"n\">partition</span><span class=\"p\">(</span><span class=\"n\">array</span><span class=\"p\">,</span> <span class=\"n\">start_index</span><span class=\"p\">,</span> <span class=\"n\">partition_index</span> <span class=\"o\">-</span> <span class=\"mi\">1</span><span class=\"p\">)</span>\n  <span class=\"c1\"># Recurse on second partition</span>\n  <span class=\"n\">partition</span><span class=\"p\">(</span><span class=\"n\">array</span><span class=\"p\">,</span> <span class=\"n\">partition_index</span><span class=\"p\">,</span> <span class=\"n\">end_index</span><span class=\"p\">)</span>\n\n<span class=\"n\">partition</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">))</span>\n<span class=\"k\">print</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">)</span>\n</pre></div>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 148816275,
            "is_me_message": false,
            "last_edit_timestamp": 1543523421,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "djchenoweth@gmail.com",
            "sender_full_name": "Dan Chenoweth (he) (W1'18)",
            "sender_id": 134186,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Change of Schedule",
            "submessages": [],
            "timestamp": 1543523395,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/7da8f8ef20569f6876aeb1188d2ebb6d41c6f842?x=x&version=2",
            "client": "ZulipElectron",
            "content": "<p>Not sure what the exact question is but here is a quicksort function I made a while back: </p>\n<div class=\"codehilite\"><pre><span></span><span class=\"k\">def</span> <span class=\"nf\">quicksort</span><span class=\"p\">(</span><span class=\"n\">arr</span><span class=\"p\">):</span>\n    <span class=\"n\">less</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n    <span class=\"n\">more</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n    <span class=\"n\">pivotList</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n    <span class=\"k\">if</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">arr</span><span class=\"p\">)</span> <span class=\"o\">&lt;=</span> <span class=\"mi\">1</span><span class=\"p\">:</span>\n        <span class=\"k\">return</span> <span class=\"n\">arr</span>\n    <span class=\"k\">else</span><span class=\"p\">:</span>\n        <span class=\"n\">pivot</span> <span class=\"o\">=</span> <span class=\"n\">arr</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span>\n        <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"n\">arr</span><span class=\"p\">:</span>\n            <span class=\"k\">if</span> <span class=\"n\">i</span> <span class=\"o\">&lt;</span> <span class=\"n\">pivot</span><span class=\"p\">:</span>\n                <span class=\"n\">less</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">i</span><span class=\"p\">)</span>\n            <span class=\"k\">elif</span> <span class=\"n\">i</span> <span class=\"o\">&gt;</span> <span class=\"n\">pivot</span><span class=\"p\">:</span>\n                <span class=\"n\">more</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">i</span><span class=\"p\">)</span>\n            <span class=\"k\">else</span><span class=\"p\">:</span>\n                <span class=\"n\">pivotList</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">i</span><span class=\"p\">)</span>\n        <span class=\"n\">less</span> <span class=\"o\">=</span> <span class=\"n\">quicksort</span><span class=\"p\">(</span><span class=\"n\">less</span><span class=\"p\">)</span>\n        <span class=\"n\">more</span> <span class=\"o\">=</span> <span class=\"n\">quicksort</span><span class=\"p\">(</span><span class=\"n\">more</span><span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"n\">less</span> <span class=\"o\">+</span> <span class=\"n\">pivotList</span> <span class=\"o\">+</span> <span class=\"n\">more</span>\n</pre></div>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 148823979,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "KeenanKomoto@gmail.com",
            "sender_full_name": "Keenan Tsuruichi Komoto (he) (F2'18)",
            "sender_id": 129934,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Change of Schedule",
            "submessages": [],
            "timestamp": 1543529543,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/4d074af6cc341ef51b25bb2f738cdb11?d=identicon&version=1",
            "client": "website",
            "content": "<p>I have a Python implementation of this assignment at the beginning of <a href=\"https://vaibhavsagar.com/blog/2017/05/29/imperative-haskell/\" target=\"_blank\" title=\"https://vaibhavsagar.com/blog/2017/05/29/imperative-haskell/\">https://vaibhavsagar.com/blog/2017/05/29/imperative-haskell/</a> if it helps!</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 148825354,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "vaibhavsagar@gmail.com",
            "sender_full_name": "Vaibhav Sagar (he) (F1'16)",
            "sender_id": 100041,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Change of Schedule",
            "submessages": [],
            "timestamp": 1543530953,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/c01fa66cd5fa025861dc065d5a18974f2806a9b3?x=x&version=5",
            "client": "ZulipElectron",
            "content": "<p>Hey! I'm working on a dynamic programming problem for solving traveling salesman <a href=\"https://en.wikipedia.org/wiki/Held%E2%80%93Karp_algorithm\" target=\"_blank\" title=\"https://en.wikipedia.org/wiki/Held%E2%80%93Karp_algorithm\">https://en.wikipedia.org/wiki/Held%E2%80%93Karp_algorithm</a>. I'm having trouble determining how to determine the necessary table size for this dynamic problem.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 150801638,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "avery.erwinmcguire@gmail.com",
            "sender_full_name": "Avery Erwin-McGuire (she) (S1'18)",
            "sender_id": 116351,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Held-Karp algorithm",
            "submessages": [],
            "timestamp": 1543872370,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/c01fa66cd5fa025861dc065d5a18974f2806a9b3?x=x&version=5",
            "client": "ZulipElectron",
            "content": "<p>Specifically, I don't understand why a table could be smaller than this --&gt; Table[# of points][# of points factorial], where the first index is the starting node, and the second index represents all destination nodes. But this seems ABSURDLY large and must be incorrect. Any thoughts?</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 150801728,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "avery.erwinmcguire@gmail.com",
            "sender_full_name": "Avery Erwin-McGuire (she) (S1'18)",
            "sender_id": 116351,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Held-Karp algorithm",
            "submessages": [],
            "timestamp": 1543872445,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/4d074af6cc341ef51b25bb2f738cdb11?d=identicon&version=1",
            "client": "website",
            "content": "<p>I remember doing a travelling salesman problem for one of the coursera algorithms courses, and my biggest problem was that I kept running out of memory! What I ended up doing was deleting earlier stages once they were no longer needed. Would that decrease your memory requirements? Code is here: <a href=\"https://github.com/vaibhavsagar/courses/blob/master/algorithms2/week5/TravellingSalesmanPy.ipynb\" target=\"_blank\" title=\"https://github.com/vaibhavsagar/courses/blob/master/algorithms2/week5/TravellingSalesmanPy.ipynb\">https://github.com/vaibhavsagar/courses/blob/master/algorithms2/week5/TravellingSalesmanPy.ipynb</a></p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 150808664,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "vaibhavsagar@gmail.com",
            "sender_full_name": "Vaibhav Sagar (he) (F1'16)",
            "sender_id": 100041,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Held-Karp algorithm",
            "submessages": [],
            "timestamp": 1543878862,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/c01fa66cd5fa025861dc065d5a18974f2806a9b3?x=x&version=5",
            "client": "ZulipElectron",
            "content": "<p>I'm mostly confused because a fellow student told me he was able to solve it with only 500 table nodes!? It's a set of 20 cities, I have no clue how he was able to do that.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 150808697,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "avery.erwinmcguire@gmail.com",
            "sender_full_name": "Avery Erwin-McGuire (she) (S1'18)",
            "sender_id": 116351,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Held-Karp algorithm",
            "submessages": [],
            "timestamp": 1543878923,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/282da691709f4715fc3e0ff6bebd278b?d=identicon&version=1",
            "client": "website",
            "content": "<p><span class=\"user-mention\" data-user-id=\"116351\">@Avery Erwin-McGuire (S1'18)</span> could you walk through your argument for the table size? The dynamic programming solution I'm familiar would use a smaller table than the one you're suggesting, although, yeah, I'm not sure yet how your classmate got away with only 500 table nodes...</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 150901232,
            "is_me_message": false,
            "last_edit_timestamp": 1543982279,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "alan.m.odonnell@gmail.com",
            "sender_full_name": "Alan O'Donnell (he) (S1'19)",
            "sender_id": 813,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Held-Karp algorithm",
            "submessages": [],
            "timestamp": 1543982257,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/282da691709f4715fc3e0ff6bebd278b?d=identicon&version=1",
            "client": "website",
            "content": "<p>And by the way, meta post about dynamic programming: Erik Demain's lectures on DP are so fun: <a href=\"https://www.youtube.com/watch?v=OQ5jsbhAv_M&amp;list=PLfMspJ0TLR5HRFu2kLh3U4mvStMO8QURm\" target=\"_blank\" title=\"https://www.youtube.com/watch?v=OQ5jsbhAv_M&amp;list=PLfMspJ0TLR5HRFu2kLh3U4mvStMO8QURm\">https://www.youtube.com/watch?v=OQ5jsbhAv_M&amp;list=PLfMspJ0TLR5HRFu2kLh3U4mvStMO8QURm</a>. That's how I learned the technique.</p>\n<div class=\"youtube-video message_inline_image\"><a data-id=\"OQ5jsbhAv_M\" href=\"https://www.youtube.com/watch?v=OQ5jsbhAv_M&amp;list=PLfMspJ0TLR5HRFu2kLh3U4mvStMO8QURm\" target=\"_blank\" title=\"https://www.youtube.com/watch?v=OQ5jsbhAv_M&amp;list=PLfMspJ0TLR5HRFu2kLh3U4mvStMO8QURm\"><img src=\"https://i.ytimg.com/vi/OQ5jsbhAv_M/default.jpg\"></a></div>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 150901294,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "alan.m.odonnell@gmail.com",
            "sender_full_name": "Alan O'Donnell (he) (S1'19)",
            "sender_id": 813,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Held-Karp algorithm",
            "submessages": [],
            "timestamp": 1543982355,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/205f6d09582a777f36bf64862634dd28?d=identicon&version=1",
            "client": "ZulipElectron",
            "content": "<p>Erik Demaine is awesome! Favorite CS lecturer</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 150933747,
            "is_me_message": false,
            "reactions": [
                {
                    "emoji_code": "1f44d",
                    "emoji_name": "+1",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "aatigar@gmail.com",
                        "full_name": "Adam Avery Tigar (he) (F2'18)",
                        "id": 130218
                    },
                    "user_id": 130218
                }
            ],
            "recipient_id": 24954,
            "sender_email": "rowan.copley@gmail.com",
            "sender_full_name": "Rowan Copley (he) (W1'18)",
            "sender_id": 134191,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Held-Karp algorithm",
            "submessages": [],
            "timestamp": 1544021695,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/c01fa66cd5fa025861dc065d5a18974f2806a9b3?x=x&version=5",
            "client": "ZulipElectron",
            "content": "<p>I've worked my way down from 20! but it's still a pretty large table. This is my reasoning:</p>\n<p>I am storing in a multidimensional array as follows:<br>\nPointData[source][destination]  -- where point stores things like the distance and end position.<br>\nI am using an encoding scheme where each bit represents a point ID, so 3 == points 1 &amp; 2, 4 == point 3. I am populating my table via a nested iteration, where the top iteration is the # of points, and the inner iteration is over all possible bit combinations for the number of points. </p>\n<p>My code is messy and buggy and I can't get it working, so I'm not sure I'm doing any of this right to begin with.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 150939507,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "avery.erwinmcguire@gmail.com",
            "sender_full_name": "Avery Erwin-McGuire (she) (S1'18)",
            "sender_id": 116351,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Held-Karp algorithm",
            "submessages": [],
            "timestamp": 1544026288,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/c01fa66cd5fa025861dc065d5a18974f2806a9b3?x=x&version=5",
            "client": "ZulipElectron",
            "content": "<p>I think the table size I've come to is (N * 2^N+1) when I work through it in my mind. (it's 2^N+1 instead of 2^N because we need to be able to handle all permutations of bits beneath the request point, when we handle the last point if we only support 2^N, it can't have any destinations)</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 150939739,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "avery.erwinmcguire@gmail.com",
            "sender_full_name": "Avery Erwin-McGuire (she) (S1'18)",
            "sender_id": 116351,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Held-Karp algorithm",
            "submessages": [],
            "timestamp": 1544026492,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/282da691709f4715fc3e0ff6bebd278b?d=identicon&version=1",
            "client": "website",
            "content": "<p>Cool, a table size of O(N*2^N) is what I was expecting.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 150947062,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "alan.m.odonnell@gmail.com",
            "sender_full_name": "Alan O'Donnell (he) (S1'19)",
            "sender_id": 813,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Held-Karp algorithm",
            "submessages": [],
            "timestamp": 1544032408,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/282da691709f4715fc3e0ff6bebd278b?d=identicon&version=1",
            "client": "website",
            "content": "<p>Sounds like you've already done this, but just in case, have you looked at the recursive/top-down dynamic programming version? I find that a lot easier to think about than starting with the table\u2014I start with the recursive/memoized version and then think, ok, how is this going to translate into something bottom-up.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 150947197,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "alan.m.odonnell@gmail.com",
            "sender_full_name": "Alan O'Donnell (he) (S1'19)",
            "sender_id": 813,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Held-Karp algorithm",
            "submessages": [],
            "timestamp": 1544032524,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/282da691709f4715fc3e0ff6bebd278b?d=identicon&version=1",
            "client": "website",
            "content": "<p>One other thing that might be helpful, depending on what language you're doing this in: could you start with an easier representation of those sets of point IDs? Your encoding sounds good but it's one extra thing to get right, and I can imagine that leading to pretty gnarly debugging...</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 150947643,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "alan.m.odonnell@gmail.com",
            "sender_full_name": "Alan O'Donnell (he) (S1'19)",
            "sender_id": 813,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Held-Karp algorithm",
            "submessages": [],
            "timestamp": 1544032845,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/282da691709f4715fc3e0ff6bebd278b?d=identicon&version=1",
            "client": "website",
            "content": "<p>Eh, maybe the encoding isn't so tricky. [I was intending to say, e.g. in Python, to use a frozenset or something\u2014disregard lol.]</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 150947828,
            "is_me_message": false,
            "last_edit_timestamp": 1544036546,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "alan.m.odonnell@gmail.com",
            "sender_full_name": "Alan O'Donnell (he) (S1'19)",
            "sender_id": 813,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Held-Karp algorithm",
            "submessages": [],
            "timestamp": 1544033045,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/c01fa66cd5fa025861dc065d5a18974f2806a9b3?x=x&version=5",
            "client": "ZulipElectron",
            "content": "<p>Hey I forgot to thanks for your help with this! It was good to get a confidence boost on me going in the right direction</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 151499701,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "avery.erwinmcguire@gmail.com",
            "sender_full_name": "Avery Erwin-McGuire (she) (S1'18)",
            "sender_id": 116351,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Held-Karp algorithm",
            "submessages": [],
            "timestamp": 1544585090,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/c01fa66cd5fa025861dc065d5a18974f2806a9b3?x=x&version=5",
            "client": "ZulipElectron",
            "content": "<p>so I'm running into another homework problem! I thought I would throw it up here while I'm wrestling with it in case anyone has a smart insight. I'm afraid I'm running really off base here. Basically, I have a robot which needs to traverse around obstacles to reach a destination. My current code does this pretty well with a subset of the problem:</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 151499963,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "avery.erwinmcguire@gmail.com",
            "sender_full_name": "Avery Erwin-McGuire (she) (S1'18)",
            "sender_id": 116351,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "A * search and navigating obstacles",
            "submessages": [],
            "timestamp": 1544585628,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/c01fa66cd5fa025861dc065d5a18974f2806a9b3?x=x&version=5",
            "client": "ZulipElectron",
            "content": "<p><a href=\"/user_uploads/13/rPCHENEEbrFNnc7qmrdTB4Xh/Screen-Shot-2018-12-11-at-10.30.19-PM.png\" target=\"_blank\" title=\"Screen-Shot-2018-12-11-at-10.30.19-PM.png\">Screen-Shot-2018-12-11-at-10.30.19-PM.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/13/rPCHENEEbrFNnc7qmrdTB4Xh/Screen-Shot-2018-12-11-at-10.30.19-PM.png\" target=\"_blank\" title=\"Screen-Shot-2018-12-11-at-10.30.19-PM.png\"><img src=\"/user_uploads/13/rPCHENEEbrFNnc7qmrdTB4Xh/Screen-Shot-2018-12-11-at-10.30.19-PM.png\"></a></div>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 151500005,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "avery.erwinmcguire@gmail.com",
            "sender_full_name": "Avery Erwin-McGuire (she) (S1'18)",
            "sender_id": 116351,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "A * search and navigating obstacles",
            "submessages": [],
            "timestamp": 1544585644,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/c01fa66cd5fa025861dc065d5a18974f2806a9b3?x=x&version=5",
            "client": "ZulipElectron",
            "content": "<p>I know in advance all of the obstacles, so as soon as we encounter one, I move to either edge of the obstacle, and proceed from there, following whichever path looks cheapest (scored  like A*, where we take into account both the distance of the line, and the distance from the goal). </p>\n<p>THIS is the part where my code blows up:</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 151500035,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "avery.erwinmcguire@gmail.com",
            "sender_full_name": "Avery Erwin-McGuire (she) (S1'18)",
            "sender_id": 116351,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "A * search and navigating obstacles",
            "submessages": [],
            "timestamp": 1544585713,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/c01fa66cd5fa025861dc065d5a18974f2806a9b3?x=x&version=5",
            "client": "ZulipElectron",
            "content": "<p><a href=\"/user_uploads/13/rOCYcqzOUfxzVdXXB8PzDR4x/Screen-Shot-2018-12-11-at-10.32.22-PM.png\" target=\"_blank\" title=\"Screen-Shot-2018-12-11-at-10.32.22-PM.png\">Screen-Shot-2018-12-11-at-10.32.22-PM.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/13/rOCYcqzOUfxzVdXXB8PzDR4x/Screen-Shot-2018-12-11-at-10.32.22-PM.png\" target=\"_blank\" title=\"Screen-Shot-2018-12-11-at-10.32.22-PM.png\"><img src=\"/user_uploads/13/rOCYcqzOUfxzVdXXB8PzDR4x/Screen-Shot-2018-12-11-at-10.32.22-PM.png\"></a></div>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 151500038,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "avery.erwinmcguire@gmail.com",
            "sender_full_name": "Avery Erwin-McGuire (she) (S1'18)",
            "sender_id": 116351,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "A * search and navigating obstacles",
            "submessages": [],
            "timestamp": 1544585720,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/c01fa66cd5fa025861dc065d5a18974f2806a9b3?x=x&version=5",
            "client": "ZulipElectron",
            "content": "<p>as soon as there is a cross, it tries to do the same thing, but then gets confused why it didn't help and keeps crashing back down through the initial obstacle again. Eventually it takes the ugly longer path, but it shouldn't!</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 151500094,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "avery.erwinmcguire@gmail.com",
            "sender_full_name": "Avery Erwin-McGuire (she) (S1'18)",
            "sender_id": 116351,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "A * search and navigating obstacles",
            "submessages": [],
            "timestamp": 1544585791,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/c01fa66cd5fa025861dc065d5a18974f2806a9b3?x=x&version=5",
            "client": "ZulipElectron",
            "content": "<p>Any bright ideas on how my little bot can figure out these weird corners? I started thinking about doing something where I store a stack of obstacles and consider these crossings \"nested obstacles\", or trying to scan in all directions to see what move is next, but my instincts told me I was going further off track.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 151500175,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "avery.erwinmcguire@gmail.com",
            "sender_full_name": "Avery Erwin-McGuire (she) (S1'18)",
            "sender_id": 116351,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "A * search and navigating obstacles",
            "submessages": [],
            "timestamp": 1544585942,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/7da8f8ef20569f6876aeb1188d2ebb6d41c6f842?x=x&version=2",
            "client": "ZulipElectron",
            "content": "<p>When you say that you know all of the obstacles in advance, do you mean you know the start and endpoints of every obstacle?</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 151500251,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "KeenanKomoto@gmail.com",
            "sender_full_name": "Keenan Tsuruichi Komoto (he) (F2'18)",
            "sender_id": 129934,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "A * search and navigating obstacles",
            "submessages": [],
            "timestamp": 1544586054,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/c01fa66cd5fa025861dc065d5a18974f2806a9b3?x=x&version=5",
            "client": "ZulipElectron",
            "content": "<p>yes</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 151500315,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "avery.erwinmcguire@gmail.com",
            "sender_full_name": "Avery Erwin-McGuire (she) (S1'18)",
            "sender_id": 116351,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "A * search and navigating obstacles",
            "submessages": [],
            "timestamp": 1544586177,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/c01fa66cd5fa025861dc065d5a18974f2806a9b3?x=x&version=5",
            "client": "ZulipElectron",
            "content": "<p>they are provided via an input file in the format (x1,y1)-(x2,y2)</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 151500323,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "avery.erwinmcguire@gmail.com",
            "sender_full_name": "Avery Erwin-McGuire (she) (S1'18)",
            "sender_id": 116351,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "A * search and navigating obstacles",
            "submessages": [],
            "timestamp": 1544586193,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/c01fa66cd5fa025861dc065d5a18974f2806a9b3?x=x&version=5",
            "client": "ZulipElectron",
            "content": "<p>However the request points are assigned dynamically at runtime</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 151500332,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "avery.erwinmcguire@gmail.com",
            "sender_full_name": "Avery Erwin-McGuire (she) (S1'18)",
            "sender_id": 116351,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "A * search and navigating obstacles",
            "submessages": [],
            "timestamp": 1544586232,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/c01fa66cd5fa025861dc065d5a18974f2806a9b3?x=x&version=5",
            "client": "ZulipElectron",
            "content": "<p>(the green X target in that drawing)</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 151500336,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "avery.erwinmcguire@gmail.com",
            "sender_full_name": "Avery Erwin-McGuire (she) (S1'18)",
            "sender_id": 116351,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "A * search and navigating obstacles",
            "submessages": [],
            "timestamp": 1544586240,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/7da8f8ef20569f6876aeb1188d2ebb6d41c6f842?x=x&version=2",
            "client": "ZulipElectron",
            "content": "<p>Is there a way you can track where you are currently at in order to figure out which obstacle you are tracing? That way you know the limits for your movements along that obstacle?</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 151500401,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "KeenanKomoto@gmail.com",
            "sender_full_name": "Keenan Tsuruichi Komoto (he) (F2'18)",
            "sender_id": 129934,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "A * search and navigating obstacles",
            "submessages": [],
            "timestamp": 1544586352,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/c01fa66cd5fa025861dc065d5a18974f2806a9b3?x=x&version=5",
            "client": "ZulipElectron",
            "content": "<p>I always know my current position, I store it locally in some data structures.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 151500452,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "avery.erwinmcguire@gmail.com",
            "sender_full_name": "Avery Erwin-McGuire (she) (S1'18)",
            "sender_id": 116351,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "A * search and navigating obstacles",
            "submessages": [],
            "timestamp": 1544586408,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/c01fa66cd5fa025861dc065d5a18974f2806a9b3?x=x&version=5",
            "client": "ZulipElectron",
            "content": "<p>My algorithm right now is pretty simple - it just keeps casting forward towards the request point, and if/when it collides with an obstacle, it walks to the end until it reaches that before returning to the request point. However, it never tries to remember previous obstacles, it only ever knows its current goal (get to the end of this line) and it's overall target (reach X,Y)</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 151500588,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "avery.erwinmcguire@gmail.com",
            "sender_full_name": "Avery Erwin-McGuire (she) (S1'18)",
            "sender_id": 116351,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "A * search and navigating obstacles",
            "submessages": [],
            "timestamp": 1544586610,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/c01fa66cd5fa025861dc065d5a18974f2806a9b3?x=x&version=5",
            "client": "ZulipElectron",
            "content": "<p>I suppose another option is to have a nested set of destination points, where you push in a destination on top when you collide with an obstacle,and pop it off when you reach the end.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 151500661,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "avery.erwinmcguire@gmail.com",
            "sender_full_name": "Avery Erwin-McGuire (she) (S1'18)",
            "sender_id": 116351,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "A * search and navigating obstacles",
            "submessages": [],
            "timestamp": 1544586771,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/7da8f8ef20569f6876aeb1188d2ebb6d41c6f842?x=x&version=2",
            "client": "ZulipMobile",
            "content": "<p>Sorry I think I was misunderstanding the issue you were having.. I\u2019m not sure of the best approach. Is this for finding a good path on the first try? Or finding the best path after multiple tries?</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 151500739,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "KeenanKomoto@gmail.com",
            "sender_full_name": "Keenan Tsuruichi Komoto (he) (F2'18)",
            "sender_id": 129934,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "A * search and navigating obstacles",
            "submessages": [],
            "timestamp": 1544586946,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/c01fa66cd5fa025861dc065d5a18974f2806a9b3?x=x&version=5",
            "client": "ZulipElectron",
            "content": "<p>best path across multiple tries</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 151500784,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "avery.erwinmcguire@gmail.com",
            "sender_full_name": "Avery Erwin-McGuire (she) (S1'18)",
            "sender_id": 116351,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "A * search and navigating obstacles",
            "submessages": [],
            "timestamp": 1544586994,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/c01fa66cd5fa025861dc065d5a18974f2806a9b3?x=x&version=5",
            "client": "ZulipElectron",
            "content": "<p>Sorry I wasn't very clear in explaining - I can calculate as many paths as I want, and then must select the best path. In advance I know my position and the terrain.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 151500864,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "avery.erwinmcguire@gmail.com",
            "sender_full_name": "Avery Erwin-McGuire (she) (S1'18)",
            "sender_id": 116351,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "A * search and navigating obstacles",
            "submessages": [],
            "timestamp": 1544587178,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/c01fa66cd5fa025861dc065d5a18974f2806a9b3?x=x&version=5",
            "client": "ZulipElectron",
            "content": "<p>I personally am calculating this by making a tree of elements I call  'movements', where each movement has a start and end position, and a predecessor. Every time an obstacle is hit by a movement, the movement becomes a branch and two new leaves sprout underneath - each leaf representing a movement from the collision point to the end of the obstacle. Every turn, all the leaves are evaluated and the one with the best score is explored.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 151500985,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "avery.erwinmcguire@gmail.com",
            "sender_full_name": "Avery Erwin-McGuire (she) (S1'18)",
            "sender_id": 116351,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "A * search and navigating obstacles",
            "submessages": [],
            "timestamp": 1544587341,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/c01fa66cd5fa025861dc065d5a18974f2806a9b3?x=x&version=5",
            "client": "ZulipElectron",
            "content": "<p>Eventually one of the leaves will result in a movement which hits no obstacle and has reached the target position, this leaf is then traversed back up to the root of the tree to determine what movements led to that position - those movements are then executed by the robot</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 151501002,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "avery.erwinmcguire@gmail.com",
            "sender_full_name": "Avery Erwin-McGuire (she) (S1'18)",
            "sender_id": 116351,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "A * search and navigating obstacles",
            "submessages": [],
            "timestamp": 1544587408,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/c01fa66cd5fa025861dc065d5a18974f2806a9b3?x=x&version=5",
            "client": "ZulipElectron",
            "content": "<p>I'm not married to this implementation (and have grown to hate it over the past few days). So I'm ready to tear it down if someone has a cleaner idea.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 151501040,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "avery.erwinmcguire@gmail.com",
            "sender_full_name": "Avery Erwin-McGuire (she) (S1'18)",
            "sender_id": 116351,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "A * search and navigating obstacles",
            "submessages": [],
            "timestamp": 1544587443,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/7da8f8ef20569f6876aeb1188d2ebb6d41c6f842?x=x&version=2",
            "client": "ZulipMobile",
            "content": "<p>I don\u2019t have any clever ideas for this problem, my first naive thought we be to take a Dijkstra\u2019s approach, but that would require generating the paths based on the obstacles.<br>\nI\u2019ll try to think of something better but sorry I don\u2019t have any clever ideas...</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 151501120,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "KeenanKomoto@gmail.com",
            "sender_full_name": "Keenan Tsuruichi Komoto (he) (F2'18)",
            "sender_id": 129934,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "A * search and navigating obstacles",
            "submessages": [],
            "timestamp": 1544587573,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/c01fa66cd5fa025861dc065d5a18974f2806a9b3?x=x&version=5",
            "client": "ZulipElectron",
            "content": "<p>don't be sorry! Rubberducking alone has been helpful!</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 151501178,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "avery.erwinmcguire@gmail.com",
            "sender_full_name": "Avery Erwin-McGuire (she) (S1'18)",
            "sender_id": 116351,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "A * search and navigating obstacles",
            "submessages": [],
            "timestamp": 1544587683,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/c01fa66cd5fa025861dc065d5a18974f2806a9b3?x=x&version=5",
            "client": "ZulipElectron",
            "content": "<p>I was initially doing dijkstra, but it felt like it was taking forever and some paths were leading into infinite loops.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 151501201,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "avery.erwinmcguire@gmail.com",
            "sender_full_name": "Avery Erwin-McGuire (she) (S1'18)",
            "sender_id": 116351,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "A * search and navigating obstacles",
            "submessages": [],
            "timestamp": 1544587716,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/c01fa66cd5fa025861dc065d5a18974f2806a9b3?x=x&version=5",
            "client": "ZulipElectron",
            "content": "<p>I feel like Dijkstra has some mechanisms to avoid that, but I didn't have the courage to look that up and try to apply it to this problem.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 151501256,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "avery.erwinmcguire@gmail.com",
            "sender_full_name": "Avery Erwin-McGuire (she) (S1'18)",
            "sender_id": 116351,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "A * search and navigating obstacles",
            "submessages": [],
            "timestamp": 1544587803,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/c01fa66cd5fa025861dc065d5a18974f2806a9b3?x=x&version=5",
            "client": "ZulipElectron",
            "content": "<p>I'm going to sleep on it and see if dream avery has any smart ideas, but from this side of the bed I think pushing and popping obstacles onto a stack feels like a promising direction to consider.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 151501284,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "avery.erwinmcguire@gmail.com",
            "sender_full_name": "Avery Erwin-McGuire (she) (S1'18)",
            "sender_id": 116351,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "A * search and navigating obstacles",
            "submessages": [],
            "timestamp": 1544587866,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/571b89a2b2bc0b41aaf28b6a11873fa06ce8f4d7?x=x&version=2",
            "client": "website",
            "content": "<p>i investigated something very similar to this in the past, happy to talk more about it in person/zulip if you'd like, but here's a good reference for one approach i liked: <a href=\"https://www.cs.cmu.edu/~motionplanning/lecture/Chap2-Bug-Alg_howie.pdf\" target=\"_blank\" title=\"https://www.cs.cmu.edu/~motionplanning/lecture/Chap2-Bug-Alg_howie.pdf\">https://www.cs.cmu.edu/~motionplanning/lecture/Chap2-Bug-Alg_howie.pdf</a> ... the naive bug nav algorithm they describe is you have your robot completely circumnavigate any obstacle it encounters, remembering the point on the obstacle that minimizes the distance to the goal and leaving the obstacle from there... this has a very bad average performance but removes all the bad worst cases... there are then various optimizations you can make from there</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 151502683,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "jven@jvenezue.la",
            "sender_full_name": "Justin Venezuela (he) (W1'18)",
            "sender_id": 134311,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "A * search and navigating obstacles",
            "submessages": [],
            "timestamp": 1544590307,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/c01fa66cd5fa025861dc065d5a18974f2806a9b3?x=x&version=5",
            "client": "ZulipMobile",
            "content": "<p>Awesome input Justin!</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 151503754,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "avery.erwinmcguire@gmail.com",
            "sender_full_name": "Avery Erwin-McGuire (she) (S1'18)",
            "sender_id": 116351,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "A * search and navigating obstacles",
            "submessages": [],
            "timestamp": 1544592130,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/c01fa66cd5fa025861dc065d5a18974f2806a9b3?x=x&version=5",
            "client": "ZulipElectron",
            "content": "<p>So my professor recommended a completely different approach which kind of blew my mind, I though I would mention it here in case anyone is curious</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 151576090,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "avery.erwinmcguire@gmail.com",
            "sender_full_name": "Avery Erwin-McGuire (she) (S1'18)",
            "sender_id": 116351,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "A * search and navigating obstacles",
            "submessages": [],
            "timestamp": 1544662810,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/c01fa66cd5fa025861dc065d5a18974f2806a9b3?x=x&version=5",
            "client": "ZulipElectron",
            "content": "<p><a href=\"/user_uploads/13/rt_JYhzGEtDaHnwERJ8kHaN6/Screen-Shot-2018-12-12-at-7.57.51-PM.png\" target=\"_blank\" title=\"Screen-Shot-2018-12-12-at-7.57.51-PM.png\">Screen-Shot-2018-12-12-at-7.57.51-PM.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/13/rt_JYhzGEtDaHnwERJ8kHaN6/Screen-Shot-2018-12-12-at-7.57.51-PM.png\" target=\"_blank\" title=\"Screen-Shot-2018-12-12-at-7.57.51-PM.png\"><img src=\"/user_uploads/13/rt_JYhzGEtDaHnwERJ8kHaN6/Screen-Shot-2018-12-12-at-7.57.51-PM.png\"></a></div>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 151576095,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "avery.erwinmcguire@gmail.com",
            "sender_full_name": "Avery Erwin-McGuire (she) (S1'18)",
            "sender_id": 116351,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "A * search and navigating obstacles",
            "submessages": [],
            "timestamp": 1544662825,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/c01fa66cd5fa025861dc065d5a18974f2806a9b3?x=x&version=5",
            "client": "ZulipElectron",
            "content": "<p>you start by taking the obstacles, and then generating all possible paths between the ends of the obstacles, which do not cross an obstacle</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 151576111,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "avery.erwinmcguire@gmail.com",
            "sender_full_name": "Avery Erwin-McGuire (she) (S1'18)",
            "sender_id": 116351,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "A * search and navigating obstacles",
            "submessages": [],
            "timestamp": 1544662849,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/c01fa66cd5fa025861dc065d5a18974f2806a9b3?x=x&version=5",
            "client": "ZulipElectron",
            "content": "<p><a href=\"/user_uploads/13/QpytwYgSxSbEgGAKYxgyY9_r/Screen-Shot-2018-12-12-at-7.58.52-PM.png\" target=\"_blank\" title=\"Screen-Shot-2018-12-12-at-7.58.52-PM.png\">Screen-Shot-2018-12-12-at-7.58.52-PM.png</a>  then you do the same thing, but with the origin and request point</p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/13/QpytwYgSxSbEgGAKYxgyY9_r/Screen-Shot-2018-12-12-at-7.58.52-PM.png\" target=\"_blank\" title=\"Screen-Shot-2018-12-12-at-7.58.52-PM.png\"><img src=\"/user_uploads/13/QpytwYgSxSbEgGAKYxgyY9_r/Screen-Shot-2018-12-12-at-7.58.52-PM.png\"></a></div>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 151576120,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "avery.erwinmcguire@gmail.com",
            "sender_full_name": "Avery Erwin-McGuire (she) (S1'18)",
            "sender_id": 116351,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "A * search and navigating obstacles",
            "submessages": [],
            "timestamp": 1544662863,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/c01fa66cd5fa025861dc065d5a18974f2806a9b3?x=x&version=5",
            "client": "ZulipElectron",
            "content": "<p><a href=\"/user_uploads/13/62Gbccbl0GNvU3DXfO6dcI8g/Screen-Shot-2018-12-12-at-7.59.24-PM.png\" target=\"_blank\" title=\"Screen-Shot-2018-12-12-at-7.59.24-PM.png\">Screen-Shot-2018-12-12-at-7.59.24-PM.png</a>  then you use an algorithm like dijkstra which give you the shortest path from this graph</p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/13/62Gbccbl0GNvU3DXfO6dcI8g/Screen-Shot-2018-12-12-at-7.59.24-PM.png\" target=\"_blank\" title=\"Screen-Shot-2018-12-12-at-7.59.24-PM.png\"><img src=\"/user_uploads/13/62Gbccbl0GNvU3DXfO6dcI8g/Screen-Shot-2018-12-12-at-7.59.24-PM.png\"></a></div>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 151576129,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "avery.erwinmcguire@gmail.com",
            "sender_full_name": "Avery Erwin-McGuire (she) (S1'18)",
            "sender_id": 116351,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "A * search and navigating obstacles",
            "submessages": [],
            "timestamp": 1544662891,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/c01fa66cd5fa025861dc065d5a18974f2806a9b3?x=x&version=5",
            "client": "ZulipElectron",
            "content": "<p>if any of you are curious about this, I will be focused on working on this tomorrow and would love to pair on it.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 151576207,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "avery.erwinmcguire@gmail.com",
            "sender_full_name": "Avery Erwin-McGuire (she) (S1'18)",
            "sender_id": 116351,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "A * search and navigating obstacles",
            "submessages": [],
            "timestamp": 1544663018,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/ca9f8cb0bcede6fa920c47295ad4e7a972c9f863?x=x&version=2",
            "client": "ZulipElectron",
            "content": "<p>What time should we do the Stanford final class on Sunday? AFAIK everyone will be on EST (<span class=\"user-mention\" data-user-id=\"130084\">@Sonja Lea Heinze (F2'18)</span> you will be in NYC b/c you're flying monday right?) Does maybe 2PM or so work for everyone (Please emote with <span class=\"emoji emoji-1f44d\" title=\"+1\">:+1:</span> to vote yes) Also will we be doing the final exam or the final week (week 6) together?</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 151842601,
            "is_me_message": false,
            "reactions": [
                {
                    "emoji_code": "1f44d",
                    "emoji_name": "+1",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "billy1kaplan@gmail.com",
                        "full_name": "Billy Kaplan (he) (W1'18)",
                        "id": 134184
                    },
                    "user_id": 134184
                }
            ],
            "recipient_id": 24954,
            "sender_email": "chunli.developer@gmail.com",
            "sender_full_name": "Chun Li (he) (F2'18)",
            "sender_id": 129956,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Stanford Algorithms Course",
            "submessages": [],
            "timestamp": 1544891099,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/4d02236bda71051fd87885a63cb27a5b?d=identicon&version=1",
            "client": "ZulipElectron",
            "content": "<p>(deleted)</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 152110830,
            "is_me_message": false,
            "last_edit_timestamp": 1545143059,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "sonjaleaheinze@gmail.com",
            "sender_full_name": "Sonja Lea Heinze (she) (F2'18)",
            "sender_id": 130084,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Stanford Algorithms Course",
            "submessages": [],
            "timestamp": 1545143017,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/4d02236bda71051fd87885a63cb27a5b?d=identicon&version=1",
            "client": "ZulipElectron",
            "content": "<p>What do you guys think about tomorrow or the day after tomorrow?</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 152110846,
            "is_me_message": false,
            "last_edit_timestamp": 1545143093,
            "reactions": [
                {
                    "emoji_code": "1f44d",
                    "emoji_name": "+1",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "chunli.developer@gmail.com",
                        "full_name": "Chun Li (he) (F2'18)",
                        "id": 129956
                    },
                    "user_id": 129956
                }
            ],
            "recipient_id": 24954,
            "sender_email": "sonjaleaheinze@gmail.com",
            "sender_full_name": "Sonja Lea Heinze (she) (F2'18)",
            "sender_id": 130084,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Stanford Algorithms Course",
            "submessages": [],
            "timestamp": 1545143036,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/fab048d6c3f7059f681e8e9595f05127?d=identicon&version=1",
            "client": "ZulipElectron",
            "content": "<p>I've been thinking about a Leetcode problem where you are tasked with writing a method to find combinations of some set of numbers that add up to a target sum. Any of the numbers in the set can also repeat. Here's the problem on leetcode: <a href=\"https://leetcode.com/problems/combination-sum/\" target=\"_blank\" title=\"https://leetcode.com/problems/combination-sum/\">https://leetcode.com/problems/combination-sum/</a></p>\n<p>One approach to the answer here is to use  backtracking, and I've got a working solution using that approach. But on Leetcode I always get a Time Limit Exceeded problem where the sum I'm trying to reach is particularly large. I'm wondering if anyone could suggest strategies for speeding things up. Or is this approach to the problem just bound to be too expensive? </p>\n<p>Here's the solution: </p>\n<div class=\"codehilite\"><pre><span></span>class Solution:\n    def combinationSum(self, candidates, target):\n        &quot;&quot;&quot;\n        :type candidates: List[int]\n        :type target: int\n        :rtype: List[List[int]]\n        &quot;&quot;&quot;\n        ans = []\n        path = []\n\n        def backtrack(numIdx, rem):\n          # print(&#39;bt -&gt; numIdx: {}, rem: {}, path: {}&#39;.format(numIdx, rem, path))\n          if rem == 0:\n            ans.append(path[:])\n          for x in range(numIdx, len(candidates)):\n            if candidates[x] &lt;= rem:\n              path.append(candidates[x])\n              backtrack(x, rem - candidates[x])\n              path.pop()\n\n        backtrack(0, target)\n        return ans\n</pre></div>\n\n\n<p>Any thoughts anyone?</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 154210711,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "ethanzanemiller@gmail.com",
            "sender_full_name": "Ethan Zane Miller (he) (F2'18)",
            "sender_id": 130321,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "combination sum problem",
            "submessages": [],
            "timestamp": 1546474841,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/725b72e62dee517d5a85bb050caf09b4a2ee775a?x=x&version=2",
            "client": "website",
            "content": "<p><span class=\"user-mention\" data-user-id=\"130321\">@Ethan Zane Miller (F2'18)</span> <span class=\"user-mention\" data-user-id=\"130447\">@Elisha White Atkinson (F2'18)</span>  <br>\nThis looks like a slight variation of the  coin denominations problem we discussed on sunday i think that same same DP solution can apply here, just all of the combinations of  numbers (coins) need to be returned.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 154211920,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "heime.a@gmail.com",
            "sender_full_name": "Heime S Ashkenazie (F2'18)",
            "sender_id": 130406,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "combination sum problem",
            "submessages": [],
            "timestamp": 1546476575,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/282da691709f4715fc3e0ff6bebd278b?d=identicon&version=1",
            "client": "website",
            "content": "<p><span class=\"user-mention\" data-user-id=\"130321\">@Ethan Zane Miller (F2'18)</span>, yeah, I imagine <span class=\"user-mention\" data-user-id=\"130406\">@Heime S Ashkenazie (F2'18)</span>'s suggestion is right (haven't implemented it yet). But for what it's worth, my naive recursive solution submits successfully, although it's not fast (only better than 14% of submissions).</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 154212838,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "alan.m.odonnell@gmail.com",
            "sender_full_name": "Alan O'Donnell (he) (S1'19)",
            "sender_id": 813,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "combination sum problem",
            "submessages": [],
            "timestamp": 1546477748,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/fab048d6c3f7059f681e8e9595f05127?d=identicon&version=1",
            "client": "ZulipElectron",
            "content": "<p><span class=\"user-mention\" data-user-id=\"130406\">@Heime S Ashkenazie (F2'18)</span> I'll give that a shot. <span class=\"user-mention\" data-user-id=\"813\">@Alan O'Donnell</span> interesting that your naive recursive solution worked. I wonder why. Maybe the problem with mine could be some of the array manipulation and copying...</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 154212984,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "ethanzanemiller@gmail.com",
            "sender_full_name": "Ethan Zane Miller (he) (F2'18)",
            "sender_id": 130321,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "combination sum problem",
            "submessages": [],
            "timestamp": 1546477928,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/e622b23d56ce1dbfd935c38e071636c4a40935e8?x=x&version=2",
            "client": "website",
            "content": "<p><span class=\"user-mention\" data-user-id=\"130321\">@Ethan Zane Miller (F2'18)</span> , in general, if you're doing DP, you probably also want to think about memoization to economize recursive calls (though I presume you may have already discussed this with <span class=\"user-mention\" data-user-id=\"130406\">@Heime S Ashkenazie (F2'18)</span>). In Python, you can use the <code>lru_cache()</code> decorator from the functools module.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 154224646,
            "is_me_message": false,
            "last_edit_timestamp": 1546499702,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "eha@posteo.de",
            "sender_full_name": "Eugene Ha (he) (S1'18)",
            "sender_id": 116366,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "combination sum problem",
            "submessages": [],
            "timestamp": 1546499659,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/89ca9a012749d846c25306ce17aebb57?d=identicon&version=1",
            "client": "website",
            "content": "<p><span class=\"user-mention\" data-user-id=\"130321\">@Ethan Zane Miller (F2'18)</span>  it's weird that you are getting a runtime exceeded error - when I submit your code, I get AC (all correct): <a href=\"http://i.imgur.com/eZ359Bp.png\" target=\"_blank\" title=\"http://i.imgur.com/eZ359Bp.png\">http://i.imgur.com/eZ359Bp.png</a></p>\n<div class=\"message_inline_image\"><a href=\"http://i.imgur.com/eZ359Bp.png\" target=\"_blank\" title=\"http://i.imgur.com/eZ359Bp.png\"><img src=\"https://uploads.zulipusercontent.net/a25d99a3d702cf94f79d28deda7c05f7a5bcf826/687474703a2f2f692e696d6775722e636f6d2f655a33353942702e706e67\"></a></div><p>For this problem, DP is of questionable value, since you need to return ALL possible solutions which grows exponentially, so it is natural that if you have a large number, the number of solutions will be huge.  If they were asking you to count solutions or find the solution with minimum number of coins, then DP would make more sense.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 154246615,
            "is_me_message": false,
            "last_edit_timestamp": 1546530058,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "okay.zed@gmail.com",
            "sender_full_name": "okay zed (S1'18)",
            "sender_id": 117513,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "combination sum problem",
            "submessages": [],
            "timestamp": 1546529971,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/fab048d6c3f7059f681e8e9595f05127?d=identicon&version=1",
            "client": "ZulipElectron",
            "content": "<p><span class=\"user-mention\" data-user-id=\"117513\">@okay zed (S1'18)</span> yeah, last night, I tried it again and it worked! Not sure what happened there. I did discover a DP solution here: <a href=\"https://leetcode.com/problems/combination-sum/discuss/169625/Python-DP-(11-lines)\" target=\"_blank\" title=\"https://leetcode.com/problems/combination-sum/discuss/169625/Python-DP-(11-lines)\">https://leetcode.com/problems/combination-sum/discuss/169625/Python-DP-(11-lines)</a></p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 154246819,
            "is_me_message": false,
            "reactions": [
                {
                    "emoji_code": "1f44d",
                    "emoji_name": "+1",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "okay.zed@gmail.com",
                        "full_name": "okay zed (S1'18)",
                        "id": 117513
                    },
                    "user_id": 117513
                }
            ],
            "recipient_id": 24954,
            "sender_email": "ethanzanemiller@gmail.com",
            "sender_full_name": "Ethan Zane Miller (he) (F2'18)",
            "sender_id": 130321,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "combination sum problem",
            "submessages": [],
            "timestamp": 1546530146,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/fab048d6c3f7059f681e8e9595f05127?d=identicon&version=1",
            "client": "ZulipElectron",
            "content": "<p>Basically, instead of placing a min count in the dp array, it keeps a list of combinations that worked at that previous sum. Then looking backward if there are existing solutions, it adds the current coin onto any existing solutions and adds those into the current sum.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 154247096,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "ethanzanemiller@gmail.com",
            "sender_full_name": "Ethan Zane Miller (he) (F2'18)",
            "sender_id": 130321,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "combination sum problem",
            "submessages": [],
            "timestamp": 1546530424,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/725b72e62dee517d5a85bb050caf09b4a2ee775a?x=x&version=2",
            "client": "website",
            "content": "<p><span class=\"emoji emoji-1f44d\" title=\"+1\">:+1:</span></p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 154247206,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "heime.a@gmail.com",
            "sender_full_name": "Heime S Ashkenazie (F2'18)",
            "sender_id": 130406,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "combination sum problem",
            "submessages": [],
            "timestamp": 1546530502,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/725b72e62dee517d5a85bb050caf09b4a2ee775a?x=x&version=2",
            "client": "website",
            "content": "<p>can u post your solution ?</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 154247223,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "heime.a@gmail.com",
            "sender_full_name": "Heime S Ashkenazie (F2'18)",
            "sender_id": 130406,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "combination sum problem",
            "submessages": [],
            "timestamp": 1546530525,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/89ca9a012749d846c25306ce17aebb57?d=identicon&version=1",
            "client": "website",
            "content": "<p><span class=\"user-mention\" data-user-id=\"130321\">@Ethan Zane Miller (F2'18)</span>  I implemented a version of that in python and it was slower than your backtracking version, probably because I was doing some bad array concats + extra cost of iterating over stored solutions: </p>\n<div class=\"codehilite\"><pre><span></span><span class=\"k\">class</span> <span class=\"nc\">Solution</span><span class=\"p\">:</span>\n    <span class=\"k\">def</span> <span class=\"nf\">combinationSum</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">candidates</span><span class=\"p\">,</span> <span class=\"n\">target</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">        :type candidates: List[int]</span>\n<span class=\"sd\">        :type target: int</span>\n<span class=\"sd\">        :rtype: List[List[int]]</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n<span class=\"c1\">#        ans = []</span>\n<span class=\"c1\">#        path = []</span>\n<span class=\"c1\">#</span>\n<span class=\"c1\">#        def backtrack(numIdx, rem):</span>\n<span class=\"c1\">#          # print(&#39;bt -&gt; numIdx: {}, rem: {}, path: {}&#39;.format(numIdx, rem, path))</span>\n<span class=\"c1\">#          if rem == 0:</span>\n<span class=\"c1\">#            ans.append(path[:])</span>\n<span class=\"c1\">#          for x in range(numIdx, len(candidates)):</span>\n<span class=\"c1\">#            if candidates[x] &lt;= rem:</span>\n<span class=\"c1\">#              path.append(candidates[x])</span>\n<span class=\"c1\">#              backtrack(x, rem - candidates[x])</span>\n<span class=\"c1\">#              path.pop()</span>\n<span class=\"c1\">#</span>\n<span class=\"c1\">#        backtrack(0, target)</span>\n<span class=\"c1\">#        return ans</span>\n\n        <span class=\"n\">cache</span> <span class=\"o\">=</span> <span class=\"p\">{}</span>\n        <span class=\"k\">def</span> <span class=\"nf\">backtrack2</span><span class=\"p\">(</span><span class=\"n\">numIdx</span><span class=\"p\">,</span> <span class=\"n\">rem</span><span class=\"p\">):</span>\n          <span class=\"c1\"># print(&#39;bt -&gt; numIdx: {}, rem: {}, path: {}&#39;.format(numIdx, rem, path))</span>\n          <span class=\"k\">if</span> <span class=\"n\">rem</span> <span class=\"o\">==</span> <span class=\"mi\">0</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"p\">[[]]</span>\n\n          <span class=\"n\">ck</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;</span><span class=\"si\">%s</span><span class=\"s2\">:</span><span class=\"si\">%s</span><span class=\"s2\">&quot;</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">numIdx</span><span class=\"p\">,</span> <span class=\"n\">rem</span><span class=\"p\">)</span>\n          <span class=\"k\">if</span> <span class=\"n\">ck</span> <span class=\"ow\">in</span> <span class=\"n\">cache</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"n\">cache</span><span class=\"p\">[</span><span class=\"n\">ck</span><span class=\"p\">]</span>\n\n          <span class=\"n\">ans</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n          <span class=\"k\">for</span> <span class=\"n\">x</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"n\">numIdx</span><span class=\"p\">,</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">candidates</span><span class=\"p\">)):</span>\n            <span class=\"k\">if</span> <span class=\"n\">candidates</span><span class=\"p\">[</span><span class=\"n\">x</span><span class=\"p\">]</span> <span class=\"o\">&lt;=</span> <span class=\"n\">rem</span><span class=\"p\">:</span>\n              <span class=\"k\">for</span> <span class=\"n\">a</span> <span class=\"ow\">in</span> <span class=\"n\">backtrack2</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">,</span> <span class=\"n\">rem</span> <span class=\"o\">-</span> <span class=\"n\">candidates</span><span class=\"p\">[</span><span class=\"n\">x</span><span class=\"p\">]):</span>\n                <span class=\"n\">ans</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">a</span> <span class=\"o\">+</span> <span class=\"p\">[</span><span class=\"n\">candidates</span><span class=\"p\">[</span><span class=\"n\">x</span><span class=\"p\">]])</span>\n\n          <span class=\"n\">cache</span><span class=\"p\">[</span><span class=\"n\">ck</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">ans</span>\n          <span class=\"k\">return</span> <span class=\"n\">ans</span>\n\n        <span class=\"k\">return</span> <span class=\"n\">backtrack2</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"n\">target</span><span class=\"p\">)</span>\n\n\n<span class=\"n\">s</span> <span class=\"o\">=</span> <span class=\"n\">Solution</span><span class=\"p\">()</span>\n<span class=\"n\">s</span><span class=\"o\">.</span><span class=\"n\">combinationSum</span><span class=\"p\">([</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">2</span><span class=\"p\">,</span><span class=\"mi\">3</span><span class=\"p\">,</span><span class=\"mi\">4</span><span class=\"p\">,</span><span class=\"mi\">5</span><span class=\"p\">],</span> <span class=\"mi\">100</span><span class=\"p\">)</span>\n</pre></div>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 154247603,
            "is_me_message": false,
            "last_edit_timestamp": 1546531416,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "okay.zed@gmail.com",
            "sender_full_name": "okay zed (S1'18)",
            "sender_id": 117513,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "combination sum problem",
            "submessages": [],
            "timestamp": 1546530853,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/89ca9a012749d846c25306ce17aebb57?d=identicon&version=1",
            "client": "website",
            "content": "<p>I tried out the submission you supplied, it's also much slower (about par with the code I pasted) at 1.7s (for [1,2,3,4,5], 100), while your code takes ~600ms</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 154248074,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "okay.zed@gmail.com",
            "sender_full_name": "okay zed (S1'18)",
            "sender_id": 117513,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "combination sum problem",
            "submessages": [],
            "timestamp": 1546531293,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/fab048d6c3f7059f681e8e9595f05127?d=identicon&version=1",
            "client": "ZulipElectron",
            "content": "<p>Oh interesting!</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 154412387,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "ethanzanemiller@gmail.com",
            "sender_full_name": "Ethan Zane Miller (he) (F2'18)",
            "sender_id": 130321,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "combination sum problem",
            "submessages": [],
            "timestamp": 1546612480,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/282da691709f4715fc3e0ff6bebd278b?d=identicon&version=1",
            "client": "website",
            "content": "<p>This made the rounds on Hacker News recently, but in case some of you hadn't seen it, it really is good: <a href=\"http://jeffe.cs.illinois.edu/teaching/algorithms/\" target=\"_blank\" title=\"http://jeffe.cs.illinois.edu/teaching/algorithms/\">http://jeffe.cs.illinois.edu/teaching/algorithms/</a>. His discussion of recursion reminds me of talking to folks about the \"recursive leap of faith\" back when I was at RC.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 154487985,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "alan.m.odonnell@gmail.com",
            "sender_full_name": "Alan O'Donnell (he) (S1'19)",
            "sender_id": 813,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Jeff Erickson's algo book",
            "submessages": [],
            "timestamp": 1546723347,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/fab048d6c3f7059f681e8e9595f05127?d=identicon&version=1",
            "client": "ZulipElectron",
            "content": "<p>I saw this too and read through one chapter. It's nicely written.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 154491272,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "ethanzanemiller@gmail.com",
            "sender_full_name": "Ethan Zane Miller (he) (F2'18)",
            "sender_id": 130321,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Jeff Erickson's algo book",
            "submessages": [],
            "timestamp": 1546730383,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/8f3e3f13689ac077fe4ae537e33bde345a57cb22?x=x&version=2",
            "client": "website",
            "content": "<p>I'm laughing out loud at the jokes and sharing them with my wife</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 154526522,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "recurse@ardent.nebcorp.com",
            "sender_full_name": "Joe Ardent (he) (SP1'17)",
            "sender_id": 9097,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Jeff Erickson's algo book",
            "submessages": [],
            "timestamp": 1546800297,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/8f3e3f13689ac077fe4ae537e33bde345a57cb22?x=x&version=2",
            "client": "website",
            "content": "<p>exercise 0 of chapter 0: \"Describe and analyze an efficient algorithm that determines, given a legal<br>\narrangement of standard pieces on a standard chess board, which player will<br>\nwin at chess from the given starting position if both players play perfectly.<br>\n[Hint: There is a trivial one-line solution!]\"</p>\n<p>I feel like that's less a hint than a cruel taunt.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 154530052,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "recurse@ardent.nebcorp.com",
            "sender_full_name": "Joe Ardent (he) (SP1'17)",
            "sender_id": 9097,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Jeff Erickson's algo book",
            "submessages": [],
            "timestamp": 1546806645,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/a5990ea1928ad47ec4fc3b7998607178?d=identicon&version=1",
            "client": "website",
            "content": "<p><code>print(\"white\")</code> ?</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 154530438,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "paul.gowder@gmail.com",
            "sender_full_name": "Paul Gowder (S2'17)",
            "sender_id": 101322,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Jeff Erickson's algo book",
            "submessages": [],
            "timestamp": 1546807466,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/8f3e3f13689ac077fe4ae537e33bde345a57cb22?x=x&version=2",
            "client": "website",
            "content": "<p>a cursory literature review didn't yield a definitive answer on the outcome of a perfectly played game</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 154532355,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "recurse@ardent.nebcorp.com",
            "sender_full_name": "Joe Ardent (he) (SP1'17)",
            "sender_id": 9097,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Jeff Erickson's algo book",
            "submessages": [],
            "timestamp": 1546811011,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/a960508c87bf58d79cfc08349bb003a1?d=identicon&version=1",
            "client": "website",
            "content": "<p>Possibly: whichever, if any, color has (unavoidable) mate in N moves from the starting position wins; otherwise draw?</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 154532777,
            "is_me_message": false,
            "reactions": [
                {
                    "emoji_code": "1179",
                    "emoji_name": "shruggies",
                    "reaction_type": "realm_emoji",
                    "user": {
                        "email": "recurse@ardent.nebcorp.com",
                        "full_name": "Joe Ardent (he) (SP1'17)",
                        "id": 9097
                    },
                    "user_id": 9097
                }
            ],
            "recipient_id": 24954,
            "sender_email": "noam.finkelstein@gmail.com",
            "sender_full_name": "Noam Finkelstein (S2'14)",
            "sender_id": 6184,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Jeff Erickson's algo book",
            "submessages": [],
            "timestamp": 1546811785,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/8f3e3f13689ac077fe4ae537e33bde345a57cb22?x=x&version=2",
            "client": "website",
            "content": "<blockquote>\n<p>Someone more entheogenically experienced than I might recognize these <em>Rekursionswichtelm\u00e4nner</em> as Terence McKenna\u2019s \u201cself-transforming machine elves\u201d.</p>\n</blockquote>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 154532856,
            "is_me_message": false,
            "last_edit_timestamp": 1546811979,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "recurse@ardent.nebcorp.com",
            "sender_full_name": "Joe Ardent (he) (SP1'17)",
            "sender_id": 9097,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Jeff Erickson's algo book",
            "submessages": [],
            "timestamp": 1546811963,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/8f3e3f13689ac077fe4ae537e33bde345a57cb22?x=x&version=2",
            "client": "website",
            "content": "<p>this is amazing</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 154532861,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "recurse@ardent.nebcorp.com",
            "sender_full_name": "Joe Ardent (he) (SP1'17)",
            "sender_id": 9097,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Jeff Erickson's algo book",
            "submessages": [],
            "timestamp": 1546811997,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/8f3e3f13689ac077fe4ae537e33bde345a57cb22?x=x&version=2",
            "client": "website",
            "content": "<p>I missed taking his class by like three years, and I'm retroactively regretting that.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 154533065,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "recurse@ardent.nebcorp.com",
            "sender_full_name": "Joe Ardent (he) (SP1'17)",
            "sender_id": 9097,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Jeff Erickson's algo book",
            "submessages": [],
            "timestamp": 1546812353,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/b2a6b06ba040fd7f7c2acd4d1440e7de?d=identicon&version=1",
            "client": "website",
            "content": "<p>In chapter 0, he emphasizes correctness and efficiency, which leads me to think that exercise 0 is like that Mencken misquote (\"For every complex problem there is an answer that is clear, simple, and wrong.\"). Or maybe it has to do with the fact that a standard chessboard has a constant size, and so \"try every possible game tree\" is an efficient algorithm by the standard (\"polynomial-time\") definition.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 154540873,
            "is_me_message": false,
            "last_edit_timestamp": 1546827010,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "mauricio@collares.org",
            "sender_full_name": "Mauricio Collares (he) (W2'19)",
            "sender_id": 158563,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Jeff Erickson's algo book",
            "submessages": [],
            "timestamp": 1546825985,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/89ca9a012749d846c25306ce17aebb57?d=identicon&version=1",
            "client": "website",
            "content": "<p>If there can be no draws, I think the code might look something like the following:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"n\">find_winner</span><span class=\"p\">(</span><span class=\"n\">player</span><span class=\"p\">,</span> <span class=\"n\">board</span><span class=\"p\">):</span>\n  <span class=\"k\">if</span> <span class=\"n\">can_take_king</span><span class=\"p\">(</span><span class=\"n\">player</span><span class=\"p\">,</span> <span class=\"n\">board</span><span class=\"p\">):</span>\n    <span class=\"k\">return</span> <span class=\"n\">player</span>\n\n  <span class=\"k\">for</span> <span class=\"n\">next_board</span> <span class=\"ow\">in</span> <span class=\"n\">available_moves</span><span class=\"p\">(</span><span class=\"n\">player</span><span class=\"p\">,</span> <span class=\"n\">board</span><span class=\"p\">):</span>\n    <span class=\"k\">if</span> <span class=\"n\">find_winner</span><span class=\"p\">(</span><span class=\"n\">other_player</span><span class=\"p\">,</span> <span class=\"n\">next_board</span><span class=\"p\">)</span> <span class=\"o\">==</span> <span class=\"n\">player</span><span class=\"p\">:</span>\n      <span class=\"k\">return</span> <span class=\"n\">player</span>\n\n  <span class=\"c1\"># if we have no way of winning, then we lose</span>\n  <span class=\"k\">return</span> <span class=\"n\">other_player</span>\n</pre></div>\n\n\n<p>this is similar to how we might calculate the winner of a nim game (or other simplified games). in essence: If we can't find a winning move, then we lose. (there also has to be code to store / memoize state so we don't go in an infinite loop)</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 154543186,
            "is_me_message": false,
            "last_edit_timestamp": 1546830314,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "okay.zed@gmail.com",
            "sender_full_name": "okay zed (S1'18)",
            "sender_id": 117513,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Jeff Erickson's algo book",
            "submessages": [],
            "timestamp": 1546830250,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/73c4ffbe7ffe7e39fa6a337f1945fc0c501db7f2?x=x&version=4",
            "client": "website",
            "content": "<p>I'd like to spend an hour or two daily on prepring for interviews and I might go over Elements of Programming subject by subject. It'd be nice to do this in a group. if anyone's interested, please lmk.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 154613032,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "sajjad.bashar@gmail.com",
            "sender_full_name": "Sajjad Bashardanesh (he) (W2'19)",
            "sender_id": 198447,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Interview Prep",
            "submessages": [],
            "timestamp": 1546907403,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/c01fa66cd5fa025861dc065d5a18974f2806a9b3?x=x&version=5",
            "client": "ZulipElectron",
            "content": "<p>Hey! I could use a turn in the right direction on this problem again / a fresh set of eyes if anybody is up to it. </p>\n<p>Here is my current issue: I have successfully completed the held-karp algorithm implementation. BUT, I implemented an open-tour, when a closed tour is needed. So my traveling salesman is in LA, and they need to be back in NY. I have been trying to figure out how to do this but I keep coming up blank. I think I've been looking at the problem for too long. </p>\n<p>Basically, I think arbitrarily adding an edge somewhere along the route would be sub-optimal as it would involve backtracking, and going purely from the final node in the open tour would also be sub-optimal as it could be an enormous distance. </p>\n<p>Really the algorithm should balance itself by considering the cost of whichever endpoint it comes to returning to the starting place. But my gut says this needs to be happening during the runtime of the algorithm while I am populating my data structure and not at the end once the shortest paths are computed.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 154613168,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "avery.erwinmcguire@gmail.com",
            "sender_full_name": "Avery Erwin-McGuire (she) (S1'18)",
            "sender_id": 116351,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Held-Karp algorithm",
            "submessages": [],
            "timestamp": 1546907569,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/282da691709f4715fc3e0ff6bebd278b?d=identicon&version=1",
            "client": "website",
            "content": "<p>So your salesman wound up doing a minimum-cost tour from NY to LA, but actually needs to wind up back in NY?</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 154615445,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "alan.m.odonnell@gmail.com",
            "sender_full_name": "Alan O'Donnell (he) (S1'19)",
            "sender_id": 813,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Held-Karp algorithm",
            "submessages": [],
            "timestamp": 1546910719,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/c01fa66cd5fa025861dc065d5a18974f2806a9b3?x=x&version=5",
            "client": "ZulipMobile",
            "content": "<p>Yes exactly</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 154615861,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "avery.erwinmcguire@gmail.com",
            "sender_full_name": "Avery Erwin-McGuire (she) (S1'18)",
            "sender_id": 116351,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Held-Karp algorithm",
            "submessages": [],
            "timestamp": 1546911297,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/c01fa66cd5fa025861dc065d5a18974f2806a9b3?x=x&version=5",
            "client": "ZulipMobile",
            "content": "<p>Also <span class=\"user-mention\" data-user-id=\"813\">@Alan O'Donnell</span> thanks for always being my saving angel on talking these problems out. Having an ear makes such a difference.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 154615889,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "avery.erwinmcguire@gmail.com",
            "sender_full_name": "Avery Erwin-McGuire (she) (S1'18)",
            "sender_id": 116351,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Held-Karp algorithm",
            "submessages": [],
            "timestamp": 1546911339,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/282da691709f4715fc3e0ff6bebd278b?d=identicon&version=1",
            "client": "website",
            "content": "<p>Yeah, definitely! Happy to help\u2014gotta remind myself how I was thinking about doing the problem last time...</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 154615970,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "alan.m.odonnell@gmail.com",
            "sender_full_name": "Alan O'Donnell (he) (S1'19)",
            "sender_id": 813,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Held-Karp algorithm",
            "submessages": [],
            "timestamp": 1546911436,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/282da691709f4715fc3e0ff6bebd278b?d=identicon&version=1",
            "client": "website",
            "content": "<p>I can't remember, did you say you had worked out the \"top-down\" recursive version of this? Where you just write out the recursion, without worrying about filling out tables in the right order, etc.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 154616051,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "alan.m.odonnell@gmail.com",
            "sender_full_name": "Alan O'Donnell (he) (S1'19)",
            "sender_id": 813,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Held-Karp algorithm",
            "submessages": [],
            "timestamp": 1546911552,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/282da691709f4715fc3e0ff6bebd278b?d=identicon&version=1",
            "client": "website",
            "content": "<p>I haven't actually implemented the bottom-up/table-y version yet, but the top-down recursion is very clean, so I wonder if it would help resolve the issue you're having.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 154616141,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "alan.m.odonnell@gmail.com",
            "sender_full_name": "Alan O'Donnell (he) (S1'19)",
            "sender_id": 813,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Held-Karp algorithm",
            "submessages": [],
            "timestamp": 1546911648,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/c01fa66cd5fa025861dc065d5a18974f2806a9b3?x=x&version=5",
            "client": "ZulipMobile",
            "content": "<p>Hm, I\u2019m trying to remember the distinction of the top-down vs bottom-up, but it\u2019s a pretty simple recursive algorithm where it will try to look up the distances in the table, and if they aren\u2019t there try every permutation of destination sequences (again trying to retrieve the saved destination at every step).</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 154616168,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "avery.erwinmcguire@gmail.com",
            "sender_full_name": "Avery Erwin-McGuire (she) (S1'18)",
            "sender_id": 116351,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Held-Karp algorithm",
            "submessages": [],
            "timestamp": 1546911703,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/c01fa66cd5fa025861dc065d5a18974f2806a9b3?x=x&version=5",
            "client": "ZulipMobile",
            "content": "<p>It does this by using a bitfield which corresponds to the cities being visited (0x101 would be visiting the first and third cities) and stores the length of that tour in a table at that index. So at the end the final distance is stored at 0x1111.... etc which means that every city has been visited</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 154616251,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "avery.erwinmcguire@gmail.com",
            "sender_full_name": "Avery Erwin-McGuire (she) (S1'18)",
            "sender_id": 116351,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Held-Karp algorithm",
            "submessages": [],
            "timestamp": 1546911811,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/c01fa66cd5fa025861dc065d5a18974f2806a9b3?x=x&version=5",
            "client": "ZulipMobile",
            "content": "<p>The table just being an array, table is not a proper name I suppose</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 154616311,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "avery.erwinmcguire@gmail.com",
            "sender_full_name": "Avery Erwin-McGuire (she) (S1'18)",
            "sender_id": 116351,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Held-Karp algorithm",
            "submessages": [],
            "timestamp": 1546911848,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/282da691709f4715fc3e0ff6bebd278b?d=identicon&version=1",
            "client": "website",
            "content": "<p>The way I'd describe the top-down version, just to see if we're on the same page, is (let's say I just need to output the cost, not the full path): let <code>cost(start, stops)</code> be the cost of a tour that starts at <code>start</code>, hits every stop in <code>stops</code>, and finishes in NY. The base case is <code>cost(start, [])</code>, which is the cost of the link <code>start-&gt;NY</code>; the non-base case is <code>cost(start, stops) = min_{over all start' in stops} { start-&gt;start' + cost(start', stops - [start'])</code>.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 154616398,
            "is_me_message": false,
            "last_edit_timestamp": 1546911999,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "alan.m.odonnell@gmail.com",
            "sender_full_name": "Alan O'Donnell (he) (S1'19)",
            "sender_id": 813,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Held-Karp algorithm",
            "submessages": [],
            "timestamp": 1546911972,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/282da691709f4715fc3e0ff6bebd278b?d=identicon&version=1",
            "client": "website",
            "content": "<p>Reading through your version.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 154616420,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "alan.m.odonnell@gmail.com",
            "sender_full_name": "Alan O'Donnell (he) (S1'19)",
            "sender_id": 813,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Held-Karp algorithm",
            "submessages": [],
            "timestamp": 1546912035,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/282da691709f4715fc3e0ff6bebd278b?d=identicon&version=1",
            "client": "website",
            "content": "<p>Ok I guess in your notation <code>stops</code> would be a bitfield.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 154616431,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "alan.m.odonnell@gmail.com",
            "sender_full_name": "Alan O'Donnell (he) (S1'19)",
            "sender_id": 813,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Held-Karp algorithm",
            "submessages": [],
            "timestamp": 1546912080,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/c01fa66cd5fa025861dc065d5a18974f2806a9b3?x=x&version=5",
            "client": "ZulipElectron",
            "content": "<p>yes exactly</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 154616473,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "avery.erwinmcguire@gmail.com",
            "sender_full_name": "Avery Erwin-McGuire (she) (S1'18)",
            "sender_id": 116351,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Held-Karp algorithm",
            "submessages": [],
            "timestamp": 1546912100,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/282da691709f4715fc3e0ff6bebd278b?d=identicon&version=1",
            "client": "website",
            "content": "<p>So what do you store when the bitfield is empty? E.g. the cost of being in DC, not needing to visit anything, and then having to go back to NY?</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 154616495,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "alan.m.odonnell@gmail.com",
            "sender_full_name": "Alan O'Donnell (he) (S1'19)",
            "sender_id": 813,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Held-Karp algorithm",
            "submessages": [],
            "timestamp": 1546912162,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/282da691709f4715fc3e0ff6bebd278b?d=identicon&version=1",
            "client": "website",
            "content": "<p>Mine says that cost should be the <code>DC-&gt;NY</code> edge.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 154616502,
            "is_me_message": false,
            "last_edit_timestamp": 1546912211,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "alan.m.odonnell@gmail.com",
            "sender_full_name": "Alan O'Donnell (he) (S1'19)",
            "sender_id": 813,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Held-Karp algorithm",
            "submessages": [],
            "timestamp": 1546912194,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/c01fa66cd5fa025861dc065d5a18974f2806a9b3?x=x&version=5",
            "client": "ZulipElectron",
            "content": "<p>Hm. I think I don't really consider the empty case. Let me check my code.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 154616558,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "avery.erwinmcguire@gmail.com",
            "sender_full_name": "Avery Erwin-McGuire (she) (S1'18)",
            "sender_id": 116351,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Held-Karp algorithm",
            "submessages": [],
            "timestamp": 1546912209,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/c01fa66cd5fa025861dc065d5a18974f2806a9b3?x=x&version=5",
            "client": "ZulipElectron",
            "content": "<p>Ah yes, it returns 0 for the distance if we are going nowhere, as it assumes we stop when we are out of positions. That's a very interesting place to plug a number in for my problem!</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 154616568,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "avery.erwinmcguire@gmail.com",
            "sender_full_name": "Avery Erwin-McGuire (she) (S1'18)",
            "sender_id": 116351,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Held-Karp algorithm",
            "submessages": [],
            "timestamp": 1546912258,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/282da691709f4715fc3e0ff6bebd278b?d=identicon&version=1",
            "client": "website",
            "content": "<p>Yeah, I want to say that that might be the issue :)</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 154616581,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "alan.m.odonnell@gmail.com",
            "sender_full_name": "Alan O'Donnell (he) (S1'19)",
            "sender_id": 813,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Held-Karp algorithm",
            "submessages": [],
            "timestamp": 1546912286,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/c01fa66cd5fa025861dc065d5a18974f2806a9b3?x=x&version=5",
            "client": "ZulipElectron",
            "content": "<p>Let me throw in a base distance to the 0th city and see where that chugs to, lemme try it now</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 154616588,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "avery.erwinmcguire@gmail.com",
            "sender_full_name": "Avery Erwin-McGuire (she) (S1'18)",
            "sender_id": 116351,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Held-Karp algorithm",
            "submessages": [],
            "timestamp": 1546912300,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/c01fa66cd5fa025861dc065d5a18974f2806a9b3?x=x&version=5",
            "client": "ZulipElectron",
            "content": "<p>wow that graph already looks 10x better, I think that might be it, awesome</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 154616643,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "avery.erwinmcguire@gmail.com",
            "sender_full_name": "Avery Erwin-McGuire (she) (S1'18)",
            "sender_id": 116351,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Held-Karp algorithm",
            "submessages": [],
            "timestamp": 1546912366,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/c01fa66cd5fa025861dc065d5a18974f2806a9b3?x=x&version=5",
            "client": "ZulipElectron",
            "content": "<p>I'll polish it and see if this is the final thing but I think you might have officially unblocked me :)</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 154616645,
            "is_me_message": false,
            "last_edit_timestamp": 1546912390,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "avery.erwinmcguire@gmail.com",
            "sender_full_name": "Avery Erwin-McGuire (she) (S1'18)",
            "sender_id": 116351,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Held-Karp algorithm",
            "submessages": [],
            "timestamp": 1546912370,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/c01fa66cd5fa025861dc065d5a18974f2806a9b3?x=x&version=5",
            "client": "ZulipElectron",
            "content": "<p><a href=\"/user_uploads/13/4fffg6uF_clx7pR5NH_AHKv3/Screen-Shot-2019-01-07-at-8.54.45-PM.png\" target=\"_blank\" title=\"Screen-Shot-2019-01-07-at-8.54.45-PM.png\">Screen-Shot-2019-01-07-at-8.54.45-PM.png</a>  looks excellent on a small datatset</p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/13/4fffg6uF_clx7pR5NH_AHKv3/Screen-Shot-2019-01-07-at-8.54.45-PM.png\" target=\"_blank\" title=\"Screen-Shot-2019-01-07-at-8.54.45-PM.png\"><img src=\"/user_uploads/13/4fffg6uF_clx7pR5NH_AHKv3/Screen-Shot-2019-01-07-at-8.54.45-PM.png\"></a></div>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 154616754,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "avery.erwinmcguire@gmail.com",
            "sender_full_name": "Avery Erwin-McGuire (she) (S1'18)",
            "sender_id": 116351,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Held-Karp algorithm",
            "submessages": [],
            "timestamp": 1546912510,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/282da691709f4715fc3e0ff6bebd278b?d=identicon&version=1",
            "client": "website",
            "content": "<p>Nice!</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 154616828,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "alan.m.odonnell@gmail.com",
            "sender_full_name": "Alan O'Donnell (he) (S1'19)",
            "sender_id": 813,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Held-Karp algorithm",
            "submessages": [],
            "timestamp": 1546912566,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/c01fa66cd5fa025861dc065d5a18974f2806a9b3?x=x&version=5",
            "client": "ZulipElectron",
            "content": "<p>Just checked it against the max required to be supported (20) and played around with the numbers and it looks great. Thanks again Alan, always a pleasure!</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 154617153,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "avery.erwinmcguire@gmail.com",
            "sender_full_name": "Avery Erwin-McGuire (she) (S1'18)",
            "sender_id": 116351,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Held-Karp algorithm",
            "submessages": [],
            "timestamp": 1546913074,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/c01fa66cd5fa025861dc065d5a18974f2806a9b3?x=x&version=5",
            "client": "ZulipElectron",
            "content": "<p>(also a quick shout out to <span class=\"user-mention\" data-user-id=\"129944\">@Maira Kodama (F2'18)</span> for helping me sort out the base case of this problem <span class=\"emoji emoji-1f603\" title=\"smiley\">:smiley:</span> )</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 154617288,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "avery.erwinmcguire@gmail.com",
            "sender_full_name": "Avery Erwin-McGuire (she) (S1'18)",
            "sender_id": 116351,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Held-Karp algorithm",
            "submessages": [],
            "timestamp": 1546913265,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/08dcfe30cf7f6b2fadc908e814a6472fd38b4a38?x=x&version=3",
            "client": "website",
            "content": "<blockquote>\n<blockquote>\n<p>Someone more entheogenically experienced than I might recognize these <em>Rekursionswichtelm\u00e4nner</em> as Terence McKenna\u2019s \u201cself-transforming machine elves\u201d.</p>\n</blockquote>\n</blockquote>\n<p>I lol'd so hard at this <span class=\"emoji emoji-1f602\" title=\"joy\">:joy:</span></p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 154630725,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "aissam.belhachmi@gmail.com",
            "sender_full_name": "Aissam Belhachmi (he) (F1'16)",
            "sender_id": 100040,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Jeff Erickson's algo book",
            "submessages": [],
            "timestamp": 1546936124,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/4d02236bda71051fd87885a63cb27a5b?d=identicon&version=1",
            "client": "ZulipElectron",
            "content": "<p>hey <span class=\"user-mention\" data-user-id=\"129926\">@Kat Kitay (F2'18)</span> , <span class=\"user-mention\" data-user-id=\"130326\">@Carl Schubert (F2'18)</span> , <span class=\"user-mention\" data-user-id=\"130447\">@Elisha White Atkinson (F2'18)</span> , <span class=\"user-mention\" data-user-id=\"134184\">@Billy Kaplan (W1'18)</span> , <span class=\"user-mention\" data-user-id=\"134599\">@Patrick McCarver (W1'18)</span> , <span class=\"user-mention\" data-user-id=\"129944\">@Maira Kodama (F2'18)</span>. How is everything going? :) <span class=\"user-mention\" data-user-id=\"129956\">@Chun Li (F2'18)</span>  and me want to finish that second algorithms class; so we want to skype (or hangout) twice, once for the questions of week 6 and once for the final exam. Is anyone down for joining? We've thought about skyping on Friday morning (your time, so for me afternoon). I've heard some folks in this world have a job though ;), so if you prefer the weekend, let us know.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 154729136,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "sonjaleaheinze@gmail.com",
            "sender_full_name": "Sonja Lea Heinze (she) (F2'18)",
            "sender_id": 130084,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Stanford Algorithms Course",
            "submessages": [],
            "timestamp": 1547045587,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/bc6286c5c5a6e0deebc5e020b6ed714ab40ecff3?x=x&version=3",
            "client": "website",
            "content": "<p>I would definitely to join to work on the last week. Friday morning also works for me.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 154746097,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "atkinson.eli@gmail.com",
            "sender_full_name": "Elisha White Atkinson (he) (F2'18)",
            "sender_id": 130447,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Stanford Algorithms Course",
            "submessages": [],
            "timestamp": 1547058591,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/4b802c55ae5fe3bdac9dc52be2a04b7f?d=identicon&version=1",
            "client": "website",
            "content": "<p>Hi, at least 2 of us will be learning some consensus algorithms beginning tomorrow. Check it out &amp; RSVP at <a href=\"https://recurse.com/calendar\" target=\"_blank\" title=\"https://recurse.com/calendar\">https://recurse.com/calendar</a></p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 154765478,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "tmg@fastmail.com",
            "sender_full_name": "Thomas Gardner (W2'19)",
            "sender_id": 198212,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Distributed Computing",
            "submessages": [],
            "timestamp": 1547075460,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/dd4431e3969ba21175d5ecbb361fed54e2c53c45?x=x&version=3",
            "client": "ZulipElectron",
            "content": "<p>Here are some other great distributed systems papers: <a href=\"https://blog.acolyer.org/2015/03/01/cant-we-all-just-agree/\" target=\"_blank\" title=\"https://blog.acolyer.org/2015/03/01/cant-we-all-just-agree/\">https://blog.acolyer.org/2015/03/01/cant-we-all-just-agree/</a></p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 154768651,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "lee@leesharma.com",
            "sender_full_name": "Lee Sharma (she) (W2'19)",
            "sender_id": 158531,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Distributed Computing",
            "submessages": [],
            "timestamp": 1547079424,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/dd4431e3969ba21175d5ecbb361fed54e2c53c45?x=x&version=3",
            "client": "ZulipElectron",
            "content": "<p>Also, the Raft visualization resources are amazing: <a href=\"https://raft.github.io/\" target=\"_blank\" title=\"https://raft.github.io/\">https://raft.github.io/</a></p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 154769354,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "lee@leesharma.com",
            "sender_full_name": "Lee Sharma (she) (W2'19)",
            "sender_id": 158531,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Distributed Computing",
            "submessages": [],
            "timestamp": 1547080188,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/787f392240856522f98bd4d40db71ec20edb3d2e?x=x&version=3",
            "client": "ZulipElectron",
            "content": "<p>Hi Sonja!, I could maybe do early afternoon on Friday (although I haven't done the videos for week 6 yet so I dunno if I'd get around to that or not)</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 154820604,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "pmmhy4@mst.edu",
            "sender_full_name": "Patrick McCarver (they/he) (SP1'19)",
            "sender_id": 134599,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Stanford Algorithms Course",
            "submessages": [],
            "timestamp": 1547103720,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/4d02236bda71051fd87885a63cb27a5b?d=identicon&version=1",
            "client": "ZulipElectron",
            "content": "<p>Hey! On Friday I'm only free till about 7:30pm my time; I think that is 1:30pm NY time. Is that too early for you, Patrick? If so, what do you think about moving this to Saturday? For me Saturday anytime before midnight (so 6pm for you guys) would work. Would that also be ok for you, Chun and Eli?</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 154827583,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "sonjaleaheinze@gmail.com",
            "sender_full_name": "Sonja Lea Heinze (she) (F2'18)",
            "sender_id": 130084,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Stanford Algorithms Course",
            "submessages": [],
            "timestamp": 1547113707,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/8f95e07c22da0d35f4c212cad4a019f097d690e1?x=x&version=1",
            "client": "ZulipElectron",
            "content": "<p>I'm having a look at the overall architecture of a thread string sorting algorithm I wrote, with the intention of 1. Understanding what I did, 2. Possibly coming up with an alternative approach (the intention here is to make it possible to split the problem into smaller, independent parts).  I'd be interested in pairing on this one, if anyones keen?  I've never really dabbled in architecture before, so please pair with me if you haven't heard of threading, if you don't know anything about string algorithms, if you don't know anything about huge data, or you're an expert in all of those :)</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 154854570,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "isla.carson@hotmail.co.uk",
            "sender_full_name": "Isla Carson (she) (W2'19)",
            "sender_id": 100044,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Algorithm Architecture",
            "submessages": [],
            "timestamp": 1547139942,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/bc6286c5c5a6e0deebc5e020b6ed714ab40ecff3?x=x&version=3",
            "client": "website",
            "content": "<p>Saturday works for me too, as long as we finish by around 5, (UTC 11pm?)</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 154879263,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "atkinson.eli@gmail.com",
            "sender_full_name": "Elisha White Atkinson (he) (F2'18)",
            "sender_id": 130447,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Stanford Algorithms Course",
            "submessages": [],
            "timestamp": 1547161071,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/f83d5d9f19871f4495712dd83a28ae5c?d=identicon&version=1",
            "client": "ZulipMobile",
            "content": "<p>What language are you working in? Did you mean to write \"threaded string sorting\" algorithm? What are the thread strings?</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 154925848,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "tenorbiel@gmail.com",
            "sender_full_name": "Tenor Tenor (they/he) (m4'19)",
            "sender_id": 158532,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Algorithm Architecture",
            "submessages": [],
            "timestamp": 1547222034,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/ca9f8cb0bcede6fa920c47295ad4e7a972c9f863?x=x&version=2",
            "client": "ZulipElectron",
            "content": "<p>yea sat works for me</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 154927805,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "chunli.developer@gmail.com",
            "sender_full_name": "Chun Li (he) (F2'18)",
            "sender_id": 129956,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Stanford Algorithms Course",
            "submessages": [],
            "timestamp": 1547223842,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/8f95e07c22da0d35f4c212cad4a019f097d690e1?x=x&version=1",
            "client": "ZulipElectron",
            "content": "<p>Hi <span class=\"user-mention\" data-user-id=\"158532\">@Tenor (W2'19)</span> , I'm working in C++, but the idea is to focus on architecture / design of the algorithm only.   It is a string sorting algorithm that uses threading to provide a speed boost <span class=\"emoji emoji-263a\" title=\"smile\">:smile:</span></p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 154940973,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "isla.carson@hotmail.co.uk",
            "sender_full_name": "Isla Carson (she) (W2'19)",
            "sender_id": 100044,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Algorithm Architecture",
            "submessages": [],
            "timestamp": 1547235442,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/bc6286c5c5a6e0deebc5e020b6ed714ab40ecff3?x=x&version=3",
            "client": "website",
            "content": "<p>Should we set a time for Saturday, like 12:00 ET?</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 154965527,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "atkinson.eli@gmail.com",
            "sender_full_name": "Elisha White Atkinson (he) (F2'18)",
            "sender_id": 130447,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Stanford Algorithms Course",
            "submessages": [],
            "timestamp": 1547262466,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/1316da00218a425032fe2e4a5a1bf125?d=identicon&version=1",
            "client": "website",
            "content": "<p>Hi Sonja! Sorry, I've been sick and super behind on Zulip. Did this end up happening today?</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 154997764,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "billy1kaplan@gmail.com",
            "sender_full_name": "Billy Kaplan (he) (W1'18)",
            "sender_id": 134184,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Stanford Algorithms Course",
            "submessages": [],
            "timestamp": 1547323601,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/ca9f8cb0bcede6fa920c47295ad4e7a972c9f863?x=x&version=2",
            "client": "ZulipElectron",
            "content": "<p>not to my knowledge</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 155013021,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "chunli.developer@gmail.com",
            "sender_full_name": "Chun Li (he) (F2'18)",
            "sender_id": 129956,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Stanford Algorithms Course",
            "submessages": [],
            "timestamp": 1547351215,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/4b802c55ae5fe3bdac9dc52be2a04b7f?d=identicon&version=1",
            "client": "website",
            "content": "<p><a href=\"https://blog.acolyer.org/2015/03/03/the-part-time-parliament/\" target=\"_blank\" title=\"https://blog.acolyer.org/2015/03/03/the-part-time-parliament/\">https://blog.acolyer.org/2015/03/03/the-part-time-parliament/</a></p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 155048261,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "tmg@fastmail.com",
            "sender_full_name": "Thomas Gardner (W2'19)",
            "sender_id": 198212,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Distributed Computing",
            "submessages": [],
            "timestamp": 1547416986,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/f83d5d9f19871f4495712dd83a28ae5c?d=identicon&version=1",
            "client": "website",
            "content": "<p>Have you found anybody to pair with? I've got time after 2:30ish</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 155105853,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "tenorbiel@gmail.com",
            "sender_full_name": "Tenor Tenor (they/he) (m4'19)",
            "sender_id": 158532,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Algorithm Architecture",
            "submessages": [],
            "timestamp": 1547491403,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/8f95e07c22da0d35f4c212cad4a019f097d690e1?x=x&version=1",
            "client": "website",
            "content": "<p>Hey! No, but I'd like to postpone til next week.  I'm trying to get the storage format of my data down right now, which has become a priority!  Let's catch up next Monday? <span class=\"emoji emoji-263a\" title=\"smile\">:smile:</span></p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 155106428,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "isla.carson@hotmail.co.uk",
            "sender_full_name": "Isla Carson (she) (W2'19)",
            "sender_id": 100044,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Algorithm Architecture",
            "submessages": [],
            "timestamp": 1547491815,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/f83d5d9f19871f4495712dd83a28ae5c?d=identicon&version=1",
            "client": "website",
            "content": "<p>ok cool</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 155106479,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "tenorbiel@gmail.com",
            "sender_full_name": "Tenor Tenor (they/he) (m4'19)",
            "sender_id": 158532,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Algorithm Architecture",
            "submessages": [],
            "timestamp": 1547491845,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/8ec0ac61efa8cf07f7427726bc602b5b?d=identicon&version=1",
            "client": "ZulipElectron",
            "content": "<p>Paxos homework from Columbia's distributed computing course: <a href=\"https://columbia.github.io/ds1-class/homeworks/Assignment3/\" target=\"_blank\" title=\"https://columbia.github.io/ds1-class/homeworks/Assignment3/\">https://columbia.github.io/ds1-class/homeworks/Assignment3/</a></p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 155290895,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "nikhil.benesch@gmail.com",
            "sender_full_name": "Nikhil Benesch (he) (W2'19)",
            "sender_id": 198449,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Distributed Computing",
            "submessages": [],
            "timestamp": 1547675109,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/4b802c55ae5fe3bdac9dc52be2a04b7f?d=identicon&version=1",
            "client": "website",
            "content": "<p>Hi friends, we are starting the Raft paper tomorrow. You can find it at <a href=\"https://raft.github.io\" target=\"_blank\" title=\"https://raft.github.io\">https://raft.github.io</a></p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 155291658,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "tmg@fastmail.com",
            "sender_full_name": "Thomas Gardner (W2'19)",
            "sender_id": 198212,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Distributed Computing",
            "submessages": [],
            "timestamp": 1547675671,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/15f1d27c330f216d0d1722411c39ef187d2b5943?x=x&version=2",
            "client": "website",
            "content": "<p>Is there a cryptopals for algorithms? - I need a refresher</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 155367977,
            "is_me_message": false,
            "last_edit_timestamp": 1547758296,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "meredith@paom.com",
            "sender_full_name": "Meredith Finkelstein (W2'19)",
            "sender_id": 198453,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "learning",
            "submessages": [],
            "timestamp": 1547758257,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/89ca9a012749d846c25306ce17aebb57?d=identicon&version=1",
            "client": "website",
            "content": "<p>I've started reading one lecture per week from <a href=\"https://timroughgarden.org/notes.html\" target=\"_blank\" title=\"https://timroughgarden.org/notes.html\">https://timroughgarden.org/notes.html</a>, they supply lecture notes and external resources.  I work through the lecture notes and then note down areas that i'm not understanding and look into them further / ask questions until I feel like I have a good enough basis to implement the topic in the lecture. </p>\n<p>For now, I've been studying with a friend over IRC, but if anyone is interested, I'd be down to trade notes and questions. My plan is to work through one lecture every monday at 9-11AM PST. This week was about Consistent hashing (used in Akamai CDNs), next week is about count-min sketches - everyone's favorite probabilistic data structure (outside of bloom filters)</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 155369832,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "okay.zed@gmail.com",
            "sender_full_name": "okay zed (S1'18)",
            "sender_id": 117513,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Modern Algorithmic Toolbox (roughgarden & valiant)",
            "submessages": [],
            "timestamp": 1547759672,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/cbcb9589503e23026f6e55769709dc6a43465431?x=x&version=2",
            "client": "ZulipElectron",
            "content": "<p>Not the first to think of this of course, but you can use a quickcheck style tester (I use hypothesis on python) to easily verify data structure and algorithm implementations without any extra work, since it generates all the data and comes up with weird edge cases you should handle but didn't think of.</p>\n<p>Very handy for interview practice, since you can use the slow but obviously correct algorithm as an oracle to generate test cases for the fast but unproven algorithm.</p>\n<p>## Examples</p>\n<ul>\n<li>sort algorithm: <code>my_sort(xs) == sorted(xs)</code>  </li>\n<li>inorder traversal: <code>inorder(tree) == sorted(to_list(tree))</code></li>\n<li>palindrome : <code>is_pal(xs) == is_pal(rev(xs))</code></li>\n<li>reversal <code>rev(rev(xs)) == xs</code></li>\n<li>quickselect <code>select(xs, k) == sorted(xs)[k]</code></li>\n</ul>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 156353653,
            "is_me_message": false,
            "reactions": [
                {
                    "emoji_code": "1f604",
                    "emoji_name": "big_smile",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "okay.zed@gmail.com",
                        "full_name": "okay zed (S1'18)",
                        "id": 117513
                    },
                    "user_id": 117513
                }
            ],
            "recipient_id": 24954,
            "sender_email": "alokbeniwal@gmail.com",
            "sender_full_name": "Alok Singh (S1'17)",
            "sender_id": 101076,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "quickchek for testing algorithms and data structures",
            "submessages": [],
            "timestamp": 1547802174,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/4b802c55ae5fe3bdac9dc52be2a04b7f?d=identicon&version=1",
            "client": "website",
            "content": "<p>This seems like a nice selection. Are there any exercises?</p>\n<p>Also, +1 for the self-signed cert</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 156487928,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "tmg@fastmail.com",
            "sender_full_name": "Thomas Gardner (W2'19)",
            "sender_id": 198212,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Modern Algorithmic Toolbox (roughgarden & valiant)",
            "submessages": [],
            "timestamp": 1548002143,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/89ca9a012749d846c25306ce17aebb57?d=identicon&version=1",
            "client": "website",
            "content": "<p>There are! <a href=\"http://web.stanford.edu/class/cs168/index.html\" target=\"_blank\" title=\"http://web.stanford.edu/class/cs168/index.html\">http://web.stanford.edu/class/cs168/index.html</a> - the page is pretty hard to find from the original one, but it has mini-projects and supplementary reading materials - I've had to bookmark it twice</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 156503583,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "okay.zed@gmail.com",
            "sender_full_name": "okay zed (S1'18)",
            "sender_id": 117513,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Modern Algorithmic Toolbox (roughgarden & valiant)",
            "submessages": [],
            "timestamp": 1548028045,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/4b802c55ae5fe3bdac9dc52be2a04b7f?d=identicon&version=1",
            "client": "website",
            "content": "<p>Hello #algorithms,</p>\n<p>A few of us in the current batch have been working through the [Georgetown undergrad course]. We're looking for tips to understand how using the accounting method for amortized analysis can lead to O(lg(n)) bounds. </p>\n<p>Looking for more context? check out the 3rd problem set.</p>\n<p>[Georgetown undergrad course]: <a href=\"http://people.cs.georgetown.edu/~cnewport/teaching/cosc240-fall18/\" target=\"_blank\" title=\"http://people.cs.georgetown.edu/~cnewport/teaching/cosc240-fall18/\">http://people.cs.georgetown.edu/~cnewport/teaching/cosc240-fall18/</a></p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 156805504,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "tmg@fastmail.com",
            "sender_full_name": "Thomas Gardner (W2'19)",
            "sender_id": 198212,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "undergrad algos",
            "submessages": [],
            "timestamp": 1548363253,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/b2a6b06ba040fd7f7c2acd4d1440e7de?d=identicon&version=1",
            "client": "website",
            "content": "<p>So, <span class=\"user-mention\" data-user-id=\"158649\">@Cory Forsyth (W2'19)</span> and I were discussing this and we think something like this works: If we make the i-th student pay 2 * lg(i) + 4, then the students with i &gt;= n/2 alone are enough to pay for everyone's moves: They'll pay at least n/2 * (2 * lg(n/2) + 4) in total (which is n * (lg(n) + 1)), and since each person moves at most lg(n) times, each person costs at most lg(n) + 1.</p>\n<p>This is a little bit wasteful, since we throw away the first half of the payments, lower bound the second half of the payments and upper bound each person's cost, but it simplifies the analysis. To be fair, I don't know enough about the terminology to say if this is an application of the accounting method, but at least it gives a somewhat natural O(log n) bound.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 156807658,
            "is_me_message": false,
            "last_edit_timestamp": 1548366529,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "mauricio@collares.org",
            "sender_full_name": "Mauricio Collares (he) (W2'19)",
            "sender_id": 158563,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "undergrad algos",
            "submessages": [],
            "timestamp": 1548365128,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/4b802c55ae5fe3bdac9dc52be2a04b7f?d=identicon&version=1",
            "client": "website",
            "content": "<p>The distributed computing (&amp; other topics) talk last night briefly touched on the origin of CRDTs. Amazon's Dynamo paper or the Shapiro et al. paper seems like a natural place to kick things off.</p>\n<p>--<br>\n[Dynamo]: <a href=\"https://www.allthingsdistributed.com/2007/10/amazons_dynamo.html\" target=\"_blank\" title=\"https://www.allthingsdistributed.com/2007/10/amazons_dynamo.html\">https://www.allthingsdistributed.com/2007/10/amazons_dynamo.html</a><br>\n[Shapiro]: <a href=\"https://link.springer.com/chapter/10.1007%2F978-3-642-24550-3_29\" target=\"_blank\" title=\"https://link.springer.com/chapter/10.1007%2F978-3-642-24550-3_29\">https://link.springer.com/chapter/10.1007%2F978-3-642-24550-3_29</a></p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 156871586,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "tmg@fastmail.com",
            "sender_full_name": "Thomas Gardner (W2'19)",
            "sender_id": 198212,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Distributed Computing",
            "submessages": [],
            "timestamp": 1548440081,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/89ca9a012749d846c25306ce17aebb57?d=identicon&version=1",
            "client": "website",
            "content": "<p>There's an accounting method that uses 3 tokens and O(1) time -  the lg(N) answer seems more difficult to come up with</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 156880524,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "okay.zed@gmail.com",
            "sender_full_name": "okay zed (S1'18)",
            "sender_id": 117513,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "undergrad algos",
            "submessages": [],
            "timestamp": 1548446684,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/b2a6b06ba040fd7f7c2acd4d1440e7de?d=identicon&version=1",
            "client": "ZulipMobile",
            "content": "<p><a href=\"https://bioinf.me/en/contest\" target=\"_blank\" title=\"https://bioinf.me/en/contest\">https://bioinf.me/en/contest</a></p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 157354563,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "mauricio@collares.org",
            "sender_full_name": "Mauricio Collares (he) (W2'19)",
            "sender_id": 158563,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Bioinformatics Contest",
            "submessages": [],
            "timestamp": 1549029821,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/ab772058030721ef1c85f4d7692609dc?d=identicon&version=1",
            "client": "ZulipMobile",
            "content": "<p>Probably that will be interesting for <span class=\"user-mention\" data-user-id=\"100044\">@Isla Jean Carson (W2'19)</span></p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 157357710,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "hola@michelletorres.mx",
            "sender_full_name": "Michelle Torres (she) (W2'19)",
            "sender_id": 198461,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Bioinformatics Contest",
            "submessages": [],
            "timestamp": 1549032622,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/8f95e07c22da0d35f4c212cad4a019f097d690e1?x=x&version=1",
            "client": "ZulipElectron",
            "content": "<p>Yes!  Thanks <span class=\"user-mention\" data-user-id=\"198461\">@Michelle Torres (W2'19)</span>!  I think they do something like this every year - I've just never had the time to do it before!</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 157383455,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "isla.carson@hotmail.co.uk",
            "sender_full_name": "Isla Carson (she) (W2'19)",
            "sender_id": 100044,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Bioinformatics Contest",
            "submessages": [],
            "timestamp": 1549053144,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/8f95e07c22da0d35f4c212cad4a019f097d690e1?x=x&version=1",
            "client": "ZulipElectron",
            "content": "<p>Solving as many as possible in 24 hours sounds horrendous though...  Why do they never do something more manageable like 8 hours??</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 157383530,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "isla.carson@hotmail.co.uk",
            "sender_full_name": "Isla Carson (she) (W2'19)",
            "sender_id": 100044,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Bioinformatics Contest",
            "submessages": [],
            "timestamp": 1549053217,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/772419261815796fcbed195f9871885315f4b5c6?x=x&version=4",
            "client": "website",
            "content": "<p>I'm down to do the qualifying problems though! Would you be interested <span class=\"user-mention\" data-user-id=\"100044\">@Isla Jean Carson (W2'19)</span> ?</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 157385623,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "ebalczewski@gmail.com",
            "sender_full_name": "Emily Ann Balczewski (she) (W1'18)",
            "sender_id": 134389,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Bioinformatics Contest",
            "submessages": [],
            "timestamp": 1549054997,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/8f95e07c22da0d35f4c212cad4a019f097d690e1?x=x&version=1",
            "client": "ZulipElectron",
            "content": "<p>Yes! Definitely <span aria-label=\"grinning\" class=\"emoji emoji-1f600\" role=\"img\" title=\"grinning\">:grinning:</span>  I just had a look at the final problem sets from other years, and decided that I'll give that round a miss.  But I'm keen to do the qualifying problems <span aria-label=\"smile\" class=\"emoji emoji-263a\" role=\"img\" title=\"smile\">:smile:</span></p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 157386310,
            "is_me_message": false,
            "last_edit_timestamp": 1549055540,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "isla.carson@hotmail.co.uk",
            "sender_full_name": "Isla Carson (she) (W2'19)",
            "sender_id": 100044,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Bioinformatics Contest",
            "submessages": [],
            "timestamp": 1549055531,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/baf638546edafe27d0eeb3964ce8d33d268047f6?x=x&version=2",
            "client": "website",
            "content": "<p>I'm preparing a lunch and learn presentation for my job on erasure coding. I feel like I am missing something w.r.t to fountain codes, they are supposed to be awesome because you can generate an infinite number of code words where any subset can be used to construct the  original message. Couldn't I just do this Reed Solomon (simple encoding) style using a polynomial like a straight line and keep generating an infinite number of points on the line with my message encoded in the coefficients of the lines equations (any 2 points is enough to get the message)?  <span class=\"user-mention\" data-user-id=\"125145\">@Aaron Wood (F1'18)</span>  maybe you know whats up here</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 157480022,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "connor.stein2@gmail.com",
            "sender_full_name": "Connor Stein (F1'18)",
            "sender_id": 125761,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Reed Solomon vs Fountain Codes",
            "submessages": [],
            "timestamp": 1549221323,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/282da691709f4715fc3e0ff6bebd278b?d=identicon&version=1",
            "client": "website",
            "content": "<p>Seems like a really fun algorithms channel so far: <a href=\"https://www.youtube.com/channel/UCBLr7ISa_YDy5qeATupf26w\" target=\"_blank\" title=\"https://www.youtube.com/channel/UCBLr7ISa_YDy5qeATupf26w\">https://www.youtube.com/channel/UCBLr7ISa_YDy5qeATupf26w</a></p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 157482650,
            "is_me_message": false,
            "reactions": [
                {
                    "emoji_code": "1f44d",
                    "emoji_name": "+1",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "stanley@zheng.nyc",
                        "full_name": "Stanley Zheng (they) (W1'19)",
                        "id": 100315
                    },
                    "user_id": 100315
                }
            ],
            "recipient_id": 24954,
            "sender_email": "alan.m.odonnell@gmail.com",
            "sender_full_name": "Alan O'Donnell (he) (S1'19)",
            "sender_id": 813,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Fun youtube channel",
            "submessages": [],
            "timestamp": 1549226145,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/70201dad8f30b376c8e9f8ede010e43b63266850?x=x&version=6",
            "client": "website",
            "content": "<p>.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 157550847,
            "is_me_message": false,
            "last_edit_timestamp": 1605721470,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "stanley@zheng.nyc",
            "sender_full_name": "Stanley Zheng (they) (W1'19)",
            "sender_id": 100315,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Fun youtube channel",
            "submessages": [],
            "timestamp": 1549309546,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/38f320cd24a45f367ed2485034b90adb46a9d738?x=x&version=2",
            "client": "website",
            "content": "<p>tagging <span class=\"user-mention\" data-user-id=\"130181\">@Gretchen Wright (F2'18)</span>!</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 157552820,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "asinghamgoodwin@gmail.com",
            "sender_full_name": "Alicia Thilani Singham Goodwin (she) (F1'16)",
            "sender_id": 8469,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Bioinformatics Contest",
            "submessages": [],
            "timestamp": 1549310919,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/bb49f6dc0cbf74b53eeaeada58fb416f?d=identicon&version=1",
            "client": "website",
            "content": "<p>Not quite as practical, but just as fun. Stanford just released  bunch of <a href=\"https://www.youtube.com/playlist?list=PL94E35692EB9D36F3\" target=\"_blank\" title=\"https://www.youtube.com/playlist?list=PL94E35692EB9D36F3\">Don Knuth's lectures</a>. Everything from TeX classes in the 80's to his yearly christmas tree lectures.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 157559334,
            "is_me_message": false,
            "reactions": [
                {
                    "emoji_code": "1f389",
                    "emoji_name": "tada",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "vicmiclovich@gmail.com",
                        "full_name": "Victor Miclovich (W'14)",
                        "id": 5073
                    },
                    "user_id": 5073
                },
                {
                    "emoji_code": "1f389",
                    "emoji_name": "tada",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "stanley@zheng.nyc",
                        "full_name": "Stanley Zheng (they) (W1'19)",
                        "id": 100315
                    },
                    "user_id": 100315
                },
                {
                    "emoji_code": "1f389",
                    "emoji_name": "tada",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "mauricio@collares.org",
                        "full_name": "Mauricio Collares (he) (W2'19)",
                        "id": 158563
                    },
                    "user_id": 158563
                },
                {
                    "emoji_code": "1f389",
                    "emoji_name": "tada",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "meredith@paom.com",
                        "full_name": "Meredith Finkelstein (W2'19)",
                        "id": 198453
                    },
                    "user_id": 198453
                }
            ],
            "recipient_id": 24954,
            "sender_email": "alexanderjyeh@gmail.com",
            "sender_full_name": "Alex Yeh (he) (W2'19)",
            "sender_id": 158528,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Fun youtube channel",
            "submessages": [],
            "timestamp": 1549316256,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/60979a0768c8c0ea6765445dc03d366cafce730b?x=x&version=1",
            "client": "ZulipElectron",
            "content": "<p>Hey folks. Maybe one of you can share some tips. I have a bit of a dilemma. I started teaching a coding class to a group of ladies in my home town in Stockholm. However, due to the fact that I've been working jobs that involved higher level abstractions e.g. running <code>npm install X</code> for what you want or <code>pip install Y</code> and then reading docs, etc. Part of our curriculum is to prepare these ladies for interviews but I feel so rusty when it comes to coding a breadth-first search or a great many algorithms. How do you cope with such situations without affecting performance at your normal job?<br>\n Thanks a bunch. Hack on!! <span aria-label=\"rock on\" class=\"emoji emoji-1f918\" role=\"img\" title=\"rock on\">:rock_on:</span></p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 163180596,
            "is_me_message": false,
            "last_edit_timestamp": 1555068775,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "vicmiclovich@gmail.com",
            "sender_full_name": "Victor Miclovich (W'14)",
            "sender_id": 5073,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Keeping up with algorithms",
            "submessages": [],
            "timestamp": 1555068391,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/26fa664d693a3fa50e6b1431b777a8d27015fbdc?x=x&version=2",
            "client": "website",
            "content": "<p>For a project at work, I needed to divide N numbers into S equally-sized buckets, which I soon learned is a variation on the <a href=\"https://en.wikipedia.org/wiki/Partition_problem\" target=\"_blank\" title=\"https://en.wikipedia.org/wiki/Partition_problem\">partition problem</a>. After doing some research I implemented a greedy approach in javascript, which I published here <a href=\"https://observablehq.com/@anbnyc/partitioning\" target=\"_blank\" title=\"https://observablehq.com/@anbnyc/partitioning\">https://observablehq.com/@anbnyc/partitioning</a> -- feel free to use, share, or offer suggestions on how to improve!</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 163595722,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "alecbarrett@gmail.com",
            "sender_full_name": "Alec Barrett (he) (W2'17)",
            "sender_id": 100451,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Partition problem",
            "submessages": [],
            "timestamp": 1555531059,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/68c07aa24ae39681409794daff1a921b08e5e324?x=x&version=2",
            "client": "website",
            "content": "<p><span class=\"user-mention\" data-user-id=\"100451\">@Alec Barrett (W2'17)</span> this is really cool! You should submit it to Joy of Computing! :) <a href=\"http://joy.recurse.com\" target=\"_blank\" title=\"http://joy.recurse.com\">joy.recurse.com</a></p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 163596265,
            "is_me_message": false,
            "reactions": [
                {
                    "emoji_code": "1f44d",
                    "emoji_name": "+1",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "alecbarrett@gmail.com",
                        "full_name": "Alec Barrett (he) (W2'17)",
                        "id": 100451
                    },
                    "user_id": 100451
                }
            ],
            "recipient_id": 24954,
            "sender_email": "james@recurse.com",
            "sender_full_name": "James J. Porter (he) (S'13)",
            "sender_id": 2113,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Partition problem",
            "submessages": [],
            "timestamp": 1555531449,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/b6389a3870b2757624fefd85d08b75b08f6dc815?x=x&version=2",
            "client": "website",
            "content": "<p>You can also adapt it to solve Project Euler Problem 23 if you like those sorts of puzzles: <a href=\"https://projecteuler.net/problem=23\" target=\"_blank\" title=\"https://projecteuler.net/problem=23\">https://projecteuler.net/problem=23</a></p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 163597686,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "robert@schuessler.org",
            "sender_full_name": "Robert Schuessler (W1'17)",
            "sender_id": 103047,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Partition problem",
            "submessages": [],
            "timestamp": 1555532707,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/26fa664d693a3fa50e6b1431b777a8d27015fbdc?x=x&version=2",
            "client": "website",
            "content": "<p>thanks I'll check it out</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 163599686,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "alecbarrett@gmail.com",
            "sender_full_name": "Alec Barrett (he) (W2'17)",
            "sender_id": 100451,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Partition problem",
            "submessages": [],
            "timestamp": 1555534239,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/ed08506a2165a36be3ed28630ff49cc8?d=identicon&version=1",
            "client": "website",
            "content": "<p>I have a project at work where I am trying to help users query their data. Each table has N columns, and we also support nested grouping such as bucketing. The queries we are most focused on use 2-4 columns, so to build recommendations we have a possibility space of N permuted by [2,3,4]. Any advice on thinking about this problem? I'm not sure what words to use to describe it.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 163806645,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "wylieconlon@gmail.com",
            "sender_full_name": "Wylie Conlon (he) (F2'18)",
            "sender_id": 130475,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Querying a combinatoric possibility space?",
            "submessages": [],
            "timestamp": 1555772405,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/ed08506a2165a36be3ed28630ff49cc8?d=identicon&version=1",
            "client": "website",
            "content": "<p>For example, one of my coworkers is convinced that this is a problem that can be solved with Datalog. But that would imply first generating, then inserting, this combinatoric information into a database, only to query it.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 163814468,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "wylieconlon@gmail.com",
            "sender_full_name": "Wylie Conlon (he) (F2'18)",
            "sender_id": 130475,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Querying a combinatoric possibility space?",
            "submessages": [],
            "timestamp": 1555786056,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/9c4af750426d3bf0c15347009913c0323596658f?x=x&version=2",
            "client": "ZulipElectron",
            "content": "<p>If you have the time, could you explain the problem a little more? I'm doubtful of my ability to contribute to a solution, but I'd like to know more about how this works.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 163862874,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "katelaurel@gmail.com",
            "sender_full_name": "Kate-Laurel Agnew (she) (SP2'19)",
            "sender_id": 215254,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Querying a combinatoric possibility space?",
            "submessages": [],
            "timestamp": 1555872487,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/282da691709f4715fc3e0ff6bebd278b?d=identicon&version=1",
            "client": "website",
            "content": "<p>Yeah, how is this stuff stored now? Not in a database? I'm also trying to parse \"N permuted by [2,3,4]\" and not quite sure what you mean\u2014are you saying any given query uses 2-4 out of the N columns? I'm assuming the order you specify the columns in a query doesn't really matter, so would it be more accurate to talk about combinations/choices versus permutations? (Choices as in \"n choose k\" in combinatorics-terminology.)</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 163863055,
            "is_me_message": false,
            "reactions": [
                {
                    "emoji_code": "2795",
                    "emoji_name": "plus",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "katelaurel@gmail.com",
                        "full_name": "Kate-Laurel Agnew (she) (SP2'19)",
                        "id": 215254
                    },
                    "user_id": 215254
                }
            ],
            "recipient_id": 24954,
            "sender_email": "alan.m.odonnell@gmail.com",
            "sender_full_name": "Alan O'Donnell (he) (S1'19)",
            "sender_id": 813,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Querying a combinatoric possibility space?",
            "submessages": [],
            "timestamp": 1555872855,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/282da691709f4715fc3e0ff6bebd278b?d=identicon&version=1",
            "client": "website",
            "content": "<p>I feel like my question here indicates that I'm not understanding your usecase :) but assuming the data is in a sql database, what goes wrong if you just query it \"normally\", in sql, not worrying about any combinatorics issues?</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 163863129,
            "is_me_message": false,
            "reactions": [
                {
                    "emoji_code": "2795",
                    "emoji_name": "plus",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "katelaurel@gmail.com",
                        "full_name": "Kate-Laurel Agnew (she) (SP2'19)",
                        "id": 215254
                    },
                    "user_id": 215254
                }
            ],
            "recipient_id": 24954,
            "sender_email": "alan.m.odonnell@gmail.com",
            "sender_full_name": "Alan O'Donnell (he) (S1'19)",
            "sender_id": 813,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Querying a combinatoric possibility space?",
            "submessages": [],
            "timestamp": 1555872993,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/282da691709f4715fc3e0ff6bebd278b?d=identicon&version=1",
            "client": "website",
            "content": "<p>Ah, maybe in order to do recommendations, you're talking about needing to do a bunch of these queries ahead of time, all at once?</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 163863205,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "alan.m.odonnell@gmail.com",
            "sender_full_name": "Alan O'Donnell (he) (S1'19)",
            "sender_id": 813,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Querying a combinatoric possibility space?",
            "submessages": [],
            "timestamp": 1555873181,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/ed08506a2165a36be3ed28630ff49cc8?d=identicon&version=1",
            "client": "website",
            "content": "<p>Thanks for these questions! :) To give more context on the problem:</p>\n<ul>\n<li>The use case is data visualization for Elasticsearch, and because it's potentially a lot of data, the frontend/client uses column metadata for building queries. Just name and data type for now.</li>\n<li>Order matters because of nesting and aggregation, like in SQL this would be nested SELECTs with each level adding only one column.</li>\n<li>There are some sub-problems that seem graph-like, which is why I was asking about Datalog:</li>\n<li>1) Given the current combination of columns and functions, what are all valid transitions?</li>\n<li>2) Given the current combination of columns and functions, and a new column, what is the best place to put the new column and what function should be called on it? (recommendation)</li>\n</ul>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 163865742,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "wylieconlon@gmail.com",
            "sender_full_name": "Wylie Conlon (he) (F2'18)",
            "sender_id": 130475,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Querying a combinatoric possibility space?",
            "submessages": [],
            "timestamp": 1555877753,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/ed08506a2165a36be3ed28630ff49cc8?d=identicon&version=1",
            "client": "website",
            "content": "<p>I'm mostly looking for ideas on how to represent what I'm thinking of as a \"graph of possible queries and ways of visualizing said queries\"</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 163865976,
            "is_me_message": false,
            "last_edit_timestamp": 1555878099,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "wylieconlon@gmail.com",
            "sender_full_name": "Wylie Conlon (he) (F2'18)",
            "sender_id": 130475,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Querying a combinatoric possibility space?",
            "submessages": [],
            "timestamp": 1555878086,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/4e3ad19c8c76fd5ffa14d009874e410f724244e5?x=x&version=2",
            "client": "ZulipMobile",
            "content": "<p>Are you trying to make something like <a href=\"http://idl.cs.washington.edu/papers/voyager/\" target=\"_blank\" title=\"http://idl.cs.washington.edu/papers/voyager/\">http://idl.cs.washington.edu/papers/voyager/</a> ? If there\u2019s a concrete example you could share I think that would help me a great deal in understanding what you\u2019re looking for.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 163879981,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "holtchesley+rc@gmail.com",
            "sender_full_name": "Brennan Holt Chesley (S2'17)",
            "sender_id": 101377,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Querying a combinatoric possibility space?",
            "submessages": [],
            "timestamp": 1555902443,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/ed08506a2165a36be3ed28630ff49cc8?d=identicon&version=1",
            "client": "ZulipElectron",
            "content": "<p>Yes, Voyager and CompassQL are similar, but one of the techniques used in Vega is to do everything in memory- we can't do that here. Also, there's a different set of functions/grouping techniques available in Elasticsearch</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 163880315,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "wylieconlon@gmail.com",
            "sender_full_name": "Wylie Conlon (he) (F2'18)",
            "sender_id": 130475,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Querying a combinatoric possibility space?",
            "submessages": [],
            "timestamp": 1555903050,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/ed08506a2165a36be3ed28630ff49cc8?d=identicon&version=1",
            "client": "ZulipMobile",
            "content": "<p>Maybe the property of having rules for validity and needing to get possible solutions makes this a good fit for Prolog or ASP?</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 163883091,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "wylieconlon@gmail.com",
            "sender_full_name": "Wylie Conlon (he) (F2'18)",
            "sender_id": 130475,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Querying a combinatoric possibility space?",
            "submessages": [],
            "timestamp": 1555908181,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/4d074af6cc341ef51b25bb2f738cdb11?d=identicon&version=1",
            "client": "website",
            "content": "<p>Can you use an SMT solver?</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 163906813,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "vaibhavsagar@gmail.com",
            "sender_full_name": "Vaibhav Sagar (he) (F1'16)",
            "sender_id": 100041,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Querying a combinatoric possibility space?",
            "submessages": [],
            "timestamp": 1555942789,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/ed08506a2165a36be3ed28630ff49cc8?d=identicon&version=1",
            "client": "website",
            "content": "<p>I'm not sure I can- one of the constraints is that this should be run in a browser</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 163909970,
            "is_me_message": false,
            "reactions": [
                {
                    "emoji_code": "1f914",
                    "emoji_name": "thinking",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "vaibhavsagar@gmail.com",
                        "full_name": "Vaibhav Sagar (he) (F1'16)",
                        "id": 100041
                    },
                    "user_id": 100041
                }
            ],
            "recipient_id": 24954,
            "sender_email": "wylieconlon@gmail.com",
            "sender_full_name": "Wylie Conlon (he) (F2'18)",
            "sender_id": 130475,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Querying a combinatoric possibility space?",
            "submessages": [],
            "timestamp": 1555945493,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/35b3dd041c2567b833c606d756846322e514b0b4?x=x&version=1",
            "client": "website",
            "content": "<p>Just saw this list-shuffling algorithm on StackOverflow. Assign each list member a random float in [0, 1), then sort them using that number as a key.<br>\nMy math chops aren't all that great, can anyone help me understand whether this is a uniform way to shuffle a list?</p>\n<p>I would assume that uniformity means all possible orderings are equally likely. Intuitively it's not totally clear to me that this would work, since once you have two members assigned numbers that are very close together, those two members will very likely be \"stuck\" together in order. But perhaps this isn't a problem, since any number chosen could just have easily have been assigned to any list member.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 165564601,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "max.blum@gmail.com",
            "sender_full_name": "Max Blum-Campo (he) (F1'14)",
            "sender_id": 6429,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Shuffling a list",
            "submessages": [],
            "timestamp": 1557778471,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/8ef0cc9607b07f392f70560a43dbbb2d0efd6328?x=x&version=1",
            "client": "website",
            "content": "<p>Yeah, that should be uniform</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 165575405,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "brian.kihoon.lee@gmail.com",
            "sender_full_name": "Brian Lee (F1'16)",
            "sender_id": 100043,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Shuffling a list",
            "submessages": [],
            "timestamp": 1557786878,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/8ef0cc9607b07f392f70560a43dbbb2d0efd6328?x=x&version=1",
            "client": "website",
            "content": "<p>I think the key here is exchangability - there's no way to distinguish the list of random numbers generated for [a1, a2, a3...] from a list of random numbers generated for [a2, a1, a3...]</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 165575446,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "brian.kihoon.lee@gmail.com",
            "sender_full_name": "Brian Lee (F1'16)",
            "sender_id": 100043,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Shuffling a list",
            "submessages": [],
            "timestamp": 1557786924,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/282da691709f4715fc3e0ff6bebd278b?d=identicon&version=1",
            "client": "website",
            "content": "<p>Related reading about generating random floats in [0, 1): <a href=\"https://lemire.me/blog/2017/02/28/how-many-floating-point-numbers-are-in-the-interval-01/\" target=\"_blank\" title=\"https://lemire.me/blog/2017/02/28/how-many-floating-point-numbers-are-in-the-interval-01/\">https://lemire.me/blog/2017/02/28/how-many-floating-point-numbers-are-in-the-interval-01/</a></p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 165626094,
            "is_me_message": false,
            "last_edit_timestamp": 1557843826,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "alan.m.odonnell@gmail.com",
            "sender_full_name": "Alan O'Donnell (he) (S1'19)",
            "sender_id": 813,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Shuffling a list",
            "submessages": [],
            "timestamp": 1557843580,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/c7ebd3309ffcd0641d2959640c8f7582ca3e57fd?x=x&version=2",
            "client": "website",
            "content": "<p>This is fun =&gt; <a href=\"https://www.youtube.com/watch?v=kPRA0W1kECg\" target=\"_blank\" title=\"https://www.youtube.com/watch?v=kPRA0W1kECg\">https://www.youtube.com/watch?v=kPRA0W1kECg</a></p>\n<div class=\"youtube-video message_inline_image\"><a data-id=\"kPRA0W1kECg\" href=\"https://www.youtube.com/watch?v=kPRA0W1kECg\" target=\"_blank\" title=\"https://www.youtube.com/watch?v=kPRA0W1kECg\"><img src=\"https://i.ytimg.com/vi/kPRA0W1kECg/default.jpg\"></a></div>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 166664299,
            "is_me_message": false,
            "reactions": [
                {
                    "emoji_code": "1f631",
                    "emoji_name": "scream",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "michael@fekadu.com",
                        "full_name": "Michael Fekadu (he) (S2'19)",
                        "id": 228092
                    },
                    "user_id": 228092
                },
                {
                    "emoji_code": "1f631",
                    "emoji_name": "scream",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "katz.stephenj@gmail.com",
                        "full_name": "Steve Katz (he) (F'13)",
                        "id": 2872
                    },
                    "user_id": 2872
                },
                {
                    "emoji_code": "1f631",
                    "emoji_name": "scream",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "rekhviasnino@gmail.com",
                        "full_name": "Nino Rekhviashvili (she/they) (SP1'19)",
                        "id": 203433
                    },
                    "user_id": 203433
                },
                {
                    "emoji_code": "1f631",
                    "emoji_name": "scream",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "zach@zachkrall.com",
                        "full_name": "Zach Krall (he) (S1'19)",
                        "id": 221810
                    },
                    "user_id": 221810
                }
            ],
            "recipient_id": 24954,
            "sender_email": "berniesnell@gmail.com",
            "sender_full_name": "Bernie Snell (she) (S1'19)",
            "sender_id": 222090,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Visual Sorting Algorithms",
            "submessages": [],
            "timestamp": 1558991331,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/4401c7ea9c62aa8e62f7c8907b1db771?d=identicon&version=1",
            "client": "website",
            "content": "<p>Related: <a href=\"https://www.youtube.com/user/AlgoRythmics\" target=\"_blank\" title=\"https://www.youtube.com/user/AlgoRythmics\">https://www.youtube.com/user/AlgoRythmics</a></p>\n<div class=\"youtube-video message_inline_image\"><a data-id=\"user\" href=\"https://www.youtube.com/user/AlgoRythmics\" target=\"_blank\" title=\"https://www.youtube.com/user/AlgoRythmics\"><img src=\"https://i.ytimg.com/vi/user/default.jpg\"></a></div>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 166755570,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "katz.stephenj@gmail.com",
            "sender_full_name": "Steve Katz (he) (F'13)",
            "sender_id": 2872,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Visual Sorting Algorithms",
            "submessages": [],
            "timestamp": 1559074810,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/4401c7ea9c62aa8e62f7c8907b1db771?d=identicon&version=1",
            "client": "website",
            "content": "<p>e.g. <a href=\"https://www.youtube.com/watch?v=Xw2D9aJRBY4\" target=\"_blank\" title=\"https://www.youtube.com/watch?v=Xw2D9aJRBY4\">https://www.youtube.com/watch?v=Xw2D9aJRBY4</a></p>\n<div class=\"youtube-video message_inline_image\"><a data-id=\"Xw2D9aJRBY4\" href=\"https://www.youtube.com/watch?v=Xw2D9aJRBY4\" target=\"_blank\" title=\"https://www.youtube.com/watch?v=Xw2D9aJRBY4\"><img src=\"https://i.ytimg.com/vi/Xw2D9aJRBY4/default.jpg\"></a></div>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 166755602,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "katz.stephenj@gmail.com",
            "sender_full_name": "Steve Katz (he) (F'13)",
            "sender_id": 2872,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Visual Sorting Algorithms",
            "submessages": [],
            "timestamp": 1559074846,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/27de1e4796502970d91435bdb9f420aa?d=identicon&version=1",
            "client": "website",
            "content": "<p>Here's another nice visualization, which has a nice pixel art style and shows you multiple instances at the same time: <a href=\"https://imgur.com/gallery/voutF\" target=\"_blank\" title=\"https://imgur.com/gallery/voutF\">https://imgur.com/gallery/voutF</a></p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 166782113,
            "is_me_message": false,
            "reactions": [
                {
                    "emoji_code": "8319",
                    "emoji_name": "apple-rainbow",
                    "reaction_type": "realm_emoji",
                    "user": {
                        "email": "michael@fekadu.com",
                        "full_name": "Michael Fekadu (he) (S2'19)",
                        "id": 228092
                    },
                    "user_id": 228092
                },
                {
                    "emoji_code": "1f419",
                    "emoji_name": "octopus",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "michael@fekadu.com",
                        "full_name": "Michael Fekadu (he) (S2'19)",
                        "id": 228092
                    },
                    "user_id": 228092
                },
                {
                    "emoji_code": "1f308",
                    "emoji_name": "rainbow",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "michael@fekadu.com",
                        "full_name": "Michael Fekadu (he) (S2'19)",
                        "id": 228092
                    },
                    "user_id": 228092
                },
                {
                    "emoji_code": "1f419",
                    "emoji_name": "octopus",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "katz.stephenj@gmail.com",
                        "full_name": "Steve Katz (he) (F'13)",
                        "id": 2872
                    },
                    "user_id": 2872
                }
            ],
            "recipient_id": 24954,
            "sender_email": "sebastian@morr.cc",
            "sender_full_name": "blinry (they) (SP2'19)",
            "sender_id": 215296,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Visual Sorting Algorithms",
            "submessages": [],
            "timestamp": 1559103180,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/0265934fdc86859bdd65431acfcb67e5?d=identicon&version=1",
            "client": "ZulipElectron",
            "content": "<p><a href=\"https://www.bigocheatsheet.com/\" target=\"_blank\" title=\"https://www.bigocheatsheet.com/\">https://www.bigocheatsheet.com/</a></p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 185610892,
            "is_me_message": false,
            "reactions": [
                {
                    "emoji_code": "1f60d",
                    "emoji_name": "heart_eyes",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "pseuyi@gmail.com",
                        "full_name": "freda suyi (they) (W1'19)",
                        "id": 247147
                    },
                    "user_id": 247147
                },
                {
                    "emoji_code": "1f389",
                    "emoji_name": "tada",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "nathanisom27@gmail.com",
                        "full_name": "Nathan Isom (he) (W2'20)",
                        "id": 255190
                    },
                    "user_id": 255190
                }
            ],
            "recipient_id": 24954,
            "sender_email": "emilyrchiggins@gmail.com",
            "sender_full_name": "Emily Higgins (she) (W2'20)",
            "sender_id": 256959,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Visual Sorting Algorithms",
            "submessages": [],
            "timestamp": 1579018448,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/6ae811d40ff8600863755aa510198b5144ebff2c?x=x&version=2",
            "client": "website",
            "content": "<p><a href=\"https://www.khanacademy.org/computing/computer-science/algorithms/asymptotic-notation/a/asymptotic-notation\" target=\"_blank\" title=\"https://www.khanacademy.org/computing/computer-science/algorithms/asymptotic-notation/a/asymptotic-notation\">https://www.khanacademy.org/computing/computer-science/algorithms/asymptotic-notation/a/asymptotic-notation</a> (thx <span class=\"user-mention\" data-user-id=\"247147\">@freda suyi ding (they) (W1'19)</span> )</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 185610942,
            "is_me_message": false,
            "reactions": [
                {
                    "emoji_code": "1f44d",
                    "emoji_name": "+1",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "pseuyi@gmail.com",
                        "full_name": "freda suyi (they) (W1'19)",
                        "id": 247147
                    },
                    "user_id": 247147
                }
            ],
            "recipient_id": 24954,
            "sender_email": "jo@johanndiedrick.com",
            "sender_full_name": "Johann Diedrick (he) (W2'20)",
            "sender_id": 255042,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Visual Sorting Algorithms",
            "submessages": [],
            "timestamp": 1579018479,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/0a7281da0a7289a741650707cabd4fd97b489f0e?x=x&version=2",
            "client": "ZulipElectron",
            "content": "<p><a href=\"https://en.wikipedia.org/wiki/Bogosort\" target=\"_blank\" title=\"https://en.wikipedia.org/wiki/Bogosort\">https://en.wikipedia.org/wiki/Bogosort</a></p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 185612299,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "toph.allen@gmail.com",
            "sender_full_name": "Toph Allen (he) (SP2'20)",
            "sender_id": 255104,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Visual Sorting Algorithms",
            "submessages": [],
            "timestamp": 1579019304,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/f84d2614fd35c05737bb6a5a41660384e73da59d?x=x&version=2",
            "client": "ZulipElectron",
            "content": "<p>Hey everyone! I updated the calendar invite so you will all need to re-RSVP <span aria-label=\"disappointed\" class=\"emoji emoji-1f61e\" role=\"img\" title=\"disappointed\">:disappointed:</span> <a href=\"https://www.recurse.com/calendar/8555\" target=\"_blank\" title=\"https://www.recurse.com/calendar/8555\">https://www.recurse.com/calendar/8555</a></p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 185613138,
            "is_me_message": false,
            "reactions": [
                {
                    "emoji_code": "1f44d",
                    "emoji_name": "+1",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "george@mand.is",
                        "full_name": "George Mandis (he) (W2'20)",
                        "id": 255044
                    },
                    "user_id": 255044
                },
                {
                    "emoji_code": "1f44d",
                    "emoji_name": "+1",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "harialexandre@gmail.com",
                        "full_name": "Harry Alexander (he) (SP2'20)",
                        "id": 100341
                    },
                    "user_id": 100341
                },
                {
                    "emoji_code": "1f44d",
                    "emoji_name": "+1",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "emilyrchiggins@gmail.com",
                        "full_name": "Emily Higgins (she) (W2'20)",
                        "id": 256959
                    },
                    "user_id": 256959
                },
                {
                    "emoji_code": "1f44d",
                    "emoji_name": "+1",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "pseuyi@gmail.com",
                        "full_name": "freda suyi (they) (W1'19)",
                        "id": 247147
                    },
                    "user_id": 247147
                }
            ],
            "recipient_id": 24954,
            "sender_email": "allicolyer@gmail.com",
            "sender_full_name": "Alli Colyer (she) (W2'20)",
            "sender_id": 255791,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Study Group",
            "submessages": [],
            "timestamp": 1579019780,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/f84d2614fd35c05737bb6a5a41660384e73da59d?x=x&version=2",
            "client": "ZulipElectron",
            "content": "<p><span class=\"user-mention\" data-user-id=\"256959\">@Emily Higgins (she) (W2'20)</span> <span class=\"user-mention\" data-user-id=\"255068\">@Aiyana Brooks (she) (W2'20)</span> <span class=\"user-mention\" data-user-id=\"255551\">@Ellen Yusti (she) (W2'20)</span> <span class=\"user-mention\" data-user-id=\"255044\">@George Mandis (he) (W2'20)</span> <span class=\"user-mention\" data-user-id=\"100341\">@Harry Alexander (he) (W2'20)</span> <span class=\"user-mention\" data-user-id=\"256966\">@Michael Smedes (W2'20)</span>  <span class=\"user-mention\" data-user-id=\"255104\">@Toph Allen (he) (W2'20)</span> <span class=\"user-mention\" data-user-id=\"247147\">@freda suyi ding (they) (W1'19)</span> <span class=\"user-mention\" data-user-id=\"247291\">@Blessing Ajayi-Martins (he) (W1'19)</span> <span class=\"user-mention\" data-user-id=\"255042\">@Johann Diedrick (he) (W2'20)</span> <span class=\"user-mention\" data-user-id=\"256961\">@James Stuart (he) (W2'20)</span></p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 185613319,
            "is_me_message": false,
            "last_edit_timestamp": 1579020083,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "allicolyer@gmail.com",
            "sender_full_name": "Alli Colyer (she) (W2'20)",
            "sender_id": 255791,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Study Group",
            "submessages": [],
            "timestamp": 1579019884,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/f84d2614fd35c05737bb6a5a41660384e73da59d?x=x&version=2",
            "client": "ZulipElectron",
            "content": "<p>I think I got most people but tag anyone I missed <span aria-label=\"slight smile\" class=\"emoji emoji-1f642\" role=\"img\" title=\"slight smile\">:slight_smile:</span></p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 185613379,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "allicolyer@gmail.com",
            "sender_full_name": "Alli Colyer (she) (W2'20)",
            "sender_id": 255791,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Study Group",
            "submessages": [],
            "timestamp": 1579019926,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/f84d2614fd35c05737bb6a5a41660384e73da59d?x=x&version=2",
            "client": "ZulipElectron",
            "content": "<p>On Thursday we want to do:</p>\n<ul>\n<li>30 minutes on asymptotic complexity, I can lead this unless someone else wants to <span aria-label=\"grinning face with smiling eyes\" class=\"emoji emoji-1f601\" role=\"img\" title=\"grinning face with smiling eyes\">:grinning_face_with_smiling_eyes:</span></li>\n<li>30 minutes on merge sort  led by <span class=\"user-mention\" data-user-id=\"255042\">@Johann Diedrick (he) (W2'20)</span></li>\n</ul>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 185613547,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "allicolyer@gmail.com",
            "sender_full_name": "Alli Colyer (she) (W2'20)",
            "sender_id": 255791,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Study Group",
            "submessages": [],
            "timestamp": 1579020034,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/f84d2614fd35c05737bb6a5a41660384e73da59d?x=x&version=2",
            "client": "ZulipElectron",
            "content": "<p>hey everyone! So i'm prepping to do a short explanation of time complexity and big o notation tomorrow with a quick aside on why binary search is O(log n).  <span class=\"user-mention\" data-user-id=\"255042\">@Johann Diedrick (he) (W2'20)</span> is also going teach us all about merge sort. Hope to see there <span aria-label=\"grinning face with smiling eyes\" class=\"emoji emoji-1f601\" role=\"img\" title=\"grinning face with smiling eyes\">:grinning_face_with_smiling_eyes:</span></p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 185760578,
            "is_me_message": false,
            "last_edit_timestamp": 1579136166,
            "reactions": [
                {
                    "emoji_code": "1f389",
                    "emoji_name": "tada",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "vaibhavsagar@gmail.com",
                        "full_name": "Vaibhav Sagar (he) (F1'16)",
                        "id": 100041
                    },
                    "user_id": 100041
                },
                {
                    "emoji_code": "1f389",
                    "emoji_name": "tada",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "jo@johanndiedrick.com",
                        "full_name": "Johann Diedrick (he) (W2'20)",
                        "id": 255042
                    },
                    "user_id": 255042
                },
                {
                    "emoji_code": "1f44d",
                    "emoji_name": "+1",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "jo@johanndiedrick.com",
                        "full_name": "Johann Diedrick (he) (W2'20)",
                        "id": 255042
                    },
                    "user_id": 255042
                },
                {
                    "emoji_code": "1f389",
                    "emoji_name": "tada",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "catwind7+recursecenter@gmail.com",
                        "full_name": "Alan Lin (he) (W1'19)",
                        "id": 247176
                    },
                    "user_id": 247176
                },
                {
                    "emoji_code": "1f44d",
                    "emoji_name": "+1",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "catwind7+recursecenter@gmail.com",
                        "full_name": "Alan Lin (he) (W1'19)",
                        "id": 247176
                    },
                    "user_id": 247176
                },
                {
                    "emoji_code": "1f44d",
                    "emoji_name": "+1",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "ariesunique@gmail.com",
                        "full_name": "Aiyana Brooks (she) (W2'20)",
                        "id": 255068
                    },
                    "user_id": 255068
                }
            ],
            "recipient_id": 24954,
            "sender_email": "allicolyer@gmail.com",
            "sender_full_name": "Alli Colyer (she) (W2'20)",
            "sender_id": 255791,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Study Group",
            "submessages": [],
            "timestamp": 1579136080,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/71a2c45780bed1fbc93205446810943f5eb8e2b6?x=x&version=4",
            "client": "website",
            "content": "<p>Here's a graph showing different time complexities: <a href=\"https://adrianmejia.com/images/big-o-running-time-complexity.png\" target=\"_blank\" title=\"https://adrianmejia.com/images/big-o-running-time-complexity.png\">https://adrianmejia.com/images/big-o-running-time-complexity.png</a></p>\n<div class=\"message_inline_image\"><a href=\"https://adrianmejia.com/images/big-o-running-time-complexity.png\" target=\"_blank\" title=\"https://adrianmejia.com/images/big-o-running-time-complexity.png\"><img src=\"https://adrianmejia.com/images/big-o-running-time-complexity.png\"></a></div>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 185832471,
            "is_me_message": false,
            "reactions": [
                {
                    "emoji_code": "1f44d",
                    "emoji_name": "+1",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "allicolyer@gmail.com",
                        "full_name": "Alli Colyer (she) (W2'20)",
                        "id": 255791
                    },
                    "user_id": 255791
                }
            ],
            "recipient_id": 24954,
            "sender_email": "michaelwenlu@gmail.com",
            "sender_full_name": "Michael W Lu (he) (W2'20)",
            "sender_id": 255046,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Study Group",
            "submessages": [],
            "timestamp": 1579192584,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/f84d2614fd35c05737bb6a5a41660384e73da59d?x=x&version=2",
            "client": "ZulipElectron",
            "content": "<p>Here's the video that I got the log explanation from: <a href=\"https://www.youtube.com/watch?v=M4ubFru2O80\" target=\"_blank\" title=\"https://www.youtube.com/watch?v=M4ubFru2O80\">https://www.youtube.com/watch?v=M4ubFru2O80</a></p>\n<div class=\"youtube-video message_inline_image\"><a data-id=\"M4ubFru2O80\" href=\"https://www.youtube.com/watch?v=M4ubFru2O80\" target=\"_blank\" title=\"https://www.youtube.com/watch?v=M4ubFru2O80\"><img src=\"https://i.ytimg.com/vi/M4ubFru2O80/default.jpg\"></a></div>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 185832903,
            "is_me_message": false,
            "reactions": [
                {
                    "emoji_code": "1f44d",
                    "emoji_name": "+1",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "jo@johanndiedrick.com",
                        "full_name": "Johann Diedrick (he) (W2'20)",
                        "id": 255042
                    },
                    "user_id": 255042
                }
            ],
            "recipient_id": 24954,
            "sender_email": "allicolyer@gmail.com",
            "sender_full_name": "Alli Colyer (she) (W2'20)",
            "sender_id": 255791,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Study Group",
            "submessages": [],
            "timestamp": 1579192796,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/6ae811d40ff8600863755aa510198b5144ebff2c?x=x&version=2",
            "client": "website",
            "content": "<p>Merge Sort!</p>\n<div class=\"codehilite\"><pre><span></span>input_array = [7, 3, 5, 2, 1, 4, 8, 6]\n\ndef merge_sort(arr):\n        arr_length = len(arr)\n\n        if arr_length == 1: # important base case\n                return arr\n\n        sorted_array = []\n\n        mid = arr_length // 2\n\n        left_arr = merge_sort(arr[0:mid])\n        right_arr = merge_sort(arr[mid:])\n\n\n        i, j = 0, 0\n\n        while i &lt; mid and j &lt; len(right_arr): # revisit\n                if left_arr[i] &lt; right_arr[j]:\n                        sorted_array.append(left_arr[i])\n                        i += 1\n                else:\n                        sorted_array.append(right_arr[j])\n                        j += 1\n                print(sorted_array)\n\n        if i &lt; mid:\n                sorted_array.extend(left_arr[i:])\n        elif j &lt; len(right_arr):\n                sorted_array.extend(right_arr[j:])\n        return sorted_array\n\nprint(input_array)\n\nprint(merge_sort(input_array))\n</pre></div>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 185839185,
            "is_me_message": false,
            "reactions": [
                {
                    "emoji_code": "1f389",
                    "emoji_name": "tada",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "allicolyer@gmail.com",
                        "full_name": "Alli Colyer (she) (W2'20)",
                        "id": 255791
                    },
                    "user_id": 255791
                },
                {
                    "emoji_code": "1f389",
                    "emoji_name": "tada",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "toph.allen@gmail.com",
                        "full_name": "Toph Allen (he) (SP2'20)",
                        "id": 255104
                    },
                    "user_id": 255104
                },
                {
                    "emoji_code": "1f389",
                    "emoji_name": "tada",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "ariesunique@gmail.com",
                        "full_name": "Aiyana Brooks (she) (W2'20)",
                        "id": 255068
                    },
                    "user_id": 255068
                },
                {
                    "emoji_code": "1f389",
                    "emoji_name": "tada",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "catwind7+recursecenter@gmail.com",
                        "full_name": "Alan Lin (he) (W1'19)",
                        "id": 247176
                    },
                    "user_id": 247176
                }
            ],
            "recipient_id": 24954,
            "sender_email": "jo@johanndiedrick.com",
            "sender_full_name": "Johann Diedrick (he) (W2'20)",
            "sender_id": 255042,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Study Group",
            "submessages": [],
            "timestamp": 1579196306,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/3c38f253217c1b67500972630b0e83e581de8880?x=x&version=4",
            "client": "website",
            "content": "<p>Hey everyone,<br>\nSince most of us in this group have also been attending the interview problem group, do we think it would be helpful to piggyback some of our discussion using the problems from the interview group? For example, Floyd's Cycle-Finding algorithm came up in the problem from this past Tuesday and I'd love to present that next Tuesday 1/21. A lot of the solutions <span class=\"user-mention silent\" data-user-id=\"246971\">Nar Shahin (they) (W1'19)</span> has sent have bonus questions that might be interesting to discuss. Thoughts?</p>\n<p>Thanks <span class=\"user-mention\" data-user-id=\"255791\">@Allison Colyer (she) (W2'20)</span> and <span class=\"user-mention\" data-user-id=\"255042\">@Johann Diedrick (he) (W2'20)</span> for getting this group off to a great start!</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 185922724,
            "is_me_message": false,
            "reactions": [
                {
                    "emoji_code": "1f44d",
                    "emoji_name": "+1",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "allicolyer@gmail.com",
                        "full_name": "Alli Colyer (she) (W2'20)",
                        "id": 255791
                    },
                    "user_id": 255791
                },
                {
                    "emoji_code": "1f44d",
                    "emoji_name": "+1",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "jo@johanndiedrick.com",
                        "full_name": "Johann Diedrick (he) (W2'20)",
                        "id": 255042
                    },
                    "user_id": 255042
                },
                {
                    "emoji_code": "1f44d",
                    "emoji_name": "+1",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "george@mand.is",
                        "full_name": "George Mandis (he) (W2'20)",
                        "id": 255044
                    },
                    "user_id": 255044
                }
            ],
            "recipient_id": 24954,
            "sender_email": "ariesunique@gmail.com",
            "sender_full_name": "Aiyana Brooks (she) (W2'20)",
            "sender_id": 255068,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Study Group",
            "submessages": [],
            "timestamp": 1579273293,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/f84d2614fd35c05737bb6a5a41660384e73da59d?x=x&version=2",
            "client": "ZulipElectron",
            "content": "<p>Hey everyone! See you at 10:30! <span class=\"user-mention\" data-user-id=\"255068\">@Aiyana Brooks (she) (W2'20)</span> is going to lead us through discussing Floyd's Cycle-Finding algorithm</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 186189519,
            "is_me_message": false,
            "last_edit_timestamp": 1579618261,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "allicolyer@gmail.com",
            "sender_full_name": "Alli Colyer (she) (W2'20)",
            "sender_id": 255791,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Study Group",
            "submessages": [],
            "timestamp": 1579618036,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/3c38f253217c1b67500972630b0e83e581de8880?x=x&version=4",
            "client": "website",
            "content": "<p>Code for Floyd's cycle finding algorithm - <a href=\"https://www.koderdojo.com/blog/detect-cycle-in-linked-list-using-floyd-s-cycle-finding-algorithm\" target=\"_blank\" title=\"https://www.koderdojo.com/blog/detect-cycle-in-linked-list-using-floyd-s-cycle-finding-algorithm\">https://www.koderdojo.com/blog/detect-cycle-in-linked-list-using-floyd-s-cycle-finding-algorithm</a></p>\n<p>Nice proof  of how to find start of cycle (why moving slow pointer to start of the list and incrementing both fast and slow will meet at cycle start)<br>\n<a href=\"https://cs.stackexchange.com/questions/10360/floyds-cycle-detection-algorithm-determining-the-starting-point-of-cycle\" target=\"_blank\" title=\"https://cs.stackexchange.com/questions/10360/floyds-cycle-detection-algorithm-determining-the-starting-point-of-cycle\">https://cs.stackexchange.com/questions/10360/floyds-cycle-detection-algorithm-determining-the-starting-point-of-cycle</a></p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 186197645,
            "is_me_message": false,
            "reactions": [
                {
                    "emoji_code": "1f44d",
                    "emoji_name": "+1",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "jo@johanndiedrick.com",
                        "full_name": "Johann Diedrick (he) (W2'20)",
                        "id": 255042
                    },
                    "user_id": 255042
                }
            ],
            "recipient_id": 24954,
            "sender_email": "ariesunique@gmail.com",
            "sender_full_name": "Aiyana Brooks (she) (W2'20)",
            "sender_id": 255068,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Study Group",
            "submessages": [],
            "timestamp": 1579622895,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/6ae811d40ff8600863755aa510198b5144ebff2c?x=x&version=2",
            "client": "website",
            "content": "<p><a href=\"https://www.youtube.com/watch?v=ywWBy6J5gz8\" target=\"_blank\" title=\"https://www.youtube.com/watch?v=ywWBy6J5gz8\">https://www.youtube.com/watch?v=ywWBy6J5gz8</a></p>\n<div class=\"youtube-video message_inline_image\"><a data-id=\"ywWBy6J5gz8\" href=\"https://www.youtube.com/watch?v=ywWBy6J5gz8\" target=\"_blank\" title=\"https://www.youtube.com/watch?v=ywWBy6J5gz8\"><img src=\"https://i.ytimg.com/vi/ywWBy6J5gz8/default.jpg\"></a></div>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 186197883,
            "is_me_message": false,
            "reactions": [
                {
                    "emoji_code": "1f483",
                    "emoji_name": "dancer",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "allicolyer@gmail.com",
                        "full_name": "Alli Colyer (she) (W2'20)",
                        "id": 255791
                    },
                    "user_id": 255791
                },
                {
                    "emoji_code": "1681",
                    "emoji_name": "congaparrot",
                    "reaction_type": "realm_emoji",
                    "user": {
                        "email": "emilyrchiggins@gmail.com",
                        "full_name": "Emily Higgins (she) (W2'20)",
                        "id": 256959
                    },
                    "user_id": 256959
                },
                {
                    "emoji_code": "1f601",
                    "emoji_name": "grinning_face_with_smiling_eyes",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "nathanisom27@gmail.com",
                        "full_name": "Nathan Isom (he) (W2'20)",
                        "id": 255190
                    },
                    "user_id": 255190
                }
            ],
            "recipient_id": 24954,
            "sender_email": "jo@johanndiedrick.com",
            "sender_full_name": "Johann Diedrick (he) (W2'20)",
            "sender_id": 255042,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Study Group",
            "submessages": [],
            "timestamp": 1579623052,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/a2193d0d44d3a89de9a2c14dbf38302a2320b022?x=x&version=2",
            "client": "website",
            "content": "<p><a href=\"https://github.com/orlp/pdqsort\" target=\"_blank\" title=\"https://github.com/orlp/pdqsort\">https://github.com/orlp/pdqsort</a></p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 186200736,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "malteskarupke@fastmail.fm",
            "sender_full_name": "Malte Skarupke (he) (W2'20)",
            "sender_id": 255130,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Study Group",
            "submessages": [],
            "timestamp": 1579624588,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/a2193d0d44d3a89de9a2c14dbf38302a2320b022?x=x&version=2",
            "client": "website",
            "content": "<p>\"Pattern Defeating Quicksort\"</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 186200747,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "malteskarupke@fastmail.fm",
            "sender_full_name": "Malte Skarupke (he) (W2'20)",
            "sender_id": 255130,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Study Group",
            "submessages": [],
            "timestamp": 1579624597,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/0265934fdc86859bdd65431acfcb67e5?d=identicon&version=1",
            "client": "ZulipElectron",
            "content": "<p>Some good Quicksort resources: <br>\n<a href=\"https://www.baeldung.com/java-quicksort#algorithm-analysis\" target=\"_blank\" title=\"https://www.baeldung.com/java-quicksort#algorithm-analysis\">https://www.baeldung.com/java-quicksort#algorithm-analysis</a><br>\n<a href=\"https://www.khanacademy.org/computing/computer-science/algorithms/quick-sort/a/overview-of-quicksort\" target=\"_blank\" title=\"https://www.khanacademy.org/computing/computer-science/algorithms/quick-sort/a/overview-of-quicksort\">https://www.khanacademy.org/computing/computer-science/algorithms/quick-sort/a/overview-of-quicksort</a> (the answers to the first question regarding pivot selection by \u2018mathymathymathy\u2019 are possibly more helpful than the actual page content)<br>\nAnd of course<br>\n<a href=\"https://en.wikipedia.org/wiki/Quicksort\" target=\"_blank\" title=\"https://en.wikipedia.org/wiki/Quicksort\">https://en.wikipedia.org/wiki/Quicksort</a></p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 186226690,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "emilyrchiggins@gmail.com",
            "sender_full_name": "Emily Higgins (she) (W2'20)",
            "sender_id": 256959,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Study Group",
            "submessages": [],
            "timestamp": 1579640406,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/0265934fdc86859bdd65431acfcb67e5?d=identicon&version=1",
            "client": "ZulipElectron",
            "content": "<p>And the Quicksort example in Python: <a href=\"https://github.com/erchiggins/sundry-rc/blob/master/quick_sort.py\" target=\"_blank\" title=\"https://github.com/erchiggins/sundry-rc/blob/master/quick_sort.py\">https://github.com/erchiggins/sundry-rc/blob/master/quick_sort.py</a></p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 186227487,
            "is_me_message": false,
            "reactions": [
                {
                    "emoji_code": "1f389",
                    "emoji_name": "tada",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "allicolyer@gmail.com",
                        "full_name": "Alli Colyer (she) (W2'20)",
                        "id": 255791
                    },
                    "user_id": 255791
                },
                {
                    "emoji_code": "1f389",
                    "emoji_name": "tada",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "jo@johanndiedrick.com",
                        "full_name": "Johann Diedrick (he) (W2'20)",
                        "id": 255042
                    },
                    "user_id": 255042
                },
                {
                    "emoji_code": "1f389",
                    "emoji_name": "tada",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "catwind7+recursecenter@gmail.com",
                        "full_name": "Alan Lin (he) (W1'19)",
                        "id": 247176
                    },
                    "user_id": 247176
                }
            ],
            "recipient_id": 24954,
            "sender_email": "emilyrchiggins@gmail.com",
            "sender_full_name": "Emily Higgins (she) (W2'20)",
            "sender_id": 256959,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Study Group",
            "submessages": [],
            "timestamp": 1579640888,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/f84d2614fd35c05737bb6a5a41660384e73da59d?x=x&version=2",
            "client": "ZulipMobile",
            "content": "<p>Hey everyone! <span class=\"user-mention\" data-user-id=\"255130\">@Malte Skarupke (he) (W2'20)</span> is going to lead us through searching trees <span aria-label=\"evergreen tree\" class=\"emoji emoji-1f332\" role=\"img\" title=\"evergreen tree\">:evergreen_tree:</span>hope to see you all there!</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 186395297,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "allicolyer@gmail.com",
            "sender_full_name": "Alli Colyer (she) (W2'20)",
            "sender_id": 255791,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Study Group",
            "submessages": [],
            "timestamp": 1579790913,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/a2193d0d44d3a89de9a2c14dbf38302a2320b022?x=x&version=2",
            "client": "website",
            "content": "<p>this is my code for depth first, breadth first and dijkstra:<br>\n<a href=\"https://repl.it/repls/FrugalCelebratedNotifications\" target=\"_blank\" title=\"https://repl.it/repls/FrugalCelebratedNotifications\">https://repl.it/repls/FrugalCelebratedNotifications</a></p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 186409902,
            "is_me_message": false,
            "reactions": [
                {
                    "emoji_code": "1f389",
                    "emoji_name": "tada",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "catwind7+recursecenter@gmail.com",
                        "full_name": "Alan Lin (he) (W1'19)",
                        "id": 247176
                    },
                    "user_id": 247176
                },
                {
                    "emoji_code": "1f389",
                    "emoji_name": "tada",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "allicolyer@gmail.com",
                        "full_name": "Alli Colyer (she) (W2'20)",
                        "id": 255791
                    },
                    "user_id": 255791
                }
            ],
            "recipient_id": 24954,
            "sender_email": "malteskarupke@fastmail.fm",
            "sender_full_name": "Malte Skarupke (he) (W2'20)",
            "sender_id": 255130,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Study Group",
            "submessages": [],
            "timestamp": 1579798862,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/f84d2614fd35c05737bb6a5a41660384e73da59d?x=x&version=2",
            "client": "ZulipElectron",
            "content": "<p>Hey does anyone have an algorithm they want to present tomorrow?</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 186690380,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "allicolyer@gmail.com",
            "sender_full_name": "Alli Colyer (she) (W2'20)",
            "sender_id": 255791,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Study Group",
            "submessages": [],
            "timestamp": 1580137761,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/f84d2614fd35c05737bb6a5a41660384e73da59d?x=x&version=2",
            "client": "ZulipElectron",
            "content": "<p>I would love to keep going with trees if anyone has anything else they want to present on trees!</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 186690521,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "allicolyer@gmail.com",
            "sender_full_name": "Alli Colyer (she) (W2'20)",
            "sender_id": 255791,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Study Group",
            "submessages": [],
            "timestamp": 1580137825,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/f84d2614fd35c05737bb6a5a41660384e73da59d?x=x&version=2",
            "client": "ZulipElectron",
            "content": "<p>Otherwise I'm willing to study up and present BST</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 186690531,
            "is_me_message": false,
            "reactions": [
                {
                    "emoji_code": "1f44d",
                    "emoji_name": "+1",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "emilyrchiggins@gmail.com",
                        "full_name": "Emily Higgins (she) (W2'20)",
                        "id": 256959
                    },
                    "user_id": 256959
                },
                {
                    "emoji_code": "1f44d",
                    "emoji_name": "+1",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "george@mand.is",
                        "full_name": "George Mandis (he) (W2'20)",
                        "id": 255044
                    },
                    "user_id": 255044
                }
            ],
            "recipient_id": 24954,
            "sender_email": "allicolyer@gmail.com",
            "sender_full_name": "Alli Colyer (she) (W2'20)",
            "sender_id": 255791,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Study Group",
            "submessages": [],
            "timestamp": 1580137835,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/6ae811d40ff8600863755aa510198b5144ebff2c?x=x&version=2",
            "client": "website",
            "content": "<p>I'm sort of in tree land myself. I'd be happy to do a pt 2 of trees on Thursday for anything you don't cover. I could also try helping to do a part 2 tomorrow as well, but I don't know if I have the time for it today/tomorrow.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 186690799,
            "is_me_message": false,
            "reactions": [
                {
                    "emoji_code": "1f44d",
                    "emoji_name": "+1",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "allicolyer@gmail.com",
                        "full_name": "Alli Colyer (she) (W2'20)",
                        "id": 255791
                    },
                    "user_id": 255791
                }
            ],
            "recipient_id": 24954,
            "sender_email": "jo@johanndiedrick.com",
            "sender_full_name": "Johann Diedrick (he) (W2'20)",
            "sender_id": 255042,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Study Group",
            "submessages": [],
            "timestamp": 1580137982,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/f84d2614fd35c05737bb6a5a41660384e73da59d?x=x&version=2",
            "client": "ZulipElectron",
            "content": "<p>Hey everyone! I don't think I'll be prepared to talk about trees tomorrow. Should we skip tomorrow and make Thursday a big binary tree day?</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 186733106,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "allicolyer@gmail.com",
            "sender_full_name": "Alli Colyer (she) (W2'20)",
            "sender_id": 255791,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Study Group",
            "submessages": [],
            "timestamp": 1580164150,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/f84d2614fd35c05737bb6a5a41660384e73da59d?x=x&version=2",
            "client": "ZulipElectron",
            "content": "<p>I'll cancel it for tomorrow for now, unless someone has something they'd really like to present!</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 186733278,
            "is_me_message": false,
            "reactions": [
                {
                    "emoji_code": "1f44d",
                    "emoji_name": "+1",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "pseuyi@gmail.com",
                        "full_name": "freda suyi (they) (W1'19)",
                        "id": 247147
                    },
                    "user_id": 247147
                },
                {
                    "emoji_code": "1f44d",
                    "emoji_name": "+1",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "emilyrchiggins@gmail.com",
                        "full_name": "Emily Higgins (she) (W2'20)",
                        "id": 256959
                    },
                    "user_id": 256959
                },
                {
                    "emoji_code": "1f44d",
                    "emoji_name": "+1",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "harialexandre@gmail.com",
                        "full_name": "Harry Alexander (he) (SP2'20)",
                        "id": 100341
                    },
                    "user_id": 100341
                },
                {
                    "emoji_code": "1f44d",
                    "emoji_name": "+1",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "catwind7+recursecenter@gmail.com",
                        "full_name": "Alan Lin (he) (W1'19)",
                        "id": 247176
                    },
                    "user_id": 247176
                }
            ],
            "recipient_id": 24954,
            "sender_email": "allicolyer@gmail.com",
            "sender_full_name": "Alli Colyer (she) (W2'20)",
            "sender_id": 255791,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Study Group",
            "submessages": [],
            "timestamp": 1580164316,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/6ae811d40ff8600863755aa510198b5144ebff2c?x=x&version=2",
            "client": "website",
            "content": "<p>I wasn't able to make time to put together anything for trees, but I'd be glad to still meet in Hopper and work through tree stuff together if anyone else wants to! Maybe we can read/study/work on problems together in groups/together on the white board.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 186989022,
            "is_me_message": false,
            "reactions": [
                {
                    "emoji_code": "1f44d",
                    "emoji_name": "+1",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "allicolyer@gmail.com",
                        "full_name": "Alli Colyer (she) (W2'20)",
                        "id": 255791
                    },
                    "user_id": 255791
                },
                {
                    "emoji_code": "1f44d",
                    "emoji_name": "+1",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "harialexandre@gmail.com",
                        "full_name": "Harry Alexander (he) (SP2'20)",
                        "id": 100341
                    },
                    "user_id": 100341
                }
            ],
            "recipient_id": 24954,
            "sender_email": "jo@johanndiedrick.com",
            "sender_full_name": "Johann Diedrick (he) (W2'20)",
            "sender_id": 255042,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Study Group",
            "submessages": [],
            "timestamp": 1580393177,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/f84d2614fd35c05737bb6a5a41660384e73da59d?x=x&version=2",
            "client": "website",
            "content": "<p>Hey same!  I could talk a little bit about heaps but that's all I got up to in my studying</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 186996271,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "allicolyer@gmail.com",
            "sender_full_name": "Alli Colyer (she) (W2'20)",
            "sender_id": 255791,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Study Group",
            "submessages": [],
            "timestamp": 1580397409,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/6d3379580509fafca3f950718db1163497047323?x=x&version=2",
            "client": "ZulipElectron",
            "content": "<p>Sorry I'm missing the meeting today! Would it be helpful to start a Google Doc with a big list of possible topics for the future? That way, if someone doesn't have a specific idea they want to present or focus on, we could pick one from the list and whoever feels brave enough could step up to try and lead the discussion for that week. That secretly terrifies me, but I'd be willing to try it to preserve the momentum of this group.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 187002194,
            "is_me_message": false,
            "reactions": [
                {
                    "emoji_code": "1f44d",
                    "emoji_name": "+1",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "allicolyer@gmail.com",
                        "full_name": "Alli Colyer (she) (W2'20)",
                        "id": 255791
                    },
                    "user_id": 255791
                },
                {
                    "emoji_code": "1f44d",
                    "emoji_name": "+1",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "ariesunique@gmail.com",
                        "full_name": "Aiyana Brooks (she) (W2'20)",
                        "id": 255068
                    },
                    "user_id": 255068
                }
            ],
            "recipient_id": 24954,
            "sender_email": "george@mand.is",
            "sender_full_name": "George Mandis (he) (W2'20)",
            "sender_id": 255044,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Study Group",
            "submessages": [],
            "timestamp": 1580400802,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/0265934fdc86859bdd65431acfcb67e5?d=identicon&version=1",
            "client": "ZulipMobile",
            "content": "<p>That sounds like a good idea! I'm sure we've all come across things in our research that could use some airing.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 187003181,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "emilyrchiggins@gmail.com",
            "sender_full_name": "Emily Higgins (she) (W2'20)",
            "sender_id": 256959,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Study Group",
            "submessages": [],
            "timestamp": 1580401332,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/6ae811d40ff8600863755aa510198b5144ebff2c?x=x&version=2",
            "client": "website",
            "content": "<p>Explanation for finding a random node in a binary tree:<br>\n<a href=\"/user_uploads/13/RLiCxJ6q2AxpYl1ekfEEHzai/IMG_6133.jpeg\" target=\"_blank\" title=\"IMG_6133.jpeg\">IMG_6133.jpeg</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/13/RLiCxJ6q2AxpYl1ekfEEHzai/IMG_6133.jpeg\" target=\"_blank\" title=\"IMG_6133.jpeg\"><img src=\"/user_uploads/13/RLiCxJ6q2AxpYl1ekfEEHzai/IMG_6133.jpeg\"></a></div>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 187004581,
            "is_me_message": false,
            "reactions": [
                {
                    "emoji_code": "1f44d",
                    "emoji_name": "+1",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "allicolyer@gmail.com",
                        "full_name": "Alli Colyer (she) (W2'20)",
                        "id": 255791
                    },
                    "user_id": 255791
                }
            ],
            "recipient_id": 24954,
            "sender_email": "jo@johanndiedrick.com",
            "sender_full_name": "Johann Diedrick (he) (W2'20)",
            "sender_id": 255042,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Study Group",
            "submessages": [],
            "timestamp": 1580402153,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/6ae811d40ff8600863755aa510198b5144ebff2c?x=x&version=2",
            "client": "website",
            "content": "<p>Heaps! : <br>\n<a href=\"/user_uploads/13/KB2cOo4fuHPukjVMPQRjdDSv/IMG_6134.jpeg\" target=\"_blank\" title=\"IMG_6134.jpeg\">IMG_6134.jpeg</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/13/KB2cOo4fuHPukjVMPQRjdDSv/IMG_6134.jpeg\" target=\"_blank\" title=\"IMG_6134.jpeg\"><img src=\"/user_uploads/13/KB2cOo4fuHPukjVMPQRjdDSv/IMG_6134.jpeg\"></a></div>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 187004630,
            "is_me_message": false,
            "reactions": [
                {
                    "emoji_code": "1f44d",
                    "emoji_name": "+1",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "allicolyer@gmail.com",
                        "full_name": "Alli Colyer (she) (W2'20)",
                        "id": 255791
                    },
                    "user_id": 255791
                }
            ],
            "recipient_id": 24954,
            "sender_email": "jo@johanndiedrick.com",
            "sender_full_name": "Johann Diedrick (he) (W2'20)",
            "sender_id": 255042,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Study Group",
            "submessages": [],
            "timestamp": 1580402164,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/f84d2614fd35c05737bb6a5a41660384e73da59d?x=x&version=2",
            "client": "ZulipElectron",
            "content": "<p>Hey everyone! I started a spreadsheet with a few algorithms that we might want to study in future sessions. Feel free to add to it <a href=\"https://docs.google.com/spreadsheets/d/1OyxpT7NX8OMmUxNabXFh6ElnkBarKcS6YeNATmOxwUs/edit#gid=0\" target=\"_blank\" title=\"https://docs.google.com/spreadsheets/d/1OyxpT7NX8OMmUxNabXFh6ElnkBarKcS6YeNATmOxwUs/edit#gid=0\">https://docs.google.com/spreadsheets/d/1OyxpT7NX8OMmUxNabXFh6ElnkBarKcS6YeNATmOxwUs/edit#gid=0</a></p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 187052837,
            "is_me_message": false,
            "reactions": [
                {
                    "emoji_code": "1f419",
                    "emoji_name": "octopus",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "george@mand.is",
                        "full_name": "George Mandis (he) (W2'20)",
                        "id": 255044
                    },
                    "user_id": 255044
                }
            ],
            "recipient_id": 24954,
            "sender_email": "allicolyer@gmail.com",
            "sender_full_name": "Alli Colyer (she) (W2'20)",
            "sender_id": 255791,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Study Group",
            "submessages": [],
            "timestamp": 1580438982,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/8ef0cc9607b07f392f70560a43dbbb2d0efd6328?x=x&version=1",
            "client": "website",
            "content": "<p>I'm wondering if there's a name for the pattern where you allocate a contiguous block of memory for some set of like objects so that you can run super simple, fast for loops over them, but at the same time, it's indexed / referenced so that you can do traditional algorithmic stuff with them.</p>\n<p>instances of this pattern: object pool in game programming,  arena memory allocation, contiguously allocated linked lists that maintain benefits of linked lists while not trashing the cpu cache, python's dictionary implementation just keeps all the objects in a list and maintains separate pointer structures to the list.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 187170330,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "brian.kihoon.lee@gmail.com",
            "sender_full_name": "Brian Lee (F1'16)",
            "sender_id": 100043,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "name this algorithm pattern",
            "submessages": [],
            "timestamp": 1580579094,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/8ef0cc9607b07f392f70560a43dbbb2d0efd6328?x=x&version=1",
            "client": "website",
            "content": "<p><span class=\"user-mention\" data-user-id=\"100476\">@Nelson Elhage</span> small world - I just saw the \"why sorbet is fast\" post which talks extensively about cache locality</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 187170400,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "brian.kihoon.lee@gmail.com",
            "sender_full_name": "Brian Lee (F1'16)",
            "sender_id": 100043,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "name this algorithm pattern",
            "submessages": [],
            "timestamp": 1580579231,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/8ef0cc9607b07f392f70560a43dbbb2d0efd6328?x=x&version=1",
            "client": "website",
            "content": "<p>maybe \"cache-local algorithms\" is a decent moniker?</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 187170401,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "brian.kihoon.lee@gmail.com",
            "sender_full_name": "Brian Lee (F1'16)",
            "sender_id": 100043,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "name this algorithm pattern",
            "submessages": [],
            "timestamp": 1580579252,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/8ef0cc9607b07f392f70560a43dbbb2d0efd6328?x=x&version=1",
            "client": "website",
            "content": "<p><a href=\"https://www.microsoft.com/en-us/research/wp-content/uploads/2016/12/ccds.pdf\" target=\"_blank\" title=\"https://www.microsoft.com/en-us/research/wp-content/uploads/2016/12/ccds.pdf\">https://www.microsoft.com/en-us/research/wp-content/uploads/2016/12/ccds.pdf</a> \"cache conscious data structures\"?</p>\n<p><a href=\"/user_uploads/13/FhX-m7Bg2IuLSUKcbLTXDxUA/Screen-Shot-2020-02-01-at-12.51.11-PM.png\" target=\"_blank\" title=\"Screen-Shot-2020-02-01-at-12.51.11-PM.png\">Screen-Shot-2020-02-01-at-12.51.11-PM.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/13/FhX-m7Bg2IuLSUKcbLTXDxUA/Screen-Shot-2020-02-01-at-12.51.11-PM.png\" target=\"_blank\" title=\"Screen-Shot-2020-02-01-at-12.51.11-PM.png\"><img src=\"/user_uploads/13/FhX-m7Bg2IuLSUKcbLTXDxUA/Screen-Shot-2020-02-01-at-12.51.11-PM.png\"></a></div>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 187170526,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "brian.kihoon.lee@gmail.com",
            "sender_full_name": "Brian Lee (F1'16)",
            "sender_id": 100043,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "name this algorithm pattern",
            "submessages": [],
            "timestamp": 1580579496,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/b6389a3870b2757624fefd85d08b75b08f6dc815?x=x&version=2",
            "client": "website",
            "content": "<p>Not sure if this helps, but NumPy and pandas have this feature and I often see \"Locality of Reference\" referenced when people explain what makes them fast:</p>\n<p><a href=\"https://en.wikipedia.org/wiki/Locality_of_reference\" target=\"_blank\" title=\"https://en.wikipedia.org/wiki/Locality_of_reference\">https://en.wikipedia.org/wiki/Locality_of_reference</a></p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 187170636,
            "is_me_message": false,
            "last_edit_timestamp": 1580579773,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "robert@schuessler.org",
            "sender_full_name": "Robert Schuessler (W1'17)",
            "sender_id": 103047,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "name this algorithm pattern",
            "submessages": [],
            "timestamp": 1580579739,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/8ef0cc9607b07f392f70560a43dbbb2d0efd6328?x=x&version=1",
            "client": "website",
            "content": "<p>that's a good name too - reference-local data structures?</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 187170873,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "brian.kihoon.lee@gmail.com",
            "sender_full_name": "Brian Lee (F1'16)",
            "sender_id": 100043,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "name this algorithm pattern",
            "submessages": [],
            "timestamp": 1580580137,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/c6a4682e6a46285de64c97c77b771481?d=identicon&version=1",
            "client": "website",
            "content": "<p>cache-friendly; I don't like \"local\", it makes people think that things have to be contiguous to make them play well with caches, and that's misleading.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 187170987,
            "is_me_message": false,
            "last_edit_timestamp": 1580580422,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "ori@eigenstate.org",
            "sender_full_name": "Ori Dean Bernstein (he) (W2'20)",
            "sender_id": 255045,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "name this algorithm pattern",
            "submessages": [],
            "timestamp": 1580580355,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/ae10295946402ccf3e7f7dd024cc2ab5?d=identicon&version=1",
            "client": "ZulipMobile",
            "content": "<p>Yeah, I'd use \"cache-friendly\" or \"cache optimized\", although that feels slightly broader than this specific class of trick.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 187171255,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "nelhage@nelhage.com",
            "sender_full_name": "Nelson Elhage",
            "sender_id": 100476,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "name this algorithm pattern",
            "submessages": [],
            "timestamp": 1580580823,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/8ef0cc9607b07f392f70560a43dbbb2d0efd6328?x=x&version=1",
            "client": "website",
            "content": "<p>any links to material discussing the interplay between cache-friendly DS+A and programming language design would also be highly appreciated</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 187171376,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "brian.kihoon.lee@gmail.com",
            "sender_full_name": "Brian Lee (F1'16)",
            "sender_id": 100043,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "name this algorithm pattern",
            "submessages": [],
            "timestamp": 1580581049,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/8ef0cc9607b07f392f70560a43dbbb2d0efd6328?x=x&version=1",
            "client": "website",
            "content": "<p>I was thinking that the numpy line of APIs (numpy, tensorflow, jax, etc.) is actually a pretty decent api for writing vectorized algorithms, especially now that I've gotten familiar enough with itto write vectorized graph algorithms.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 187171428,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "brian.kihoon.lee@gmail.com",
            "sender_full_name": "Brian Lee (F1'16)",
            "sender_id": 100043,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "name this algorithm pattern",
            "submessages": [],
            "timestamp": 1580581106,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/8ef0cc9607b07f392f70560a43dbbb2d0efd6328?x=x&version=1",
            "client": "website",
            "content": "<p>but there's gotta be other stuff out there that isn't numpy</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 187171432,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "brian.kihoon.lee@gmail.com",
            "sender_full_name": "Brian Lee (F1'16)",
            "sender_id": 100043,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "name this algorithm pattern",
            "submessages": [],
            "timestamp": 1580581130,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/c6a4682e6a46285de64c97c77b771481?d=identicon&version=1",
            "client": "website",
            "content": "<p>So, here's one interesting one: <a href=\"https://en.wikipedia.org/wiki/AoS_and_SoA\" target=\"_blank\" title=\"https://en.wikipedia.org/wiki/AoS_and_SoA\">https://en.wikipedia.org/wiki/AoS_and_SoA</a></p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 187171501,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "ori@eigenstate.org",
            "sender_full_name": "Ori Dean Bernstein (he) (W2'20)",
            "sender_id": 255045,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "name this algorithm pattern",
            "submessages": [],
            "timestamp": 1580581287,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/c6a4682e6a46285de64c97c77b771481?d=identicon&version=1",
            "client": "website",
            "content": "<p>And here's a language that considers it: <a href=\"https://github.com/BSVino/JaiPrimer/blob/master/JaiPrimer.md#data-oriented-structures\" target=\"_blank\" title=\"https://github.com/BSVino/JaiPrimer/blob/master/JaiPrimer.md#data-oriented-structures\">https://github.com/BSVino/JaiPrimer/blob/master/JaiPrimer.md#data-oriented-structures</a></p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 187171545,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "ori@eigenstate.org",
            "sender_full_name": "Ori Dean Bernstein (he) (W2'20)",
            "sender_id": 255045,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "name this algorithm pattern",
            "submessages": [],
            "timestamp": 1580581334,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/8776bd2d19cdb1399c4e9589d9397d57290e5729?x=x&version=2",
            "client": "ZulipMobile",
            "content": "<p>Is this related to cache oblivious data structures?</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 187173030,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "shae.erisson@gmail.com",
            "sender_full_name": "Shae Matijs Erisson (he) (F1'19)",
            "sender_id": 221819,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "name this algorithm pattern",
            "submessages": [],
            "timestamp": 1580584307,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/8f3e3f13689ac077fe4ae537e33bde345a57cb22?x=x&version=2",
            "client": "website",
            "content": "<p>I think I've seen this referred to as \"data-oriented programming\" or design.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 187176197,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "recurse@ardent.nebcorp.com",
            "sender_full_name": "Joe Ardent (he) (SP1'17)",
            "sender_id": 9097,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "name this algorithm pattern",
            "submessages": [],
            "timestamp": 1580590153,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/8f3e3f13689ac077fe4ae537e33bde345a57cb22?x=x&version=2",
            "client": "website",
            "content": "<p><a href=\"https://medium.com/@jonathanmines/data-oriented-vs-object-oriented-design-50ef35a99056\" target=\"_blank\" title=\"https://medium.com/@jonathanmines/data-oriented-vs-object-oriented-design-50ef35a99056\">https://medium.com/@jonathanmines/data-oriented-vs-object-oriented-design-50ef35a99056</a></p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 187176202,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "recurse@ardent.nebcorp.com",
            "sender_full_name": "Joe Ardent (he) (SP1'17)",
            "sender_id": 9097,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "name this algorithm pattern",
            "submessages": [],
            "timestamp": 1580590183,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/8f3e3f13689ac077fe4ae537e33bde345a57cb22?x=x&version=2",
            "client": "website",
            "content": "<p><span class=\"user-mention\" data-user-id=\"221819\">@Shae Matijs Erisson (he) (F1'19)</span> No, they're not adaptive algorithms, it's just about laying out the data contiguously, such that it can be efficiently pre-loaded and processed all the way through without jumping pointers around</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 187176297,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "recurse@ardent.nebcorp.com",
            "sender_full_name": "Joe Ardent (he) (SP1'17)",
            "sender_id": 9097,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "name this algorithm pattern",
            "submessages": [],
            "timestamp": 1580590341,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/8ef0cc9607b07f392f70560a43dbbb2d0efd6328?x=x&version=1",
            "client": "website",
            "content": "<p>my understanding of the adaptive algorithms that Shae mentioned is that by laying data contiguously in a hierarchical manner, everyone wins no matter what your particular cache sizes are.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 187177987,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "brian.kihoon.lee@gmail.com",
            "sender_full_name": "Brian Lee (F1'16)",
            "sender_id": 100043,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "name this algorithm pattern",
            "submessages": [],
            "timestamp": 1580593810,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/f84d2614fd35c05737bb6a5a41660384e73da59d?x=x&version=2",
            "client": "website",
            "content": "<p>Hey all! <span class=\"user-mention\" data-user-id=\"255042\">@Johann Diedrick (he) (W2'20)</span> is going to present some stuff about trees today!</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 187365609,
            "is_me_message": false,
            "reactions": [
                {
                    "emoji_code": "1f334",
                    "emoji_name": "palm_tree",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "george@mand.is",
                        "full_name": "George Mandis (he) (W2'20)",
                        "id": 255044
                    },
                    "user_id": 255044
                },
                {
                    "emoji_code": "1f333",
                    "emoji_name": "deciduous_tree",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "george@mand.is",
                        "full_name": "George Mandis (he) (W2'20)",
                        "id": 255044
                    },
                    "user_id": 255044
                },
                {
                    "emoji_code": "1f332",
                    "emoji_name": "evergreen_tree",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "george@mand.is",
                        "full_name": "George Mandis (he) (W2'20)",
                        "id": 255044
                    },
                    "user_id": 255044
                }
            ],
            "recipient_id": 24954,
            "sender_email": "allicolyer@gmail.com",
            "sender_full_name": "Alli Colyer (she) (W2'20)",
            "sender_id": 255791,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Study Group",
            "submessages": [],
            "timestamp": 1580828634,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/f84d2614fd35c05737bb6a5a41660384e73da59d?x=x&version=2",
            "client": "ZulipElectron",
            "content": "<p>Hey everyone! Here's the notes from today</p>\n<p><a href=\"/user_uploads/13/CoqXQ_m7iceGwrwt9hHqNh40/IMG_20200204_110139.jpg\" target=\"_blank\" title=\"IMG_20200204_110139.jpg\">IMG_20200204_110139.jpg</a> <a href=\"/user_uploads/13/zP50UjLhG2XojM2dmwqfjoSU/IMG_20200204_111216.jpg\" target=\"_blank\" title=\"IMG_20200204_111216.jpg\">IMG_20200204_111216.jpg</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/13/CoqXQ_m7iceGwrwt9hHqNh40/IMG_20200204_110139.jpg\" target=\"_blank\" title=\"IMG_20200204_110139.jpg\"><img src=\"/user_uploads/13/CoqXQ_m7iceGwrwt9hHqNh40/IMG_20200204_110139.jpg\"></a></div><div class=\"message_inline_image\"><a href=\"/user_uploads/13/zP50UjLhG2XojM2dmwqfjoSU/IMG_20200204_111216.jpg\" target=\"_blank\" title=\"IMG_20200204_111216.jpg\"><img src=\"/user_uploads/13/zP50UjLhG2XojM2dmwqfjoSU/IMG_20200204_111216.jpg\"></a></div>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 187389422,
            "is_me_message": false,
            "reactions": [
                {
                    "emoji_code": "1f44d",
                    "emoji_name": "+1",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "catwind7+recursecenter@gmail.com",
                        "full_name": "Alan Lin (he) (W1'19)",
                        "id": 247176
                    },
                    "user_id": 247176
                },
                {
                    "emoji_code": "1f44d",
                    "emoji_name": "+1",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "george@mand.is",
                        "full_name": "George Mandis (he) (W2'20)",
                        "id": 255044
                    },
                    "user_id": 255044
                },
                {
                    "emoji_code": "1f44d",
                    "emoji_name": "+1",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "jo@johanndiedrick.com",
                        "full_name": "Johann Diedrick (he) (W2'20)",
                        "id": 255042
                    },
                    "user_id": 255042
                }
            ],
            "recipient_id": 24954,
            "sender_email": "allicolyer@gmail.com",
            "sender_full_name": "Alli Colyer (she) (W2'20)",
            "sender_id": 255791,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Study Group",
            "submessages": [],
            "timestamp": 1580843461,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/0265934fdc86859bdd65431acfcb67e5?d=identicon&version=1",
            "client": "ZulipElectron",
            "content": "<p><a href=\"https://github.com/erchiggins/sundry-rc/blob/master/binary_tree_depth.py\" target=\"_blank\" title=\"https://github.com/erchiggins/sundry-rc/blob/master/binary_tree_depth.py\">https://github.com/erchiggins/sundry-rc/blob/master/binary_tree_depth.py</a> Recursive tree depth!</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 187391163,
            "is_me_message": false,
            "reactions": [
                {
                    "emoji_code": "1f389",
                    "emoji_name": "tada",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "allicolyer@gmail.com",
                        "full_name": "Alli Colyer (she) (W2'20)",
                        "id": 255791
                    },
                    "user_id": 255791
                },
                {
                    "emoji_code": "1f389",
                    "emoji_name": "tada",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "catwind7+recursecenter@gmail.com",
                        "full_name": "Alan Lin (he) (W1'19)",
                        "id": 247176
                    },
                    "user_id": 247176
                }
            ],
            "recipient_id": 24954,
            "sender_email": "emilyrchiggins@gmail.com",
            "sender_full_name": "Emily Higgins (she) (W2'20)",
            "sender_id": 256959,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Study Group",
            "submessages": [],
            "timestamp": 1580844404,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/a0dee7b2f79915213075f1ca226224764407ad4d?x=x&version=4",
            "client": "website",
            "content": "<p>Can anyone see any holes with this iterative DFS on a tree to get the path to a node satisfying the predicate?</p>\n<p>This can be adapted pretty easily to find all nodes satisfying the predicate (and if we swap out the data structure from a stack to a queue, we get BFS, from stack to a heap on accumulated path we get djikstra's, A* can also be bolted on). I think the memory pressure here is linear in the size of the tree, since our linked instances share the linked of their ancestors (there is a 1:1 of a linked instance to a node). If we have a graph instead of a tree, we'll need to track visited in some additional set, which is an additional linear cost.</p>\n<p>Am I right about the memory pressure?</p>\n<div class=\"codehilite\"><pre><span></span>    <span class=\"kd\">public</span> <span class=\"kd\">static</span> <span class=\"n\">List</span><span class=\"o\">&lt;</span><span class=\"n\">TreeNode</span><span class=\"o\">&gt;</span> <span class=\"nf\">getPath</span><span class=\"p\">(</span><span class=\"n\">TreeNode</span> <span class=\"n\">root</span><span class=\"p\">,</span> <span class=\"n\">Predicate</span><span class=\"o\">&lt;</span><span class=\"n\">TreeNode</span><span class=\"o\">&gt;</span> <span class=\"n\">predicate</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n        <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"n\">predicate</span><span class=\"p\">.</span><span class=\"na\">test</span><span class=\"p\">(</span><span class=\"n\">root</span><span class=\"p\">))</span> <span class=\"p\">{</span>\n            <span class=\"k\">return</span> <span class=\"n\">Collections</span><span class=\"p\">.</span><span class=\"na\">singletonList</span><span class=\"p\">(</span><span class=\"n\">root</span><span class=\"p\">);</span>\n        <span class=\"p\">}</span>\n        <span class=\"kd\">final</span> <span class=\"n\">LinkedList</span><span class=\"o\">&lt;</span><span class=\"n\">Linked</span><span class=\"o\">&gt;</span> <span class=\"n\">stack</span> <span class=\"o\">=</span> <span class=\"k\">new</span> <span class=\"n\">LinkedList</span><span class=\"o\">&lt;&gt;</span><span class=\"p\">();</span>\n        <span class=\"n\">stack</span><span class=\"p\">.</span><span class=\"na\">push</span><span class=\"p\">(</span><span class=\"k\">new</span> <span class=\"n\">Linked</span><span class=\"p\">(</span><span class=\"kc\">null</span><span class=\"p\">,</span> <span class=\"n\">root</span><span class=\"p\">));</span>\n        <span class=\"k\">while</span><span class=\"p\">(</span><span class=\"o\">!</span><span class=\"n\">stack</span><span class=\"p\">.</span><span class=\"na\">isEmpty</span><span class=\"p\">())</span> <span class=\"p\">{</span>\n            <span class=\"n\">Linked</span> <span class=\"n\">head</span> <span class=\"o\">=</span> <span class=\"n\">stack</span><span class=\"p\">.</span><span class=\"na\">pop</span><span class=\"p\">();</span>\n            <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"n\">predicate</span><span class=\"p\">.</span><span class=\"na\">test</span><span class=\"p\">(</span><span class=\"n\">head</span><span class=\"p\">.</span><span class=\"na\">node</span><span class=\"p\">))</span> <span class=\"p\">{</span>\n                <span class=\"kd\">final</span> <span class=\"n\">List</span><span class=\"o\">&lt;</span><span class=\"n\">TreeNode</span><span class=\"o\">&gt;</span> <span class=\"n\">out</span> <span class=\"o\">=</span> <span class=\"k\">new</span> <span class=\"n\">ArrayList</span><span class=\"o\">&lt;&gt;</span><span class=\"p\">();</span>\n                <span class=\"n\">Linked</span> <span class=\"n\">curr</span> <span class=\"o\">=</span> <span class=\"n\">head</span><span class=\"p\">;</span>\n                <span class=\"k\">while</span><span class=\"p\">(</span><span class=\"n\">curr</span> <span class=\"o\">!=</span> <span class=\"kc\">null</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n                    <span class=\"n\">out</span><span class=\"p\">.</span><span class=\"na\">add</span><span class=\"p\">(</span><span class=\"n\">curr</span><span class=\"p\">.</span><span class=\"na\">node</span><span class=\"p\">);</span>\n                    <span class=\"n\">curr</span> <span class=\"o\">=</span> <span class=\"n\">curr</span><span class=\"p\">.</span><span class=\"na\">tail</span><span class=\"p\">;</span>\n                <span class=\"p\">}</span>\n                <span class=\"k\">return</span> <span class=\"n\">out</span><span class=\"p\">;</span>\n            <span class=\"p\">}</span> <span class=\"k\">else</span> <span class=\"p\">{</span>\n                <span class=\"k\">for</span> <span class=\"p\">(</span><span class=\"kt\">int</span> <span class=\"n\">i</span> <span class=\"o\">=</span> <span class=\"n\">head</span><span class=\"p\">.</span><span class=\"na\">node</span><span class=\"p\">.</span><span class=\"na\">children</span><span class=\"p\">.</span><span class=\"na\">size</span><span class=\"p\">()</span> <span class=\"o\">-</span> <span class=\"mi\">1</span><span class=\"p\">;</span> <span class=\"n\">i</span> <span class=\"o\">&gt;=</span> <span class=\"mi\">0</span><span class=\"p\">;</span> <span class=\"n\">i</span><span class=\"o\">--</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n                    <span class=\"n\">stack</span><span class=\"p\">.</span><span class=\"na\">push</span><span class=\"p\">(</span><span class=\"k\">new</span> <span class=\"n\">Linked</span><span class=\"p\">(</span><span class=\"n\">head</span><span class=\"p\">,</span> <span class=\"n\">head</span><span class=\"p\">.</span><span class=\"na\">node</span><span class=\"p\">.</span><span class=\"na\">children</span><span class=\"p\">.</span><span class=\"na\">get</span><span class=\"p\">(</span><span class=\"n\">i</span><span class=\"p\">)));</span>\n                <span class=\"p\">}</span>\n            <span class=\"p\">}</span>\n        <span class=\"p\">}</span>\n        <span class=\"k\">return</span> <span class=\"n\">Collections</span><span class=\"p\">.</span><span class=\"na\">emptyList</span><span class=\"p\">();</span>\n    <span class=\"p\">}</span>\n\n    <span class=\"kd\">private</span> <span class=\"kd\">static</span> <span class=\"kd\">class</span> <span class=\"nc\">Linked</span> <span class=\"p\">{</span>\n        <span class=\"nd\">@Nullable</span>\n        <span class=\"kd\">final</span> <span class=\"n\">Linked</span> <span class=\"n\">tail</span><span class=\"p\">;</span>\n        <span class=\"nd\">@NotNull</span>\n        <span class=\"kd\">final</span> <span class=\"n\">TreeNode</span> <span class=\"n\">node</span><span class=\"p\">;</span>\n\n        <span class=\"n\">Linked</span><span class=\"p\">(</span><span class=\"nd\">@Nullable</span> <span class=\"n\">Linked</span> <span class=\"n\">tail</span><span class=\"p\">,</span> <span class=\"nd\">@NotNull</span> <span class=\"n\">TreeNode</span> <span class=\"n\">node</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n            <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"na\">tail</span> <span class=\"o\">=</span> <span class=\"n\">tail</span><span class=\"p\">;</span>\n            <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"na\">node</span> <span class=\"o\">=</span> <span class=\"n\">node</span><span class=\"p\">;</span>\n        <span class=\"p\">}</span>\n    <span class=\"p\">}</span>\n\n    <span class=\"kd\">public</span> <span class=\"kd\">static</span> <span class=\"kd\">class</span> <span class=\"nc\">TreeNode</span> <span class=\"p\">{</span>\n        <span class=\"kd\">final</span> <span class=\"kt\">int</span> <span class=\"n\">value</span><span class=\"p\">;</span>\n        <span class=\"kd\">final</span> <span class=\"n\">List</span><span class=\"o\">&lt;</span><span class=\"n\">TreeNode</span><span class=\"o\">&gt;</span> <span class=\"n\">children</span><span class=\"p\">;</span>\n        <span class=\"n\">TreeNode</span><span class=\"p\">(</span><span class=\"kt\">int</span> <span class=\"n\">value</span><span class=\"p\">,</span> <span class=\"nd\">@NotNull</span> <span class=\"n\">List</span><span class=\"o\">&lt;</span><span class=\"n\">TreeNode</span><span class=\"o\">&gt;</span> <span class=\"n\">children</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n            <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"na\">value</span> <span class=\"o\">=</span> <span class=\"n\">value</span><span class=\"p\">;</span>\n            <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"na\">children</span> <span class=\"o\">=</span> <span class=\"n\">children</span><span class=\"p\">;</span>\n        <span class=\"p\">}</span>\n    <span class=\"p\">}</span>\n</pre></div>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 187488894,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "ajarara94@gmail.com",
            "sender_full_name": "Ahmad Jarara (S2'17)",
            "sender_id": 101400,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Path retrieval of node satisfying predicate",
            "submessages": [],
            "timestamp": 1580932663,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/b2a6b06ba040fd7f7c2acd4d1440e7de?d=identicon&version=1",
            "client": "website",
            "content": "<p>Although the worst-case memory usage is linear, it can also be said that (in the DFS case) getPath will only store O(D * M) nodes in the stack at any given time, where D is the depth of the tree and M is the maximum number of children a node may have. If the tree is balanced, this is significantly better than linear. For a complete binary tree, for example, this is logarithmic.</p>\n<p>(If by \"pressure\" you are talking about GC pressure, then it is indeed linear: in case of \"failure\", you need to go through every node to make sure none of them satisfy the predicate, and each node allocates one Linked object, as you mentioned)</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 187493879,
            "is_me_message": false,
            "last_edit_timestamp": 1580936131,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "mauricio@collares.org",
            "sender_full_name": "Mauricio Collares (he) (W2'19)",
            "sender_id": 158563,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Path retrieval of node satisfying predicate",
            "submessages": [],
            "timestamp": 1580936014,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/a0dee7b2f79915213075f1ca226224764407ad4d?x=x&version=4",
            "client": "website",
            "content": "<p>Oh yeah, you're right! In a balanced binary tree this goes down to just the height!</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 187497994,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "ajarara94@gmail.com",
            "sender_full_name": "Ahmad Jarara (S2'17)",
            "sender_id": 101400,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Path retrieval of node satisfying predicate",
            "submessages": [],
            "timestamp": 1580938895,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/f84d2614fd35c05737bb6a5a41660384e73da59d?x=x&version=2",
            "client": "ZulipElectron",
            "content": "<p><strong>Coin Problem</strong><br>\nYour quirky boss collects rare, old coins...</p>\n<p>They found out you're a programmer and asked you to solve something they've been wondering for a long time.</p>\n<p>Write a function that, given:</p>\n<p>an amount of money<br>\nan array of coin denominations<br>\ncomputes the number of ways to make the amount of money with coins of the available denominations.</p>\n<p>Example: for amount=44 (44\u00a2) and denominations=[1,2,3][1,2,3] (11\u00a2, 22\u00a2 and 33\u00a2), your program would output 44\u2014the number of ways to make 44\u00a2 with those denominations:</p>\n<p>1\u00a2, 1\u00a2, 1\u00a2, 1\u00a2<br>\n1\u00a2, 1\u00a2, 2\u00a2<br>\n1\u00a2, 3\u00a2<br>\n2\u00a2, 2\u00a2</p>\n<p>JAVASCRIPT: <a href=\"https://repl.it/@narshah/making-change-JS\" target=\"_blank\" title=\"https://repl.it/@narshah/making-change-JS\">https://repl.it/@narshah/making-change-JS</a></p>\n<p>PYTHON: <a href=\"https://repl.it/@narshah/making-change-PY\" target=\"_blank\" title=\"https://repl.it/@narshah/making-change-PY\">https://repl.it/@narshah/making-change-PY</a></p>\n<p>If you need another coding language please let me know.</p>\n<p><strong>Solution</strong><br>\nWe use a bottom-up \u21b4 algorithm to build up a table waysOfDoingNCents such that waysOfDoingNCents[k] is how many ways we can get to k cents using our denominations. We start with the base case that there's one way to create the amount zero, and progressively add each of our denominations.</p>\n<p>The number of new ways we can make a higherAmount when we account for a new coin is simply waysOfDoingNCents[higherAmount - coin], where we know that value already includes combinations involving coin (because we went bottom-up, we know smaller values have already been calculated).</p>\n<p>function changePossibilitiesBottomUp(amount, denominations) {</p>\n<p>// Initialize an array of zeros with indices up to amount<br>\n  const waysOfDoingNcents = new Array(amount + 1).fill(0);<br>\n  waysOfDoingNcents[0] = 1;</p>\n<p>denominations.forEach(coin =&gt; {<br>\n    for (let higherAmount = coin; higherAmount &lt;= amount; higherAmount++) {<br>\n      const higherAmountRemainder = higherAmount - coin;<br>\n      waysOfDoingNcents[higherAmount] += waysOfDoingNcents[higherAmountRemainder];<br>\n    }<br>\n  });</p>\n<p>return waysOfDoingNcents[amount];<br>\n}<br>\nHere's how waysOfDoingNCents would look in successive iterations of our function for amount=55 and denominations=[1,3,5][1,3,5].</p>\n<p>===========<br>\nkey:<br>\na = higherAmount<br>\nr = higherAmountRemainder<br>\n===========</p>\n<p>============<br>\nfor coin = 1:<br>\n============<br>\n[1, 1, 0, 0, 0, 0]<br>\n r  a</p>\n<p>[1, 1, 1, 0, 0, 0]<br>\n    r  a</p>\n<p>[1, 1, 1, 1, 0, 0]<br>\n       r  a</p>\n<p>[1, 1, 1, 1, 1, 0]<br>\n          r  a</p>\n<p>[1, 1, 1, 1, 1, 1]<br>\n             r  a</p>\n<p>============<br>\nfor coin = 3:<br>\n=============<br>\n[1, 1, 1, 2, 1, 1]<br>\n r        a</p>\n<p>[1, 1, 1, 2, 2, 1]<br>\n    r        a</p>\n<p>[1, 1, 1, 2, 2, 2]<br>\n       r        a</p>\n<p>============<br>\nfor coin = 5:<br>\n=============<br>\n[1, 1, 1, 2, 2, 3]<br>\n r              a<br>\nfinal answer: 3<br>\nComplexity<br>\nO(n*m)O(n\u2217m) time and O(n)O(n) additional space, where nn is the amount of money and mm is the number of potential denominations.</p>\n<p>What We Learned<br>\nThis question is in a broad class called \"dynamic programming.\" We have a bunch more dynamic programming questions we'll go over later.</p>\n<p>Dynamic programming is kind of like the next step up from greedy. \u21b4 You're taking that idea of \"keeping track of what we need in order to update the best answer so far,\" and applying it to situations where the new best answer so far might not just have to do with the previous answer, but some other earlier answer as well.</p>\n<p>So as you can see in this problem, we kept track of all of our previous answers to smaller versions of the problem (called \"subproblems\") in a big array called waysOfDoingNCents.</p>\n<p>Again, same idea of keeping track of what we need in order to update the answer as we go, like we did when storing the max product of 2, min product of 2, etc in the highest product of 3 question. Except now the thing we need to keep track of is all our previous answers, which we're keeping in an array.</p>\n<p>We built that array bottom-up, but we also talked about how we could do it top-down and memoize. Going bottom-up is cleaner and usually more efficient, but often it's easier to think of the top-down version first and try to adapt from there.</p>\n<p>Dynamic programming is a weak point for lots of candidates. If this one was tricky for you, don't fret. We have more coming later.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 187558552,
            "is_me_message": false,
            "last_edit_timestamp": 1581006729,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "allicolyer@gmail.com",
            "sender_full_name": "Alli Colyer (she) (W2'20)",
            "sender_id": 255791,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Study Group",
            "submessages": [],
            "timestamp": 1581003434,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/f84d2614fd35c05737bb6a5a41660384e73da59d?x=x&version=2",
            "client": "ZulipElectron",
            "content": "<p><strong>Cake Problem</strong></p>\n<p>You are a renowned thief who has recently switched from stealing precious metals to stealing cakes because of the insane profit margins. You end up hitting the jackpot, breaking into the world's largest privately owned stock of cakes\u2014the vault of the Queen of England.</p>\n<p>While Queen Elizabeth has a limited number of types of cake, she has an unlimited supply of each type.</p>\n<p>Each type of cake has a weight and a value, stored in an object with two properties:</p>\n<p>weight: the weight of the cake in kilograms<br>\nvalue: the monetary value of the cake in British shillings<br>\nFor example:</p>\n<p>// Weighs 7 kilograms and has a value of 160 shillings<br>\n{ weight: 7, value: 160 }</p>\n<p>// Weighs 3 kilograms and has a value of 90 shillings<br>\n{ weight: 3, value: 90 }<br>\nYou brought a duffel bag that can hold limited weight, and you want to make off with the most valuable haul possible.</p>\n<p>Write a function maxDuffelBagValue() that takes an array of cake type objects and a weight capacity, and returns the maximum monetary value the duffel bag can hold.</p>\n<p>For example:</p>\n<p>const cakeTypes = [<br>\n  { weight: 7, value: 160 },<br>\n  { weight: 3, value: 90 },<br>\n  { weight: 2, value: 15 },<br>\n];</p>\n<p>const capacity = 20;</p>\n<p>maxDuffelBagValue(cakeTypes, capacity);<br>\n// Returns 555 (6 of the middle type of cake and 1 of the last type of cake)<br>\nWeights and values may be any non-negative integer. Yes, it's weird to think about cakes that weigh nothing or duffel bags that can't hold anything. But we're not just super mastermind criminals\u2014we're also meticulous about keeping our algorithms flexible and comprehensive.</p>\n<p>PYTHON: <a href=\"https://repl.it/@narshah/cake-thief-python\" target=\"_blank\" title=\"https://repl.it/@narshah/cake-thief-python\">https://repl.it/@narshah/cake-thief-python</a></p>\n<p>JAVASCRIPT: <a href=\"https://repl.it/@narshah/cake-thief-js\" target=\"_blank\" title=\"https://repl.it/@narshah/cake-thief-js\">https://repl.it/@narshah/cake-thief-js</a></p>\n<p>If you would like me to provide tests in another language please respond here.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 187559071,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "allicolyer@gmail.com",
            "sender_full_name": "Alli Colyer (she) (W2'20)",
            "sender_id": 255791,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Study Group",
            "submessages": [],
            "timestamp": 1581003792,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/0b3ee06e868ff29c3ccc3d7d4f18944a309e52b6?x=x&version=3",
            "client": "website",
            "content": "<blockquote>\n<p>You are a renowned thief who has recently switched from stealing precious metals to stealing cakes because of the insane profit margins.</p>\n</blockquote>\n<p>I don't recall selling the rights to my life story for this...</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 187559638,
            "is_me_message": false,
            "reactions": [
                {
                    "emoji_code": "1f923",
                    "emoji_name": "rolling_on_the_floor_laughing",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "rohit.parulkar@gmail.com",
                        "full_name": "Rohit Parulkar (W2'20)",
                        "id": 256960
                    },
                    "user_id": 256960
                },
                {
                    "emoji_code": "1f923",
                    "emoji_name": "rolling_on_the_floor_laughing",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "nathanisom27@gmail.com",
                        "full_name": "Nathan Isom (he) (W2'20)",
                        "id": 255190
                    },
                    "user_id": 255190
                },
                {
                    "emoji_code": "1f923",
                    "emoji_name": "rolling_on_the_floor_laughing",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "lukeadba@gmail.com",
                        "full_name": "Luke Barone-Adesi (he) (F'13)",
                        "id": 2903
                    },
                    "user_id": 2903
                },
                {
                    "emoji_code": "1f923",
                    "emoji_name": "rolling_on_the_floor_laughing",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "vaibhavsagar@gmail.com",
                        "full_name": "Vaibhav Sagar (he) (F1'16)",
                        "id": 100041
                    },
                    "user_id": 100041
                },
                {
                    "emoji_code": "1f923",
                    "emoji_name": "rolling_on_the_floor_laughing",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "ariesunique@gmail.com",
                        "full_name": "Aiyana Brooks (she) (W2'20)",
                        "id": 255068
                    },
                    "user_id": 255068
                },
                {
                    "emoji_code": "1f923",
                    "emoji_name": "rolling_on_the_floor_laughing",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "allicolyer@gmail.com",
                        "full_name": "Alli Colyer (she) (W2'20)",
                        "id": 255791
                    },
                    "user_id": 255791
                }
            ],
            "recipient_id": 24954,
            "sender_email": "mai@recurse.com",
            "sender_full_name": "Mai Schwartz",
            "sender_id": 225648,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Study Group",
            "submessages": [],
            "timestamp": 1581004155,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/f84d2614fd35c05737bb6a5a41660384e73da59d?x=x&version=2",
            "client": "ZulipElectron",
            "content": "<p>Cake Thief problem recursive solution in JavaScript: <a href=\"https://repl.it/@Allicolyer/VacantHightechProcedures\" target=\"_blank\" title=\"https://repl.it/@Allicolyer/VacantHightechProcedures\">https://repl.it/@Allicolyer/VacantHightechProcedures</a></p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 187562888,
            "is_me_message": false,
            "last_edit_timestamp": 1581006145,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "allicolyer@gmail.com",
            "sender_full_name": "Alli Colyer (she) (W2'20)",
            "sender_id": 255791,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Study Group",
            "submessages": [],
            "timestamp": 1581006130,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/0265934fdc86859bdd65431acfcb67e5?d=identicon&version=1",
            "client": "ZulipElectron",
            "content": "<p><a href=\"https://github.com/erchiggins/pairing-rc-w2-2020/blob/master/make_change_with_cache.py\" target=\"_blank\" title=\"https://github.com/erchiggins/pairing-rc-w2-2020/blob/master/make_change_with_cache.py\">https://github.com/erchiggins/pairing-rc-w2-2020/blob/master/make_change_with_cache.py</a> Making Change with Memoization</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 187563030,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "emilyrchiggins@gmail.com",
            "sender_full_name": "Emily Higgins (she) (W2'20)",
            "sender_id": 256959,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Study Group",
            "submessages": [],
            "timestamp": 1581006218,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/e3320e126276138a2347efd87ca2a61bd1ab4016?x=x&version=2",
            "client": "website",
            "content": "<p>I am aware of algorithms to efficiently find paths in graphs with minimal total cost, i.e. a \"shortest path\" that corresponds to minimizing the sum of traversed edge weights from node A to node B. I am interested in an algorithm to enumerate paths from A to B that satisfy a target cost interval.</p>\n<p>In my particular case, my graph nodes are street intersections and the edges between them are walking distances, so a target cost interval might be 15 km +/- 0.5 km. In this way, I can enumerate candidate 15km running routes from point A to point B. </p>\n<p>I can accomplish this by enumerating partial routes with either BFS or DFS (extending partial routes and adding to a queue or stack, respectively), and pruning appropriately on my way to solutions, but this method has been quite inefficient. Can anyone recommend an algorithm better suited for this problem / key terms I should use in searching? I have not been able to find anything online.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 187569693,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "dwinston@alum.mit.edu",
            "sender_full_name": "Donny Winston (he) (W1'19)",
            "sender_id": 246979,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "paths in graph with target cost",
            "submessages": [],
            "timestamp": 1581010364,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/21b9cce736cbbe8e0761bbb33863c7d3112d0136?x=x&version=2",
            "client": "website",
            "content": "<p>There are likely better algorithms than that, but I don't think you'll be able to find an efficient algorithm that is guaranteed to find a solution if one exists. I think the problem is NP-Complete. I think if it were possible to solve your problem, it would be possible to use it to solve the <a href=\"https://en.wikipedia.org/wiki/Longest_path_problem\" target=\"_blank\" title=\"https://en.wikipedia.org/wiki/Longest_path_problem\">longest path problem</a>.</p>\n<p>If you could efficiently enumerate all paths in a given range of distances, you could use that to binary search for the longest path, giving you an efficient algorithm for solving the longest path problem.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 187570416,
            "is_me_message": false,
            "last_edit_timestamp": 1581011510,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "michaelmalis2@gmail.com",
            "sender_full_name": "Michael Malis (SP2'19)",
            "sender_id": 8099,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "paths in graph with target cost",
            "submessages": [],
            "timestamp": 1581010805,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/21b9cce736cbbe8e0761bbb33863c7d3112d0136?x=x&version=2",
            "client": "website",
            "content": "<p>There's probably heuristical approaches you can use. For example, pick a node C. Run first to C and then to B. If that route is too short, pick a slightly further away C.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 187571214,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "michaelmalis2@gmail.com",
            "sender_full_name": "Michael Malis (SP2'19)",
            "sender_id": 8099,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "paths in graph with target cost",
            "submessages": [],
            "timestamp": 1581011363,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/e3320e126276138a2347efd87ca2a61bd1ab4016?x=x&version=2",
            "client": "website",
            "content": "<p><span class=\"user-mention\" data-user-id=\"8099\">@Michael Malis (SP2'19)</span> yes, I had suspected this was NP-complete, and your reference to the longest-path problem asserts clearly that even a check for existence of a path (not even enumeration) is so:</p>\n<blockquote>\n<p>the decision version of the problem, which asks whether a path exists of at least some given length, is NP-complete</p>\n</blockquote>\n<p>So, yes, I am hoping for pointers to heuristical approaches. :) Does your intermediate-node suggestion have a name? Going into it a bit deeper, by \"run first to C\" do you mean get merely the shortest path to C, or are you thinking to collect paths to C that form some criterion more strict than \"d(AB) &lt;= d(total) - d(CB)\"?</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 187572392,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "dwinston@alum.mit.edu",
            "sender_full_name": "Donny Winston (he) (W1'19)",
            "sender_id": 246979,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "paths in graph with target cost",
            "submessages": [],
            "timestamp": 1581012129,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/e3320e126276138a2347efd87ca2a61bd1ab4016?x=x&version=2",
            "client": "website",
            "content": "<p>I just found a <a href=\"https://www.aaai.org/Papers/Workshops/2008/WS-08-10/WS08-10-012.pdf\" target=\"_blank\" title=\"https://www.aaai.org/Papers/Workshops/2008/WS-08-10/WS08-10-012.pdf\">couple</a> <a href=\"http://search-conference.org/index.php/Main/SOCS09program?action=download&amp;upname=SoCS09-20.pdf\" target=\"_blank\" title=\"http://search-conference.org/index.php/Main/SOCS09program?action=download&amp;upname=SoCS09-20.pdf\">papers</a> out of Xerox PARC defining and offering heuristic approaches for what they term the \"Target Value Path Problem\", which seems like my problem. One issue is they assume a DAG, whereas my geo graph is both undirected and cyclic. I will keep digging. :)</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 187573940,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "dwinston@alum.mit.edu",
            "sender_full_name": "Donny Winston (he) (W1'19)",
            "sender_id": 246979,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "paths in graph with target cost",
            "submessages": [],
            "timestamp": 1581013299,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/21b9cce736cbbe8e0761bbb33863c7d3112d0136?x=x&version=2",
            "client": "website",
            "content": "<p>I just made up the heuristic. The idea I had was to start with the shortest path, then find some way to keep lengthening it. Picking a third point C that you have to run to first seemed like a not terrible way to do that.</p>\n<p>I was just thinking of finding the shortest path from A-&gt;C and then the shortest path from C-&gt;B, but there are a ton of variations you can try.</p>\n<p>It is possible to solve the <a href=\"https://en.wikipedia.org/wiki/Longest_path_problem#Acyclic_graphs_and_critical_paths\" target=\"_blank\" title=\"https://en.wikipedia.org/wiki/Longest_path_problem#Acyclic_graphs_and_critical_paths\">longest path problem</a> in a DAG, so I suspect you can solve your problem in a DAG. I tried to think of ways to convert a map into a DAG that seems any good, but realized doing that is basically the same as pruning the search space in a DFS.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 187574829,
            "is_me_message": false,
            "last_edit_timestamp": 1581013827,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "michaelmalis2@gmail.com",
            "sender_full_name": "Michael Malis (SP2'19)",
            "sender_id": 8099,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "paths in graph with target cost",
            "submessages": [],
            "timestamp": 1581013807,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/e3320e126276138a2347efd87ca2a61bd1ab4016?x=x&version=2",
            "client": "website",
            "content": "<p>I see -- thanks for clarifying. Your approach is my typical one with Google Maps when I want to map a run from point A to B (most often with A = B, like to my apt and back)! :) I iteratively add/adjust multiple destinations, keeping an eye on the total distance of the given walking-mode trip. This helps me eventually find one decent route for my target distance, with several {C1, C2, ...} intermediate points.</p>\n<p>I am trying to develop this algorithm because I want to automate that process and extend it to present me with multiple potential routes (which I never do because it takes minutes for me to determine just one route). When I do this by eye, I choose intermediate points based on me being able to predict that I won't have to turn very often (e.g. potentially only 3 turns for a run starting on a corner), and it feels like my visual processing system is able to evaluate many candidate C points at once. I'll think about how I might translate that to a heuristic for choosing C values. Thanks!</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 187576541,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "dwinston@alum.mit.edu",
            "sender_full_name": "Donny Winston (he) (W1'19)",
            "sender_id": 246979,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "paths in graph with target cost",
            "submessages": [],
            "timestamp": 1581014960,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/a2193d0d44d3a89de9a2c14dbf38302a2320b022?x=x&version=2",
            "client": "website",
            "content": "<p>Let me know if you want to pair on this. I have some ideas but I'm not sure if they work, so I'd like to talk about it in person. My first idea is to subdivide the problem. So we are searching for a path from A to B that has length X. Subdividing the problem means to find a point C in the middle that has distance X/2 to both A and B. That feels like it should be solvable by A*, but I can't promise it. The immediate problem is that if A=B then this will always find a path that goes to C and then back the same way it came. But maybe that's solvable by finding a point C that's X/3 distance from both A and B, and then find another point D that has the needed distance to turn this into a circle.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 187577935,
            "is_me_message": false,
            "last_edit_timestamp": 1581016538,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "malteskarupke@fastmail.fm",
            "sender_full_name": "Malte Skarupke (he) (W2'20)",
            "sender_id": 255130,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "paths in graph with target cost",
            "submessages": [],
            "timestamp": 1581015890,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/6263e852a5789e39c4bacd700eeba2cce3fe6f8f?x=x&version=5",
            "client": "website",
            "content": "<p>cake problem in clojure <a href=\"https://0x0.st/iiTR.bin\" target=\"_blank\" title=\"https://0x0.st/iiTR.bin\">https://0x0.st/iiTR.bin</a></p>\n<p>edit: invocation like: </p>\n<div class=\"codehilite\"><pre><span></span><span class=\"p\">(</span><span class=\"nf\">maxDuffelBagValue</span>\n <span class=\"p\">[{</span><span class=\"ss\">:weight</span> <span class=\"mi\">7</span> <span class=\"ss\">:value</span> <span class=\"mi\">160</span> <span class=\"p\">}</span>\n  <span class=\"p\">{</span><span class=\"ss\">:weight</span> <span class=\"mi\">3</span> <span class=\"ss\">:value</span> <span class=\"mi\">90</span> <span class=\"p\">}</span>\n  <span class=\"p\">{</span><span class=\"ss\">:weight</span> <span class=\"mi\">2</span> <span class=\"ss\">:value</span> <span class=\"mi\">15</span> <span class=\"p\">}]</span>\n <span class=\"mi\">20</span><span class=\"p\">)</span>\n</pre></div>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 187578053,
            "is_me_message": false,
            "last_edit_timestamp": 1581016106,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "nathanisom27@gmail.com",
            "sender_full_name": "Nathan Isom (he) (W2'20)",
            "sender_id": 255190,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Study Group",
            "submessages": [],
            "timestamp": 1581015968,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/21b9cce736cbbe8e0761bbb33863c7d3112d0136?x=x&version=2",
            "client": "website",
            "content": "<p>Another option is to take the shortest path and repeatedly remove edges from the middle until you go above your target threshold. I feel like that would produce a pretty good shape, although it would likely wind up avoiding all major streets.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 187578337,
            "is_me_message": false,
            "last_edit_timestamp": 1581016219,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "michaelmalis2@gmail.com",
            "sender_full_name": "Michael Malis (SP2'19)",
            "sender_id": 8099,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "paths in graph with target cost",
            "submessages": [],
            "timestamp": 1581016196,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/a2193d0d44d3a89de9a2c14dbf38302a2320b022?x=x&version=2",
            "client": "website",
            "content": "<p>I'm also thinking you might be able to use the Xerox paper by turning your graph into a DAG. This might be doable by cutting all connections backward, not allowing the algorithm to walk back on the same roads. Which might be something that you want to do anyway.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 187578427,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "malteskarupke@fastmail.fm",
            "sender_full_name": "Malte Skarupke (he) (W2'20)",
            "sender_id": 255130,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "paths in graph with target cost",
            "submessages": [],
            "timestamp": 1581016243,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/a2193d0d44d3a89de9a2c14dbf38302a2320b022?x=x&version=2",
            "client": "website",
            "content": "<p>Looks like there is already a stack overflow question about how to turn an arbitrary graph into a DAG:<br>\n<a href=\"https://stackoverflow.com/questions/8127932/how-to-convert-an-undirected-graph-to-a-dag\" target=\"_blank\" title=\"https://stackoverflow.com/questions/8127932/how-to-convert-an-undirected-graph-to-a-dag\">https://stackoverflow.com/questions/8127932/how-to-convert-an-undirected-graph-to-a-dag</a></p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 187578526,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "malteskarupke@fastmail.fm",
            "sender_full_name": "Malte Skarupke (he) (W2'20)",
            "sender_id": 255130,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "paths in graph with target cost",
            "submessages": [],
            "timestamp": 1581016321,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/e3320e126276138a2347efd87ca2a61bd1ab4016?x=x&version=2",
            "client": "website",
            "content": "<p><span class=\"user-mention\" data-user-id=\"255130\">@Malte Skarupke (he) (W2'20)</span> I am definitely interested to pair on this / talk about ideas in person. I also had a nice chat with <span class=\"user-mention\" data-user-id=\"256959\">@Emily Higgins (she) (W2'20)</span> where she suggested some neat heuristics.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 187589081,
            "is_me_message": false,
            "reactions": [
                {
                    "emoji_code": "1684",
                    "emoji_name": "hardhatparrot",
                    "reaction_type": "realm_emoji",
                    "user": {
                        "email": "emilyrchiggins@gmail.com",
                        "full_name": "Emily Higgins (she) (W2'20)",
                        "id": 256959
                    },
                    "user_id": 256959
                }
            ],
            "recipient_id": 24954,
            "sender_email": "dwinston@alum.mit.edu",
            "sender_full_name": "Donny Winston (he) (W1'19)",
            "sender_id": 246979,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "paths in graph with target cost",
            "submessages": [],
            "timestamp": 1581023395,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/f84d2614fd35c05737bb6a5a41660384e73da59d?x=x&version=2",
            "client": "website",
            "content": "<p>Hey all! I realized I didn't post the picture of Emily's solution: <br>\n<a href=\"/user_uploads/13/grneTTLgC5GVYkFQFGKfQm76/IMG_20200206_110209.jpg\" target=\"_blank\" title=\"IMG_20200206_110209.jpg\">IMG_20200206_110209.jpg</a> <a href=\"/user_uploads/13/8mBgDOT8SMn5ipDWjgeF3qxE/IMG_20200206_111841.jpg\" target=\"_blank\" title=\"IMG_20200206_111841.jpg\">IMG_20200206_111841.jpg</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/13/grneTTLgC5GVYkFQFGKfQm76/IMG_20200206_110209.jpg\" target=\"_blank\" title=\"IMG_20200206_110209.jpg\"><img src=\"/user_uploads/13/grneTTLgC5GVYkFQFGKfQm76/IMG_20200206_110209.jpg\"></a></div><div class=\"message_inline_image\"><a href=\"/user_uploads/13/8mBgDOT8SMn5ipDWjgeF3qxE/IMG_20200206_111841.jpg\" target=\"_blank\" title=\"IMG_20200206_111841.jpg\"><img src=\"/user_uploads/13/8mBgDOT8SMn5ipDWjgeF3qxE/IMG_20200206_111841.jpg\"></a></div>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 187918763,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "allicolyer@gmail.com",
            "sender_full_name": "Alli Colyer (she) (W2'20)",
            "sender_id": 255791,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Study Group",
            "submessages": [],
            "timestamp": 1581432871,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/f84d2614fd35c05737bb6a5a41660384e73da59d?x=x&version=2",
            "client": "website",
            "content": "<p>Also today I was going to explain the motivation for binary search trees with a plane scheduling problem. It will probably take around 20-30 mins.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 187921324,
            "is_me_message": false,
            "reactions": [
                {
                    "emoji_code": "1f332",
                    "emoji_name": "evergreen_tree",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "catwind7+recursecenter@gmail.com",
                        "full_name": "Alan Lin (he) (W1'19)",
                        "id": 247176
                    },
                    "user_id": 247176
                },
                {
                    "emoji_code": "1f6eb",
                    "emoji_name": "airplane_departure",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "catwind7+recursecenter@gmail.com",
                        "full_name": "Alan Lin (he) (W1'19)",
                        "id": 247176
                    },
                    "user_id": 247176
                },
                {
                    "emoji_code": "1f6eb",
                    "emoji_name": "airplane_departure",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "emilyrchiggins@gmail.com",
                        "full_name": "Emily Higgins (she) (W2'20)",
                        "id": 256959
                    },
                    "user_id": 256959
                },
                {
                    "emoji_code": "1f332",
                    "emoji_name": "evergreen_tree",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "emilyrchiggins@gmail.com",
                        "full_name": "Emily Higgins (she) (W2'20)",
                        "id": 256959
                    },
                    "user_id": 256959
                }
            ],
            "recipient_id": 24954,
            "sender_email": "allicolyer@gmail.com",
            "sender_full_name": "Alli Colyer (she) (W2'20)",
            "sender_id": 255791,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Study Group",
            "submessages": [],
            "timestamp": 1581434668,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/6407e0da71e5fa2f90f6ca4023bf6b07?d=identicon&version=1",
            "client": "website",
            "content": "<p>I had fun in today's session and the run-over - thanks everyone! The conversation about Javascript weirdness reminded me of this old but still funny talk (starts out with Ruby then goes to JS at 1:20): <a href=\"https://www.destroyallsoftware.com/talks/wat\" target=\"_blank\" title=\"https://www.destroyallsoftware.com/talks/wat\">https://www.destroyallsoftware.com/talks/wat</a></p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 187943276,
            "is_me_message": false,
            "reactions": [
                {
                    "emoji_code": "1f602",
                    "emoji_name": "joy",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "catwind7+recursecenter@gmail.com",
                        "full_name": "Alan Lin (he) (W1'19)",
                        "id": 247176
                    },
                    "user_id": 247176
                }
            ],
            "recipient_id": 24954,
            "sender_email": "rohit.parulkar@gmail.com",
            "sender_full_name": "Rohit Parulkar (W2'20)",
            "sender_id": 256960,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Study Group",
            "submessages": [],
            "timestamp": 1581448261,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/0265934fdc86859bdd65431acfcb67e5?d=identicon&version=1",
            "client": "ZulipElectron",
            "content": "<p><a href=\"https://archive.org/details/pyvideo_276___the-mighty-dictionary-55\" target=\"_blank\" title=\"https://archive.org/details/pyvideo_276___the-mighty-dictionary-55\">https://archive.org/details/pyvideo_276___the-mighty-dictionary-55</a> as promised</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 187946057,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "emilyrchiggins@gmail.com",
            "sender_full_name": "Emily Higgins (she) (W2'20)",
            "sender_id": 256959,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Study Group",
            "submessages": [],
            "timestamp": 1581449970,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/6ae811d40ff8600863755aa510198b5144ebff2c?x=x&version=2",
            "client": "website",
            "content": "<p>Photo from today, thanks <span class=\"user-mention\" data-user-id=\"255791\">@Allison Colyer (she) (W2'20)</span> !</p>\n<p><a href=\"/user_uploads/13/dhhc_L4Af06B2gn4EBqN1IQg/IMG_6202.jpeg\" target=\"_blank\" title=\"IMG_6202.jpeg\">IMG_6202.jpeg</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/13/dhhc_L4Af06B2gn4EBqN1IQg/IMG_6202.jpeg\" target=\"_blank\" title=\"IMG_6202.jpeg\"><img src=\"/user_uploads/13/dhhc_L4Af06B2gn4EBqN1IQg/IMG_6202.jpeg\"></a></div>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 187976551,
            "is_me_message": false,
            "reactions": [
                {
                    "emoji_code": "1f389",
                    "emoji_name": "tada",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "allicolyer@gmail.com",
                        "full_name": "Alli Colyer (she) (W2'20)",
                        "id": 255791
                    },
                    "user_id": 255791
                },
                {
                    "emoji_code": "1f389",
                    "emoji_name": "tada",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "catwind7+recursecenter@gmail.com",
                        "full_name": "Alan Lin (he) (W1'19)",
                        "id": 247176
                    },
                    "user_id": 247176
                }
            ],
            "recipient_id": 24954,
            "sender_email": "jo@johanndiedrick.com",
            "sender_full_name": "Johann Diedrick (he) (W2'20)",
            "sender_id": 255042,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Study Group",
            "submessages": [],
            "timestamp": 1581474128,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/f84d2614fd35c05737bb6a5a41660384e73da59d?x=x&version=2",
            "client": "ZulipMobile",
            "content": "<p><span class=\"user-mention\" data-user-id=\"255042\">@Johann Diedrick (he) (W2'20)</span>  is explaining hashing today!</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 188118209,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "allicolyer@gmail.com",
            "sender_full_name": "Alli Colyer (she) (W2'20)",
            "sender_id": 255791,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Study Group",
            "submessages": [],
            "timestamp": 1581608558,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/f84d2614fd35c05737bb6a5a41660384e73da59d?x=x&version=2",
            "client": "ZulipMobile",
            "content": "<p><a href=\"/user_uploads/13/PNqwsCvEGyi7yIyOfbH9qsko/IMG_20200213_104348.jpg\" target=\"_blank\" title=\"IMG_20200213_104348.jpg\">IMG_20200213_104348.jpg</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/13/PNqwsCvEGyi7yIyOfbH9qsko/IMG_20200213_104348.jpg\" target=\"_blank\" title=\"IMG_20200213_104348.jpg\"><img src=\"/user_uploads/13/PNqwsCvEGyi7yIyOfbH9qsko/IMG_20200213_104348.jpg\"></a></div>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 188118366,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "allicolyer@gmail.com",
            "sender_full_name": "Alli Colyer (she) (W2'20)",
            "sender_id": 255791,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Study Group",
            "submessages": [],
            "timestamp": 1581608647,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/6ae811d40ff8600863755aa510198b5144ebff2c?x=x&version=2",
            "client": "website",
            "content": "<p>My code for finding a needle in a haystack with rolling hashes:</p>\n<div class=\"codehilite\"><pre><span></span>class RollingHash():\n    def __init__(self):\n        self.hash = 0\n\n    def append(self, char, base):\n        self.hash = self.hash * base + ord(char)\n\n    def skip(self, char, power_s):\n        self.hash = self.hash - ord(char) * power_s\n\n    def get_hash(self):\n        return self.hash\n\nclass Solution:\n\n    def strStr(self, haystack: str, needle: str) -&gt; int:\n        string_index = -1\n\n        if len(needle) &gt; len(haystack):\n            return string_index\n\n        if haystack == &quot;&quot; or needle == &quot;&quot;:\n            string_index = 0\n            return string_index\n\n        if len(needle) == len(haystack) and needle==haystack:\n            return 0\n\n        base = 26\n\n        #create and initialize rolling hash for haystack\n        haystack_hash = RollingHash()\n        for c in haystack[:len(needle)]:\n            haystack_hash.append(c, base)\n\n        #create and initialize rolling hash for needle\n        needle_hash = RollingHash()\n        for c in needle:\n            needle_hash.append(c, base)\n\n        power_s = base**max(len(needle) - 1, 0) # base^|s-1|\n\n        for i in range(len(needle), len(haystack)):\n\n            #checks the two substrings are actually equal or not, to pretect against hash collision\n            if needle_hash.get_hash() == haystack_hash.get_hash() and haystack[i - len(needle):i] == needle:\n                string_index = i - len(needle)\n                return string_index\n\n            # use rolling hash to compute the hash code\n            haystack_hash.skip(haystack[i - len(needle)], power_s) # haystack_hash -= ord(haystack[i - len(needle)]) * power_s\n            haystack_hash.append(haystack[i], base) # haystack_hash = haystack_hash * base + ord(haystack[i])\n\n        # tries to match s and t[-len(s):] - the last substring\n        if needle_hash.get_hash() == haystack_hash.get_hash() and haystack[-len(needle):] == needle:\n            string_index = len(haystack) - len(needle)\n\n        return string_index\n</pre></div>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 188136070,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "jo@johanndiedrick.com",
            "sender_full_name": "Johann Diedrick (he) (W2'20)",
            "sender_id": 255042,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Study Group",
            "submessages": [],
            "timestamp": 1581619155,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/f84d2614fd35c05737bb6a5a41660384e73da59d?x=x&version=2",
            "client": "ZulipMobile",
            "content": "<p>Notes from last Thursday:</p>\n<p><a href=\"user_uploads/13/ClBRIyDQP8Z_hN0lnzGuhP49/IMG_20200213_105336.jpg\" target=\"_blank\" title=\"user_uploads/13/ClBRIyDQP8Z_hN0lnzGuhP49/IMG_20200213_105336.jpg\">IMG_20200213_105336.jpg</a> <a href=\"user_uploads/13/1lDAC1arArhx0V3DkP-oUBD-/IMG_20200213_111000.jpg\" target=\"_blank\" title=\"user_uploads/13/1lDAC1arArhx0V3DkP-oUBD-/IMG_20200213_111000.jpg\">IMG_20200213_111000.jpg</a> <a href=\"user_uploads/13/gk_NXaYFtklbNQGKYDLRf3Is/IMG_20200213_111902.jpg\" target=\"_blank\" title=\"user_uploads/13/gk_NXaYFtklbNQGKYDLRf3Is/IMG_20200213_111902.jpg\">IMG_20200213_111902.jpg</a> <a href=\"user_uploads/13/6jB48oZNv5JQEIkdmrfkZEsm/IMG_20200213_112324.jpg\" target=\"_blank\" title=\"user_uploads/13/6jB48oZNv5JQEIkdmrfkZEsm/IMG_20200213_112324.jpg\">IMG_20200213_112324.jpg</a> <a href=\"user_uploads/13/lioB4_O6jd47uy2nBGS_OhR4/IMG_20200213_113052.jpg\" target=\"_blank\" title=\"user_uploads/13/lioB4_O6jd47uy2nBGS_OhR4/IMG_20200213_113052.jpg\">IMG_20200213_113052.jpg</a></p>\n<div class=\"message_inline_image\"><a href=\"user_uploads/13/ClBRIyDQP8Z_hN0lnzGuhP49/IMG_20200213_105336.jpg\" target=\"_blank\" title=\"IMG_20200213_105336.jpg\"><img src=\"user_uploads/13/ClBRIyDQP8Z_hN0lnzGuhP49/IMG_20200213_105336.jpg\"></a></div><div class=\"message_inline_image\"><a href=\"user_uploads/13/1lDAC1arArhx0V3DkP-oUBD-/IMG_20200213_111000.jpg\" target=\"_blank\" title=\"IMG_20200213_111000.jpg\"><img src=\"user_uploads/13/1lDAC1arArhx0V3DkP-oUBD-/IMG_20200213_111000.jpg\"></a></div><div class=\"message_inline_image\"><a href=\"user_uploads/13/gk_NXaYFtklbNQGKYDLRf3Is/IMG_20200213_111902.jpg\" target=\"_blank\" title=\"IMG_20200213_111902.jpg\"><img src=\"user_uploads/13/gk_NXaYFtklbNQGKYDLRf3Is/IMG_20200213_111902.jpg\"></a></div><div class=\"message_inline_image\"><a href=\"user_uploads/13/6jB48oZNv5JQEIkdmrfkZEsm/IMG_20200213_112324.jpg\" target=\"_blank\" title=\"IMG_20200213_112324.jpg\"><img src=\"user_uploads/13/6jB48oZNv5JQEIkdmrfkZEsm/IMG_20200213_112324.jpg\"></a></div><div class=\"message_inline_image\"><a href=\"user_uploads/13/lioB4_O6jd47uy2nBGS_OhR4/IMG_20200213_113052.jpg\" target=\"_blank\" title=\"IMG_20200213_113052.jpg\"><img src=\"user_uploads/13/lioB4_O6jd47uy2nBGS_OhR4/IMG_20200213_113052.jpg\"></a></div>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 188423511,
            "is_me_message": false,
            "last_edit_timestamp": 1582001468,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "allicolyer@gmail.com",
            "sender_full_name": "Alli Colyer (she) (W2'20)",
            "sender_id": 255791,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Study Group",
            "submessages": [],
            "timestamp": 1582001167,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/6d3379580509fafca3f950718db1163497047323?x=x&version=2",
            "client": "ZulipMobile",
            "content": "<p>Does this overlap with the pair profesmming workshop tomorrow?</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 188423564,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "george@mand.is",
            "sender_full_name": "George Mandis (he) (W2'20)",
            "sender_id": 255044,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Study Group",
            "submessages": [],
            "timestamp": 1582001324,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/6d3379580509fafca3f950718db1163497047323?x=x&version=2",
            "client": "ZulipMobile",
            "content": "<p>Oops never mind! The phone app scrolled to an old post.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 188423585,
            "is_me_message": false,
            "reactions": [
                {
                    "emoji_code": "1f44d",
                    "emoji_name": "+1",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "allicolyer@gmail.com",
                        "full_name": "Alli Colyer (she) (W2'20)",
                        "id": 255791
                    },
                    "user_id": 255791
                }
            ],
            "recipient_id": 24954,
            "sender_email": "george@mand.is",
            "sender_full_name": "George Mandis (he) (W2'20)",
            "sender_id": 255044,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Study Group",
            "submessages": [],
            "timestamp": 1582001380,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/f84d2614fd35c05737bb6a5a41660384e73da59d?x=x&version=2",
            "client": "website",
            "content": "<p><span class=\"user-group-mention\" data-user-group-id=\"41\">@Currently at RC</span> I had to make a new calendar event for the algorithms study group since the last one ended on 2/14. Everyone who was previously subscribed got unsubscribed, so please sign up again! <a href=\"https://www.recurse.com/calendar/8937\" target=\"_blank\" title=\"https://www.recurse.com/calendar/8937\">https://www.recurse.com/calendar/8937</a></p>\n<p>For all the new Recursers, we've been having an algorithms study group on Tuesdays and Thursdays from 10:30am - 11:30am. We have been taking turns explaining different algorithms.  So far we've covered things like Binary Search Tree, Hashes and QuickSort!</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 188424258,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "allicolyer@gmail.com",
            "sender_full_name": "Alli Colyer (she) (W2'20)",
            "sender_id": 255791,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Study Group",
            "submessages": [],
            "timestamp": 1582002809,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/f84d2614fd35c05737bb6a5a41660384e73da59d?x=x&version=2",
            "client": "website",
            "content": "<p>Also, I canceled today's meeting since it overlaps with the pair programming workshop but we can officially start on Thursday!</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 188457544,
            "is_me_message": false,
            "reactions": [
                {
                    "emoji_code": "1f44d",
                    "emoji_name": "+1",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "emilyrchiggins@gmail.com",
                        "full_name": "Emily Higgins (she) (W2'20)",
                        "id": 256959
                    },
                    "user_id": 256959
                },
                {
                    "emoji_code": "1f44d",
                    "emoji_name": "+1",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "jo@johanndiedrick.com",
                        "full_name": "Johann Diedrick (he) (W2'20)",
                        "id": 255042
                    },
                    "user_id": 255042
                },
                {
                    "emoji_code": "1f44d",
                    "emoji_name": "+1",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "george@mand.is",
                        "full_name": "George Mandis (he) (W2'20)",
                        "id": 255044
                    },
                    "user_id": 255044
                }
            ],
            "recipient_id": 24954,
            "sender_email": "allicolyer@gmail.com",
            "sender_full_name": "Alli Colyer (she) (W2'20)",
            "sender_id": 255791,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Study Group",
            "submessages": [],
            "timestamp": 1582038002,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/f84d2614fd35c05737bb6a5a41660384e73da59d?x=x&version=2",
            "client": "website",
            "content": "<p>Hey everyone! I am thinking of doing some introductions and doing a short presentation on depth-first tree traversal. I think all of that should take 30-40 minutes. Hopefully that sounds interesting!</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 188643749,
            "is_me_message": false,
            "reactions": [
                {
                    "emoji_code": "1f44d",
                    "emoji_name": "+1",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "aditya.athalye@gmail.com",
                        "full_name": "Aditya Athalye (he) (SP1'20)",
                        "id": 263547
                    },
                    "user_id": 263547
                },
                {
                    "emoji_code": "1f44d",
                    "emoji_name": "+1",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "jo@johanndiedrick.com",
                        "full_name": "Johann Diedrick (he) (W2'20)",
                        "id": 255042
                    },
                    "user_id": 255042
                }
            ],
            "recipient_id": 24954,
            "sender_email": "allicolyer@gmail.com",
            "sender_full_name": "Alli Colyer (she) (W2'20)",
            "sender_id": 255791,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Study Group",
            "submessages": [],
            "timestamp": 1582210095,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/f84d2614fd35c05737bb6a5a41660384e73da59d?x=x&version=2",
            "client": "ZulipMobile",
            "content": "<p><span class=\"user-group-mention\" data-user-group-id=\"41\">@Currently at RC</span> algorithms starting now!</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 188648345,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "allicolyer@gmail.com",
            "sender_full_name": "Alli Colyer (she) (W2'20)",
            "sender_id": 255791,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Study Group",
            "submessages": [],
            "timestamp": 1582212890,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/afcff71a280c619fe7f45af5df2f66b9617479fc?x=x&version=4",
            "client": "website",
            "content": "<p>Thanks <span class=\"user-mention\" data-user-id=\"255791\">@Allison Colyer (she) (W2'20)</span> ... Today's project is trees in Scheme! :-)</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 188658241,
            "is_me_message": false,
            "reactions": [
                {
                    "emoji_code": "1f332",
                    "emoji_name": "evergreen_tree",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "allicolyer@gmail.com",
                        "full_name": "Alli Colyer (she) (W2'20)",
                        "id": 255791
                    },
                    "user_id": 255791
                },
                {
                    "emoji_code": "1f44d",
                    "emoji_name": "+1",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "allicolyer@gmail.com",
                        "full_name": "Alli Colyer (she) (W2'20)",
                        "id": 255791
                    },
                    "user_id": 255791
                }
            ],
            "recipient_id": 24954,
            "sender_email": "aditya.athalye@gmail.com",
            "sender_full_name": "Aditya Athalye (he) (SP1'20)",
            "sender_id": 263547,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Study Group",
            "submessages": [],
            "timestamp": 1582219519,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/6ae811d40ff8600863755aa510198b5144ebff2c?x=x&version=2",
            "client": "website",
            "content": "<p>Photos from <span class=\"user-mention\" data-user-id=\"255791\">@Allison Colyer (she) (W2'20)</span> 's presentation on tree traversal!:</p>\n<p><a href=\"/user_uploads/13/l8HMy-MdsBNpCeFGML6TLLuf/IMG_6252.jpeg\" target=\"_blank\" title=\"IMG_6252.jpeg\">IMG_6252.jpeg</a> </p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/13/l8HMy-MdsBNpCeFGML6TLLuf/IMG_6252.jpeg\" target=\"_blank\" title=\"IMG_6252.jpeg\"><img src=\"/user_uploads/13/l8HMy-MdsBNpCeFGML6TLLuf/IMG_6252.jpeg\"></a></div><p><a href=\"/user_uploads/13/tm_e669MSknBU0JR-_0fWEWT/IMG_6253.jpeg\" target=\"_blank\" title=\"IMG_6253.jpeg\">IMG_6253.jpeg</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/13/tm_e669MSknBU0JR-_0fWEWT/IMG_6253.jpeg\" target=\"_blank\" title=\"IMG_6253.jpeg\"><img src=\"/user_uploads/13/tm_e669MSknBU0JR-_0fWEWT/IMG_6253.jpeg\"></a></div>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 188753386,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "jo@johanndiedrick.com",
            "sender_full_name": "Johann Diedrick (he) (W2'20)",
            "sender_id": 255042,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Study Group",
            "submessages": [],
            "timestamp": 1582305592,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/71a2c45780bed1fbc93205446810943f5eb8e2b6?x=x&version=4",
            "client": "ZulipElectron",
            "content": "<p>Alli doing her best \"Kanye caught by paparazzi\" impression</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 188754637,
            "is_me_message": false,
            "reactions": [
                {
                    "emoji_code": "1f923",
                    "emoji_name": "rolling_on_the_floor_laughing",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "allicolyer@gmail.com",
                        "full_name": "Alli Colyer (she) (W2'20)",
                        "id": 255791
                    },
                    "user_id": 255791
                },
                {
                    "emoji_code": "1682",
                    "emoji_name": "dealwithitparrot",
                    "reaction_type": "realm_emoji",
                    "user": {
                        "email": "allicolyer@gmail.com",
                        "full_name": "Alli Colyer (she) (W2'20)",
                        "id": 255791
                    },
                    "user_id": 255791
                },
                {
                    "emoji_code": "1682",
                    "emoji_name": "dealwithitparrot",
                    "reaction_type": "realm_emoji",
                    "user": {
                        "email": "george@mand.is",
                        "full_name": "George Mandis (he) (W2'20)",
                        "id": 255044
                    },
                    "user_id": 255044
                }
            ],
            "recipient_id": 24954,
            "sender_email": "michaelwenlu@gmail.com",
            "sender_full_name": "Michael W Lu (he) (W2'20)",
            "sender_id": 255046,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Study Group",
            "submessages": [],
            "timestamp": 1582306348,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/6948faab4e5ab8c9d107dba94c9f00e0?d=identicon&version=1",
            "client": "ZulipElectron",
            "content": "<p>Hey! I'm just starting out on my algorithms journey and started out with 6.002 <a href=\"https://ocw.mit.edu/courses/electrical-engineering-and-computer-science/6-0002-introduction-to-computational-thinking-and-data-science-fall-2016/index.htm\" target=\"_blank\" title=\"https://ocw.mit.edu/courses/electrical-engineering-and-computer-science/6-0002-introduction-to-computational-thinking-and-data-science-fall-2016/index.htm\">Introduction to Computational Thinking and Data Science</a>.</p>\n<p>I am also looking at 6.042 <a href=\"https://ocw.mit.edu/courses/electrical-engineering-and-computer-science/6-042j-mathematics-for-computer-science-fall-2010/\" target=\"_blank\" title=\"https://ocw.mit.edu/courses/electrical-engineering-and-computer-science/6-042j-mathematics-for-computer-science-fall-2010/\">Mathematics for Data Science</a>  and 6.006 <a href=\"https://ocw.mit.edu/courses/electrical-engineering-and-computer-science/6-006-introduction-to-algorithms-fall-2011/index.htm\" target=\"_blank\" title=\"https://ocw.mit.edu/courses/electrical-engineering-and-computer-science/6-006-introduction-to-algorithms-fall-2011/index.htm\">Introduction to Algorithms</a> The latter has the former as a prereq.</p>\n<p>Anyone else looking through these or done them in the past and want to chat about it? Especially if you have opinions about order or which ones to focus on, or on the right balance between lectures/problem sets and trying to apply the concepts to my own projects.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 188926443,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "asa@cottageclass.com",
            "sender_full_name": "Asa Needle (he/they) (S1'20)",
            "sender_id": 263510,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "MIT OpenCourseWare",
            "submessages": [],
            "timestamp": 1582551709,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/57f94408b42b82a5e20157003baa2071?d=identicon&version=1",
            "client": "ZulipElectron",
            "content": "<p>Been sporadically following 6.006 for a bit, but looking to start taking it seriously. Probably going to start with 6.002 as well. Let me know when you're free and we could meet downstairs and chat</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 188932421,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "harialexandre@gmail.com",
            "sender_full_name": "Harry Alexander (he) (SP2'20)",
            "sender_id": 100341,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "MIT OpenCourseWare",
            "submessages": [],
            "timestamp": 1582555761,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/3c38f253217c1b67500972630b0e83e581de8880?x=x&version=4",
            "client": "website",
            "content": "<p>Hey everyone,</p>\n<p>I plan to start working through \"Cracking the coding interview\" this week. Does anyone want to work through this together? What would be most helpful for me is to work through a set of problems on my own first and then discuss different solutions with a partner/group. We could decide which problems to work through ahead of time.</p>\n<p>I've also found this site helpful since it specifically targets python, and it also has good exercises. <a href=\"https://runestone.academy/runestone/books/published/pythonds/index.html\" target=\"_blank\" title=\"https://runestone.academy/runestone/books/published/pythonds/index.html\">https://runestone.academy/runestone/books/published/pythonds/index.html</a></p>\n<p>Let me know if anyone is interested. Tagging a few folks who have mentioned \"Cracking the coding interview\" in their checkins - <span class=\"user-mention\" data-user-id=\"255104\">@Toph Allen (he) (W2'20)</span> , <span class=\"user-mention\" data-user-id=\"255791\">@Allison Colyer (she) (W2'20)</span> , <span class=\"user-mention\" data-user-id=\"255046\">@Michael W Lu (he) (W2'20)</span>, <span class=\"user-mention\" data-user-id=\"256959\">@Emily Higgins (she) (W2'20)</span> </p>\n<p>Thanks!</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 188933024,
            "is_me_message": false,
            "reactions": [
                {
                    "emoji_code": "1f44d",
                    "emoji_name": "+1",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "catwind7+recursecenter@gmail.com",
                        "full_name": "Alan Lin (he) (W1'19)",
                        "id": 247176
                    },
                    "user_id": 247176
                },
                {
                    "emoji_code": "1f44d",
                    "emoji_name": "+1",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "mssarratea@gmail.com",
                        "full_name": "Sol Sarratea (she) (SP1'20)",
                        "id": 255051
                    },
                    "user_id": 255051
                },
                {
                    "emoji_code": "1f44d",
                    "emoji_name": "+1",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "allicolyer@gmail.com",
                        "full_name": "Alli Colyer (she) (W2'20)",
                        "id": 255791
                    },
                    "user_id": 255791
                }
            ],
            "recipient_id": 24954,
            "sender_email": "ariesunique@gmail.com",
            "sender_full_name": "Aiyana Brooks (she) (W2'20)",
            "sender_id": 255068,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "cracking coding interview",
            "submessages": [],
            "timestamp": 1582556162,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/0a7281da0a7289a741650707cabd4fd97b489f0e?x=x&version=2",
            "client": "ZulipMobile",
            "content": "<p>Yeah, I think that sorta thing would be really helpful for me too \u2014 it\u2019ll help keep me to a schedule :)</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 188933162,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "toph.allen@gmail.com",
            "sender_full_name": "Toph Allen (he) (SP2'20)",
            "sender_id": 255104,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "cracking coding interview",
            "submessages": [],
            "timestamp": 1582556223,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/3c38f253217c1b67500972630b0e83e581de8880?x=x&version=4",
            "client": "website",
            "content": "<p>Hey Toph,<br>\nWhat is your week like? Do you want to pick a few problems to discuss for Friday?</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 188933805,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "ariesunique@gmail.com",
            "sender_full_name": "Aiyana Brooks (she) (W2'20)",
            "sender_id": 255068,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "cracking coding interview",
            "submessages": [],
            "timestamp": 1582556642,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/6948faab4e5ab8c9d107dba94c9f00e0?d=identicon&version=1",
            "client": "ZulipElectron",
            "content": "<p>Mit roadmap: <a href=\"https://www.eecs.mit.edu/docs/ug/freshman_roadmaps.pdf\" target=\"_blank\" title=\"https://www.eecs.mit.edu/docs/ug/freshman_roadmaps.pdf\">https://www.eecs.mit.edu/docs/ug/freshman_roadmaps.pdf</a></p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 188934035,
            "is_me_message": false,
            "reactions": [
                {
                    "emoji_code": "1f4af",
                    "emoji_name": "100",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "aditya.athalye@gmail.com",
                        "full_name": "Aditya Athalye (he) (SP1'20)",
                        "id": 263547
                    },
                    "user_id": 263547
                }
            ],
            "recipient_id": 24954,
            "sender_email": "asa@cottageclass.com",
            "sender_full_name": "Asa Needle (he/they) (S1'20)",
            "sender_id": 263510,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "MIT OpenCourseWare",
            "submessages": [],
            "timestamp": 1582556829,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/0265934fdc86859bdd65431acfcb67e5?d=identicon&version=1",
            "client": "ZulipMobile",
            "content": "<p>I'd love to join in! I've gotten lots of value from the Big O, Recursion &amp; Dynamic Programming, and Sorting &amp; Searching chapters. I've done some of the problems but by no means all of them :)</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 188934343,
            "is_me_message": false,
            "last_edit_timestamp": 1582557168,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "emilyrchiggins@gmail.com",
            "sender_full_name": "Emily Higgins (she) (W2'20)",
            "sender_id": 256959,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "cracking coding interview",
            "submessages": [],
            "timestamp": 1582557016,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/3c38f253217c1b67500972630b0e83e581de8880?x=x&version=4",
            "client": "website",
            "content": "<p>What's the best way to do this? Should we just start from chap 1: arrays and strings? I'm looking at the 5th edition right now, the problems are on pg 73. There are 8 problems. Should we just do whatever we can from that problem set and then discuss on Friday - compare solutions, what was difficult/tricky, how to optimize, etc.</p>\n<p>Happy to take another suggestion on the best way to work through it.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 188935006,
            "is_me_message": false,
            "reactions": [
                {
                    "emoji_code": "1f44d",
                    "emoji_name": "+1",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "toph.allen@gmail.com",
                        "full_name": "Toph Allen (he) (SP2'20)",
                        "id": 255104
                    },
                    "user_id": 255104
                }
            ],
            "recipient_id": 24954,
            "sender_email": "ariesunique@gmail.com",
            "sender_full_name": "Aiyana Brooks (she) (W2'20)",
            "sender_id": 255068,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "cracking coding interview",
            "submessages": [],
            "timestamp": 1582557483,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/51c7e3813e992d0a4e45cda57334d8a29aed680c?x=x&version=2",
            "client": "ZulipMobile",
            "content": "<p>Cracking the Coding Interview is great. I really loved the intro with Big O and behavior advice. Another book to consider is: </p>\n<p><a href=\"https://www.amazon.com/Elements-Programming-Interviews-Python-Insiders/dp/1537713949\" target=\"_blank\" title=\"https://www.amazon.com/Elements-Programming-Interviews-Python-Insiders/dp/1537713949\">https://www.amazon.com/Elements-Programming-Interviews-Python-Insiders/dp/1537713949</a></p>\n<p>It\u2019s nice because it goes over specific python objects and all of the code examples are type annotated.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 188939271,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "studio@robertdelanghe.com",
            "sender_full_name": "Bobby DeLanghe (he) (F2'19)",
            "sender_id": 240584,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "cracking coding interview",
            "submessages": [],
            "timestamp": 1582560399,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/51c7e3813e992d0a4e45cda57334d8a29aed680c?x=x&version=2",
            "client": "ZulipMobile",
            "content": "<p>I\u2019ll be in tomorrow if you\u2019d like to check out my copy.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 188939315,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "studio@robertdelanghe.com",
            "sender_full_name": "Bobby DeLanghe (he) (F2'19)",
            "sender_id": 240584,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "cracking coding interview",
            "submessages": [],
            "timestamp": 1582560440,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/0a7281da0a7289a741650707cabd4fd97b489f0e?x=x&version=2",
            "client": "website",
            "content": "<p>I'd personally love to start from Chapter 1, because I've never done a comprehensive overview of this topic, and I think I'd find value in working through it in order. We could pick a few problems ahead of time, or we could just work on some problems ourselves and save a few to bring to a Friday group (I'm working on the 6th edition, and I don't know how much they differ)</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 188940039,
            "is_me_message": false,
            "reactions": [
                {
                    "emoji_code": "1f44d",
                    "emoji_name": "+1",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "allicolyer@gmail.com",
                        "full_name": "Alli Colyer (she) (W2'20)",
                        "id": 255791
                    },
                    "user_id": 255791
                }
            ],
            "recipient_id": 24954,
            "sender_email": "toph.allen@gmail.com",
            "sender_full_name": "Toph Allen (he) (SP2'20)",
            "sender_id": 255104,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "cracking coding interview",
            "submessages": [],
            "timestamp": 1582560869,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/3c38f253217c1b67500972630b0e83e581de8880?x=x&version=4",
            "client": "website",
            "content": "<p>I put some time on the calendar for Friday, 1-2pm - <a href=\"https://www.recurse.com/calendar/9059?date=2020-2-23\" target=\"_blank\" title=\"https://www.recurse.com/calendar/9059?date=2020-2-23\">https://www.recurse.com/calendar/9059?date=2020-2-23</a><br>\nToph, Emily, (and anyone else interested) Let me know if that works for you. Let's aim to work through the problems from chapter 1 individually, and then on Friday we can discuss what difficulties we ran into, strategies for solving these, share our solutions, etc.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 188941539,
            "is_me_message": false,
            "reactions": [
                {
                    "emoji_code": "1f44d",
                    "emoji_name": "+1",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "emilyrchiggins@gmail.com",
                        "full_name": "Emily Higgins (she) (W2'20)",
                        "id": 256959
                    },
                    "user_id": 256959
                },
                {
                    "emoji_code": "1f44d",
                    "emoji_name": "+1",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "toph.allen@gmail.com",
                        "full_name": "Toph Allen (he) (SP2'20)",
                        "id": 255104
                    },
                    "user_id": 255104
                }
            ],
            "recipient_id": 24954,
            "sender_email": "ariesunique@gmail.com",
            "sender_full_name": "Aiyana Brooks (she) (W2'20)",
            "sender_id": 255068,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "cracking coding interview",
            "submessages": [],
            "timestamp": 1582561736,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/3c38f253217c1b67500972630b0e83e581de8880?x=x&version=4",
            "client": "website",
            "content": "<p><span class=\"user-mention\" data-user-id=\"240584\">@Robert James DeLanghe (he) (F2'19)</span> Thanks for the recommendation! I've also got this one, which is specific to python <a href=\"https://www.manning.com/books/classic-computer-science-problems-in-python?query=classic%20compu\" target=\"_blank\" title=\"https://www.manning.com/books/classic-computer-science-problems-in-python?query=classic%20compu\">https://www.manning.com/books/classic-computer-science-problems-in-python?query=classic%20compu</a> </p>\n<p>I think right now I need to just pick one book and work through it for a bit to gain some consistency. Do you have any specific tips for working through \"Cracking the coding interview\"?</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 188941857,
            "is_me_message": false,
            "reactions": [
                {
                    "emoji_code": "1f44d",
                    "emoji_name": "+1",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "studio@robertdelanghe.com",
                        "full_name": "Bobby DeLanghe (he) (F2'19)",
                        "id": 240584
                    },
                    "user_id": 240584
                },
                {
                    "emoji_code": "1f40d",
                    "emoji_name": "snake",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "studio@robertdelanghe.com",
                        "full_name": "Bobby DeLanghe (he) (F2'19)",
                        "id": 240584
                    },
                    "user_id": 240584
                }
            ],
            "recipient_id": 24954,
            "sender_email": "ariesunique@gmail.com",
            "sender_full_name": "Aiyana Brooks (she) (W2'20)",
            "sender_id": 255068,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "cracking coding interview",
            "submessages": [],
            "timestamp": 1582561916,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/0a7281da0a7289a741650707cabd4fd97b489f0e?x=x&version=2",
            "client": "website",
            "content": "<p><span class=\"user-mention\" data-user-id=\"255068\">@Aiyana Brooks (she) (W2'20)</span> Thanks for organizing this!</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 188942166,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "toph.allen@gmail.com",
            "sender_full_name": "Toph Allen (he) (SP2'20)",
            "sender_id": 255104,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "cracking coding interview",
            "submessages": [],
            "timestamp": 1582562097,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/51c7e3813e992d0a4e45cda57334d8a29aed680c?x=x&version=2",
            "client": "ZulipMobile",
            "content": "<p><span class=\"user-mention\" data-user-id=\"240843\">@Eliot Linton (he) (F2'19)</span> and I found that it can sometimes be really easy to misunderstand the problems. We found it works best of one person had solved the problem first and then acted as the interviewer for the other person.</p>\n<p>Also apparently there are solutions to cracking the coding interview on GitHub.</p>\n<p>Last note this might just be a different choice of style, but I\u2019ve found it helpful to mix up the material. CTCI, Interview Cake, EPI in Python all roughly map to each other so you can choose one table of contents and just jump between sources.</p>\n<p>Maybe it\u2019d help with not overfitting to one style, but I found at the very least it helps cut down on the monotony of code practice.</p>\n<p>Last.. last note. Write things down in a notebook and after you double checked everything only then type in into your IDE. I can\u2019t stress how much putting of checking if I was \u201cright\u201d helped me eventually feel more confident. <span class=\"user-mention\" data-user-id=\"255068\">@Aiyana Brooks (she) (W2'20)</span>  I hope this helps.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 188945347,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "studio@robertdelanghe.com",
            "sender_full_name": "Bobby DeLanghe (he) (F2'19)",
            "sender_id": 240584,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "cracking coding interview",
            "submessages": [],
            "timestamp": 1582564144,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/636fd02bbe2ba4d6ad1db3a485ef14a59307d674?x=x&version=4",
            "client": "website",
            "content": "<p>I'd love to join this too! Happy with starting from chapter 1 :)</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 188948441,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "anupama94@gmail.com",
            "sender_full_name": "Anu Unnikrishnan (she) (S1'20)",
            "sender_id": 263499,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "cracking coding interview",
            "submessages": [],
            "timestamp": 1582566182,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/3c38f253217c1b67500972630b0e83e581de8880?x=x&version=4",
            "client": "website",
            "content": "<p><span class=\"user-mention\" data-user-id=\"240584\">@Robert James DeLanghe (he) (F2'19)</span> Thank you so much! That is really helpful. And you make a good point about switching things up to keep it fresh. I will keep all of this in mind. <span aria-label=\"slight smile\" class=\"emoji emoji-1f642\" role=\"img\" title=\"slight smile\">:slight_smile:</span></p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 188949307,
            "is_me_message": false,
            "reactions": [
                {
                    "emoji_code": "1f44d",
                    "emoji_name": "+1",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "studio@robertdelanghe.com",
                        "full_name": "Bobby DeLanghe (he) (F2'19)",
                        "id": 240584
                    },
                    "user_id": 240584
                }
            ],
            "recipient_id": 24954,
            "sender_email": "ariesunique@gmail.com",
            "sender_full_name": "Aiyana Brooks (she) (W2'20)",
            "sender_id": 255068,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "cracking coding interview",
            "submessages": [],
            "timestamp": 1582566849,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/f84d2614fd35c05737bb6a5a41660384e73da59d?x=x&version=2",
            "client": "ZulipMobile",
            "content": "<p><a href=\"/user_uploads/13/o9IZ7Y5pr0amS8XMvoeikyds/IMG_20200225_111628.jpg\" target=\"_blank\" title=\"IMG_20200225_111628.jpg\">IMG_20200225_111628.jpg</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/13/o9IZ7Y5pr0amS8XMvoeikyds/IMG_20200225_111628.jpg\" target=\"_blank\" title=\"IMG_20200225_111628.jpg\"><img src=\"/user_uploads/13/o9IZ7Y5pr0amS8XMvoeikyds/IMG_20200225_111628.jpg\"></a></div>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 189035578,
            "is_me_message": false,
            "reactions": [
                {
                    "emoji_code": "1f419",
                    "emoji_name": "octopus",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "dylnuge@gmail.com",
                        "full_name": "Dylan Nugent (he) (S1'20)",
                        "id": 263512
                    },
                    "user_id": 263512
                }
            ],
            "recipient_id": 24954,
            "sender_email": "allicolyer@gmail.com",
            "sender_full_name": "Alli Colyer (she) (W2'20)",
            "sender_id": 255791,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Study Group",
            "submessages": [],
            "timestamp": 1582648516,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/f84d2614fd35c05737bb6a5a41660384e73da59d?x=x&version=2",
            "client": "ZulipMobile",
            "content": "<p><a href=\"/user_uploads/13/C09GzgcIVnpleSfL36cjvYLz/IMG_20200225_113110.jpg\" target=\"_blank\" title=\"IMG_20200225_113110.jpg\">IMG_20200225_113110.jpg</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/13/C09GzgcIVnpleSfL36cjvYLz/IMG_20200225_113110.jpg\" target=\"_blank\" title=\"IMG_20200225_113110.jpg\"><img src=\"/user_uploads/13/C09GzgcIVnpleSfL36cjvYLz/IMG_20200225_113110.jpg\"></a></div>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 189035590,
            "is_me_message": false,
            "reactions": [
                {
                    "emoji_code": "1f419",
                    "emoji_name": "octopus",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "dylnuge@gmail.com",
                        "full_name": "Dylan Nugent (he) (S1'20)",
                        "id": 263512
                    },
                    "user_id": 263512
                }
            ],
            "recipient_id": 24954,
            "sender_email": "allicolyer@gmail.com",
            "sender_full_name": "Alli Colyer (she) (W2'20)",
            "sender_id": 255791,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Study Group",
            "submessages": [],
            "timestamp": 1582648522,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/f84d2614fd35c05737bb6a5a41660384e73da59d?x=x&version=2",
            "client": "website",
            "content": "<p>notes from today!</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 189035695,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "allicolyer@gmail.com",
            "sender_full_name": "Alli Colyer (she) (W2'20)",
            "sender_id": 255791,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Study Group",
            "submessages": [],
            "timestamp": 1582648568,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/f84d2614fd35c05737bb6a5a41660384e73da59d?x=x&version=2",
            "client": "website",
            "content": "<p>Also as mentioned, I am going to move this to a once per week group and remove the Tuesday meetings on the calendar. You are all, of course, welcome to keep meeting on Tuesdays <span aria-label=\"slight smile\" class=\"emoji emoji-1f642\" role=\"img\" title=\"slight smile\">:slight_smile:</span> I just need some time freed up for myself.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 189036067,
            "is_me_message": false,
            "last_edit_timestamp": 1582648827,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "allicolyer@gmail.com",
            "sender_full_name": "Alli Colyer (she) (W2'20)",
            "sender_id": 255791,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Study Group",
            "submessages": [],
            "timestamp": 1582648805,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/a94df6a414bc64771690399a940d1c52?d=identicon&version=1",
            "client": "ZulipElectron",
            "content": "<p>Some resources:</p>\n<ul>\n<li>Amortized analysis, for anyone interested in how the proofs work (there are a couple methods): <a href=\"http://jeffe.cs.illinois.edu/teaching/algorithms/notes/09-amortize.pdf\" target=\"_blank\" title=\"http://jeffe.cs.illinois.edu/teaching/algorithms/notes/09-amortize.pdf\">http://jeffe.cs.illinois.edu/teaching/algorithms/notes/09-amortize.pdf</a></li>\n<li>Python's internal list resizing code (turns out they don't use 2x exactly!): <a href=\"https://github.com/python/cpython/blob/master/Objects/listobject.c#L36\" target=\"_blank\" title=\"https://github.com/python/cpython/blob/master/Objects/listobject.c#L36\">https://github.com/python/cpython/blob/master/Objects/listobject.c#L36</a></li>\n<li>Heaps: <a href=\"https://www.cs.cmu.edu/~adamchik/15-121/lectures/Binary%20Heaps/heaps.html\" target=\"_blank\" title=\"https://www.cs.cmu.edu/~adamchik/15-121/lectures/Binary%20Heaps/heaps.html\">https://www.cs.cmu.edu/~adamchik/15-121/lectures/Binary%20Heaps/heaps.html</a></li>\n<li>Huffman Coding: <a href=\"https://www2.cs.duke.edu/csed/poop/huff/info/\" target=\"_blank\" title=\"https://www2.cs.duke.edu/csed/poop/huff/info/\">https://www2.cs.duke.edu/csed/poop/huff/info/</a></li>\n</ul>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 189036680,
            "is_me_message": false,
            "last_edit_timestamp": 1582649259,
            "reactions": [
                {
                    "emoji_code": "1f44d",
                    "emoji_name": "+1",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "miles@rmrm.io",
                        "full_name": "Miles McCain (he) (SP1'20)",
                        "id": 263501
                    },
                    "user_id": 263501
                },
                {
                    "emoji_code": "1f44d",
                    "emoji_name": "+1",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "allicolyer@gmail.com",
                        "full_name": "Alli Colyer (she) (W2'20)",
                        "id": 255791
                    },
                    "user_id": 255791
                }
            ],
            "recipient_id": 24954,
            "sender_email": "dylnuge@gmail.com",
            "sender_full_name": "Dylan Nugent (he) (S1'20)",
            "sender_id": 263512,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Study Group",
            "submessages": [],
            "timestamp": 1582649251,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/a94df6a414bc64771690399a940d1c52?d=identicon&version=1",
            "client": "ZulipElectron",
            "content": "<p>Also the whole Jeff Erickson book I mentioned is available for free here, for anyone interested: <a href=\"http://algorithms.wtf/\" target=\"_blank\" title=\"http://algorithms.wtf/\">http://algorithms.wtf/</a></p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 189036900,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "dylnuge@gmail.com",
            "sender_full_name": "Dylan Nugent (he) (S1'20)",
            "sender_id": 263512,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Study Group",
            "submessages": [],
            "timestamp": 1582649388,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/570b5294859a4650f5c6c4f866b6fba3e34af02b?x=x&version=2",
            "client": "website",
            "content": "<p>Someone want to help me understand wtf is going on with that python code?<br>\nlooks like this might be the new list size, and <code>newsize</code> is the required list size</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"n\">new_allocated</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"kt\">size_t</span><span class=\"p\">)</span><span class=\"n\">newsize</span> <span class=\"o\">+</span> <span class=\"p\">(</span><span class=\"n\">newsize</span> <span class=\"o\">&gt;&gt;</span> <span class=\"mi\">3</span><span class=\"p\">)</span> <span class=\"o\">+</span> <span class=\"p\">(</span><span class=\"n\">newsize</span> <span class=\"o\">&lt;</span> <span class=\"mi\">9</span> <span class=\"o\">?</span> <span class=\"mi\">3</span> <span class=\"o\">:</span> <span class=\"mi\">6</span><span class=\"p\">)</span>\n</pre></div>\n\n\n<p>Comments in the code claim it is overallocating \"enough for amortized O(1) inserts,\" but I don't follow.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 189037539,
            "is_me_message": false,
            "reactions": [
                {
                    "emoji_code": "1f44d",
                    "emoji_name": "+1",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "dylnuge@gmail.com",
                        "full_name": "Dylan Nugent (he) (S1'20)",
                        "id": 263512
                    },
                    "user_id": 263512
                },
                {
                    "emoji_code": "1f44d",
                    "emoji_name": "+1",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "allicolyer@gmail.com",
                        "full_name": "Alli Colyer (she) (W2'20)",
                        "id": 255791
                    },
                    "user_id": 255791
                }
            ],
            "recipient_id": 24954,
            "sender_email": "tobinyehle@gmail.com",
            "sender_full_name": "Tobin Yehle (he) (SP1'20)",
            "sender_id": 105607,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Study Group",
            "submessages": [],
            "timestamp": 1582649719,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/7857f26c1ef2e9bdbfa843f9087710f7?d=identicon&version=1",
            "client": "website",
            "content": "<p>Amortized O(n) appends, not O(1) inserts, I think</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 189038055,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "nathan12343@gmail.com",
            "sender_full_name": "Nathan Goldbaum (he) (S1'19)",
            "sender_id": 221814,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Study Group",
            "submessages": [],
            "timestamp": 1582650005,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/7857f26c1ef2e9bdbfa843f9087710f7?d=identicon&version=1",
            "client": "website",
            "content": "<p>unless i'm misreading</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 189038072,
            "is_me_message": false,
            "last_edit_timestamp": 1582650130,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "nathan12343@gmail.com",
            "sender_full_name": "Nathan Goldbaum (he) (S1'19)",
            "sender_id": 221814,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Study Group",
            "submessages": [],
            "timestamp": 1582650010,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/7857f26c1ef2e9bdbfa843f9087710f7?d=identicon&version=1",
            "client": "website",
            "content": "<p>so appending and inserting are supposed to allocate a new list every time, but in this case they've provided an optimization so that you allocate some extra space the size of which is proportional to the size of the list</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 189038320,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "nathan12343@gmail.com",
            "sender_full_name": "Nathan Goldbaum (he) (S1'19)",
            "sender_id": 221814,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Study Group",
            "submessages": [],
            "timestamp": 1582650137,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/7857f26c1ef2e9bdbfa843f9087710f7?d=identicon&version=1",
            "client": "website",
            "content": "<p>so if you are only appending or inserting a small extra amount of data, you can get away with not actually allocating a new list since there's some extra space</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 189038357,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "nathan12343@gmail.com",
            "sender_full_name": "Nathan Goldbaum (he) (S1'19)",
            "sender_id": 221814,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Study Group",
            "submessages": [],
            "timestamp": 1582650173,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/7857f26c1ef2e9bdbfa843f9087710f7?d=identicon&version=1",
            "client": "website",
            "content": "<p>the comment indicates that this is because the C realloc() is slower than O(n) on some platforms</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 189038397,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "nathan12343@gmail.com",
            "sender_full_name": "Nathan Goldbaum (he) (S1'19)",
            "sender_id": 221814,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Study Group",
            "submessages": [],
            "timestamp": 1582650200,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/7857f26c1ef2e9bdbfa843f9087710f7?d=identicon&version=1",
            "client": "website",
            "content": "<p>so this choice means you only need to pay that cost once every few times if you're appending a single element over and over again</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 189038504,
            "is_me_message": false,
            "last_edit_timestamp": 1582650257,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "nathan12343@gmail.com",
            "sender_full_name": "Nathan Goldbaum (he) (S1'19)",
            "sender_id": 221814,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Study Group",
            "submessages": [],
            "timestamp": 1582650247,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/7857f26c1ef2e9bdbfa843f9087710f7?d=identicon&version=1",
            "client": "website",
            "content": "<p>or was the question specifically about the line of code you shared?</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 189038648,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "nathan12343@gmail.com",
            "sender_full_name": "Nathan Goldbaum (he) (S1'19)",
            "sender_id": 221814,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Study Group",
            "submessages": [],
            "timestamp": 1582650334,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/570b5294859a4650f5c6c4f866b6fba3e34af02b?x=x&version=2",
            "client": "website",
            "content": "<p>Specifically about that line.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 189039133,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "tobinyehle@gmail.com",
            "sender_full_name": "Tobin Yehle (he) (SP1'20)",
            "sender_id": 105607,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Study Group",
            "submessages": [],
            "timestamp": 1582650618,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/570b5294859a4650f5c6c4f866b6fba3e34af02b?x=x&version=2",
            "client": "website",
            "content": "<p>Looks to me that this can be translated as</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"n\">new_allocated</span> <span class=\"o\">=</span> <span class=\"n\">newsize</span> <span class=\"o\">+</span> <span class=\"n\">newsize</span><span class=\"o\">/</span><span class=\"mi\">8</span> <span class=\"o\">+</span> <span class=\"p\">(</span><span class=\"mi\">3</span> <span class=\"n\">or</span> <span class=\"mi\">6</span><span class=\"p\">)</span>\n</pre></div>\n\n\n<p>But I feel like that cannot possibly be correct.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 189039225,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "tobinyehle@gmail.com",
            "sender_full_name": "Tobin Yehle (he) (SP1'20)",
            "sender_id": 105607,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Study Group",
            "submessages": [],
            "timestamp": 1582650701,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/7857f26c1ef2e9bdbfa843f9087710f7?d=identicon&version=1",
            "client": "website",
            "content": "<p>so that's not quite right, <code>newsize &gt;&gt; 3</code> is not <code>newsize / 8</code>:</p>\n<div class=\"codehilite\"><pre><span></span>&gt;&gt;&gt; [i &gt;&gt; 3 for i in range(20)]\n[0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2]\n</pre></div>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 189039359,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "nathan12343@gmail.com",
            "sender_full_name": "Nathan Goldbaum (he) (S1'19)",
            "sender_id": 221814,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Study Group",
            "submessages": [],
            "timestamp": 1582650776,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/7857f26c1ef2e9bdbfa843f9087710f7?d=identicon&version=1",
            "client": "website",
            "content": "<p>oh wait, nm, it is the same</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 189039398,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "nathan12343@gmail.com",
            "sender_full_name": "Nathan Goldbaum (he) (S1'19)",
            "sender_id": 221814,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Study Group",
            "submessages": [],
            "timestamp": 1582650819,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/a94df6a414bc64771690399a940d1c52?d=identicon&version=1",
            "client": "ZulipElectron",
            "content": "<p><code>newsize &gt;&gt; 3</code> is equivalent to dividing by 8. The <code>(newsize &lt;9 ? 3: 6)</code> is special case code for small lists that seems to be a fine tuning (last adjusted in 2004 with: <a href=\"https://github.com/python/cpython/commit/ab517d2eacba7fec5f31dd25b8e43dca678cda53\" target=\"_blank\" title=\"https://github.com/python/cpython/commit/ab517d2eacba7fec5f31dd25b8e43dca678cda53\">https://github.com/python/cpython/commit/ab517d2eacba7fec5f31dd25b8e43dca678cda53</a>). Some of the tuning appears to be related to issues in Windows `realloc. The original commit introducing this logic in any form is here: <a href=\"https://github.com/python/cpython/commit/4bb9540dd6eddaf60b908796c2412696a8870bd1\" target=\"_blank\" title=\"https://github.com/python/cpython/commit/4bb9540dd6eddaf60b908796c2412696a8870bd1\">https://github.com/python/cpython/commit/4bb9540dd6eddaf60b908796c2412696a8870bd1</a></p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 189039411,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "dylnuge@gmail.com",
            "sender_full_name": "Dylan Nugent (he) (S1'20)",
            "sender_id": 263512,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Study Group",
            "submessages": [],
            "timestamp": 1582650832,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/7857f26c1ef2e9bdbfa843f9087710f7?d=identicon&version=1",
            "client": "website",
            "content": "<p>yeah, it's a ternary if</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 189039467,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "nathan12343@gmail.com",
            "sender_full_name": "Nathan Goldbaum (he) (S1'19)",
            "sender_id": 221814,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Study Group",
            "submessages": [],
            "timestamp": 1582650848,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/7857f26c1ef2e9bdbfa843f9087710f7?d=identicon&version=1",
            "client": "website",
            "content": "<p>it's only 3 if <code>newsize &lt; 9</code></p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 189039481,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "nathan12343@gmail.com",
            "sender_full_name": "Nathan Goldbaum (he) (S1'19)",
            "sender_id": 221814,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Study Group",
            "submessages": [],
            "timestamp": 1582650859,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/7857f26c1ef2e9bdbfa843f9087710f7?d=identicon&version=1",
            "client": "website",
            "content": "<p>thanks for doing that VCS digging :)</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 189039504,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "nathan12343@gmail.com",
            "sender_full_name": "Nathan Goldbaum (he) (S1'19)",
            "sender_id": 221814,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Study Group",
            "submessages": [],
            "timestamp": 1582650882,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/a94df6a414bc64771690399a940d1c52?d=identicon&version=1",
            "client": "ZulipElectron",
            "content": "<p>So there's been heavy tuning around how real-world systems actually perform, which is likely way out of scope for algorithms study group</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 189039516,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "dylnuge@gmail.com",
            "sender_full_name": "Dylan Nugent (he) (S1'20)",
            "sender_id": 263512,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Study Group",
            "submessages": [],
            "timestamp": 1582650892,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/570b5294859a4650f5c6c4f866b6fba3e34af02b?x=x&version=2",
            "client": "website",
            "content": "<p>But when newsize is large then this is going to allocate <em>way</em> less than twice the list size</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 189039529,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "tobinyehle@gmail.com",
            "sender_full_name": "Tobin Yehle (he) (SP1'20)",
            "sender_id": 105607,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Study Group",
            "submessages": [],
            "timestamp": 1582650902,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/7857f26c1ef2e9bdbfa843f9087710f7?d=identicon&version=1",
            "client": "website",
            "content": "<p>also optimizing for small lists makes a lot of sense, there are a lot of small lists in the python runtime</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 189039539,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "nathan12343@gmail.com",
            "sender_full_name": "Nathan Goldbaum (he) (S1'19)",
            "sender_id": 221814,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Study Group",
            "submessages": [],
            "timestamp": 1582650912,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/7857f26c1ef2e9bdbfa843f9087710f7?d=identicon&version=1",
            "client": "website",
            "content": "<p>yeah, about 10%</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 189039551,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "nathan12343@gmail.com",
            "sender_full_name": "Nathan Goldbaum (he) (S1'19)",
            "sender_id": 221814,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Study Group",
            "submessages": [],
            "timestamp": 1582650920,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/a94df6a414bc64771690399a940d1c52?d=identicon&version=1",
            "client": "ZulipElectron",
            "content": "<p>Yep! It's allocating 1/8th additional overhead (approximately)</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 189039563,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "dylnuge@gmail.com",
            "sender_full_name": "Dylan Nugent (he) (S1'20)",
            "sender_id": 263512,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Study Group",
            "submessages": [],
            "timestamp": 1582650927,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/570b5294859a4650f5c6c4f866b6fba3e34af02b?x=x&version=2",
            "client": "website",
            "content": "<p>I don't understand how you can claim to have O(1) amortized inserts in that case</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 189039591,
            "is_me_message": false,
            "last_edit_timestamp": 1582650988,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "tobinyehle@gmail.com",
            "sender_full_name": "Tobin Yehle (he) (SP1'20)",
            "sender_id": 105607,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Study Group",
            "submessages": [],
            "timestamp": 1582650951,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/7857f26c1ef2e9bdbfa843f9087710f7?d=identicon&version=1",
            "client": "website",
            "content": "<p>i think they're optimizing for code like</p>\n<div class=\"codehilite\"><pre><span></span>lis = []\nfor i in range(100):\n    lis.append(i)\n</pre></div>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 189039593,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "nathan12343@gmail.com",
            "sender_full_name": "Nathan Goldbaum (he) (S1'19)",
            "sender_id": 221814,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Study Group",
            "submessages": [],
            "timestamp": 1582650951,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/7857f26c1ef2e9bdbfa843f9087710f7?d=identicon&version=1",
            "client": "website",
            "content": "<p>which is a pretty common pattern</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 189039601,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "nathan12343@gmail.com",
            "sender_full_name": "Nathan Goldbaum (he) (S1'19)",
            "sender_id": 221814,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Study Group",
            "submessages": [],
            "timestamp": 1582650956,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/7857f26c1ef2e9bdbfa843f9087710f7?d=identicon&version=1",
            "client": "website",
            "content": "<p>it's O(n), not O(1)</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 189039656,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "nathan12343@gmail.com",
            "sender_full_name": "Nathan Goldbaum (he) (S1'19)",
            "sender_id": 221814,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Study Group",
            "submessages": [],
            "timestamp": 1582650971,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/a94df6a414bc64771690399a940d1c52?d=identicon&version=1",
            "client": "ZulipElectron",
            "content": "<p>They don't claim to have constant amortized inserts in that case <span aria-label=\"slight smile\" class=\"emoji emoji-1f642\" role=\"img\" title=\"slight smile\">:slight_smile:</span></p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 189039659,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "dylnuge@gmail.com",
            "sender_full_name": "Dylan Nugent (he) (S1'20)",
            "sender_id": 263512,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Study Group",
            "submessages": [],
            "timestamp": 1582650974,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/a94df6a414bc64771690399a940d1c52?d=identicon&version=1",
            "client": "ZulipElectron",
            "content": "<p>Apparently that's worth less than the calloc savings</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 189039675,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "dylnuge@gmail.com",
            "sender_full_name": "Dylan Nugent (he) (S1'20)",
            "sender_id": 263512,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Study Group",
            "submessages": [],
            "timestamp": 1582650987,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/570b5294859a4650f5c6c4f866b6fba3e34af02b?x=x&version=2",
            "client": "website",
            "content": "<p>Oh misread that comment ... oops</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 189039758,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "tobinyehle@gmail.com",
            "sender_full_name": "Tobin Yehle (he) (SP1'20)",
            "sender_id": 105607,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Study Group",
            "submessages": [],
            "timestamp": 1582651042,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/a94df6a414bc64771690399a940d1c52?d=identicon&version=1",
            "client": "ZulipElectron",
            "content": "<p>For a traditional doubling array with amortized constant inserts, see Rust's implementation of Vec: <a href=\"https://github.com/rust-lang/rust/blob/master/src/liballoc/raw_vec.rs#L410\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/blob/master/src/liballoc/raw_vec.rs#L410\">https://github.com/rust-lang/rust/blob/master/src/liballoc/raw_vec.rs#L410</a></p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 189041699,
            "is_me_message": false,
            "last_edit_timestamp": 1582652336,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "dylnuge@gmail.com",
            "sender_full_name": "Dylan Nugent (he) (S1'20)",
            "sender_id": 263512,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Study Group",
            "submessages": [],
            "timestamp": 1582652304,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/a94df6a414bc64771690399a940d1c52?d=identicon&version=1",
            "client": "ZulipElectron",
            "content": "<p>Python's list object is documented as also having amortized constant inserts here: <a href=\"https://wiki.python.org/moin/TimeComplexity\" target=\"_blank\" title=\"https://wiki.python.org/moin/TimeComplexity\">https://wiki.python.org/moin/TimeComplexity</a> but the CPython FAQ doesn't make a complexity guarantee, just describes \"<a href=\"https://docs.python.org/3/faq/design.html#how-are-lists-implemented-in-cpython\" target=\"_blank\" title=\"https://docs.python.org/3/faq/design.html#how-are-lists-implemented-in-cpython\">some cleverness</a>.\"  I'm not totally clear what tradeoffs are being made in the Python code or why.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 189042186,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "dylnuge@gmail.com",
            "sender_full_name": "Dylan Nugent (he) (S1'20)",
            "sender_id": 263512,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Study Group",
            "submessages": [],
            "timestamp": 1582652664,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/a94df6a414bc64771690399a940d1c52?d=identicon&version=1",
            "client": "ZulipElectron",
            "content": "<p>Putting this here <span class=\"user-mention\" data-user-id=\"105607\">@Tobin Yehle (he) (SP1'20)</span> and <span class=\"user-mention\" data-user-id=\"221814\">@Nathan Goldbaum (he) (S1'19)</span> to stop dominating the study group thread with something that is tangential.</p>\n<p>I think CPython list inserts are still amortized constant (generally, it surprises me that they'd _break_ that, because it's such a common assumption). Specifically I think the comment is poorly worded and suggests that it's amortized linear over _multiple_ inserts, i.e. O(n) for n inserts, so O(1) for each individual insert.</p>\n<p>I was wrong to state that 2 was an important or necessary lower bound for the growth factor; Microsoft's C++ compiler, for instance, uses 1.5 without breaking amortized analysis. This affects how \"bad\" the constants are but does not affect that the costs are incurred at a decaying rate allowing the summation to converge on a constant factor.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 189043531,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "dylnuge@gmail.com",
            "sender_full_name": "Dylan Nugent (he) (S1'20)",
            "sender_id": 263512,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Amortized Analysis of CPython's List Resize",
            "submessages": [],
            "timestamp": 1582653438,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/7857f26c1ef2e9bdbfa843f9087710f7?d=identicon&version=1",
            "client": "ZulipMobile",
            "content": "<p>i\u2019m confused why you think it\u2019s O(1) time, the wiki says they\u2019re O(n), right?</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 189043680,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "nathan12343@gmail.com",
            "sender_full_name": "Nathan Goldbaum (he) (S1'19)",
            "sender_id": 221814,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Amortized Analysis of CPython's List Resize",
            "submessages": [],
            "timestamp": 1582653501,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/a94df6a414bc64771690399a940d1c52?d=identicon&version=1",
            "client": "ZulipElectron",
            "content": "<p>It says <code>Append</code> is amortized <code>O(1)</code></p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 189043900,
            "is_me_message": false,
            "last_edit_timestamp": 1582654137,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "dylnuge@gmail.com",
            "sender_full_name": "Dylan Nugent (he) (S1'20)",
            "sender_id": 263512,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Amortized Analysis of CPython's List Resize",
            "submessages": [],
            "timestamp": 1582653631,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/a94df6a414bc64771690399a940d1c52?d=identicon&version=1",
            "client": "ZulipElectron",
            "content": "<p>And that <code>Extend</code> is amortized <code>O(k)</code> where <code>k</code> is \"is either the value of a parameter or the number of elements in the parameter\" (I'm guessing number of elements in the parameter here because that makes the most sense)</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 189044015,
            "is_me_message": false,
            "last_edit_timestamp": 1582654129,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "dylnuge@gmail.com",
            "sender_full_name": "Dylan Nugent (he) (S1'20)",
            "sender_id": 263512,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Amortized Analysis of CPython's List Resize",
            "submessages": [],
            "timestamp": 1582653715,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/a94df6a414bc64771690399a940d1c52?d=identicon&version=1",
            "client": "ZulipElectron",
            "content": "<p>It only says <code>insert</code> is <code>O(n)</code>, which in Python is an operation that creates an element at an arbitrary point in the array (this always requires a copy). Adding an element to the end of a dynamic array should not be linear</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 189044196,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "dylnuge@gmail.com",
            "sender_full_name": "Dylan Nugent (he) (S1'20)",
            "sender_id": 263512,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Amortized Analysis of CPython's List Resize",
            "submessages": [],
            "timestamp": 1582653835,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/a94df6a414bc64771690399a940d1c52?d=identicon&version=1",
            "client": "ZulipElectron",
            "content": "<p>Also for both of those, the <code>[1]</code> appears to be a footnote stating:</p>\n<blockquote>\n<p>These operations rely on the \"Amortized\" part of \"Amortized Worst Case\". Individual actions may take surprisingly long, depending on the history of the container.</p>\n</blockquote>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 189044540,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "dylnuge@gmail.com",
            "sender_full_name": "Dylan Nugent (he) (S1'20)",
            "sender_id": 263512,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Amortized Analysis of CPython's List Resize",
            "submessages": [],
            "timestamp": 1582654046,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/a94df6a414bc64771690399a940d1c52?d=identicon&version=1",
            "client": "ZulipElectron",
            "content": "<p>See also: <a href=\"https://en.wikipedia.org/wiki/Dynamic_array#Growth_factor\" target=\"_blank\" title=\"https://en.wikipedia.org/wiki/Dynamic_array#Growth_factor\">https://en.wikipedia.org/wiki/Dynamic_array#Growth_factor</a></p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 189044829,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "dylnuge@gmail.com",
            "sender_full_name": "Dylan Nugent (he) (S1'20)",
            "sender_id": 263512,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Amortized Analysis of CPython's List Resize",
            "submessages": [],
            "timestamp": 1582654224,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/a94df6a414bc64771690399a940d1c52?d=identicon&version=1",
            "client": "ZulipElectron",
            "content": "<blockquote>\n<p>Expanding the array by any constant proportion a ensures that inserting n elements takes O(n) time overall, meaning that each insertion takes amortized constant time.</p>\n</blockquote>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 189045037,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "dylnuge@gmail.com",
            "sender_full_name": "Dylan Nugent (he) (S1'20)",
            "sender_id": 263512,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Amortized Analysis of CPython's List Resize",
            "submessages": [],
            "timestamp": 1582654335,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/7857f26c1ef2e9bdbfa843f9087710f7?d=identicon&version=1",
            "client": "ZulipMobile",
            "content": "<p>ah you said insert but meant append, i see :)</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 189046125,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "nathan12343@gmail.com",
            "sender_full_name": "Nathan Goldbaum (he) (S1'19)",
            "sender_id": 221814,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Amortized Analysis of CPython's List Resize",
            "submessages": [],
            "timestamp": 1582655042,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/570b5294859a4650f5c6c4f866b6fba3e34af02b?x=x&version=2",
            "client": "website",
            "content": "<p>Right I was thinking that in order to have O(1) appends you needed to have a growth factor &gt; 2, but &gt; 1 is enough</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 189052248,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "tobinyehle@gmail.com",
            "sender_full_name": "Tobin Yehle (he) (SP1'20)",
            "sender_id": 105607,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Amortized Analysis of CPython's List Resize",
            "submessages": [],
            "timestamp": 1582659094,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/c6a4682e6a46285de64c97c77b771481?d=identicon&version=1",
            "client": "website",
            "content": "<p>IIRC, any exponential growth allows for O(1) ammortized appends -- it doesn't necessarily need to be doubling, though that's common.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 189061072,
            "is_me_message": false,
            "reactions": [
                {
                    "emoji_code": "1f44d",
                    "emoji_name": "+1",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "michaelmalis2@gmail.com",
                        "full_name": "Michael Malis (SP2'19)",
                        "id": 8099
                    },
                    "user_id": 8099
                },
                {
                    "emoji_code": "1f44d",
                    "emoji_name": "+1",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "dylnuge@gmail.com",
                        "full_name": "Dylan Nugent (he) (S1'20)",
                        "id": 263512
                    },
                    "user_id": 263512
                }
            ],
            "recipient_id": 24954,
            "sender_email": "ori@eigenstate.org",
            "sender_full_name": "Ori Dean Bernstein (he) (W2'20)",
            "sender_id": 255045,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Study Group",
            "submessages": [],
            "timestamp": 1582664734,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/a94df6a414bc64771690399a940d1c52?d=identicon&version=1",
            "client": "ZulipElectron",
            "content": "<p>Which itself is a surprising result! It'd be fun to do the amortized analysis proof of that, maybe <span aria-label=\"slight smile\" class=\"emoji emoji-1f642\" role=\"img\" title=\"slight smile\">:slight_smile:</span></p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 189062030,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "dylnuge@gmail.com",
            "sender_full_name": "Dylan Nugent (he) (S1'20)",
            "sender_id": 263512,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Amortized Analysis of CPython's List Resize",
            "submessages": [],
            "timestamp": 1582665312,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/a94df6a414bc64771690399a940d1c52?d=identicon&version=1",
            "client": "ZulipElectron",
            "content": "<p>It's not as immediately intuitive as the \"taxation\" approach on the 2x factor</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 189062109,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "dylnuge@gmail.com",
            "sender_full_name": "Dylan Nugent (he) (S1'20)",
            "sender_id": 263512,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Amortized Analysis of CPython's List Resize",
            "submessages": [],
            "timestamp": 1582665333,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/21b9cce736cbbe8e0761bbb33863c7d3112d0136?x=x&version=2",
            "client": "website",
            "content": "<p><span class=\"user-mention\" data-user-id=\"263512\">@Dylan Nugent (he) (SP1'20)</span> I think there is a straightforward \"proof\" in that increasing the \"cost\" of insertions, you are able to resize sooner. </p>\n<p>The intuition I have for the <code>2x</code> factor is that after resizing you'll have an array at capacity <code>n/2</code>. The next time you need to resize, the array will have n elements and that will be after <code>n/2</code> insertions. To resize, you need to move n elements into the new array. You can think of each insertion as buying you time to move 2 elements from the old array to the new array. That way, <code>n/2</code> insertions gives you time to move n elements from the old array to the new array.</p>\n<p>You can switch the factor around and the math stays the same. If you are increasing the array by a factor <code>k</code>, after resizing you'll have an array with <code>n/k</code> elements out of a max capacity of <code>n</code>. As long as the next <code>n-n/k</code> insertions buy you enough time to move <code>n</code> elements, you'll have constant time inserts. This means each insert needs to give you enough time to move <code>n/(n-n/k) = k/(k-1)</code> elements when resizing. Since <code>k/(k-1)</code> is a constant no matter what the value of <code>k</code> is, as long as you are growing the array by a multiplicative factor, you'll have constant time inserts.</p>\n<p>In the specific case of <code>k=9/8</code> (increase the size of the array by 1/8th), each insert has to buy you time to move 9 elements when later resizing.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 189070513,
            "is_me_message": false,
            "reactions": [
                {
                    "emoji_code": "2764",
                    "emoji_name": "heart",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "fabi@hey.com",
                        "full_name": "Fabian Tamp (he) (W2'20)",
                        "id": 255053
                    },
                    "user_id": 255053
                },
                {
                    "emoji_code": "2764",
                    "emoji_name": "heart",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "dylnuge@gmail.com",
                        "full_name": "Dylan Nugent (he) (S1'20)",
                        "id": 263512
                    },
                    "user_id": 263512
                }
            ],
            "recipient_id": 24954,
            "sender_email": "michaelmalis2@gmail.com",
            "sender_full_name": "Michael Malis (SP2'19)",
            "sender_id": 8099,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Amortized Analysis of CPython's List Resize",
            "submessages": [],
            "timestamp": 1582671930,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/a94df6a414bc64771690399a940d1c52?d=identicon&version=1",
            "client": "ZulipElectron",
            "content": "<p>This is an excellent way of thinking about it, thanks <span class=\"user-mention\" data-user-id=\"8099\">@Michael Malis (SP2'19)</span>!</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 189128818,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "dylnuge@gmail.com",
            "sender_full_name": "Dylan Nugent (he) (S1'20)",
            "sender_id": 263512,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Amortized Analysis of CPython's List Resize",
            "submessages": [],
            "timestamp": 1582733476,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/0265934fdc86859bdd65431acfcb67e5?d=identicon&version=1",
            "client": "ZulipMobile",
            "content": "<p><a href=\"/user_uploads/13/cInVLnrHBVfG03w6YXTrs6TM/MVIMG_20200227_113410.jpg\" target=\"_blank\" title=\"MVIMG_20200227_113410.jpg\">MVIMG_20200227_113410.jpg</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/13/cInVLnrHBVfG03w6YXTrs6TM/MVIMG_20200227_113410.jpg\" target=\"_blank\" title=\"MVIMG_20200227_113410.jpg\"><img src=\"/user_uploads/13/cInVLnrHBVfG03w6YXTrs6TM/MVIMG_20200227_113410.jpg\"></a></div>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 189230048,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "emilyrchiggins@gmail.com",
            "sender_full_name": "Emily Higgins (she) (W2'20)",
            "sender_id": 256959,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Study Group",
            "submessages": [],
            "timestamp": 1582821342,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/0265934fdc86859bdd65431acfcb67e5?d=identicon&version=1",
            "client": "ZulipMobile",
            "content": "<p><a href=\"/user_uploads/13/HOjQQaq1yDFHkMMs6WUnypk8/MVIMG_20200227_113400.jpg\" target=\"_blank\" title=\"MVIMG_20200227_113400.jpg\">MVIMG_20200227_113400.jpg</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/13/HOjQQaq1yDFHkMMs6WUnypk8/MVIMG_20200227_113400.jpg\" target=\"_blank\" title=\"MVIMG_20200227_113400.jpg\"><img src=\"/user_uploads/13/HOjQQaq1yDFHkMMs6WUnypk8/MVIMG_20200227_113400.jpg\"></a></div>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 189230074,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "emilyrchiggins@gmail.com",
            "sender_full_name": "Emily Higgins (she) (W2'20)",
            "sender_id": 256959,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Study Group",
            "submessages": [],
            "timestamp": 1582821358,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/3c38f253217c1b67500972630b0e83e581de8880?x=x&version=4",
            "client": "website",
            "content": "<p>Hi Everyone,</p>\n<p>I've started working through \"Cracking the Coding Interview\" (CCI) and have started trying to make this the first thing I do for a few hours each morning (I'm more inclined to skip it if I save it toward the end of the day). I haven't gotten too far, but I've worked through problems 1.1, 1.4, and 1.5 (pg 73, 5th edition). I'm hoping to do the rest before tomorrow's meeting.</p>\n<p>My approach has been: </p>\n<ul>\n<li>follow the steps outlined in the book (think about questions, test/edge cases, etc), </li>\n<li>write my algorithm by hand, </li>\n<li>step through my test cases, </li>\n<li>consider the time/space complexity of my solution, </li>\n<li>consider alternative solutions (and write the code if I think there's a better way), </li>\n<li>type my code exactly as written into a repl and see if it runs and runs correctly (ie, consider whether I am making mostly errors in syntax vs errors in logic) </li>\n<li>read the answer and consider how my approach compares (do I understand the answer; do I understand why one answer might be more optimal than another)</li>\n</ul>\n<p>For tomorrow, I'm hoping we can do any/all of the following:</p>\n<ul>\n<li><strong>Discuss overall strategies for approaching these problems</strong> (what works well for you?, what do you find difficult?)</li>\n<li><strong>Choose one or two problems to work through together</strong> - maybe there's one that several of us have questions on, or something in the given solution that we don't understand</li>\n<li><strong>Break into pairs and simulate an interview scenario</strong> - one person asks the question, the other whiteboards a solution; My thought process is that it is not enough to see the solution once and understand it; Even if we have already completed a problem independently, do we understand it well enough to explain it on the fly without notes. We also want to make use of \"spaced repetition\",  how well do we remember the solution a day after reading about it, two days, 1 week, 1 month, etc.</li>\n</ul>\n<p>I extended the time to 90 minutes to give us plenty of time to discuss (1-2:30, Hopper). Feel free to dip out early if you need to. I'm hoping we can have an initial discussion for about 40 mins, and then about 40 minutes to simulate an interview (20 mins per person).</p>\n<p>Don't feel obligated to do all of the problems (or any) ahead of time. </p>\n<p>Let me know if you have any other thoughts or suggestions.</p>\n<p>Thanks!</p>\n<p><em>Tagging folks who RSVP'd or have expressed interest</em><br>\n<span class=\"user-mention\" data-user-id=\"255104\">@Toph Allen (he) (W2'20)</span> <br>\n<span class=\"user-mention\" data-user-id=\"263505\">@Kalli Retzepi (she) (SP1'20)</span> <br>\n<span class=\"user-mention\" data-user-id=\"255791\">@Allison Colyer (she) (W2'20)</span> <br>\n<span class=\"user-mention\" data-user-id=\"263499\">@Anu Unnikrishnan (she) (SP1'20)</span> <br>\n<span class=\"user-mention\" data-user-id=\"246971\">@Nar Shahin (they) (SP1'20)</span> <br>\n<span class=\"user-mention\" data-user-id=\"263980\">@Frank Tancredi (he) (SP1'20)</span> <br>\n<span class=\"user-mention\" data-user-id=\"256959\">@Emily Higgins (she) (W2'20)</span> <br>\n<span class=\"user-mention\" data-user-id=\"255042\">@Johann Diedrick (he) (W2'20)</span></p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 189236795,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "ariesunique@gmail.com",
            "sender_full_name": "Aiyana Brooks (she) (W2'20)",
            "sender_id": 255068,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "cracking coding interview",
            "submessages": [],
            "timestamp": 1582825568,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/f84d2614fd35c05737bb6a5a41660384e73da59d?x=x&version=2",
            "client": "website",
            "content": "<p>Thanks <span class=\"user-mention\" data-user-id=\"256959\">@Emily Higgins (she) (W2'20)</span> !</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 189237220,
            "is_me_message": false,
            "reactions": [
                {
                    "emoji_code": "1240",
                    "emoji_name": "parrot",
                    "reaction_type": "realm_emoji",
                    "user": {
                        "email": "emilyrchiggins@gmail.com",
                        "full_name": "Emily Higgins (she) (W2'20)",
                        "id": 256959
                    },
                    "user_id": 256959
                }
            ],
            "recipient_id": 24954,
            "sender_email": "allicolyer@gmail.com",
            "sender_full_name": "Alli Colyer (she) (W2'20)",
            "sender_id": 255791,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Study Group",
            "submessages": [],
            "timestamp": 1582825825,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/f84d2614fd35c05737bb6a5a41660384e73da59d?x=x&version=2",
            "client": "ZulipMobile",
            "content": "<p><a href=\"/user_uploads/13/tmVXhEGwkeutRFyMU497YqWr/IMG_20200227_105613.jpg\" target=\"_blank\" title=\"IMG_20200227_105613.jpg\">IMG_20200227_105613.jpg</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/13/tmVXhEGwkeutRFyMU497YqWr/IMG_20200227_105613.jpg\" target=\"_blank\" title=\"IMG_20200227_105613.jpg\"><img src=\"/user_uploads/13/tmVXhEGwkeutRFyMU497YqWr/IMG_20200227_105613.jpg\"></a></div>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 189237300,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "allicolyer@gmail.com",
            "sender_full_name": "Alli Colyer (she) (W2'20)",
            "sender_id": 255791,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Study Group",
            "submessages": [],
            "timestamp": 1582825896,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/f84d2614fd35c05737bb6a5a41660384e73da59d?x=x&version=2",
            "client": "ZulipMobile",
            "content": "<p><a href=\"/user_uploads/13/dVivVfqnhM1H5Y9HgP962bSV/IMG_20200227_111814.jpg\" target=\"_blank\" title=\"IMG_20200227_111814.jpg\">IMG_20200227_111814.jpg</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/13/dVivVfqnhM1H5Y9HgP962bSV/IMG_20200227_111814.jpg\" target=\"_blank\" title=\"IMG_20200227_111814.jpg\"><img src=\"/user_uploads/13/dVivVfqnhM1H5Y9HgP962bSV/IMG_20200227_111814.jpg\"></a></div>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 189237310,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "allicolyer@gmail.com",
            "sender_full_name": "Alli Colyer (she) (W2'20)",
            "sender_id": 255791,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Study Group",
            "submessages": [],
            "timestamp": 1582825901,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/0a7281da0a7289a741650707cabd4fd97b489f0e?x=x&version=2",
            "client": "website",
            "content": "<p>Looking forward to joining! I haven't made a _ton_ of progress on it this week, and I will have to leave to run the category theory group at 2, but I'm psyched to get started :)</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 189325995,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "toph.allen@gmail.com",
            "sender_full_name": "Toph Allen (he) (SP2'20)",
            "sender_id": 255104,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "cracking coding interview",
            "submessages": [],
            "timestamp": 1582907681,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/f84d2614fd35c05737bb6a5a41660384e73da59d?x=x&version=2",
            "client": "ZulipMobile",
            "content": "<p>Running to trader Joe's!  Anyone want anything?</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 189332777,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "allicolyer@gmail.com",
            "sender_full_name": "Alli Colyer (she) (W2'20)",
            "sender_id": 255791,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "cracking coding interview",
            "submessages": [],
            "timestamp": 1582911962,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/3c38f253217c1b67500972630b0e83e581de8880?x=x&version=4",
            "client": "website",
            "content": "<p><span class=\"user-mention\" data-user-id=\"255791\">@Allison Colyer (she) (W2'20)</span> aw man, didn't see this - would have gone with you!</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 189334605,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "ariesunique@gmail.com",
            "sender_full_name": "Aiyana Brooks (she) (W2'20)",
            "sender_id": 255068,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "cracking coding interview",
            "submessages": [],
            "timestamp": 1582913068,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/f9d912077b06a90128c9e07b1f5026ec0c3613b2?x=x&version=2",
            "client": "website",
            "content": "<p>that runestone python resource looks incredible and something I recently wished existed. Ty!</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 189484093,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "catwind7+recursecenter@gmail.com",
            "sender_full_name": "Alan Lin (he) (W1'19)",
            "sender_id": 247176,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "cracking coding interview",
            "submessages": [],
            "timestamp": 1583150374,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/f84d2614fd35c05737bb6a5a41660384e73da59d?x=x&version=2",
            "client": "website",
            "content": "<p><span class=\"user-group-mention\" data-user-group-id=\"41\">@Currently at RC</span> Study group today at 10:30! I can present tree rotations unless someone has something else they'd like to present</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 189797590,
            "is_me_message": false,
            "last_edit_timestamp": 1583419166,
            "reactions": [
                {
                    "emoji_code": "1f389",
                    "emoji_name": "tada",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "dylnuge@gmail.com",
                        "full_name": "Dylan Nugent (he) (S1'20)",
                        "id": 263512
                    },
                    "user_id": 263512
                },
                {
                    "emoji_code": "1f389",
                    "emoji_name": "tada",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "aditya.athalye@gmail.com",
                        "full_name": "Aditya Athalye (he) (SP1'20)",
                        "id": 263547
                    },
                    "user_id": 263547
                },
                {
                    "emoji_code": "1f389",
                    "emoji_name": "tada",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "anupama94@gmail.com",
                        "full_name": "Anu Unnikrishnan (she) (S1'20)",
                        "id": 263499
                    },
                    "user_id": 263499
                },
                {
                    "emoji_code": "1f389",
                    "emoji_name": "tada",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "miles@rmrm.io",
                        "full_name": "Miles McCain (he) (SP1'20)",
                        "id": 263501
                    },
                    "user_id": 263501
                }
            ],
            "recipient_id": 24954,
            "sender_email": "allicolyer@gmail.com",
            "sender_full_name": "Alli Colyer (she) (W2'20)",
            "sender_id": 255791,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Study Group",
            "submessages": [],
            "timestamp": 1583419153,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/f84d2614fd35c05737bb6a5a41660384e73da59d?x=x&version=2",
            "client": "ZulipMobile",
            "content": "<p>Starting now!</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 189803444,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "allicolyer@gmail.com",
            "sender_full_name": "Alli Colyer (she) (W2'20)",
            "sender_id": 255791,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Study Group",
            "submessages": [],
            "timestamp": 1583422574,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/f84d2614fd35c05737bb6a5a41660384e73da59d?x=x&version=2",
            "client": "website",
            "content": "<p><a href=\"https://www.geeksforgeeks.org/avl-tree-set-1-insertion/\" target=\"_blank\" title=\"https://www.geeksforgeeks.org/avl-tree-set-1-insertion/\">https://www.geeksforgeeks.org/avl-tree-set-1-insertion/</a></p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 189807532,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "allicolyer@gmail.com",
            "sender_full_name": "Alli Colyer (she) (W2'20)",
            "sender_id": 255791,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Study Group",
            "submessages": [],
            "timestamp": 1583424772,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/f84d2614fd35c05737bb6a5a41660384e73da59d?x=x&version=2",
            "client": "website",
            "content": "<p>Python code here is really nice</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 189808038,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "allicolyer@gmail.com",
            "sender_full_name": "Alli Colyer (she) (W2'20)",
            "sender_id": 255791,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Study Group",
            "submessages": [],
            "timestamp": 1583425072,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/f84d2614fd35c05737bb6a5a41660384e73da59d?x=x&version=2",
            "client": "website",
            "content": "<p>Also some pseudocode I wrote (hopefully it's correct)</p>\n<div class=\"codehilite\"><pre><span></span>def rightRotate(node):\n  tmp = node.left\n  node.left = tmp.right\n  tmp.right = node\n  return tmp\n\ndef leftRotate(node):\n  tmp = node.right\n  node.right = tmp.left\n  tmp.left = node\n  return tmp\n\ndef rightLeftRotate(node):\n  node.right = rightRotate(node.right)\n  return leftRotate(node)\n\ndef leftRightRotate(node):\n  node.left = leftRotate(node.left)\n  return rightRotate(node)\n</pre></div>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 189808383,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "allicolyer@gmail.com",
            "sender_full_name": "Alli Colyer (she) (W2'20)",
            "sender_id": 255791,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Study Group",
            "submessages": [],
            "timestamp": 1583425252,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/f84d2614fd35c05737bb6a5a41660384e73da59d?x=x&version=2",
            "client": "ZulipMobile",
            "content": "<p><a href=\"/user_uploads/13/yJxDuoQFN0k4Opvf8zzbTJlm/20200305_112025.jpg\" target=\"_blank\" title=\"20200305_112025.jpg\">20200305_112025.jpg</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/13/yJxDuoQFN0k4Opvf8zzbTJlm/20200305_112025.jpg\" target=\"_blank\" title=\"20200305_112025.jpg\"><img src=\"/user_uploads/13/yJxDuoQFN0k4Opvf8zzbTJlm/20200305_112025.jpg\"></a></div>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 189808858,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "allicolyer@gmail.com",
            "sender_full_name": "Alli Colyer (she) (W2'20)",
            "sender_id": 255791,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Study Group",
            "submessages": [],
            "timestamp": 1583425543,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/f84d2614fd35c05737bb6a5a41660384e73da59d?x=x&version=2",
            "client": "ZulipMobile",
            "content": "<p><a href=\"/user_uploads/13/BNoitwucgXYHWiZWAGeLNqK7/20200305_105720.jpg\" target=\"_blank\" title=\"20200305_105720.jpg\">20200305_105720.jpg</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/13/BNoitwucgXYHWiZWAGeLNqK7/20200305_105720.jpg\" target=\"_blank\" title=\"20200305_105720.jpg\"><img src=\"/user_uploads/13/BNoitwucgXYHWiZWAGeLNqK7/20200305_105720.jpg\"></a></div>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 189808997,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "allicolyer@gmail.com",
            "sender_full_name": "Alli Colyer (she) (W2'20)",
            "sender_id": 255791,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Study Group",
            "submessages": [],
            "timestamp": 1583425620,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/f84d2614fd35c05737bb6a5a41660384e73da59d?x=x&version=2",
            "client": "ZulipMobile",
            "content": "<p><a href=\"/user_uploads/13/vK7uwV5XLCAiAHxc3YPOE8cF/20200305_104807.jpg\" target=\"_blank\" title=\"20200305_104807.jpg\">20200305_104807.jpg</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/13/vK7uwV5XLCAiAHxc3YPOE8cF/20200305_104807.jpg\" target=\"_blank\" title=\"20200305_104807.jpg\"><img src=\"/user_uploads/13/vK7uwV5XLCAiAHxc3YPOE8cF/20200305_104807.jpg\"></a></div>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 189809009,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "allicolyer@gmail.com",
            "sender_full_name": "Alli Colyer (she) (W2'20)",
            "sender_id": 255791,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Study Group",
            "submessages": [],
            "timestamp": 1583425625,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/f84d2614fd35c05737bb6a5a41660384e73da59d?x=x&version=2",
            "client": "website",
            "content": "<p>Here's the clearest videos I found. The guy talks a little slow so you can watch them at 1.5 speed :) The videos are in order of building up the concept.</p>\n<ol>\n<li><a href=\"https://www.youtube.com/watch?v=M0Y3kDuyUCU\" target=\"_blank\" title=\"https://www.youtube.com/watch?v=M0Y3kDuyUCU\"> Introduction to rotations</a></li>\n<li><a href=\"https://www.youtube.com/watch?v=Y-nmgO8ALjM\" target=\"_blank\" title=\"https://www.youtube.com/watch?v=Y-nmgO8ALjM\">Coding Rotations</a></li>\n<li><a href=\"https://www.youtube.com/watch?v=-9sHvAnLN_w&amp;t=54s\" target=\"_blank\" title=\"https://www.youtube.com/watch?v=-9sHvAnLN_w&amp;t=54s\">AVL Introduction</a></li>\n</ol>\n<div class=\"youtube-video message_inline_image\"><a data-id=\"M0Y3kDuyUCU\" href=\"https://www.youtube.com/watch?v=M0Y3kDuyUCU\" target=\"_blank\" title=\"https://www.youtube.com/watch?v=M0Y3kDuyUCU\"><img src=\"https://i.ytimg.com/vi/M0Y3kDuyUCU/default.jpg\"></a></div><div class=\"youtube-video message_inline_image\"><a data-id=\"Y-nmgO8ALjM\" href=\"https://www.youtube.com/watch?v=Y-nmgO8ALjM\" target=\"_blank\" title=\"https://www.youtube.com/watch?v=Y-nmgO8ALjM\"><img src=\"https://i.ytimg.com/vi/Y-nmgO8ALjM/default.jpg\"></a></div><div class=\"youtube-video message_inline_image\"><a data-id=\"-9sHvAnLN_w\" href=\"https://www.youtube.com/watch?v=-9sHvAnLN_w&amp;t=54s\" target=\"_blank\" title=\"https://www.youtube.com/watch?v=-9sHvAnLN_w&amp;t=54s\"><img src=\"https://i.ytimg.com/vi/-9sHvAnLN_w/default.jpg\"></a></div>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 189809730,
            "is_me_message": false,
            "last_edit_timestamp": 1583426397,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "allicolyer@gmail.com",
            "sender_full_name": "Alli Colyer (she) (W2'20)",
            "sender_id": 255791,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Study Group",
            "submessages": [],
            "timestamp": 1583425966,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/f84d2614fd35c05737bb6a5a41660384e73da59d?x=x&version=2",
            "client": "website",
            "content": "<p>The last video is really helpful for a lot of the questions we had</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 189810226,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "allicolyer@gmail.com",
            "sender_full_name": "Alli Colyer (she) (W2'20)",
            "sender_id": 255791,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Study Group",
            "submessages": [],
            "timestamp": 1583426205,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/3c38f253217c1b67500972630b0e83e581de8880?x=x&version=4",
            "client": "website",
            "content": "<p>Hi <span class=\"user-group-mention\" data-user-group-id=\"41\">@Currently at RC</span> ,<br>\nLet's practice some problems from \"Cracking the Coding Interview\". Today we'll focus on Chapter 2 - Linked Lists. Don't worry if you haven't had a chance to work through the problems. We're all figuring this out together. We can work through a few problems together, discuss implementation strategies/best practices for working through these, discuss difficulties/questions we have with these problems, etc. We're meeting in Hopper in about 5 minutes.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 189917591,
            "is_me_message": false,
            "reactions": [
                {
                    "emoji_code": "1f44d",
                    "emoji_name": "+1",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "allicolyer@gmail.com",
                        "full_name": "Alli Colyer (she) (W2'20)",
                        "id": 255791
                    },
                    "user_id": 255791
                }
            ],
            "recipient_id": 24954,
            "sender_email": "ariesunique@gmail.com",
            "sender_full_name": "Aiyana Brooks (she) (W2'20)",
            "sender_id": 255068,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "cracking coding interview",
            "submessages": [],
            "timestamp": 1583517320,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/3c38f253217c1b67500972630b0e83e581de8880?x=x&version=4",
            "client": "website",
            "content": "<p>Hey everyone,<br>\nThanks for coming today. We talked about chapter 2: Lists in the CCI book. We discussed problems <br>\n2.1 - Remove duplicates from an unsorted linked list<br>\n2.2 - Find the kth to last element of a singly linked list<br>\n2.6 - Given a linked list containing a cycle, find the node at the beginning of the loop<br>\n2.7 - Determine if a linked list is a palindrome<br>\n<em>Note: I'm working out of the 5th edition, so my numbers might be different from yours</em></p>\n<p><span class=\"user-mention\" data-user-id=\"255042\">@Johann Diedrick (he) (W2'20)</span>  provided a nice, compact coding implementation for problem 2.2<br>\n<a href=\"/user_uploads/13/e-0om6xuzi3LQ-9vMjEGJrsg/IMG_20200306_132131558.jpg\" target=\"_blank\" title=\"IMG_20200306_132131558.jpg\">IMG_20200306_132131558.jpg</a> </p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/13/e-0om6xuzi3LQ-9vMjEGJrsg/IMG_20200306_132131558.jpg\" target=\"_blank\" title=\"IMG_20200306_132131558.jpg\"><img src=\"/user_uploads/13/e-0om6xuzi3LQ-9vMjEGJrsg/IMG_20200306_132131558.jpg\"></a></div><p><span class=\"user-mention\" data-user-id=\"263500\">@Nohelia Merino (she) (SP1'20)</span> gave us a very cool explanation of how the Bellman Ford algorithm is used to find the shortest path in a graph and why it will fail if the graph contains a negative cycle. In those cases, Floyd-Warshall algorithm will work! <br>\n<a href=\"/user_uploads/13/j3mjAbH5aRIYeU4e5hNeytuC/IMG_20200306_141844801.jpg\" target=\"_blank\" title=\"IMG_20200306_141844801.jpg\">IMG_20200306_141844801.jpg</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/13/j3mjAbH5aRIYeU4e5hNeytuC/IMG_20200306_141844801.jpg\" target=\"_blank\" title=\"IMG_20200306_141844801.jpg\"><img src=\"/user_uploads/13/j3mjAbH5aRIYeU4e5hNeytuC/IMG_20200306_141844801.jpg\"></a></div>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 189939088,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "ariesunique@gmail.com",
            "sender_full_name": "Aiyana Brooks (she) (W2'20)",
            "sender_id": 255068,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "cracking coding interview",
            "submessages": [],
            "timestamp": 1583532203,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/3c38f253217c1b67500972630b0e83e581de8880?x=x&version=4",
            "client": "website",
            "content": "<p>For next week, let's focus on Chapter 3 - Stacks. Let's work through whatever we can independently, and then discuss and work through a few as a group.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 189939220,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "ariesunique@gmail.com",
            "sender_full_name": "Aiyana Brooks (she) (W2'20)",
            "sender_id": 255068,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "cracking coding interview",
            "submessages": [],
            "timestamp": 1583532305,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/6948faab4e5ab8c9d107dba94c9f00e0?d=identicon&version=1",
            "client": "website",
            "content": "<p>I've thinking about how my algorithm study is spread across so many strategies (watching lectures, hackerrank, doing workshops) that I'm not sure how to measure my progress or set concrete overall goals for myself (i.e. \"i want to be <em>this</em> good at algorithms in <em>this</em> amount of time). Are there benchmarks or \"checks\" of your growth that people have found helpful?</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 190293073,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "asa@cottageclass.com",
            "sender_full_name": "Asa Needle (he/they) (S1'20)",
            "sender_id": 263510,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "benchmarks",
            "submessages": [],
            "timestamp": 1583939906,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/3c38f253217c1b67500972630b0e83e581de8880?x=x&version=4",
            "client": "ZulipMobile",
            "content": "<p>Two things that I have tried (to varying degrees of success) is to ask:<br>\n1) Can I explain this algorithm to someone else?<br>\n2) Can I recognize when and how to use this algorithm if I see it in a different context?</p>\n<p>For item 1, doing a presentation at the algorithms group or a non-tech/tech talk could be helpful. If you can explain what the algorithm is used for, provide a general explanation of how it works (pseudocde), write the actual code, explain runtime complexity and tradeoffs when using this algorithm  - those are all great benchmarks for assessing your understanding. You can also write a blog post about an algorithm or create a self quiz.</p>\n<p>For item 2, competitions like the one Vitaly set up yesterday can be helpful. Any opportunity to do practice problems is problem a useful benchmark for assessment.  There are lots of sites/resources out there and in the RC library.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 190296485,
            "is_me_message": false,
            "reactions": [
                {
                    "emoji_code": "1f44d",
                    "emoji_name": "+1",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "aditya.athalye@gmail.com",
                        "full_name": "Aditya Athalye (he) (SP1'20)",
                        "id": 263547
                    },
                    "user_id": 263547
                }
            ],
            "recipient_id": 24954,
            "sender_email": "ariesunique@gmail.com",
            "sender_full_name": "Aiyana Brooks (she) (W2'20)",
            "sender_id": 255068,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "benchmarks",
            "submessages": [],
            "timestamp": 1583941487,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/81c6c8040fc0263607edd05c09dacf6b?d=identicon&version=1",
            "client": "website",
            "content": "<p>Depending on your goals, a lot of programming competitions are really algorithm knowledge checks, and so you could try, for example, Google Code Jam each year and see not so much how you do, but what you find yourself thinking about as you try to solve the problems.  More broadly, I think a useful marker of progress is, every few years, looking at a bunch of problems you might have thought about before (how to implement a database; how to make that search I implemented faster; how to store that data efficiently) and make note of all the algorithms and data structures you think of that might apply, and maybe which ones you feel comfortable enough with that you could sit down and implement for the problem (with references).  If you keep studying algorithms, and keep encountering interesting problems, you will surprise yourself every time you sit down and try to do this.</p>\n<p>I know that a shorter-term metric would be even more useful, but I wanted to put forward a longer-term metric that can be handy over the course of a career.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 190296503,
            "is_me_message": false,
            "reactions": [
                {
                    "emoji_code": "1f44d",
                    "emoji_name": "+1",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "aditya.athalye@gmail.com",
                        "full_name": "Aditya Athalye (he) (SP1'20)",
                        "id": 263547
                    },
                    "user_id": 263547
                }
            ],
            "recipient_id": 24954,
            "sender_email": "julian@cipht.net",
            "sender_full_name": "Julian Squires (he) (F2'17)",
            "sender_id": 101992,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "benchmarks",
            "submessages": [],
            "timestamp": 1583941496,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/afcff71a280c619fe7f45af5df2f66b9617479fc?x=x&version=4",
            "client": "ZulipElectron",
            "content": "<p>\"benchmarks\" is very meta <span aria-label=\"grinning\" class=\"emoji emoji-1f600\" role=\"img\" title=\"grinning\">:grinning:</span> because benchmarks of algorithms are famously contentious.</p>\n<p>I'm in the very same boat, Asa. The advice by Ayana and by Julian both appeal to me. I've tried those with varying degrees of \"success\". It's hard to measure \"success\" and also hard to predict when one might reach each goal. And if you are painfully self-introspective like me, you would doubt your own judgement about \"success\" all the time...</p>\n<p>What's worked for me so far is the pressure of an external deadline, self-imposed. Usually it happens like this: I give up trying to follow my own timetable, and create a forcing function in the form of _promise_ to teach something or speak on a topic by so-and-so date. That <em>always</em> lights the fire under my hindquarters, propelling me forward <span aria-label=\"grinning\" class=\"emoji emoji-1f600\" role=\"img\" title=\"grinning\">:grinning:</span></p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 190299291,
            "is_me_message": false,
            "last_edit_timestamp": 1583942872,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "aditya.athalye@gmail.com",
            "sender_full_name": "Aditya Athalye (he) (SP1'20)",
            "sender_id": 263547,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "benchmarks",
            "submessages": [],
            "timestamp": 1583942783,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/a94df6a414bc64771690399a940d1c52?d=identicon&version=1",
            "client": "ZulipElectron",
            "content": "<p>Are we doing this again tomorrow? Seems to be off the calendar</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 190333438,
            "is_me_message": false,
            "reactions": [
                {
                    "emoji_code": "1f44d",
                    "emoji_name": "+1",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "nmmerinos@gmail.com",
                        "full_name": "Nohelia Merino (she) (SP1'20)",
                        "id": 263500
                    },
                    "user_id": 263500
                }
            ],
            "recipient_id": 24954,
            "sender_email": "dylnuge@gmail.com",
            "sender_full_name": "Dylan Nugent (he) (S1'20)",
            "sender_id": 263512,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Study Group",
            "submessages": [],
            "timestamp": 1583961953,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/07ec01911e659907a5e5d67cc250b748?d=identicon&version=1",
            "client": "website",
            "content": "<p><span class=\"user-mention silent\" data-user-id=\"263512\">Dylan Nugent (he) (SP1'20)</span> <a href=\"#narrow/stream/21502-algorithms/topic/Study.20Group/near/190333438\" title=\"#narrow/stream/21502-algorithms/topic/Study.20Group/near/190333438\">said</a>:</p>\n<blockquote>\n<p>Are we doing this again tomorrow? Seems to be off the calendar</p>\n</blockquote>\n<p><span class=\"user-mention\" data-user-id=\"255791\">@Allison Colyer (she) (W2'20)</span></p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 190341921,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "nmmerinos@gmail.com",
            "sender_full_name": "Nohelia Merino (she) (SP1'20)",
            "sender_id": 263500,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Study Group",
            "submessages": [],
            "timestamp": 1583968037,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/07ec01911e659907a5e5d67cc250b748?d=identicon&version=1",
            "client": "website",
            "content": "<p><span class=\"user-mention silent\" data-user-id=\"263512\">Dylan Nugent (he) (SP1'20)</span> <a href=\"#narrow/stream/21502-algorithms/topic/Study.20Group/near/190333438\" title=\"#narrow/stream/21502-algorithms/topic/Study.20Group/near/190333438\">said</a>:</p>\n<blockquote>\n<p>Are we doing this again tomorrow? Seems to be off the calendar</p>\n</blockquote>\n<p><span class=\"user-group-mention\" data-user-group-id=\"41\">@Currently at RC</span>  I created the Algorithms meeting event again, I hope people go <a href=\"https://www.recurse.com/calendar/9243\" target=\"_blank\" title=\"https://www.recurse.com/calendar/9243\">https://www.recurse.com/calendar/9243</a></p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 190342212,
            "is_me_message": false,
            "last_edit_timestamp": 1583968423,
            "reactions": [
                {
                    "emoji_code": "1f44d",
                    "emoji_name": "+1",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "allicolyer@gmail.com",
                        "full_name": "Alli Colyer (she) (W2'20)",
                        "id": 255791
                    },
                    "user_id": 255791
                }
            ],
            "recipient_id": 24954,
            "sender_email": "nmmerinos@gmail.com",
            "sender_full_name": "Nohelia Merino (she) (SP1'20)",
            "sender_id": 263500,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Study Group",
            "submessages": [],
            "timestamp": 1583968310,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/f84d2614fd35c05737bb6a5a41660384e73da59d?x=x&version=2",
            "client": "ZulipMobile",
            "content": "<p>Thank you! Sorry it fell off the calendar. I messed up the end date <span aria-label=\"pensive\" class=\"emoji emoji-1f614\" role=\"img\" title=\"pensive\">:pensive:</span></p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 190346286,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "allicolyer@gmail.com",
            "sender_full_name": "Alli Colyer (she) (W2'20)",
            "sender_id": 255791,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Study Group",
            "submessages": [],
            "timestamp": 1583972317,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/c8cec51f2fb41f1bbf0183ec6ada0450880a67a6?x=x&version=2",
            "client": "ZulipElectron",
            "content": "<p>I'm RFH today. Is this happening today, and if so is it available for remoting into?</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 190394552,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "sgorecki@gmail.com",
            "sender_full_name": "Sara Gulotta (she) (S1'20)",
            "sender_id": 263732,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Study Group",
            "submessages": [],
            "timestamp": 1584022947,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/f84d2614fd35c05737bb6a5a41660384e73da59d?x=x&version=2",
            "client": "website",
            "content": "<p>Hey we didn't do this today. I will try to host a remote study group next Thursday!</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 190419782,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "allicolyer@gmail.com",
            "sender_full_name": "Alli Colyer (she) (W2'20)",
            "sender_id": 255791,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Study Group",
            "submessages": [],
            "timestamp": 1584034567,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/c8cec51f2fb41f1bbf0183ec6ada0450880a67a6?x=x&version=2",
            "client": "ZulipElectron",
            "content": "<p>Sounds good! It was always hard for me to get into the space by 10:30, but if it's remote then I can actually attend! Silver lining, I guess? <span aria-label=\"sweat smile\" class=\"emoji emoji-1f605\" role=\"img\" title=\"sweat smile\">:sweat_smile:</span></p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 190420025,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "sgorecki@gmail.com",
            "sender_full_name": "Sara Gulotta (she) (S1'20)",
            "sender_id": 263732,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Study Group",
            "submessages": [],
            "timestamp": 1584034682,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/07ec01911e659907a5e5d67cc250b748?d=identicon&version=1",
            "client": "website",
            "content": "<p><span class=\"user-mention\" data-user-id=\"263512\">@Dylan Nugent (he) (SP1'20)</span>  has yet to explain B+ trees</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 190423618,
            "is_me_message": false,
            "reactions": [
                {
                    "emoji_code": "1f44d",
                    "emoji_name": "+1",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "dylnuge@gmail.com",
                        "full_name": "Dylan Nugent (he) (S1'20)",
                        "id": 263512
                    },
                    "user_id": 263512
                }
            ],
            "recipient_id": 24954,
            "sender_email": "nmmerinos@gmail.com",
            "sender_full_name": "Nohelia Merino (she) (SP1'20)",
            "sender_id": 263500,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Study Group",
            "submessages": [],
            "timestamp": 1584036087,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/a94df6a414bc64771690399a940d1c52?d=identicon&version=1",
            "client": "ZulipElectron",
            "content": "<p>They're like A trees but one larger</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 190423684,
            "is_me_message": false,
            "reactions": [
                {
                    "emoji_code": "1f44d",
                    "emoji_name": "+1",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "allicolyer@gmail.com",
                        "full_name": "Alli Colyer (she) (W2'20)",
                        "id": 255791
                    },
                    "user_id": 255791
                }
            ],
            "recipient_id": 24954,
            "sender_email": "dylnuge@gmail.com",
            "sender_full_name": "Dylan Nugent (he) (S1'20)",
            "sender_id": 263512,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Study Group",
            "submessages": [],
            "timestamp": 1584036113,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/a94df6a414bc64771690399a940d1c52?d=identicon&version=1",
            "client": "ZulipElectron",
            "content": "<p>(I'm happy to do a real explanation remotely; I wasn't around this morning, sorry)</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 190423754,
            "is_me_message": false,
            "reactions": [
                {
                    "emoji_code": "2764",
                    "emoji_name": "heart",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "allicolyer@gmail.com",
                        "full_name": "Alli Colyer (she) (W2'20)",
                        "id": 255791
                    },
                    "user_id": 255791
                },
                {
                    "emoji_code": "1f419",
                    "emoji_name": "octopus",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "nmmerinos@gmail.com",
                        "full_name": "Nohelia Merino (she) (SP1'20)",
                        "id": 263500
                    },
                    "user_id": 263500
                }
            ],
            "recipient_id": 24954,
            "sender_email": "dylnuge@gmail.com",
            "sender_full_name": "Dylan Nugent (he) (S1'20)",
            "sender_id": 263512,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Study Group",
            "submessages": [],
            "timestamp": 1584036130,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/f84d2614fd35c05737bb6a5a41660384e73da59d?x=x&version=2",
            "client": "website",
            "content": "<p>Hey <span class=\"user-group-mention\" data-user-group-id=\"41\">@Currently at RC</span> ! I made a new event for the algorithms study group (for the next two weeks while I'm in batch) <a href=\"https://www.recurse.com/calendar/9365\" target=\"_blank\" title=\"https://www.recurse.com/calendar/9365\">https://www.recurse.com/calendar/9365</a></p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 190715231,
            "is_me_message": false,
            "last_edit_timestamp": 1584362039,
            "reactions": [
                {
                    "emoji_code": "1f419",
                    "emoji_name": "octopus",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "nmmerinos@gmail.com",
                        "full_name": "Nohelia Merino (she) (SP1'20)",
                        "id": 263500
                    },
                    "user_id": 263500
                },
                {
                    "emoji_code": "1f419",
                    "emoji_name": "octopus",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "sgorecki@gmail.com",
                        "full_name": "Sara Gulotta (she) (S1'20)",
                        "id": 263732
                    },
                    "user_id": 263732
                },
                {
                    "emoji_code": "1f419",
                    "emoji_name": "octopus",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "dylnuge@gmail.com",
                        "full_name": "Dylan Nugent (he) (S1'20)",
                        "id": 263512
                    },
                    "user_id": 263512
                }
            ],
            "recipient_id": 24954,
            "sender_email": "allicolyer@gmail.com",
            "sender_full_name": "Alli Colyer (she) (W2'20)",
            "sender_id": 255791,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Study Group",
            "submessages": [],
            "timestamp": 1584361915,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/f84d2614fd35c05737bb6a5a41660384e73da59d?x=x&version=2",
            "client": "website",
            "content": "<p>I accidentally ended the last one on March 6th because I got the date wrong about when my batch ended.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 190715319,
            "is_me_message": false,
            "last_edit_timestamp": 1584361970,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "allicolyer@gmail.com",
            "sender_full_name": "Alli Colyer (she) (W2'20)",
            "sender_id": 255791,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Study Group",
            "submessages": [],
            "timestamp": 1584361958,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/f84d2614fd35c05737bb6a5a41660384e73da59d?x=x&version=2",
            "client": "website",
            "content": "<p>Excited to still digitally geek out with you all <span aria-label=\"slight smile\" class=\"emoji emoji-1f642\" role=\"img\" title=\"slight smile\">:slight_smile:</span></p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 190715373,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "allicolyer@gmail.com",
            "sender_full_name": "Alli Colyer (she) (W2'20)",
            "sender_id": 255791,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Study Group",
            "submessages": [],
            "timestamp": 1584361986,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/c8cec51f2fb41f1bbf0183ec6ada0450880a67a6?x=x&version=2",
            "client": "ZulipElectron",
            "content": "<p>I'm excited that I should be able to go to these now!</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 190740020,
            "is_me_message": false,
            "reactions": [
                {
                    "emoji_code": "2764",
                    "emoji_name": "heart",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "allicolyer@gmail.com",
                        "full_name": "Alli Colyer (she) (W2'20)",
                        "id": 255791
                    },
                    "user_id": 255791
                }
            ],
            "recipient_id": 24954,
            "sender_email": "sgorecki@gmail.com",
            "sender_full_name": "Sara Gulotta (she) (S1'20)",
            "sender_id": 263732,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Study Group",
            "submessages": [],
            "timestamp": 1584373299,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/0a7281da0a7289a741650707cabd4fd97b489f0e?x=x&version=2",
            "client": "website",
            "content": "<p>I'm looking forward to this \u2014 and I think I'll jump back into Cracking the Coding Interview right after so I can build up some coding momentum :)</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 191006052,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "toph.allen@gmail.com",
            "sender_full_name": "Toph Allen (he) (SP2'20)",
            "sender_id": 255104,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Study Group",
            "submessages": [],
            "timestamp": 1584548985,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/a94df6a414bc64771690399a940d1c52?d=identicon&version=1",
            "client": "ZulipElectron",
            "content": "<p>Do you all still want to do B-Trees tomorrow? I can put some slides together to make up for lack-of-whiteboard</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 191044781,
            "is_me_message": false,
            "reactions": [
                {
                    "emoji_code": "1f44d",
                    "emoji_name": "+1",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "allicolyer@gmail.com",
                        "full_name": "Alli Colyer (she) (W2'20)",
                        "id": 255791
                    },
                    "user_id": 255791
                },
                {
                    "emoji_code": "1f44d",
                    "emoji_name": "+1",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "ori@eigenstate.org",
                        "full_name": "Ori Dean Bernstein (he) (W2'20)",
                        "id": 255045
                    },
                    "user_id": 255045
                },
                {
                    "emoji_code": "1f44d",
                    "emoji_name": "+1",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "anupama94@gmail.com",
                        "full_name": "Anu Unnikrishnan (she) (S1'20)",
                        "id": 263499
                    },
                    "user_id": 263499
                },
                {
                    "emoji_code": "1f44d",
                    "emoji_name": "+1",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "jo@johanndiedrick.com",
                        "full_name": "Johann Diedrick (he) (W2'20)",
                        "id": 255042
                    },
                    "user_id": 255042
                },
                {
                    "emoji_code": "1f44d",
                    "emoji_name": "+1",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "jonathanv3232@gmail.com",
                        "full_name": "Matik Zed (he) (S1'18)",
                        "id": 116359
                    },
                    "user_id": 116359
                },
                {
                    "emoji_code": "1f44d",
                    "emoji_name": "+1",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "sgorecki@gmail.com",
                        "full_name": "Sara Gulotta (she) (S1'20)",
                        "id": 263732
                    },
                    "user_id": 263732
                },
                {
                    "emoji_code": "1f44d",
                    "emoji_name": "+1",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "tobinyehle@gmail.com",
                        "full_name": "Tobin Yehle (he) (SP1'20)",
                        "id": 105607
                    },
                    "user_id": 105607
                }
            ],
            "recipient_id": 24954,
            "sender_email": "dylnuge@gmail.com",
            "sender_full_name": "Dylan Nugent (he) (S1'20)",
            "sender_id": 263512,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Study Group",
            "submessages": [],
            "timestamp": 1584567049,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/a94df6a414bc64771690399a940d1c52?d=identicon&version=1",
            "client": "ZulipElectron",
            "content": "<p>Awesome!</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 191047019,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "dylnuge@gmail.com",
            "sender_full_name": "Dylan Nugent (he) (S1'20)",
            "sender_id": 263512,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Study Group",
            "submessages": [],
            "timestamp": 1584568249,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/f84d2614fd35c05737bb6a5a41660384e73da59d?x=x&version=2",
            "client": "website",
            "content": "<p>Yes!</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 191058987,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "allicolyer@gmail.com",
            "sender_full_name": "Alli Colyer (she) (W2'20)",
            "sender_id": 255791,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Study Group",
            "submessages": [],
            "timestamp": 1584576455,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/f84d2614fd35c05737bb6a5a41660384e73da59d?x=x&version=2",
            "client": "website",
            "content": "<p>Thank you Dylan!</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 191058991,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "allicolyer@gmail.com",
            "sender_full_name": "Alli Colyer (she) (W2'20)",
            "sender_id": 255791,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Study Group",
            "submessages": [],
            "timestamp": 1584576458,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/f84d2614fd35c05737bb6a5a41660384e73da59d?x=x&version=2",
            "client": "website",
            "content": "<p><span class=\"user-group-mention\" data-user-group-id=\"41\">@Currently at RC</span> Algorithms study group today after the AM check-in. Come learn about the b trees from the amazing and talented <span class=\"user-mention\" data-user-id=\"263512\">@Dylan Nugent (he) (SP1'20)</span> !</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 191124708,
            "is_me_message": false,
            "reactions": [
                {
                    "emoji_code": "2764",
                    "emoji_name": "heart",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "sgorecki@gmail.com",
                        "full_name": "Sara Gulotta (she) (S1'20)",
                        "id": 263732
                    },
                    "user_id": 263732
                },
                {
                    "emoji_code": "2764",
                    "emoji_name": "heart",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "dylnuge@gmail.com",
                        "full_name": "Dylan Nugent (he) (S1'20)",
                        "id": 263512
                    },
                    "user_id": 263512
                },
                {
                    "emoji_code": "2764",
                    "emoji_name": "heart",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "mssarratea@gmail.com",
                        "full_name": "Sol Sarratea (she) (SP1'20)",
                        "id": 255051
                    },
                    "user_id": 255051
                }
            ],
            "recipient_id": 24954,
            "sender_email": "allicolyer@gmail.com",
            "sender_full_name": "Alli Colyer (she) (W2'20)",
            "sender_id": 255791,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Study Group",
            "submessages": [],
            "timestamp": 1584629706,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/a94df6a414bc64771690399a940d1c52?d=identicon&version=1",
            "client": "ZulipElectron",
            "content": "<p>Slides from today: <a href=\"https://docs.google.com/presentation/d/1BkRCQaUVgyHJAI1re3OXqcxTrwh7prgEUv8JnscE8Ts/edit#slide=id.g719d442b0a_0_807\" target=\"_blank\" title=\"https://docs.google.com/presentation/d/1BkRCQaUVgyHJAI1re3OXqcxTrwh7prgEUv8JnscE8Ts/edit#slide=id.g719d442b0a_0_807\">https://docs.google.com/presentation/d/1BkRCQaUVgyHJAI1re3OXqcxTrwh7prgEUv8JnscE8Ts/edit#slide=id.g719d442b0a_0_807</a><br>\nB-Tree Visualization: <a href=\"https://www.cs.usfca.edu/~galles/visualization/BTree.html\" target=\"_blank\" title=\"https://www.cs.usfca.edu/~galles/visualization/BTree.html\">https://www.cs.usfca.edu/~galles/visualization/BTree.html</a></p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 191141057,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "dylnuge@gmail.com",
            "sender_full_name": "Dylan Nugent (he) (S1'20)",
            "sender_id": 263512,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Study Group",
            "submessages": [],
            "timestamp": 1584636416,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/a94df6a414bc64771690399a940d1c52?d=identicon&version=1",
            "client": "ZulipElectron",
            "content": "<p>Thanks for coming everyone! I'm happy to answer questions if any of that was confusing. I'm also only half joking about trying to implement it; its a fun way to check your understanding and I think a lot of this stuff makes more sense after it's written up in code!</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 191141167,
            "is_me_message": false,
            "reactions": [
                {
                    "emoji_code": "2764",
                    "emoji_name": "heart",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "sgorecki@gmail.com",
                        "full_name": "Sara Gulotta (she) (S1'20)",
                        "id": 263732
                    },
                    "user_id": 263732
                },
                {
                    "emoji_code": "2764",
                    "emoji_name": "heart",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "tobinyehle@gmail.com",
                        "full_name": "Tobin Yehle (he) (SP1'20)",
                        "id": 105607
                    },
                    "user_id": 105607
                },
                {
                    "emoji_code": "2764",
                    "emoji_name": "heart",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "aditya.athalye@gmail.com",
                        "full_name": "Aditya Athalye (he) (SP1'20)",
                        "id": 263547
                    },
                    "user_id": 263547
                },
                {
                    "emoji_code": "2764",
                    "emoji_name": "heart",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "jo@johanndiedrick.com",
                        "full_name": "Johann Diedrick (he) (W2'20)",
                        "id": 255042
                    },
                    "user_id": 255042
                },
                {
                    "emoji_code": "2764",
                    "emoji_name": "heart",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "allicolyer@gmail.com",
                        "full_name": "Alli Colyer (she) (W2'20)",
                        "id": 255791
                    },
                    "user_id": 255791
                }
            ],
            "recipient_id": 24954,
            "sender_email": "dylnuge@gmail.com",
            "sender_full_name": "Dylan Nugent (he) (S1'20)",
            "sender_id": 263512,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Study Group",
            "submessages": [],
            "timestamp": 1584636463,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/f84d2614fd35c05737bb6a5a41660384e73da59d?x=x&version=2",
            "client": "website",
            "content": "<p>That was awesome Dylan! You had perfect pacing. I learned a ton. Thanks so much for doing this remotely :)</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 191143300,
            "is_me_message": false,
            "reactions": [
                {
                    "emoji_code": "1f419",
                    "emoji_name": "octopus",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "dylnuge@gmail.com",
                        "full_name": "Dylan Nugent (he) (S1'20)",
                        "id": 263512
                    },
                    "user_id": 263512
                }
            ],
            "recipient_id": 24954,
            "sender_email": "allicolyer@gmail.com",
            "sender_full_name": "Alli Colyer (she) (W2'20)",
            "sender_id": 255791,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Study Group",
            "submessages": [],
            "timestamp": 1584637282,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/02a5b2b6f7220adaf39b9eeea3870a2a8b853948?x=x&version=2",
            "client": "website",
            "content": "<p>I don't really get merge sort. I get it's awesome, but despite having had it explained to me a couple times, I'm just like ???</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 191321042,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "driijko@gmail.com",
            "sender_full_name": "Dree Ko (they) (SP2'20)",
            "sender_id": 257188,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Merge Sort",
            "submessages": [],
            "timestamp": 1584753081,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/c6a4682e6a46285de64c97c77b771481?d=identicon&version=1",
            "client": "website",
            "content": "<p>So, if you have two lists, like this:</p>\n<div class=\"codehilite\"><pre><span></span>l1 = [1,7,9]\nl2 = [2,6,5]\n</pre></div>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 191323270,
            "is_me_message": false,
            "last_edit_timestamp": 1584756312,
            "reactions": [
                {
                    "emoji_code": "1f440",
                    "emoji_name": "eyes",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "rekhviasnino@gmail.com",
                        "full_name": "Nino Rekhviashvili (she/they) (SP1'19)",
                        "id": 203433
                    },
                    "user_id": 203433
                }
            ],
            "recipient_id": 24954,
            "sender_email": "ori@eigenstate.org",
            "sender_full_name": "Ori Dean Bernstein (he) (W2'20)",
            "sender_id": 255045,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Merge Sort",
            "submessages": [],
            "timestamp": 1584756288,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/c6a4682e6a46285de64c97c77b771481?d=identicon&version=1",
            "client": "website",
            "content": "<p>if you want to merge them, pick the smallest element from the two lists:</p>\n<div class=\"codehilite\"><pre><span></span>merged=[1]  # 1 &lt; 2, so take from l1\nl1=[7,9]\nl2=[2,6,8]\n</pre></div>\n\n\n<p>and repeat:</p>\n<div class=\"codehilite\"><pre><span></span>merged=[1,2] # 7 &gt; 2, so take from l2\nl1=[7,9]\nl2=[6,8]\n</pre></div>\n\n\n<p>and repeat:</p>\n<div class=\"codehilite\"><pre><span></span>merged=[1,2,6] # 7 &gt; 6, so take from l2\nl1=[7,9]\nl2=[8]\n</pre></div>\n\n\n<p>and repeat:</p>\n<div class=\"codehilite\"><pre><span></span>merged=[1,2,6,7] # 8 &lt; 7, so take from l1\nl1=[9]\nl2=[8]\n</pre></div>\n\n\n<p>and repeat:</p>\n<div class=\"codehilite\"><pre><span></span>merged=[1,2,6,8] # 8 &lt; 9, so take from l1\nl1=[9]\nl2=[]\n</pre></div>\n\n\n<p>and repeat:</p>\n<div class=\"codehilite\"><pre><span></span>merged=[1,2,6,8,9] # 9 is your only choice\nl1=[]\nl2=[]\n</pre></div>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 191323336,
            "is_me_message": false,
            "last_edit_timestamp": 1584756559,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "ori@eigenstate.org",
            "sender_full_name": "Ori Dean Bernstein (he) (W2'20)",
            "sender_id": 255045,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Merge Sort",
            "submessages": [],
            "timestamp": 1584756367,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/c6a4682e6a46285de64c97c77b771481?d=identicon&version=1",
            "client": "website",
            "content": "<p>so, that's the core of merge sort: you have two sorted lists, and you merge them.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 191323436,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "ori@eigenstate.org",
            "sender_full_name": "Ori Dean Bernstein (he) (W2'20)",
            "sender_id": 255045,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Merge Sort",
            "submessages": [],
            "timestamp": 1584756573,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/c6a4682e6a46285de64c97c77b771481?d=identicon&version=1",
            "client": "website",
            "content": "<p>now, there's the divide and conquer step -- split the list in two, until you have 2 single element lists.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 191323442,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "ori@eigenstate.org",
            "sender_full_name": "Ori Dean Bernstein (he) (W2'20)",
            "sender_id": 255045,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Merge Sort",
            "submessages": [],
            "timestamp": 1584756599,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/c6a4682e6a46285de64c97c77b771481?d=identicon&version=1",
            "client": "website",
            "content": "<p>2 single element lists are <em>always</em> sorted</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 191323482,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "ori@eigenstate.org",
            "sender_full_name": "Ori Dean Bernstein (he) (W2'20)",
            "sender_id": 255045,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Merge Sort",
            "submessages": [],
            "timestamp": 1584756605,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/c6a4682e6a46285de64c97c77b771481?d=identicon&version=1",
            "client": "website",
            "content": "<p>[1] is always a sorted list</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 191323483,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "ori@eigenstate.org",
            "sender_full_name": "Ori Dean Bernstein (he) (W2'20)",
            "sender_id": 255045,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Merge Sort",
            "submessages": [],
            "timestamp": 1584756611,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/c6a4682e6a46285de64c97c77b771481?d=identicon&version=1",
            "client": "website",
            "content": "<p>[11] is a sorted list</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 191323486,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "ori@eigenstate.org",
            "sender_full_name": "Ori Dean Bernstein (he) (W2'20)",
            "sender_id": 255045,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Merge Sort",
            "submessages": [],
            "timestamp": 1584756616,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/c6a4682e6a46285de64c97c77b771481?d=identicon&version=1",
            "client": "website",
            "content": "<p>etc</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 191323488,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "ori@eigenstate.org",
            "sender_full_name": "Ori Dean Bernstein (he) (W2'20)",
            "sender_id": 255045,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Merge Sort",
            "submessages": [],
            "timestamp": 1584756617,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/c6a4682e6a46285de64c97c77b771481?d=identicon&version=1",
            "client": "website",
            "content": "<p>because you can't reorder them.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 191323491,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "ori@eigenstate.org",
            "sender_full_name": "Ori Dean Bernstein (he) (W2'20)",
            "sender_id": 255045,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Merge Sort",
            "submessages": [],
            "timestamp": 1584756629,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/c6a4682e6a46285de64c97c77b771481?d=identicon&version=1",
            "client": "website",
            "content": "<p>so, now that you can divide your list in half until you have single element lists, you can start merging them.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 191323501,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "ori@eigenstate.org",
            "sender_full_name": "Ori Dean Bernstein (he) (W2'20)",
            "sender_id": 255045,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Merge Sort",
            "submessages": [],
            "timestamp": 1584756662,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/c6a4682e6a46285de64c97c77b771481?d=identicon&version=1",
            "client": "website",
            "content": "<p>once you merge a list, you have a sorted list.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 191323502,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "ori@eigenstate.org",
            "sender_full_name": "Ori Dean Bernstein (he) (W2'20)",
            "sender_id": 255045,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Merge Sort",
            "submessages": [],
            "timestamp": 1584756669,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/c6a4682e6a46285de64c97c77b771481?d=identicon&version=1",
            "client": "website",
            "content": "<p>and you can merge it with another sorted list, which you got by splitting the array another place.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 191323506,
            "is_me_message": false,
            "last_edit_timestamp": 1584756692,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "ori@eigenstate.org",
            "sender_full_name": "Ori Dean Bernstein (he) (W2'20)",
            "sender_id": 255045,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Merge Sort",
            "submessages": [],
            "timestamp": 1584756686,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/c6a4682e6a46285de64c97c77b771481?d=identicon&version=1",
            "client": "website",
            "content": "<p>so, pretty much, keep merging small sorted sublists into bigger sorted sublists, until you have one big sorted list.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 191323550,
            "is_me_message": false,
            "last_edit_timestamp": 1584756743,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "ori@eigenstate.org",
            "sender_full_name": "Ori Dean Bernstein (he) (W2'20)",
            "sender_id": 255045,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Merge Sort",
            "submessages": [],
            "timestamp": 1584756727,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/c6a4682e6a46285de64c97c77b771481?d=identicon&version=1",
            "client": "website",
            "content": "<div class=\"codehilite\"><pre><span></span>[1,7,3,2,6,5] =&gt; split(l, len/2) =&gt; [1,2,3],[2,5,7]\n[1,7,3] *[2,6,5] =&gt; split(left, len(left)/2) =&gt; [1,2],[3]\n[1,7] *[3] [2,6,5] =&gt; split(left, len(left)/2) =&gt; [1][2]\n[1]*[7] [3] [2,6,5]\n</pre></div>\n\n\n<p>Now, we split as far as we can going down the left side, so lets merge the 2 subarrays before going down the other side:</p>\n<div class=\"codehilite\"><pre><span></span>merge([1], [7]) = [1, 7]\n[1,7] *[3] [2,6,5]\n</pre></div>\n\n\n<p>[3] is the right side we're considering now, and its as split as it gets, so merge it:</p>\n<div class=\"codehilite\"><pre><span></span>merge([1,7], [3]) = [1, 3,7]\n[1,3,7]* [2,6,5]\n</pre></div>\n\n\n<p>Now, the left side is sorted, but the right isn't -- so you repeat the same process, and get out<br>\n<code>[2,5,6]</code>, then apply the final merge step to get [1,2,5,6,7]</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 191323743,
            "is_me_message": false,
            "last_edit_timestamp": 1584757387,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "ori@eigenstate.org",
            "sender_full_name": "Ori Dean Bernstein (he) (W2'20)",
            "sender_id": 255045,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Merge Sort",
            "submessages": [],
            "timestamp": 1584757133,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/02a5b2b6f7220adaf39b9eeea3870a2a8b853948?x=x&version=2",
            "client": "website",
            "content": "<p>Okay thanks Ori, that's actually the most it's made sense to me!</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 191327573,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "driijko@gmail.com",
            "sender_full_name": "Dree Ko (they) (SP2'20)",
            "sender_id": 257188,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Merge Sort",
            "submessages": [],
            "timestamp": 1584764388,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/02a5b2b6f7220adaf39b9eeea3870a2a8b853948?x=x&version=2",
            "client": "website",
            "content": "<p>I'm curious, why is merge sort more effective than other types of comparative sorting like Bubble and Insert? Something that feels unintuitive to me is that it takes a single array and makes a new array for every single element in that array right? That doesn't sound efficient. I know that there is a difference between the efficiency of an algorithm in terms of number of operations vs. amount of memory used. Does merge sort achieve greater efficiency in number of operations by being more expensive in terms of memory used?</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 191328144,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "driijko@gmail.com",
            "sender_full_name": "Dree Ko (they) (SP2'20)",
            "sender_id": 257188,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Merge Sort",
            "submessages": [],
            "timestamp": 1584765438,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/c6a4682e6a46285de64c97c77b771481?d=identicon&version=1",
            "client": "website",
            "content": "<p>pretty much, you got it.</p>\n<p>You can make it a lot more efficient by reusing the array -- basically, copy the array once, then keep the subarrays \"in your head\", doing the merge from the original to the copy, or the copy to the original.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 191355993,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "ori@eigenstate.org",
            "sender_full_name": "Ori Dean Bernstein (he) (W2'20)",
            "sender_id": 255045,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Merge Sort",
            "submessages": [],
            "timestamp": 1584810759,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/c6a4682e6a46285de64c97c77b771481?d=identicon&version=1",
            "client": "website",
            "content": "<p>Actually, let me amend that --  it achieves greater effficiency by not shuffling the whole array around every time.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 191368400,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "ori@eigenstate.org",
            "sender_full_name": "Ori Dean Bernstein (he) (W2'20)",
            "sender_id": 255045,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Merge Sort",
            "submessages": [],
            "timestamp": 1584829506,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/c6a4682e6a46285de64c97c77b771481?d=identicon&version=1",
            "client": "website",
            "content": "<p>inserting into the back of an array is a lot easier than inserting into the middle.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 191368408,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "ori@eigenstate.org",
            "sender_full_name": "Ori Dean Bernstein (he) (W2'20)",
            "sender_id": 255045,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Merge Sort",
            "submessages": [],
            "timestamp": 1584829516,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/c6a4682e6a46285de64c97c77b771481?d=identicon&version=1",
            "client": "website",
            "content": "<p>and both insertion sort and bubble sort both repeatedly scan <em>and</em> insert into the middle of an array, which is where their inefficiency comes from.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 191368410,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "ori@eigenstate.org",
            "sender_full_name": "Ori Dean Bernstein (he) (W2'20)",
            "sender_id": 255045,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Merge Sort",
            "submessages": [],
            "timestamp": 1584829552,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/c6a4682e6a46285de64c97c77b771481?d=identicon&version=1",
            "client": "website",
            "content": "<p>For example, you can think of insertion sort as:</p>\n<div class=\"codehilite\"><pre><span></span>while split ! = end:\n    find smallest item in unsorted array\n    move smallest item into position in sorted array\n</pre></div>\n\n\n<p>But, those two steps both do work relative to the size of the array. So, insertion sort on the heap sort example above turns into:</p>\n<div class=\"codehilite\"><pre><span></span>|| represents the separator for the small portion of the array\nfind-smallest:\n    [||1,7,3,2,6,5] =&gt; smallest = INFTY\n    |||1,7,3,2,6,5] =&gt; is smallest &lt; 1? no - smallest = 1\n    |||1,7,3,2,6,5] =&gt; is smallest &lt; 7? no - smallest = 1\n    |||1,7,3,2,6,5] =&gt; is smallest &lt; 3? no - smallest = 1\n    |||1,7,3,2,6,5] =&gt; is smallest &lt; 2? no - smallest = 1\n    |||1,7,3,2,6,5] =&gt; is smallest &lt; 5? no - smallest = 1\n    |||1,7,3,2,6,5] =&gt; is smallest &lt; 6? no - smallest = 1\n\ninsert-smallest:\n    [||1,7,3,2,6,5] =&gt; just ned to shift the divider over, swap 1 and 1\n    [1||7,3,2,6,5]\n\nfind-smallest:\n    [1||7,3,2,6,5]  =&gt; smallest = INFTY\n    |1||7,3,2,6,5] =&gt; is smallest &lt; 7? no - smallest = 7\n    |1||7,3,2,6,5] =&gt; is smallest &lt; 3? no - smallest = 3\n    |1||7,3,2,6,5] =&gt; is smallest &lt; 2? no - smallest = 2\n    |1||7,3,2,6,5] =&gt; is smallest &lt; 5? no - smallest = 2\n    |1||7,3,2,6,5] =&gt; is smallest &lt; 6? no - smallest = 2\n\ninsert-smallest:\n\n    [1||7,3,2,6,5]  =&gt; just need to shift the divider over, swap 2 and 7.\n    [1,2||3,7,6,5]\n\nfind-smallest:\n    [1,2||3,7,6,5]  =&gt; smallest = INFTY\n    [1,2||3,7,6,5]  =&gt; is smallest &lt; 3? smallest = 3\n    [1,2||3,7,6,5]  =&gt; is smallest &lt; 7? smallest = 3\n    [1,2||3,7,6,5]  =&gt; is smallest &lt; 6? smallest = 3\n    [1,2||3,7,6,5]  =&gt; is smallest &lt; 5? smallest = 3\n\ninsert-smallest:\n    [1,2||3,7,6,5]  =&gt; just need to shift the divider over, swap 3 and 3.\n    [1,2,3||7,6,5]\n\nfind-smallest:\n    ...you get the idea, and hopefully see the repeated work.\n</pre></div>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 191371646,
            "is_me_message": false,
            "last_edit_timestamp": 1584835696,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "ori@eigenstate.org",
            "sender_full_name": "Ori Dean Bernstein (he) (W2'20)",
            "sender_id": 255045,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Merge Sort",
            "submessages": [],
            "timestamp": 1584835672,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/02a5b2b6f7220adaf39b9eeea3870a2a8b853948?x=x&version=2",
            "client": "website",
            "content": "<p>Yes I do get it, thanks again Ori! And you confirming that merge sort is kind of just shifting the burden to memory vs. operations is I think the piece of the puzzle that was missing for me. In my mind I think it just seems very unintuitive that, for instance, if you have an array with a thousand elements, you should make a thousand arrays with each element! I'm going to be spending the next few weeks trying to implement a lot of the basic algorithms and data structures in JS, and will consider what you are saying here about shuffling within the back of an array vs. making new arrays. I appreciate the time you took to explain this so thoroughly :)</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 191399635,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "driijko@gmail.com",
            "sender_full_name": "Dree Ko (they) (SP2'20)",
            "sender_id": 257188,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Merge Sort",
            "submessages": [],
            "timestamp": 1584888353,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/c6a4682e6a46285de64c97c77b771481?d=identicon&version=1",
            "client": "website",
            "content": "<p>for merge sort, you can theoretically make thousands of arrays (assuming allocation speed isn't dependent on allocation size -- which can potentially be true if you can avoid initializing the array, but probably isn't in higher level languages), but what you should do is keep <em>2</em> arrays and flip between them.</p>\n<div class=\"codehilite\"><pre><span></span>x =&gt; don&#39;t care values\n&lt;&gt; =&gt; imaginary subarrays we&#39;re actively working with\n{}  =&gt; imaginary subarrays we made earlier\nsource: [&lt;1&gt;,&lt;7&gt;, 3,2,6,5]\ndest:     [x, x, x, x, x, x, x]\n</pre></div>\n\n\n<p>do your merge from the \"imaginary\" subarrays in your source into the destination for 2 of the levels</p>\n<div class=\"codehilite\"><pre><span></span>source: [x. x, 3,2,6,5]        # merge 1, 7 from source to dest\ndest:     [1, 7, x, x, x, x, x]\nsource: [x, x,&lt;3&gt;&lt;&gt;, 3,2,6,5] # merge &lt;3&gt;,&lt;&gt; from source to dest\ndest:     [{1, 7},x, x, x, x, x]\nsource: [x, x, x 3,2,6,5] # now, we&#39;re ready for a merge step in the opposite direction:\ndest:     [{1, 7},{3} x, x, x, x]\n</pre></div>\n\n\n<p>then, flip the two, and do a merge:</p>\n<div class=\"codehilite\"><pre><span></span>source:  [&lt;1, 7&gt;,&lt;3&gt;, x, x, x, x]# merge &lt;1,7&gt;,&lt;3&gt; from source to dest\ndest: [x, x,x, 3,2,6,5]\n</pre></div>\n\n\n<p>Now, you've sorted the first half; do it over again on the other half, and merge again.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 191400825,
            "is_me_message": false,
            "last_edit_timestamp": 1584890483,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "ori@eigenstate.org",
            "sender_full_name": "Ori Dean Bernstein (he) (W2'20)",
            "sender_id": 255045,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Merge Sort",
            "submessages": [],
            "timestamp": 1584890092,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/02a5b2b6f7220adaf39b9eeea3870a2a8b853948?x=x&version=2",
            "client": "website",
            "content": "<p>Okay cool thanks Ori, I'll use this as my template for when I implement :)</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 191403686,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "driijko@gmail.com",
            "sender_full_name": "Dree Ko (they) (SP2'20)",
            "sender_id": 257188,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Merge Sort",
            "submessages": [],
            "timestamp": 1584894110,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/f84d2614fd35c05737bb6a5a41660384e73da59d?x=x&version=2",
            "client": "website",
            "content": "<p>Hey everyone! Tomorrow is another virtual algorithm study group. Does anyone have an algorithm they want to present or maybe one they want to learn about?</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 191772767,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "allicolyer@gmail.com",
            "sender_full_name": "Alli Colyer (she) (W2'20)",
            "sender_id": 255791,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Study Group",
            "submessages": [],
            "timestamp": 1585153340,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/a94df6a414bc64771690399a940d1c52?d=identicon&version=1",
            "client": "ZulipElectron",
            "content": "<p>The sorting algorithims conversation <span class=\"user-mention\" data-user-id=\"257188\">@Andrij Radio (they) (W2'20)</span> and <span class=\"user-mention\" data-user-id=\"255045\">@Ori Dean Bernstein (he) (W2'20)</span> had last week (?) was really informative, maybe one of them could present some of that content?</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 191773077,
            "is_me_message": false,
            "reactions": [
                {
                    "emoji_code": "1f44d",
                    "emoji_name": "+1",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "aditya.athalye@gmail.com",
                        "full_name": "Aditya Athalye (he) (SP1'20)",
                        "id": 263547
                    },
                    "user_id": 263547
                },
                {
                    "emoji_code": "1f44d",
                    "emoji_name": "+1",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "sgorecki@gmail.com",
                        "full_name": "Sara Gulotta (she) (S1'20)",
                        "id": 263732
                    },
                    "user_id": 263732
                },
                {
                    "emoji_code": "1f44d",
                    "emoji_name": "+1",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "george@mand.is",
                        "full_name": "George Mandis (he) (W2'20)",
                        "id": 255044
                    },
                    "user_id": 255044
                },
                {
                    "emoji_code": "1f44d",
                    "emoji_name": "+1",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "allicolyer@gmail.com",
                        "full_name": "Alli Colyer (she) (W2'20)",
                        "id": 255791
                    },
                    "user_id": 255791
                }
            ],
            "recipient_id": 24954,
            "sender_email": "dylnuge@gmail.com",
            "sender_full_name": "Dylan Nugent (he) (S1'20)",
            "sender_id": 263512,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Study Group",
            "submessages": [],
            "timestamp": 1585153495,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/f84d2614fd35c05737bb6a5a41660384e73da59d?x=x&version=2",
            "client": "website",
            "content": "<p>merge sort!! <span class=\"user-mention\" data-user-id=\"255042\">@Johann Diedrick (he) (W2'20)</span> presented that a few weeks back I think! I would also be willing to hop in here and present it as well :)</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 191773459,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "allicolyer@gmail.com",
            "sender_full_name": "Alli Colyer (she) (W2'20)",
            "sender_id": 255791,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Study Group",
            "submessages": [],
            "timestamp": 1585153641,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/c6a4682e6a46285de64c97c77b771481?d=identicon&version=1",
            "client": "website",
            "content": "<p>yeah, was going to say, thought that was already presented.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 191775521,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "ori@eigenstate.org",
            "sender_full_name": "Ori Dean Bernstein (he) (W2'20)",
            "sender_id": 255045,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Study Group",
            "submessages": [],
            "timestamp": 1585154387,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/f84d2614fd35c05737bb6a5a41660384e73da59d?x=x&version=2",
            "client": "website",
            "content": "<p>we can do repeats :) (if there is interest)</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 191775793,
            "is_me_message": false,
            "last_edit_timestamp": 1585154520,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "allicolyer@gmail.com",
            "sender_full_name": "Alli Colyer (she) (W2'20)",
            "sender_id": 255791,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Study Group",
            "submessages": [],
            "timestamp": 1585154503,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/c6a4682e6a46285de64c97c77b771481?d=identicon&version=1",
            "client": "website",
            "content": "<p>sure, I can go over merge sort, and maybe a couple of others.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 191775864,
            "is_me_message": false,
            "reactions": [
                {
                    "emoji_code": "1f389",
                    "emoji_name": "tada",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "aditya.athalye@gmail.com",
                        "full_name": "Aditya Athalye (he) (SP1'20)",
                        "id": 263547
                    },
                    "user_id": 263547
                },
                {
                    "emoji_code": "1f44d",
                    "emoji_name": "+1",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "aditya.athalye@gmail.com",
                        "full_name": "Aditya Athalye (he) (SP1'20)",
                        "id": 263547
                    },
                    "user_id": 263547
                },
                {
                    "emoji_code": "1f389",
                    "emoji_name": "tada",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "allicolyer@gmail.com",
                        "full_name": "Alli Colyer (she) (W2'20)",
                        "id": 255791
                    },
                    "user_id": 255791
                },
                {
                    "emoji_code": "1f44d",
                    "emoji_name": "+1",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "allicolyer@gmail.com",
                        "full_name": "Alli Colyer (she) (W2'20)",
                        "id": 255791
                    },
                    "user_id": 255791
                }
            ],
            "recipient_id": 24954,
            "sender_email": "ori@eigenstate.org",
            "sender_full_name": "Ori Dean Bernstein (he) (W2'20)",
            "sender_id": 255045,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Study Group",
            "submessages": [],
            "timestamp": 1585154527,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/a94df6a414bc64771690399a940d1c52?d=identicon&version=1",
            "client": "ZulipElectron",
            "content": "<p>My bad, I missed that one</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 191775967,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "dylnuge@gmail.com",
            "sender_full_name": "Dylan Nugent (he) (S1'20)",
            "sender_id": 263512,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Study Group",
            "submessages": [],
            "timestamp": 1585154570,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/c6a4682e6a46285de64c97c77b771481?d=identicon&version=1",
            "client": "website",
            "content": "<p>hm, there's also a great paper from the early 90s called \"engineering a sort algorithm\", which is a great look into how to take quicksort and make it production-grade.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 191775987,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "ori@eigenstate.org",
            "sender_full_name": "Ori Dean Bernstein (he) (W2'20)",
            "sender_id": 255045,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Study Group",
            "submessages": [],
            "timestamp": 1585154582,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/a94df6a414bc64771690399a940d1c52?d=identicon&version=1",
            "client": "ZulipElectron",
            "content": "<p>quicker quicksort?</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 191776007,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "dylnuge@gmail.com",
            "sender_full_name": "Dylan Nugent (he) (S1'20)",
            "sender_id": 263512,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Study Group",
            "submessages": [],
            "timestamp": 1585154594,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/a94df6a414bc64771690399a940d1c52?d=identicon&version=1",
            "client": "ZulipElectron",
            "content": "<p>people who write academic papers need me to name them for them</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 191776044,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "dylnuge@gmail.com",
            "sender_full_name": "Dylan Nugent (he) (S1'20)",
            "sender_id": 263512,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Study Group",
            "submessages": [],
            "timestamp": 1585154608,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/c6a4682e6a46285de64c97c77b771481?d=identicon&version=1",
            "client": "website",
            "content": "<p>yep, but also makes it a <em>lot</em> harder to hit quadratic cases.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 191776076,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "ori@eigenstate.org",
            "sender_full_name": "Ori Dean Bernstein (he) (W2'20)",
            "sender_id": 255045,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Study Group",
            "submessages": [],
            "timestamp": 1585154623,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/c6a4682e6a46285de64c97c77b771481?d=identicon&version=1",
            "client": "website",
            "content": "<p>...hey, there are a few good paper titles out there.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 191776113,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "ori@eigenstate.org",
            "sender_full_name": "Ori Dean Bernstein (he) (W2'20)",
            "sender_id": 255045,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Study Group",
            "submessages": [],
            "timestamp": 1585154635,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/a94df6a414bc64771690399a940d1c52?d=identicon&version=1",
            "client": "ZulipElectron",
            "content": "<p>For instance <a href=\"https://www.scs.stanford.edu/~dm/home/papers/remove.pdf\" title=\"https://www.scs.stanford.edu/~dm/home/papers/remove.pdf\">https://www.scs.stanford.edu/~dm/home/papers/remove.pdf</a></p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 191776193,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "dylnuge@gmail.com",
            "sender_full_name": "Dylan Nugent (he) (S1'20)",
            "sender_id": 263512,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Study Group",
            "submessages": [],
            "timestamp": 1585154656,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/a94df6a414bc64771690399a940d1c52?d=identicon&version=1",
            "client": "ZulipElectron",
            "content": "<p>That's more in my caliber of academic capabilities</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 191776251,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "dylnuge@gmail.com",
            "sender_full_name": "Dylan Nugent (he) (S1'20)",
            "sender_id": 263512,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Study Group",
            "submessages": [],
            "timestamp": 1585154683,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/c6a4682e6a46285de64c97c77b771481?d=identicon&version=1",
            "client": "website",
            "content": "<p>hahaha, I was thinking of \"The Geometry of Innocent Flesh on the Bone\".</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 191776350,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "ori@eigenstate.org",
            "sender_full_name": "Ori Dean Bernstein (he) (W2'20)",
            "sender_id": 255045,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Study Group",
            "submessages": [],
            "timestamp": 1585154738,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/a94df6a414bc64771690399a940d1c52?d=identicon&version=1",
            "client": "ZulipElectron",
            "content": "<p>Also every James Mickens article, front to back</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 191776868,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "dylnuge@gmail.com",
            "sender_full_name": "Dylan Nugent (he) (S1'20)",
            "sender_id": 263512,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Study Group",
            "submessages": [],
            "timestamp": 1585154961,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/a94df6a414bc64771690399a940d1c52?d=identicon&version=1",
            "client": "ZulipElectron",
            "content": "<p>Not a bad sentence in the whole bunch of those</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 191776878,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "dylnuge@gmail.com",
            "sender_full_name": "Dylan Nugent (he) (S1'20)",
            "sender_id": 263512,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Study Group",
            "submessages": [],
            "timestamp": 1585154969,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/c6a4682e6a46285de64c97c77b771481?d=identicon&version=1",
            "client": "website",
            "content": "<p>anyways, I can probably do something with sorting, just let me know.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 191777099,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "ori@eigenstate.org",
            "sender_full_name": "Ori Dean Bernstein (he) (W2'20)",
            "sender_id": 255045,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Study Group",
            "submessages": [],
            "timestamp": 1585155058,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/c6a4682e6a46285de64c97c77b771481?d=identicon&version=1",
            "client": "website",
            "content": "<p>(working title: \"all sorts of sorts\")</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 191777129,
            "is_me_message": false,
            "reactions": [
                {
                    "emoji_code": "1f44d",
                    "emoji_name": "+1",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "aditya.athalye@gmail.com",
                        "full_name": "Aditya Athalye (he) (SP1'20)",
                        "id": 263547
                    },
                    "user_id": 263547
                },
                {
                    "emoji_code": "1f44d",
                    "emoji_name": "+1",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "dylnuge@gmail.com",
                        "full_name": "Dylan Nugent (he) (S1'20)",
                        "id": 263512
                    },
                    "user_id": 263512
                },
                {
                    "emoji_code": "1f44d",
                    "emoji_name": "+1",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "tobinyehle@gmail.com",
                        "full_name": "Tobin Yehle (he) (SP1'20)",
                        "id": 105607
                    },
                    "user_id": 105607
                },
                {
                    "emoji_code": "1f44d",
                    "emoji_name": "+1",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "allicolyer@gmail.com",
                        "full_name": "Alli Colyer (she) (W2'20)",
                        "id": 255791
                    },
                    "user_id": 255791
                }
            ],
            "recipient_id": 24954,
            "sender_email": "ori@eigenstate.org",
            "sender_full_name": "Ori Dean Bernstein (he) (W2'20)",
            "sender_id": 255045,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Study Group",
            "submessages": [],
            "timestamp": 1585155068,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/f84d2614fd35c05737bb6a5a41660384e73da59d?x=x&version=2",
            "client": "website",
            "content": "<p>great title!</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 191785302,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "allicolyer@gmail.com",
            "sender_full_name": "Alli Colyer (she) (W2'20)",
            "sender_id": 255791,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Study Group",
            "submessages": [],
            "timestamp": 1585158301,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/6b283009bf4375b73d9628bb245367165da5c360?x=x&version=2",
            "client": "ZulipElectron",
            "content": "<p>late to the party, but may i suggest Convex Hull?</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 191815162,
            "is_me_message": false,
            "reactions": [
                {
                    "emoji_code": "1f44d",
                    "emoji_name": "+1",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "allicolyer@gmail.com",
                        "full_name": "Alli Colyer (she) (W2'20)",
                        "id": 255791
                    },
                    "user_id": 255791
                }
            ],
            "recipient_id": 24954,
            "sender_email": "anthonyabeo@gmail.com",
            "sender_full_name": "Anthony Anabila Abeo (he) (SP2'20)",
            "sender_id": 276302,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Study Group",
            "submessages": [],
            "timestamp": 1585172836,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/82a86805bb6ea0286e3f2edad0956cea2f2ad0aa?x=x&version=2",
            "client": "ZulipElectron",
            "content": "<p><span class=\"user-mention\" data-user-id=\"263510\">@Asa Needle (he/they) (SP1'20)</span> if you look very closely, you can see the back of my head in several of the 6.006 videos lol... While 6.006 technically has 6.042 as a prereq, I think it should be pretty accessible without it if you have a basic grasp of big-O notation and proofs. 6.042 has a lot of math which is very fun, but irrelevant to the topics in 6.006 which is mostly about data structures and classic algorithms. definitely could try to answer any questions if you still had any. Sorry saw this so late, hope you have figured something out!</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 191832552,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "tim@tmickel.com",
            "sender_full_name": "Tim Mickel (he) (SP1'19)",
            "sender_id": 203422,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "MIT OpenCourseWare",
            "submessages": [],
            "timestamp": 1585187574,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/6ae811d40ff8600863755aa510198b5144ebff2c?x=x&version=2",
            "client": "website",
            "content": "<p>I'm just finishing the 6.006 videos, happy to talk about it!</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 191833144,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "jo@johanndiedrick.com",
            "sender_full_name": "Johann Diedrick (he) (W2'20)",
            "sender_id": 255042,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "MIT OpenCourseWare",
            "submessages": [],
            "timestamp": 1585188313,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/998033fdaf174de3fed5af64a4382f61dffa8db6?x=x&version=2",
            "client": "ZulipElectron",
            "content": "<p>found the meeting thanks to remote RC and dropped in despite not knowing the history of the study group XD just found the thread here. thank you so much for explaining sorts, <span class=\"user-mention\" data-user-id=\"255045\">@Ori Dean Bernstein (he) (W2'20)</span> ! helped me understand them better. especially liked the part where you hopped into real-world sorts.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 191914785,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "contrepoint21@gmail.com",
            "sender_full_name": "Janice Shiu (she) (SP2'18)",
            "sender_id": 112188,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Study Group",
            "submessages": [],
            "timestamp": 1585241254,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/c6a4682e6a46285de64c97c77b771481?d=identicon&version=1",
            "client": "website",
            "content": "<p>yeah, I feel like a lot of the time there's a disconnect between the theory and the practice :)</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 191915002,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "ori@eigenstate.org",
            "sender_full_name": "Ori Dean Bernstein (he) (W2'20)",
            "sender_id": 255045,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Study Group",
            "submessages": [],
            "timestamp": 1585241330,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/02a5b2b6f7220adaf39b9eeea3870a2a8b853948?x=x&version=2",
            "client": "website",
            "content": "<p>Yeah I think that part was a bit confusing to me at first. I like hearing the engineering side of it</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 191915082,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "driijko@gmail.com",
            "sender_full_name": "Dree Ko (they) (SP2'20)",
            "sender_id": 257188,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Study Group",
            "submessages": [],
            "timestamp": 1585241367,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/02a5b2b6f7220adaf39b9eeea3870a2a8b853948?x=x&version=2",
            "client": "website",
            "content": "<p>I'm curious if people would want to maybe organize around the MIT course that <span class=\"user-mention\" data-user-id=\"255042\">@Johann Diedrick (he) (W2'20)</span> mentioned in today's meeting? I think I will start studying this starting next week.<br>\n<a href=\"https://ocw.mit.edu/courses/electrical-engineering-and-computer-science/6-006-introduction-to-algorithms-fall-2011/index.htm\" title=\"https://ocw.mit.edu/courses/electrical-engineering-and-computer-science/6-006-introduction-to-algorithms-fall-2011/index.htm\">https://ocw.mit.edu/courses/electrical-engineering-and-computer-science/6-006-introduction-to-algorithms-fall-2011/index.htm</a></p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 191915366,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "driijko@gmail.com",
            "sender_full_name": "Dree Ko (they) (SP2'20)",
            "sender_id": 257188,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Study Group",
            "submessages": [],
            "timestamp": 1585241503,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/998033fdaf174de3fed5af64a4382f61dffa8db6?x=x&version=2",
            "client": "ZulipElectron",
            "content": "<p><span class=\"user-mention\" data-user-id=\"257188\">@Andrij Radio (they) (W2'20)</span> i'd like to join! would it be possible to have the meeting end before 1pm NYC time? current time of 11.30am-12.30pm NYC time works for me. </p>\n<p>note: i'm 12 hours ahead (UTC+8) so 1pm NYC time == 1am for me. my batch didn't have this so it would be nice to join one now.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 191916342,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "contrepoint21@gmail.com",
            "sender_full_name": "Janice Shiu (she) (SP2'18)",
            "sender_id": 112188,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Study Group",
            "submessages": [],
            "timestamp": 1585241977,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/02a5b2b6f7220adaf39b9eeea3870a2a8b853948?x=x&version=2",
            "client": "website",
            "content": "<p>I think that's definitely doable Janice :)<br>\nNot really sure where the algo study group is headed now that W2 batch is ending, but the interest is definitely there</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 191917556,
            "is_me_message": false,
            "reactions": [
                {
                    "emoji_code": "1f44d",
                    "emoji_name": "+1",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "allicolyer@gmail.com",
                        "full_name": "Alli Colyer (she) (W2'20)",
                        "id": 255791
                    },
                    "user_id": 255791
                }
            ],
            "recipient_id": 24954,
            "sender_email": "driijko@gmail.com",
            "sender_full_name": "Dree Ko (they) (SP2'20)",
            "sender_id": 257188,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Study Group",
            "submessages": [],
            "timestamp": 1585242471,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/c6a4682e6a46285de64c97c77b771481?d=identicon&version=1",
            "client": "website",
            "content": "<p>Just realized one thing I forgot to mention: while people keep glossing over  the merge part of mergesort, it's the thing I find myself using all the time, independently -- I've got a few queues, and I want to pop things off in order, a bunch of code -- events ordered by timestamp, for example.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 191921069,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "ori@eigenstate.org",
            "sender_full_name": "Ori Dean Bernstein (he) (W2'20)",
            "sender_id": 255045,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "...just one more thing",
            "submessages": [],
            "timestamp": 1585243991,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/c6a4682e6a46285de64c97c77b771481?d=identicon&version=1",
            "client": "website",
            "content": "<p>the building blocks are useful without the thing built from them :)</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 191921114,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "ori@eigenstate.org",
            "sender_full_name": "Ori Dean Bernstein (he) (W2'20)",
            "sender_id": 255045,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "...just one more thing",
            "submessages": [],
            "timestamp": 1585244010,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/c6a4682e6a46285de64c97c77b771481?d=identicon&version=1",
            "client": "website",
            "content": "<p>in the end, I think a big part of studying algorithms comes down to that -- as you write code, you see the components in a more algorithmic way, and realize \"wait, that's a rotate\", and either use a library, or at least understand what your code's shape is better.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 191921432,
            "is_me_message": false,
            "last_edit_timestamp": 1585244315,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "ori@eigenstate.org",
            "sender_full_name": "Ori Dean Bernstein (he) (W2'20)",
            "sender_id": 255045,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "...just one more thing",
            "submessages": [],
            "timestamp": 1585244131,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/c6a4682e6a46285de64c97c77b771481?d=identicon&version=1",
            "client": "website",
            "content": "<p>(...\"that's a rotate\" is one of the C++ community's memes, from a talk called \"C++ seasoning\" where Sean Parent applied 'std::rotate' to a ton of code that was't obviously rotate, and cut the code down to something 10% of the size)</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 191921662,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "ori@eigenstate.org",
            "sender_full_name": "Ori Dean Bernstein (he) (W2'20)",
            "sender_id": 255045,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "...just one more thing",
            "submessages": [],
            "timestamp": 1585244214,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/6948faab4e5ab8c9d107dba94c9f00e0?d=identicon&version=1",
            "client": "website",
            "content": "<p>i've also been watching these lectures, and was talking to <span class=\"user-mention\" data-user-id=\"100341\">@Harry Alexander (he) (W2'20)</span> and <span class=\"user-mention\" data-user-id=\"263547\">@Aditya Athalye (he) (SP1'20)</span>about it (what feels like forever ago)</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 191922231,
            "is_me_message": false,
            "last_edit_timestamp": 1585244471,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "asa@cottageclass.com",
            "sender_full_name": "Asa Needle (he/they) (S1'20)",
            "sender_id": 263510,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Study Group",
            "submessages": [],
            "timestamp": 1585244442,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/6948faab4e5ab8c9d107dba94c9f00e0?d=identicon&version=1",
            "client": "website",
            "content": "<p>there's a MIT OpenCourseWare stream where i put some thoughts</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 191922344,
            "is_me_message": false,
            "last_edit_timestamp": 1585244496,
            "reactions": [
                {
                    "emoji_code": "1f44d",
                    "emoji_name": "+1",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "allicolyer@gmail.com",
                        "full_name": "Alli Colyer (she) (W2'20)",
                        "id": 255791
                    },
                    "user_id": 255791
                }
            ],
            "recipient_id": 24954,
            "sender_email": "asa@cottageclass.com",
            "sender_full_name": "Asa Needle (he/they) (S1'20)",
            "sender_id": 263510,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Study Group",
            "submessages": [],
            "timestamp": 1585244491,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/c6a4682e6a46285de64c97c77b771481?d=identicon&version=1",
            "client": "website",
            "content": "<p>Recently, I realized I have a problem in git9,<br>\nwhere I may put way too much into a pack file<br>\nfor sending to the git server. The bug is triggered<br>\nby pushing branches where we merged a path<br>\naround the remote's current head. Mostly it's<br>\nharmful, but on big repositories it can result in<br>\nsending a <em>TON</em> of extra data, and in extreme<br>\ncases, make git9 run out of RAM as it builds the<br>\npack file.</p>\n<p>So, here's a description of the problem:</p>\n<p>We branched, pulled something from remote,<br>\ncomitted and merged back, and now we want<br>\nto push our change:</p>\n<div class=\"codehilite\"><pre><span></span>            o---o\n           /     \\\n--o---o---o---o---o---o &lt;-- us\n              ^\n            remote\n</pre></div>\n\n\n<p>So, we do git/pull, and record that we<br>\nshouldn't push anything before the remote's<br>\ncurrent head:</p>\n<div class=\"codehilite\"><pre><span></span>            o---o\n           /     \\\n--o---o---o--[o]--o---o &lt;-- us\n              ^\n            remote\n</pre></div>\n\n\n<p>and we walk back, selecting commits:</p>\n<div class=\"codehilite\"><pre><span></span>            o---o\n           /     \\\n--o---o---o--[o]--x---x &lt;-- us\n              ^\n            remote\n</pre></div>\n\n\n<p>Since it forked, we walk down both<br>\nforks:</p>\n<div class=\"codehilite\"><pre><span></span>            x---x\n           /     \\\n--o---o---o--[o]--x---x &lt;-- us\n              ^\n            remote\n</pre></div>\n\n\n<p>We should stop here, but because we<br>\nonly recorded the one commit on the<br>\nremote as a stopping point, so we<br>\nkeep going</p>\n<div class=\"codehilite\"><pre><span></span>            x---x\n           /     \\\n--x---x---x--[o]--x---x &lt;-- us\n              ^\n            remote\n</pre></div>\n\n\n<p>is there an efficient algorithm to<br>\ncompute a stopping point without<br>\nwalking all ancestors of the remote<br>\nheads?</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 191968841,
            "is_me_message": false,
            "last_edit_timestamp": 1585272573,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "ori@eigenstate.org",
            "sender_full_name": "Ori Dean Bernstein (he) (W2'20)",
            "sender_id": 255045,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Efficiently stopping a graph walk",
            "submessages": [],
            "timestamp": 1585272342,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/c6a4682e6a46285de64c97c77b771481?d=identicon&version=1",
            "client": "website",
            "content": "<p>And, I've gotten some help from #cat-v  on IRC</p>\n<div class=\"codehilite\"><pre><span></span>     ndeuteron | Ori_B: Probably some adaptation of the Lowest Common Ancestor algorithm?\n       ddevault | is this not just a breadth first search or am I missing something\n          Ori_B | oh, the edges are also directed.\n          Ori_B | backwards in history.\n          Ori_B | so, from the node labelled remote, I can only find the place where the branch forked.\n       ddevault | but aren&#39;t you starting from &quot;us&quot;\n          Ori_B | yes.\n          Ori_B | but I need the nodes on the branch that got merged.\n       ddevault | ah\n      ndeuteron | Just walk all the heads back, colouring them as either remote or local as you go. If you recolour a node from remote to local, then you stop.\n          Ori_B | how far do I walk the heads back?\n      ndeuteron | Until you have no more heads.\n      ndeuteron | They&#39;re all going to be recoloured at some point.\n       ddevault | one at a time, along each fork\n      ndeuteron | Then you stop following that one.\n          Ori_B | hm.\n       ddevault | so you don&#39;t exhaustively enumerate a single branch before you realize it was a match further up\n      ndeuteron | You&#39;ll have to handle recolouring from local to remote, too. Need to prune in this case, because you&#39;ve gone too far back from the local head.\n          Ori_B | hm.\n          Ori_B | ok, so, pretty much, create queue of nodes + colors\n          Ori_B | populate it with all heads + remote/local color.\n          Ori_B | pop off node, color its parents with the nodes color.\n          Ori_B | if going remote -&gt; local, stop.\n          Ori_B | if going local-&gt;remote, hm...\n          Ori_B | walk parents and recolor.\n          Ori_B | yeah, that sounds reasonable.\n          Ori_B | at the end, I have a list of colored nodes.. yeah.\n          Ori_B | and I can iterate and pack.\n          Ori_B | I think that&#39;ll work.\n</pre></div>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 191969607,
            "is_me_message": false,
            "last_edit_timestamp": 1585273639,
            "reactions": [
                {
                    "emoji_code": "1f419",
                    "emoji_name": "octopus",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "jo@johanndiedrick.com",
                        "full_name": "Johann Diedrick (he) (W2'20)",
                        "id": 255042
                    },
                    "user_id": 255042
                }
            ],
            "recipient_id": 24954,
            "sender_email": "ori@eigenstate.org",
            "sender_full_name": "Ori Dean Bernstein (he) (W2'20)",
            "sender_id": 255045,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Efficiently stopping a graph walk",
            "submessages": [],
            "timestamp": 1585273502,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/c6a4682e6a46285de64c97c77b771481?d=identicon&version=1",
            "client": "website",
            "content": "<p>So, I think I've translated the idea to pseudocode -- anyone want to poke holes?</p>\n<div class=\"codehilite\"><pre><span></span>paint() {\n    q = nil;\n    for(n in remotes)\n        insert(q, n, Remote)\n    for(n in local)\n        insert(q, n, Local)\n    while((n, color = qpop(q)) != nil){\n        match(n.color, color){\n        | (Remote, Remote):     continue\n        | (Local, Local):   continue\n        | (Local, Remote):  continue\n        | (Remote, Local):  repaint(n)\n        | (Blank, _):\n            n.color = color\n            for(p : n.parents)\n                insert(q, p, color)\n        }\n    }\n}\n\nrepaint(n){\n    if(n.color == Blank){\n        /*\n         * need to recolor blank node at\n         * frontier to flush the repaint\n         * queue.\n         */\n        n.color = Local\n        return\n    }else{\n        n.color = Local\n        for(p : n.parents)\n            repaint(p)\n    }\n}\n</pre></div>\n\n\n<p>(Edit: fixed a few mistakes -- return should have been continue, and forgot to insert the next nodes)</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 192054274,
            "is_me_message": false,
            "last_edit_timestamp": 1585332296,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "ori@eigenstate.org",
            "sender_full_name": "Ori Dean Bernstein (he) (W2'20)",
            "sender_id": 255045,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Efficiently stopping a graph walk",
            "submessages": [],
            "timestamp": 1585330917,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/c6a4682e6a46285de64c97c77b771481?d=identicon&version=1",
            "client": "website",
            "content": "<p>...and as someone that I know said, \"this would be a cute interview question\"</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 192058399,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "ori@eigenstate.org",
            "sender_full_name": "Ori Dean Bernstein (he) (W2'20)",
            "sender_id": 255045,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Efficiently stopping a graph walk",
            "submessages": [],
            "timestamp": 1585332801,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/6ae811d40ff8600863755aa510198b5144ebff2c?x=x&version=2",
            "client": "website",
            "content": "<p><a href=\"https://leetcode.com/explore/featured/card/30-day-leetcoding-challenge/\" title=\"https://leetcode.com/explore/featured/card/30-day-leetcoding-challenge/\">https://leetcode.com/explore/featured/card/30-day-leetcoding-challenge/</a></p>\n<p>LeetCode is doing a 30 day coding challenge over the course of April! With all of us cooped up at home, I thought it might be nice to do. I'm definitely going to be doing it as a way to start interview prepping :)</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 192291178,
            "is_me_message": false,
            "reactions": [
                {
                    "emoji_code": "2795",
                    "emoji_name": "plus",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "emilyrchiggins@gmail.com",
                        "full_name": "Emily Higgins (she) (W2'20)",
                        "id": 256959
                    },
                    "user_id": 256959
                },
                {
                    "emoji_code": "2795",
                    "emoji_name": "plus",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "julianvmodesto@gmail.com",
                        "full_name": "Julian Modesto (he) (m3'20)",
                        "id": 276201
                    },
                    "user_id": 276201
                },
                {
                    "emoji_code": "2795",
                    "emoji_name": "plus",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "neil.liu16@gmail.com",
                        "full_name": "Neil Liu (he) (SP2'20)",
                        "id": 276158
                    },
                    "user_id": 276158
                },
                {
                    "emoji_code": "2795",
                    "emoji_name": "plus",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "ahmad19526@gmail.com",
                        "full_name": "Ahmed Abdalla (SP2'16)",
                        "id": 7874
                    },
                    "user_id": 7874
                },
                {
                    "emoji_code": "2795",
                    "emoji_name": "plus",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "roland@rolandcrosby.com",
                        "full_name": "Roland Crosby (he) (SP2'20)",
                        "id": 276197
                    },
                    "user_id": 276197
                }
            ],
            "recipient_id": 24954,
            "sender_email": "jo@johanndiedrick.com",
            "sender_full_name": "Johann Diedrick (he) (W2'20)",
            "sender_id": 255042,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "30 Day LeetCoding Challenge",
            "submessages": [],
            "timestamp": 1585589968,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/c8cec51f2fb41f1bbf0183ec6ada0450880a67a6?x=x&version=2",
            "client": "ZulipElectron",
            "content": "<p><span class=\"user-group-mention\" data-user-group-id=\"41\">@Currently at RC</span>  Hi everyone! I\u2019m taking over running Algorithms Study Group from <span class=\"user-mention\" data-user-id=\"255791\">@Alli Colyer (she) (W2'20)</span>! The time will stay the same, Thursdays at 11:30, right after AM Check-Ins. Does anyone have an algorithm they want to present on this week, or one that they particularly want to learn about?</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 192299217,
            "is_me_message": false,
            "reactions": [
                {
                    "emoji_code": "1f419",
                    "emoji_name": "octopus",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "ttumiel@gmail.com",
                        "full_name": "Tom Tumiel (SP1'20)",
                        "id": 263646
                    },
                    "user_id": 263646
                },
                {
                    "emoji_code": "2764",
                    "emoji_name": "heart",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "toph.allen@gmail.com",
                        "full_name": "Toph Allen (he) (SP2'20)",
                        "id": 255104
                    },
                    "user_id": 255104
                },
                {
                    "emoji_code": "1f419",
                    "emoji_name": "octopus",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "toph.allen@gmail.com",
                        "full_name": "Toph Allen (he) (SP2'20)",
                        "id": 255104
                    },
                    "user_id": 255104
                },
                {
                    "emoji_code": "2764",
                    "emoji_name": "heart",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "anthonyabeo@gmail.com",
                        "full_name": "Anthony Anabila Abeo (he) (SP2'20)",
                        "id": 276302
                    },
                    "user_id": 276302
                },
                {
                    "emoji_code": "2764",
                    "emoji_name": "heart",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "allicolyer@gmail.com",
                        "full_name": "Alli Colyer (she) (W2'20)",
                        "id": 255791
                    },
                    "user_id": 255791
                },
                {
                    "emoji_code": "1f419",
                    "emoji_name": "octopus",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "dylnuge@gmail.com",
                        "full_name": "Dylan Nugent (he) (S1'20)",
                        "id": 263512
                    },
                    "user_id": 263512
                },
                {
                    "emoji_code": "1f419",
                    "emoji_name": "octopus",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "driijko@gmail.com",
                        "full_name": "Dree Ko (they) (SP2'20)",
                        "id": 257188
                    },
                    "user_id": 257188
                },
                {
                    "emoji_code": "1f419",
                    "emoji_name": "octopus",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "tobinyehle@gmail.com",
                        "full_name": "Tobin Yehle (he) (SP1'20)",
                        "id": 105607
                    },
                    "user_id": 105607
                },
                {
                    "emoji_code": "1f419",
                    "emoji_name": "octopus",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "aditya.athalye@gmail.com",
                        "full_name": "Aditya Athalye (he) (SP1'20)",
                        "id": 263547
                    },
                    "user_id": 263547
                }
            ],
            "recipient_id": 24954,
            "sender_email": "sgorecki@gmail.com",
            "sender_full_name": "Sara Gulotta (she) (S1'20)",
            "sender_id": 263732,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Study Group",
            "submessages": [],
            "timestamp": 1585593474,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/68c07aa24ae39681409794daff1a921b08e5e324?x=x&version=2",
            "client": "website",
            "content": "<p><span class=\"user-mention\" data-user-id=\"263732\">@Sara Gulotta (she) (SP1'20)</span> I would also advertise the event, and the existence of this stream in <a class=\"stream\" data-stream-id=\"19042\" href=\"/#narrow/stream/19042-397-Bridge\">#397 Bridge</a> (sorry if you have already and I missed it), since the new Recursers aren't subscribed to this stream by default like you all were.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 192299867,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "james@recurse.com",
            "sender_full_name": "James J. Porter (he) (S'13)",
            "sender_id": 2113,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Study Group",
            "submessages": [],
            "timestamp": 1585593798,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/570b5294859a4650f5c6c4f866b6fba3e34af02b?x=x&version=2",
            "client": "website",
            "content": "<p>I think this was happening twice a week for a while. Depending on interest from folks who are ahead of NYC it might be nice to reschedule the the old Tuesday session at a different time.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 192300468,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "tobinyehle@gmail.com",
            "sender_full_name": "Tobin Yehle (he) (SP1'20)",
            "sender_id": 105607,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Study Group",
            "submessages": [],
            "timestamp": 1585594091,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/570b5294859a4650f5c6c4f866b6fba3e34af02b?x=x&version=2",
            "client": "website",
            "content": "<p>Not sure what time that should be, just thought it might be nice :)</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 192300576,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "tobinyehle@gmail.com",
            "sender_full_name": "Tobin Yehle (he) (SP1'20)",
            "sender_id": 105607,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Study Group",
            "submessages": [],
            "timestamp": 1585594141,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/c8cec51f2fb41f1bbf0183ec6ada0450880a67a6?x=x&version=2",
            "client": "ZulipElectron",
            "content": "<p>Ah, that's true. Thanks <span class=\"user-mention\" data-user-id=\"2113\">@James J. Porter (he) (S'13)</span>! I hadn't thought of that</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 192300595,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "sgorecki@gmail.com",
            "sender_full_name": "Sara Gulotta (she) (S1'20)",
            "sender_id": 263732,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Study Group",
            "submessages": [],
            "timestamp": 1585594151,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/c8cec51f2fb41f1bbf0183ec6ada0450880a67a6?x=x&version=2",
            "client": "ZulipElectron",
            "content": "<p><span class=\"user-mention\" data-user-id=\"105607\">@Tobin Yehle (he) (SP1'20)</span> that's a great idea! I can't take on running two sessions a week, but if anyone wants to take this over or divide it up, I'm happy to collaborate on running it or hand it off. :)</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 192300922,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "sgorecki@gmail.com",
            "sender_full_name": "Sara Gulotta (she) (S1'20)",
            "sender_id": 263732,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Study Group",
            "submessages": [],
            "timestamp": 1585594288,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/570b5294859a4650f5c6c4f866b6fba3e34af02b?x=x&version=2",
            "client": "website",
            "content": "<p>I think if there is a lot of interest this Thursday we can figure something out</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 192301060,
            "is_me_message": false,
            "reactions": [
                {
                    "emoji_code": "1f44d",
                    "emoji_name": "+1",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "sgorecki@gmail.com",
                        "full_name": "Sara Gulotta (she) (S1'20)",
                        "id": 263732
                    },
                    "user_id": 263732
                }
            ],
            "recipient_id": 24954,
            "sender_email": "tobinyehle@gmail.com",
            "sender_full_name": "Tobin Yehle (he) (SP1'20)",
            "sender_id": 105607,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Study Group",
            "submessages": [],
            "timestamp": 1585594346,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/acd774478f8f2c577a7571a7fcfc285fd3564b31?x=x&version=4",
            "client": "ZulipElectron",
            "content": "<p>I'm so glad this is a thing! I've been doing 6.006 / CLRS on my own before my batch started, I'd love to have some company</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 192303646,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "sarabobo@gmail.com",
            "sender_full_name": "Sara Bobo (she) (S2'20)",
            "sender_id": 277502,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Study Group",
            "submessages": [],
            "timestamp": 1585595496,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/af24ea97d27746b09489da7d27991698b34ba37a?x=x&version=4",
            "client": "website",
            "content": "<p>Oh I saw that too! I'm planning to do it as well :)</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 192316219,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "silvaj1503@gmail.com",
            "sender_full_name": "James Silva (he) (SP2'20)",
            "sender_id": 276604,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "30 Day LeetCoding Challenge",
            "submessages": [],
            "timestamp": 1585601756,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/0789f8732b00c0952a58c7e4de8ae016e1bfbe20?x=x&version=2",
            "client": "website",
            "content": "<p>I'm happy to help organize it in the future if needed! I'll see everyone thursday</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 192340061,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "neil.liu16@gmail.com",
            "sender_full_name": "Neil Liu (he) (SP2'20)",
            "sender_id": 276158,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Study Group",
            "submessages": [],
            "timestamp": 1585621866,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/0789f8732b00c0952a58c7e4de8ae016e1bfbe20?x=x&version=2",
            "client": "website",
            "content": "<p>Is there anyone presenting or a topic for this Thursday? I can present something quick if noone else is presenting.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 192407039,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "neil.liu16@gmail.com",
            "sender_full_name": "Neil Liu (he) (SP2'20)",
            "sender_id": 276158,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Study Group",
            "submessages": [],
            "timestamp": 1585669207,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/c8cec51f2fb41f1bbf0183ec6ada0450880a67a6?x=x&version=2",
            "client": "ZulipElectron",
            "content": "<p><span class=\"user-mention\" data-user-id=\"276158\">@Neil Liu (he) (SP2'20)</span> Nope, nobody's presenting yet! What do you have in mind?</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 192414343,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "sgorecki@gmail.com",
            "sender_full_name": "Sara Gulotta (she) (S1'20)",
            "sender_id": 263732,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Study Group",
            "submessages": [],
            "timestamp": 1585672139,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/c6a4682e6a46285de64c97c77b771481?d=identicon&version=1",
            "client": "website",
            "content": "<p>I can also present, but I feel a bit odd doing things back to back.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 192414405,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "ori@eigenstate.org",
            "sender_full_name": "Ori Dean Bernstein (he) (W2'20)",
            "sender_id": 255045,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Study Group",
            "submessages": [],
            "timestamp": 1585672171,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/0789f8732b00c0952a58c7e4de8ae016e1bfbe20?x=x&version=2",
            "client": "website",
            "content": "<p>I was thinking of giving a short talk on exponential by squaring and some fun applications of it</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 192416984,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "neil.liu16@gmail.com",
            "sender_full_name": "Neil Liu (he) (SP2'20)",
            "sender_id": 276158,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Study Group",
            "submessages": [],
            "timestamp": 1585673364,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/c6a4682e6a46285de64c97c77b771481?d=identicon&version=1",
            "client": "website",
            "content": "<p>yeah, that's a neat one.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 192418187,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "ori@eigenstate.org",
            "sender_full_name": "Ori Dean Bernstein (he) (W2'20)",
            "sender_id": 255045,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Study Group",
            "submessages": [],
            "timestamp": 1585673888,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/c6a4682e6a46285de64c97c77b771481?d=identicon&version=1",
            "client": "website",
            "content": "<p>(huh, we haven't done anything with numerical algorithms at all; that might be kind of neat, if there's a way to present with minimal calculus)</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 192418243,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "ori@eigenstate.org",
            "sender_full_name": "Ori Dean Bernstein (he) (W2'20)",
            "sender_id": 255045,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Study Group",
            "submessages": [],
            "timestamp": 1585673917,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/0789f8732b00c0952a58c7e4de8ae016e1bfbe20?x=x&version=2",
            "client": "website",
            "content": "<p>yeah, I think presenting the basic divide and conquer formula is neat, then applying it to how recursive sequences can be solved in log n time</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 192419345,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "neil.liu16@gmail.com",
            "sender_full_name": "Neil Liu (he) (SP2'20)",
            "sender_id": 276158,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Study Group",
            "submessages": [],
            "timestamp": 1585674411,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/c96a3927ee49dcc488ffe1745c837cfda1bd8279?x=x&version=2",
            "client": "website",
            "content": "<p>If anyone else is doing CTCI in javascript and wants to compare notes, I'm putting my solutions in this repo: <a href=\"https://github.com/saoirse-zee/ctci\" title=\"https://github.com/saoirse-zee/ctci\">https://github.com/saoirse-zee/ctci</a></p>\n<p>I'm doing it TDD-style, as I want to practice writing tests as well.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 192421044,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "emmazee9009@gmail.com",
            "sender_full_name": "Emma Smith (she) (F2'19)",
            "sender_id": 241369,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "cracking coding interview",
            "submessages": [],
            "timestamp": 1585675109,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/998033fdaf174de3fed5af64a4382f61dffa8db6?x=x&version=2",
            "client": "website",
            "content": "<p>I'll join in! <span class=\"user-mention\" data-user-id=\"276158\">@Neil Liu (he) (SP2'20)</span> if you are presenting, do you mind linking some prep material for us? Alternatively, some keywords to google would be nice. ^^ I'd like to be prepared for your presentation. Thank you!</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 192426282,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "contrepoint21@gmail.com",
            "sender_full_name": "Janice Shiu (she) (SP2'18)",
            "sender_id": 112188,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Study Group",
            "submessages": [],
            "timestamp": 1585677470,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/0a7281da0a7289a741650707cabd4fd97b489f0e?x=x&version=2",
            "client": "ZulipElectron",
            "content": "<p>Ooh, this is really cool!</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 192426983,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "toph.allen@gmail.com",
            "sender_full_name": "Toph Allen (he) (SP2'20)",
            "sender_id": 255104,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "cracking coding interview",
            "submessages": [],
            "timestamp": 1585677791,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/c96a3927ee49dcc488ffe1745c837cfda1bd8279?x=x&version=2",
            "client": "website",
            "content": "<p>Thanks! PRs are most welcome... I just realized my tests don't pass! Pushing a fix in just a bit :)</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 192430731,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "emmazee9009@gmail.com",
            "sender_full_name": "Emma Smith (she) (F2'19)",
            "sender_id": 241369,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "cracking coding interview",
            "submessages": [],
            "timestamp": 1585679456,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/c8cec51f2fb41f1bbf0183ec6ada0450880a67a6?x=x&version=2",
            "client": "ZulipElectron",
            "content": "<p><span class=\"user-mention\" data-user-id=\"276158\">@Neil Liu (he) (SP2'20)</span> That sounds like it'll be a really interesting topic! Thank you for signing up to present. <span aria-label=\"slight smile\" class=\"emoji emoji-1f642\" role=\"img\" title=\"slight smile\">:slight_smile:</span></p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 192437048,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "sgorecki@gmail.com",
            "sender_full_name": "Sara Gulotta (she) (S1'20)",
            "sender_id": 263732,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Study Group",
            "submessages": [],
            "timestamp": 1585682448,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/0789f8732b00c0952a58c7e4de8ae016e1bfbe20?x=x&version=2",
            "client": "website",
            "content": "<p><span class=\"user-mention\" data-user-id=\"263732\">@Sara Gulotta (she) (SP1'20)</span>  Sounds great! I'll make some slides for this.</p>\n<p><span class=\"user-mention\" data-user-id=\"112188\">@Janice Shiu (she) (SP2'18)</span>  Some concepts to be familiar with is divide and conquer, recursive equations and matrix multiplication. I'm planning on making the presentation so it's for all skill levels including review of the concepts above if needed!</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 192438352,
            "is_me_message": false,
            "reactions": [
                {
                    "emoji_code": "1f419",
                    "emoji_name": "octopus",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "driijko@gmail.com",
                        "full_name": "Dree Ko (they) (SP2'20)",
                        "id": 257188
                    },
                    "user_id": 257188
                },
                {
                    "emoji_code": "1f389",
                    "emoji_name": "tada",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "contrepoint21@gmail.com",
                        "full_name": "Janice Shiu (she) (SP2'18)",
                        "id": 112188
                    },
                    "user_id": 112188
                },
                {
                    "emoji_code": "1f419",
                    "emoji_name": "octopus",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "jana.zeller@googlemail.com",
                        "full_name": "Jana Zeller (she) (SP2'20)",
                        "id": 276328
                    },
                    "user_id": 276328
                },
                {
                    "emoji_code": "1f419",
                    "emoji_name": "octopus",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "sgorecki@gmail.com",
                        "full_name": "Sara Gulotta (she) (S1'20)",
                        "id": 263732
                    },
                    "user_id": 263732
                }
            ],
            "recipient_id": 24954,
            "sender_email": "neil.liu16@gmail.com",
            "sender_full_name": "Neil Liu (he) (SP2'20)",
            "sender_id": 276158,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Study Group",
            "submessages": [],
            "timestamp": 1585683057,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/6ae811d40ff8600863755aa510198b5144ebff2c?x=x&version=2",
            "client": "website",
            "content": "<p>I'll be keeping track of my solutions here: <a href=\"https://github.com/jdiedrick/30-day-leetcoding-challenge-april-2020\" title=\"https://github.com/jdiedrick/30-day-leetcoding-challenge-april-2020\">https://github.com/jdiedrick/30-day-leetcoding-challenge-april-2020</a></p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 192535610,
            "is_me_message": false,
            "reactions": [
                {
                    "emoji_code": "1f389",
                    "emoji_name": "tada",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "neil.liu16@gmail.com",
                        "full_name": "Neil Liu (he) (SP2'20)",
                        "id": 276158
                    },
                    "user_id": 276158
                }
            ],
            "recipient_id": 24954,
            "sender_email": "jo@johanndiedrick.com",
            "sender_full_name": "Johann Diedrick (he) (W2'20)",
            "sender_id": 255042,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "30 Day LeetCoding Challenge",
            "submessages": [],
            "timestamp": 1585751052,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/0789f8732b00c0952a58c7e4de8ae016e1bfbe20?x=x&version=2",
            "client": "ZulipElectron",
            "content": "<p>I wonder how any company can expect the derivation of the XOR solution if you haven't seen it before haha</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 192547880,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "neil.liu16@gmail.com",
            "sender_full_name": "Neil Liu (he) (SP2'20)",
            "sender_id": 276158,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "30 Day LeetCoding Challenge",
            "submessages": [],
            "timestamp": 1585755611,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/02a5b2b6f7220adaf39b9eeea3870a2a8b853948?x=x&version=2",
            "client": "website",
            "content": "<p>Thanks Neil, excited for this. I'm definitely a newbie with some of that, so appreciate you making your presentation inclusive :)</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 192551495,
            "is_me_message": false,
            "reactions": [
                {
                    "emoji_code": "1f419",
                    "emoji_name": "octopus",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "allicolyer@gmail.com",
                        "full_name": "Alli Colyer (she) (W2'20)",
                        "id": 255791
                    },
                    "user_id": 255791
                },
                {
                    "emoji_code": "1f419",
                    "emoji_name": "octopus",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "sgorecki@gmail.com",
                        "full_name": "Sara Gulotta (she) (S1'20)",
                        "id": 263732
                    },
                    "user_id": 263732
                },
                {
                    "emoji_code": "1f419",
                    "emoji_name": "octopus",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "neil.liu16@gmail.com",
                        "full_name": "Neil Liu (he) (SP2'20)",
                        "id": 276158
                    },
                    "user_id": 276158
                }
            ],
            "recipient_id": 24954,
            "sender_email": "driijko@gmail.com",
            "sender_full_name": "Dree Ko (they) (SP2'20)",
            "sender_id": 257188,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Study Group",
            "submessages": [],
            "timestamp": 1585757042,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/700775c1b9679bb74bd97d4ced91fadf9cc2ed17?x=x&version=2",
            "client": "website",
            "content": "<p>i am irrationally annoyed at that solution. it clearly works but just feels way too clever. is all of leetcode like this?</p>\n<p>(will be putting my solutions here: <a href=\"https://github.com/rolandcrosby/leetcode\" title=\"https://github.com/rolandcrosby/leetcode\">https://github.com/rolandcrosby/leetcode</a>)</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 192553188,
            "is_me_message": false,
            "last_edit_timestamp": 1585767827,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "roland@rolandcrosby.com",
            "sender_full_name": "Roland Crosby (he) (SP2'20)",
            "sender_id": 276197,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "30 Day LeetCoding Challenge",
            "submessages": [],
            "timestamp": 1585757764,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/0789f8732b00c0952a58c7e4de8ae016e1bfbe20?x=x&version=2",
            "client": "ZulipElectron",
            "content": "<p>I discussed this with my friends a while back and just agreed it was a bad interview question. I think leetcode quality varies but some do require tricks to solve them</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 192554610,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "neil.liu16@gmail.com",
            "sender_full_name": "Neil Liu (he) (SP2'20)",
            "sender_id": 276158,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "30 Day LeetCoding Challenge",
            "submessages": [],
            "timestamp": 1585758424,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/6948faab4e5ab8c9d107dba94c9f00e0?d=identicon&version=1",
            "client": "ZulipElectron",
            "content": "<p>wow that bitwise solution feels like magic <span aria-label=\"shrug\" class=\"emoji emoji-1f937\" role=\"img\" title=\"shrug\">:shrug:</span>\u200d\u2642\ufe0f</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 192571828,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "asa@cottageclass.com",
            "sender_full_name": "Asa Needle (he/they) (S1'20)",
            "sender_id": 263510,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "30 Day LeetCoding Challenge",
            "submessages": [],
            "timestamp": 1585765508,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/a94df6a414bc64771690399a940d1c52?d=identicon&version=1",
            "client": "website",
            "content": "<p>I'm fine with it as like a puzzle challenge thing. Palantir once asked me that as an interview question</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 192571900,
            "is_me_message": false,
            "last_edit_timestamp": 1585765573,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "dylnuge@gmail.com",
            "sender_full_name": "Dylan Nugent (he) (S1'20)",
            "sender_id": 263512,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "30 Day LeetCoding Challenge",
            "submessages": [],
            "timestamp": 1585765543,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/a94df6a414bc64771690399a940d1c52?d=identicon&version=1",
            "client": "website",
            "content": "<p>Which I'm <em>not</em> fine with, it's an entirely awful interview question</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 192571978,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "dylnuge@gmail.com",
            "sender_full_name": "Dylan Nugent (he) (S1'20)",
            "sender_id": 263512,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "30 Day LeetCoding Challenge",
            "submessages": [],
            "timestamp": 1585765563,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/c6a4682e6a46285de64c97c77b771481?d=identicon&version=1",
            "client": "website",
            "content": "<p>are the problems available anywhere that doesn't require me to get a leetcode account?</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 192572400,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "ori@eigenstate.org",
            "sender_full_name": "Ori Dean Bernstein (he) (W2'20)",
            "sender_id": 255045,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "30 Day LeetCoding Challenge",
            "submessages": [],
            "timestamp": 1585765746,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/6948faab4e5ab8c9d107dba94c9f00e0?d=identicon&version=1",
            "client": "ZulipElectron",
            "content": "<p>i think you can see the problem without an account: <a href=\"https://leetcode.com/problems/single-number/\" title=\"https://leetcode.com/problems/single-number/\">https://leetcode.com/problems/single-number/</a></p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 192573938,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "asa@cottageclass.com",
            "sender_full_name": "Asa Needle (he/they) (S1'20)",
            "sender_id": 263510,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "30 Day LeetCoding Challenge",
            "submessages": [],
            "timestamp": 1585766481,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/c6a4682e6a46285de64c97c77b771481?d=identicon&version=1",
            "client": "website",
            "content": "<p>ah.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 192574469,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "ori@eigenstate.org",
            "sender_full_name": "Ori Dean Bernstein (he) (W2'20)",
            "sender_id": 255045,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "30 Day LeetCoding Challenge",
            "submessages": [],
            "timestamp": 1585766725,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/c6a4682e6a46285de64c97c77b771481?d=identicon&version=1",
            "client": "website",
            "content": "<p>also, that is an incredibly bad interview question; I think a minimum rule of thumb is \"If I showed you the answer, would you get the question?\"</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 192574520,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "ori@eigenstate.org",
            "sender_full_name": "Ori Dean Bernstein (he) (W2'20)",
            "sender_id": 255045,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "30 Day LeetCoding Challenge",
            "submessages": [],
            "timestamp": 1585766757,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/6948faab4e5ab8c9d107dba94c9f00e0?d=identicon&version=1",
            "client": "ZulipElectron",
            "content": "<p>does anyone have a basic intuitive explanation of why this works? i can see that it does, but don't know how i would go about proving that it does</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 192575565,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "asa@cottageclass.com",
            "sender_full_name": "Asa Needle (he/they) (S1'20)",
            "sender_id": 263510,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "30 Day LeetCoding Challenge",
            "submessages": [],
            "timestamp": 1585767215,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/0789f8732b00c0952a58c7e4de8ae016e1bfbe20?x=x&version=2",
            "client": "ZulipElectron",
            "content": "<p>Here's a quick summary, someone please correct me if i'm wrong</p>\n<p>X xor X = 0<br>\n0 xor X = X<br>\n0 xor 0 = 0</p>\n<p>the xor function is commutative which means X xor Y = Y xor X</p>\n<p>So if you think of a long xor chain of variables,</p>\n<p>A xor B xor C xor B xor A = A xor A xor B xor B xor C = 0 xor 0 xor C = C</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 192576228,
            "is_me_message": false,
            "last_edit_timestamp": 1585767502,
            "reactions": [
                {
                    "emoji_code": "1f44d",
                    "emoji_name": "+1",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "dizzy57@gmail.com",
                        "full_name": "Alexey Preobrazhenskiy (he) (m3'20)",
                        "id": 276310
                    },
                    "user_id": 276310
                },
                {
                    "emoji_code": "1f44d",
                    "emoji_name": "+1",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "jo@johanndiedrick.com",
                        "full_name": "Johann Diedrick (he) (W2'20)",
                        "id": 255042
                    },
                    "user_id": 255042
                },
                {
                    "emoji_code": "1f44d",
                    "emoji_name": "+1",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "gnusosa.mx@gmail.com",
                        "full_name": "Carlos Sosa (he) (SP2'20)",
                        "id": 276586
                    },
                    "user_id": 276586
                },
                {
                    "emoji_code": "1f44d",
                    "emoji_name": "+1",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "roland@rolandcrosby.com",
                        "full_name": "Roland Crosby (he) (SP2'20)",
                        "id": 276197
                    },
                    "user_id": 276197
                },
                {
                    "emoji_code": "1f44d",
                    "emoji_name": "+1",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "justin.jaffray@gmail.com",
                        "full_name": "Justin Jaffray (he) (m3'20)",
                        "id": 276160
                    },
                    "user_id": 276160
                }
            ],
            "recipient_id": 24954,
            "sender_email": "neil.liu16@gmail.com",
            "sender_full_name": "Neil Liu (he) (SP2'20)",
            "sender_id": 276158,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "30 Day LeetCoding Challenge",
            "submessages": [],
            "timestamp": 1585767489,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/6948faab4e5ab8c9d107dba94c9f00e0?d=identicon&version=1",
            "client": "ZulipElectron",
            "content": "<p>that was just what i needed, thank you <span class=\"user-mention\" data-user-id=\"276158\">@Neil Liu (he) (SP2'20)</span> !</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 192576833,
            "is_me_message": false,
            "reactions": [
                {
                    "emoji_code": "1f604",
                    "emoji_name": "big_smile",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "neil.liu16@gmail.com",
                        "full_name": "Neil Liu (he) (SP2'20)",
                        "id": 276158
                    },
                    "user_id": 276158
                }
            ],
            "recipient_id": 24954,
            "sender_email": "asa@cottageclass.com",
            "sender_full_name": "Asa Needle (he/they) (S1'20)",
            "sender_id": 263510,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "30 Day LeetCoding Challenge",
            "submessages": [],
            "timestamp": 1585767722,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/6ae811d40ff8600863755aa510198b5144ebff2c?x=x&version=2",
            "client": "website",
            "content": "<p>Ugh, yeah. This is not a brag, but I came up with that solution in &lt; 5 min, not because of some genius insight but because I had seen that problem or a variant of it before (on Leetcode, Interview Cake, and <a href=\"http://interviewing.io\" title=\"http://interviewing.io\">interviewing.io</a>). There are definitely a lot of blind insight questions on Leetcode, some of which do come up on interviews for better or worse. I agree that it would probably be a bad/not fun question if you hadn't seen XOR/that problem before (:</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 192591502,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "jo@johanndiedrick.com",
            "sender_full_name": "Johann Diedrick (he) (W2'20)",
            "sender_id": 255042,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "30 Day LeetCoding Challenge",
            "submessages": [],
            "timestamp": 1585774416,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/700775c1b9679bb74bd97d4ced91fadf9cc2ed17?x=x&version=2",
            "client": "website",
            "content": "<p>that said, i'm glad to be exposed to annoying/tricky problems so i'll be able to get past them in interviews :)</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 192591728,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "roland@rolandcrosby.com",
            "sender_full_name": "Roland Crosby (he) (SP2'20)",
            "sender_id": 276197,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "30 Day LeetCoding Challenge",
            "submessages": [],
            "timestamp": 1585774543,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/2bd944ad38bd10b190c5deef99eeee9a?d=identicon&version=1",
            "client": "website",
            "content": "<p>I do actually think that while this is certainly not a good interview question, this xor thing is kind of a \"once you've seen one you've seen them all\" kind of deal\u2014this technique of xoring a bunch of things together comes up from time to time and it's a nice trick to have in your back pocket</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 192592080,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "justin.jaffray@gmail.com",
            "sender_full_name": "Justin Jaffray (he) (m3'20)",
            "sender_id": 276160,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "30 Day LeetCoding Challenge",
            "submessages": [],
            "timestamp": 1585774699,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/6b283009bf4375b73d9628bb245367165da5c360?x=x&version=2",
            "client": "ZulipElectron",
            "content": "<p>anyone working on day 2's challenge? I'm running into some time limit exceeded issues.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 192663882,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "anthonyabeo@gmail.com",
            "sender_full_name": "Anthony Anabila Abeo (he) (SP2'20)",
            "sender_id": 276302,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "30 Day LeetCoding Challenge",
            "submessages": [],
            "timestamp": 1585833687,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/998033fdaf174de3fed5af64a4382f61dffa8db6?x=x&version=2",
            "client": "ZulipElectron",
            "content": "<p>I just solved day 2!</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 192665222,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "contrepoint21@gmail.com",
            "sender_full_name": "Janice Shiu (she) (SP2'18)",
            "sender_id": 112188,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "30 Day LeetCoding Challenge",
            "submessages": [],
            "timestamp": 1585834296,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/6b283009bf4375b73d9628bb245367165da5c360?x=x&version=2",
            "client": "ZulipElectron",
            "content": "<p><span class=\"user-mention silent\" data-user-id=\"112188\">Janice Shiu (she) (SP2'18)</span> <a href=\"#narrow/stream/21502-algorithms/topic/30.20Day.20LeetCoding.20Challenge/near/192665222\" title=\"#narrow/stream/21502-algorithms/topic/30.20Day.20LeetCoding.20Challenge/near/192665222\">said</a>:</p>\n<blockquote>\n<p>I just solved day 2!</p>\n</blockquote>\n<p>cool. i have a question. At which point is the function supposed to return false?</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 192665438,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "anthonyabeo@gmail.com",
            "sender_full_name": "Anthony Anabila Abeo (he) (SP2'20)",
            "sender_id": 276302,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "30 Day LeetCoding Challenge",
            "submessages": [],
            "timestamp": 1585834381,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/998033fdaf174de3fed5af64a4382f61dffa8db6?x=x&version=2",
            "client": "ZulipElectron",
            "content": "<p><span class=\"user-mention\" data-user-id=\"276302\">@Anthony Anabila Abeo (he) (SP2'20)</span> the question is annoying in that respect because I had to figure this out by trial and error (read: write python script in local comp, and run it manually). </p>\n<p>so imho the question is not clear.</p>\n<p>what they mean by \"loops endlessly in a cycle which does not include 1\" is that at some point, the numbers will start repeating. for example,  if you start with number x, it will loop to y, z, a, b, c, z. once you see z again, return false. because you know that's your 'endless loop' because z will naturally go to a, b, c once it goes through the loop again. </p>\n<p>does that make sense? </p>\n<p>I can drag out actual numbers and the loops they form if it's confusing to you</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 192665680,
            "is_me_message": false,
            "last_edit_timestamp": 1585834512,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "contrepoint21@gmail.com",
            "sender_full_name": "Janice Shiu (she) (SP2'18)",
            "sender_id": 112188,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "30 Day LeetCoding Challenge",
            "submessages": [],
            "timestamp": 1585834494,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/6b283009bf4375b73d9628bb245367165da5c360?x=x&version=2",
            "client": "ZulipElectron",
            "content": "<p><span class=\"user-mention\" data-user-id=\"112188\">@Janice Shiu (she) (SP2'18)</span> i think it makes sense. Essentially, i need to keep all the updated values of n until they start repeating, then i return false. Is that right?</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 192666315,
            "is_me_message": false,
            "reactions": [
                {
                    "emoji_code": "1f389",
                    "emoji_name": "tada",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "anthonyabeo@gmail.com",
                        "full_name": "Anthony Anabila Abeo (he) (SP2'20)",
                        "id": 276302
                    },
                    "user_id": 276302
                },
                {
                    "emoji_code": "1f44d",
                    "emoji_name": "+1",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "contrepoint21@gmail.com",
                        "full_name": "Janice Shiu (she) (SP2'18)",
                        "id": 112188
                    },
                    "user_id": 112188
                }
            ],
            "recipient_id": 24954,
            "sender_email": "anthonyabeo@gmail.com",
            "sender_full_name": "Anthony Anabila Abeo (he) (SP2'20)",
            "sender_id": 276302,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "30 Day LeetCoding Challenge",
            "submessages": [],
            "timestamp": 1585834812,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/2bd944ad38bd10b190c5deef99eeee9a?d=identicon&version=1",
            "client": "website",
            "content": "<p><a href=\"https://gist.github.com/justinj/2cf7c55e72959bc6bc5c9d852703eacd\" title=\"https://gist.github.com/justinj/2cf7c55e72959bc6bc5c9d852703eacd\">here</a>'s a goofy solution, and <a href=\"https://gist.github.com/justinj/32251c831e620df4b475a07b20738ff9\" title=\"https://gist.github.com/justinj/32251c831e620df4b475a07b20738ff9\">here</a>'s a slightly more legitimate one.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 192667434,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "justin.jaffray@gmail.com",
            "sender_full_name": "Justin Jaffray (he) (m3'20)",
            "sender_id": 276160,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "30 Day LeetCoding Challenge",
            "submessages": [],
            "timestamp": 1585835383,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/6b283009bf4375b73d9628bb245367165da5c360?x=x&version=2",
            "client": "ZulipElectron",
            "content": "<p>thanks <span class=\"user-mention\" data-user-id=\"112188\">@Janice Shiu (she) (SP2'18)</span> . you're a life-saver. my solution was accepted.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 192667671,
            "is_me_message": false,
            "last_edit_timestamp": 1585835511,
            "reactions": [
                {
                    "emoji_code": "1f601",
                    "emoji_name": "grinning_face_with_smiling_eyes",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "contrepoint21@gmail.com",
                        "full_name": "Janice Shiu (she) (SP2'18)",
                        "id": 112188
                    },
                    "user_id": 112188
                }
            ],
            "recipient_id": 24954,
            "sender_email": "anthonyabeo@gmail.com",
            "sender_full_name": "Anthony Anabila Abeo (he) (SP2'20)",
            "sender_id": 276302,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "30 Day LeetCoding Challenge",
            "submessages": [],
            "timestamp": 1585835486,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/6b283009bf4375b73d9628bb245367165da5c360?x=x&version=2",
            "client": "ZulipElectron",
            "content": "<p><span class=\"user-mention silent\" data-user-id=\"276160\">Justin Jaffray (he) (m3'20)</span> <a href=\"#narrow/stream/21502-algorithms/topic/30.20Day.20LeetCoding.20Challenge/near/192667434\" title=\"#narrow/stream/21502-algorithms/topic/30.20Day.20LeetCoding.20Challenge/near/192667434\">said</a>:</p>\n<blockquote>\n<p><a href=\"https://gist.github.com/justinj/2cf7c55e72959bc6bc5c9d852703eacd\" title=\"https://gist.github.com/justinj/2cf7c55e72959bc6bc5c9d852703eacd\">here</a>'s a goofy solution, and <a href=\"https://gist.github.com/justinj/32251c831e620df4b475a07b20738ff9\" title=\"https://gist.github.com/justinj/32251c831e620df4b475a07b20738ff9\">here</a>'s a slightly more legitimate one.</p>\n</blockquote>\n<p>Nice</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 192668389,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "anthonyabeo@gmail.com",
            "sender_full_name": "Anthony Anabila Abeo (he) (SP2'20)",
            "sender_id": 276302,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "30 Day LeetCoding Challenge",
            "submessages": [],
            "timestamp": 1585835805,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/c8cec51f2fb41f1bbf0183ec6ada0450880a67a6?x=x&version=2",
            "client": "ZulipElectron",
            "content": "<p><span class=\"user-group-mention\" data-user-group-id=\"41\">@Currently at RC</span>  Algorithms study group starts after AM Check-In in <a href=\"https://www.recurse.com/zoom/hopper\" title=\"https://www.recurse.com/zoom/hopper\">Hopper</a>! <span class=\"user-mention\" data-user-id=\"276158\">@Neil Liu (he) (SP2'20)</span> is going to teach us about exponential by squaring. Be there or be squared.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 192673193,
            "is_me_message": false,
            "last_edit_timestamp": 1585839484,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "sgorecki@gmail.com",
            "sender_full_name": "Sara Gulotta (she) (S1'20)",
            "sender_id": 263732,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Study Group",
            "submessages": [],
            "timestamp": 1585837900,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/998033fdaf174de3fed5af64a4382f61dffa8db6?x=x&version=2",
            "client": "ZulipElectron",
            "content": "<p><span class=\"user-mention silent\" data-user-id=\"276160\">Justin Jaffray (he) (m3'20)</span> <a href=\"#narrow/stream/21502-algorithms/topic/30.20Day.20LeetCoding.20Challenge/near/192667434\" title=\"#narrow/stream/21502-algorithms/topic/30.20Day.20LeetCoding.20Challenge/near/192667434\">said</a>:</p>\n<blockquote>\n<p><a href=\"https://gist.github.com/justinj/2cf7c55e72959bc6bc5c9d852703eacd\" title=\"https://gist.github.com/justinj/2cf7c55e72959bc6bc5c9d852703eacd\">here</a>'s a goofy solution, and <a href=\"https://gist.github.com/justinj/32251c831e620df4b475a07b20738ff9\" title=\"https://gist.github.com/justinj/32251c831e620df4b475a07b20738ff9\">here</a>'s a slightly more legitimate one.</p>\n</blockquote>\n<p>why is <code>if (n === 4) return false;</code> btw?</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 192677103,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "contrepoint21@gmail.com",
            "sender_full_name": "Janice Shiu (she) (SP2'18)",
            "sender_id": 112188,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "30 Day LeetCoding Challenge",
            "submessages": [],
            "timestamp": 1585839447,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/0265934fdc86859bdd65431acfcb67e5?d=identicon&version=1",
            "client": "ZulipElectron",
            "content": "<p>Slightly annoyed that viewing the solutions requires a subscription. But at least you can see how your code measures up!</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 192677706,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "emilyrchiggins@gmail.com",
            "sender_full_name": "Emily Higgins (she) (W2'20)",
            "sender_id": 256959,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "30 Day LeetCoding Challenge",
            "submessages": [],
            "timestamp": 1585839675,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/afcff71a280c619fe7f45af5df2f66b9617479fc?x=x&version=4",
            "client": "website",
            "content": "<p>Erik Demaine: Algorithms Meet Art, Puzzles, and Magic<br>\n<a href=\"https://youtu.be/WlO80TOMK7Y?t=142\" title=\"https://youtu.be/WlO80TOMK7Y?t=142\">https://youtu.be/WlO80TOMK7Y?t=142</a></p>\n<div class=\"youtube-video message_inline_image\"><a data-id=\"WlO80TOMK7Y\" href=\"https://youtu.be/WlO80TOMK7Y?t=142\" title=\"https://youtu.be/WlO80TOMK7Y?t=142\"><img src=\"https://i.ytimg.com/vi/WlO80TOMK7Y/default.jpg\"></a></div>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 192679895,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "aditya.athalye@gmail.com",
            "sender_full_name": "Aditya Athalye (he) (SP1'20)",
            "sender_id": 263547,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "art math algorithms puzzles",
            "submessages": [],
            "timestamp": 1585840448,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/2bd944ad38bd10b190c5deef99eeee9a?d=identicon&version=1",
            "client": "website",
            "content": "<p><span class=\"user-mention\" data-user-id=\"112188\">@Janice Shiu (she) (SP2'18)</span> since Zulip doesn't have spoilers (yet!), here's why the goofy solution works: <a href=\"https://gist.github.com/justinj/45099cc2faf4a41f6b34b4bdfacae22c\" title=\"https://gist.github.com/justinj/45099cc2faf4a41f6b34b4bdfacae22c\">https://gist.github.com/justinj/45099cc2faf4a41f6b34b4bdfacae22c</a></p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 192683816,
            "is_me_message": false,
            "reactions": [
                {
                    "emoji_code": "1f44d",
                    "emoji_name": "+1",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "dylnuge@gmail.com",
                        "full_name": "Dylan Nugent (he) (S1'20)",
                        "id": 263512
                    },
                    "user_id": 263512
                },
                {
                    "emoji_code": "1f44d",
                    "emoji_name": "+1",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "contrepoint21@gmail.com",
                        "full_name": "Janice Shiu (she) (SP2'18)",
                        "id": 112188
                    },
                    "user_id": 112188
                }
            ],
            "recipient_id": 24954,
            "sender_email": "justin.jaffray@gmail.com",
            "sender_full_name": "Justin Jaffray (he) (m3'20)",
            "sender_id": 276160,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "30 Day LeetCoding Challenge",
            "submessages": [],
            "timestamp": 1585841677,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/a94df6a414bc64771690399a940d1c52?d=identicon&version=1",
            "client": "ZulipElectron",
            "content": "<p>The world needs zpoilers! If only <span class=\"user-mention\" data-user-id=\"263732\">@Sara Gulotta (she) (SP1'20)</span> and I didn't have such busy calendars we could get this done for the good of humanity <span aria-label=\"slight smile\" class=\"emoji emoji-1f642\" role=\"img\" title=\"slight smile\">:slight_smile:</span></p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 192684421,
            "is_me_message": false,
            "reactions": [
                {
                    "emoji_code": "1f4c5",
                    "emoji_name": "calendar",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "sgorecki@gmail.com",
                        "full_name": "Sara Gulotta (she) (S1'20)",
                        "id": 263732
                    },
                    "user_id": 263732
                }
            ],
            "recipient_id": 24954,
            "sender_email": "dylnuge@gmail.com",
            "sender_full_name": "Dylan Nugent (he) (S1'20)",
            "sender_id": 263512,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "30 Day LeetCoding Challenge",
            "submessages": [],
            "timestamp": 1585841891,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/af24ea97d27746b09489da7d27991698b34ba37a?x=x&version=4",
            "client": "website",
            "content": "<p>Thanks <span class=\"user-mention\" data-user-id=\"276160\">@Justin Jaffray (he) (m3'20)</span> for the wiki link in your second answer, I wouldn't have known that pattern otherwise :)</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 192704553,
            "is_me_message": false,
            "last_edit_timestamp": 1585850794,
            "reactions": [
                {
                    "emoji_code": "1f44d",
                    "emoji_name": "thumbs_up",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "justin.jaffray@gmail.com",
                        "full_name": "Justin Jaffray (he) (m3'20)",
                        "id": 276160
                    },
                    "user_id": 276160
                }
            ],
            "recipient_id": 24954,
            "sender_email": "silvaj1503@gmail.com",
            "sender_full_name": "James Silva (he) (SP2'20)",
            "sender_id": 276604,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "30 Day LeetCoding Challenge",
            "submessages": [],
            "timestamp": 1585850780,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/0789f8732b00c0952a58c7e4de8ae016e1bfbe20?x=x&version=2",
            "client": "ZulipElectron",
            "content": "<p>Totally forgot - I uploaded the slides I presented today at <a href=\"https://drive.google.com/open?id=1r3WuVVpnggCdijqPC4kbTK6h6y0ocRut\" title=\"https://drive.google.com/open?id=1r3WuVVpnggCdijqPC4kbTK6h6y0ocRut\">https://drive.google.com/open?id=1r3WuVVpnggCdijqPC4kbTK6h6y0ocRut</a></p>\n<p>(It's under the shared folder)</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 192712215,
            "is_me_message": false,
            "last_edit_timestamp": 1585864043,
            "reactions": [
                {
                    "emoji_code": "38",
                    "emoji_name": "wizard_hat",
                    "reaction_type": "realm_emoji",
                    "user": {
                        "email": "alyssadanijones@gmail.com",
                        "full_name": "Alyssa Jones (she) (SP2'20)",
                        "id": 276611
                    },
                    "user_id": 276611
                },
                {
                    "emoji_code": "1f389",
                    "emoji_name": "tada",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "alyssadanijones@gmail.com",
                        "full_name": "Alyssa Jones (she) (SP2'20)",
                        "id": 276611
                    },
                    "user_id": 276611
                },
                {
                    "emoji_code": "1f389",
                    "emoji_name": "tada",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "sgorecki@gmail.com",
                        "full_name": "Sara Gulotta (she) (S1'20)",
                        "id": 263732
                    },
                    "user_id": 263732
                },
                {
                    "emoji_code": "1f389",
                    "emoji_name": "tada",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "driijko@gmail.com",
                        "full_name": "Dree Ko (they) (SP2'20)",
                        "id": 257188
                    },
                    "user_id": 257188
                },
                {
                    "emoji_code": "1f389",
                    "emoji_name": "tada",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "dylnuge@gmail.com",
                        "full_name": "Dylan Nugent (he) (S1'20)",
                        "id": 263512
                    },
                    "user_id": 263512
                }
            ],
            "recipient_id": 24954,
            "sender_email": "neil.liu16@gmail.com",
            "sender_full_name": "Neil Liu (he) (SP2'20)",
            "sender_id": 276158,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Study Group",
            "submessages": [],
            "timestamp": 1585854835,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/6ae811d40ff8600863755aa510198b5144ebff2c?x=x&version=2",
            "client": "website",
            "content": "<p>Here's my solution to day 2: <a href=\"https://github.com/jdiedrick/30-day-leetcoding-challenge-april-2020/blob/master/02_happy_number.py\" title=\"https://github.com/jdiedrick/30-day-leetcoding-challenge-april-2020/blob/master/02_happy_number.py\">https://github.com/jdiedrick/30-day-leetcoding-challenge-april-2020/blob/master/02_happy_number.py</a></p>\n<p>I think the key insight is that if it isn't a happy number, it will repeat back to a number that has already come up, so using a set you can see if you've seen that number before, indicating you're in a loop so you can return false! I wish they had been explicit about that in the problem statement - I had to do some debug printing to find that out :X</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 192716519,
            "is_me_message": false,
            "last_edit_timestamp": 1585856968,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "jo@johanndiedrick.com",
            "sender_full_name": "Johann Diedrick (he) (W2'20)",
            "sender_id": 255042,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "30 Day LeetCoding Challenge",
            "submessages": [],
            "timestamp": 1585856897,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/af24ea97d27746b09489da7d27991698b34ba37a?x=x&version=4",
            "client": "website",
            "content": "<p>Hey Johann, that was my initial answer too before I saw Justin's answer. The set uses O(n) memory, however it is possible to complete the question with O(1) memory if we use a cycle detection algorithm as referenced here: <a href=\"https://en.wikipedia.org/wiki/Cycle_detection#Floyd's_Tortoise_and_Hare\" title=\"https://en.wikipedia.org/wiki/Cycle_detection#Floyd's_Tortoise_and_Hare\">https://en.wikipedia.org/wiki/Cycle_detection#Floyd's_Tortoise_and_Hare</a><br>\nI think that's the pattern corresponding to your insight. Just thought I'd mention it :)</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 192740891,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "silvaj1503@gmail.com",
            "sender_full_name": "James Silva (he) (SP2'20)",
            "sender_id": 276604,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "30 Day LeetCoding Challenge",
            "submessages": [],
            "timestamp": 1585870063,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/6ae811d40ff8600863755aa510198b5144ebff2c?x=x&version=2",
            "client": "website",
            "content": "<p>Oh snap! Nice. We talked a lot about Floyd's cycle detection in the Algos Study Group last batch. Looks like he has resurfaced yet again lol. Thanks for that!</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 192742237,
            "is_me_message": false,
            "reactions": [
                {
                    "emoji_code": "1f601",
                    "emoji_name": "grinning_face_with_smiling_eyes",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "emilyrchiggins@gmail.com",
                        "full_name": "Emily Higgins (she) (W2'20)",
                        "id": 256959
                    },
                    "user_id": 256959
                },
                {
                    "emoji_code": "1f601",
                    "emoji_name": "grinning_face_with_smiling_eyes",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "silvaj1503@gmail.com",
                        "full_name": "James Silva (he) (SP2'20)",
                        "id": 276604
                    },
                    "user_id": 276604
                }
            ],
            "recipient_id": 24954,
            "sender_email": "jo@johanndiedrick.com",
            "sender_full_name": "Johann Diedrick (he) (W2'20)",
            "sender_id": 255042,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "30 Day LeetCoding Challenge",
            "submessages": [],
            "timestamp": 1585871085,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/6ae811d40ff8600863755aa510198b5144ebff2c?x=x&version=2",
            "client": "website",
            "content": "<p>Omg I love that tortoise/hare solution :) Nice one <span class=\"user-mention\" data-user-id=\"276160\">@Justin Jaffray (he) (m3'20)</span> !</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 192743315,
            "is_me_message": false,
            "reactions": [
                {
                    "emoji_code": "263a",
                    "emoji_name": "smile",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "justin.jaffray@gmail.com",
                        "full_name": "Justin Jaffray (he) (m3'20)",
                        "id": 276160
                    },
                    "user_id": 276160
                }
            ],
            "recipient_id": 24954,
            "sender_email": "jo@johanndiedrick.com",
            "sender_full_name": "Johann Diedrick (he) (W2'20)",
            "sender_id": 255042,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "30 Day LeetCoding Challenge",
            "submessages": [],
            "timestamp": 1585871986,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/998033fdaf174de3fed5af64a4382f61dffa8db6?x=x&version=2",
            "client": "ZulipElectron",
            "content": "<p>I'm hanging out at the presentation space working on today's max subarray challenge.<br>\nif you're hanging out there and want to get my attention, just say something. XD my sound is on.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 192793793,
            "is_me_message": false,
            "last_edit_timestamp": 1585915828,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "contrepoint21@gmail.com",
            "sender_full_name": "Janice Shiu (she) (SP2'18)",
            "sender_id": 112188,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "30 Day LeetCoding Challenge",
            "submessages": [],
            "timestamp": 1585915802,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/6ae811d40ff8600863755aa510198b5144ebff2c?x=x&version=2",
            "client": "website",
            "content": "<p><span class=\"user-mention\" data-user-id=\"112188\">@Janice Shiu (she) (SP2'18)</span> I'm going to come join now</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 192808169,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "jo@johanndiedrick.com",
            "sender_full_name": "Johann Diedrick (he) (W2'20)",
            "sender_id": 255042,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "30 Day LeetCoding Challenge",
            "submessages": [],
            "timestamp": 1585922713,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/998033fdaf174de3fed5af64a4382f61dffa8db6?x=x&version=2",
            "client": "ZulipElectron",
            "content": "<p><span class=\"user-mention\" data-user-id=\"255042\">@Johann Diedrick (he) (W2'20)</span> ah i left about half an hour ago! but i am planning on hanging out in one of the rooms to leetcode every day. i might make a calendar event for it and make sure it doesn't overlap with existing meetings.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 192813537,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "contrepoint21@gmail.com",
            "sender_full_name": "Janice Shiu (she) (SP2'18)",
            "sender_id": 112188,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "30 Day LeetCoding Challenge",
            "submessages": [],
            "timestamp": 1585924820,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/6ae811d40ff8600863755aa510198b5144ebff2c?x=x&version=2",
            "client": "website",
            "content": "<p>Does anyone want to pair on today's question at 2pm? I'm feeling stuck &gt;_&lt; !</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 192834970,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "jo@johanndiedrick.com",
            "sender_full_name": "Johann Diedrick (he) (W2'20)",
            "sender_id": 255042,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "30 Day LeetCoding Challenge",
            "submessages": [],
            "timestamp": 1585933447,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/998033fdaf174de3fed5af64a4382f61dffa8db6?x=x&version=2",
            "client": "ZulipElectron",
            "content": "<p>was fun discussing it with <span class=\"user-mention\" data-user-id=\"255042\">@Johann Diedrick (he) (W2'20)</span> but i've got to sleep now. ^^ </p>\n<p>to anyone wanting to pair/brainstorm/etc - I'll probably work on leetcode somewhere between 7-10am NY time on mon-fri, and we'll see how it goes for sat and sun. might do it shortly after the problem is released, cos 12am PST = 3pm for me. do ping me if you'll be around during those times.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 192835543,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "contrepoint21@gmail.com",
            "sender_full_name": "Janice Shiu (she) (SP2'18)",
            "sender_id": 112188,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "30 Day LeetCoding Challenge",
            "submessages": [],
            "timestamp": 1585933692,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/6b283009bf4375b73d9628bb245367165da5c360?x=x&version=2",
            "client": "ZulipElectron",
            "content": "<p><span class=\"user-mention\" data-user-id=\"255042\">@Johann Diedrick (he) (W2'20)</span> i will love to pair.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 192835653,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "anthonyabeo@gmail.com",
            "sender_full_name": "Anthony Anabila Abeo (he) (SP2'20)",
            "sender_id": 276302,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "30 Day LeetCoding Challenge",
            "submessages": [],
            "timestamp": 1585933750,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/6ae811d40ff8600863755aa510198b5144ebff2c?x=x&version=2",
            "client": "website",
            "content": "<p><span class=\"user-mention\" data-user-id=\"112188\">@Janice Shiu (she) (SP2'18)</span> Yeah I'm trying to do these in the AM so I can try to be available around then.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 192835670,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "jo@johanndiedrick.com",
            "sender_full_name": "Johann Diedrick (he) (W2'20)",
            "sender_id": 255042,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "30 Day LeetCoding Challenge",
            "submessages": [],
            "timestamp": 1585933762,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/6ae811d40ff8600863755aa510198b5144ebff2c?x=x&version=2",
            "client": "website",
            "content": "<p><span class=\"user-mention\" data-user-id=\"276302\">@Anthony Anabila Abeo (he) (SP2'20)</span>  Ok! Lets do it :)</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 192835684,
            "is_me_message": false,
            "last_edit_timestamp": 1585933781,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "jo@johanndiedrick.com",
            "sender_full_name": "Johann Diedrick (he) (W2'20)",
            "sender_id": 255042,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "30 Day LeetCoding Challenge",
            "submessages": [],
            "timestamp": 1585933769,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/700775c1b9679bb74bd97d4ced91fadf9cc2ed17?x=x&version=2",
            "client": "website",
            "content": "<p><span class=\"user-mention\" data-user-id=\"255042\">@Johann Diedrick (he) (W2'20)</span> <span class=\"user-mention\" data-user-id=\"276302\">@Anthony Anabila Abeo (he) (SP2'20)</span> if you're free at 2 could I join you to talk about this? (or if anyone else wants to pair on this let me know)</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 192840017,
            "is_me_message": false,
            "reactions": [
                {
                    "emoji_code": "1f44d",
                    "emoji_name": "+1",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "jo@johanndiedrick.com",
                        "full_name": "Johann Diedrick (he) (W2'20)",
                        "id": 255042
                    },
                    "user_id": 255042
                },
                {
                    "emoji_code": "1f44d",
                    "emoji_name": "+1",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "anthonyabeo@gmail.com",
                        "full_name": "Anthony Anabila Abeo (he) (SP2'20)",
                        "id": 276302
                    },
                    "user_id": 276302
                }
            ],
            "recipient_id": 24954,
            "sender_email": "roland@rolandcrosby.com",
            "sender_full_name": "Roland Crosby (he) (SP2'20)",
            "sender_id": 276197,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "30 Day LeetCoding Challenge",
            "submessages": [],
            "timestamp": 1585935790,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/6ae811d40ff8600863755aa510198b5144ebff2c?x=x&version=2",
            "client": "website",
            "content": "<p>Yes please!</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 192840429,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "jo@johanndiedrick.com",
            "sender_full_name": "Johann Diedrick (he) (W2'20)",
            "sender_id": 255042,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "30 Day LeetCoding Challenge",
            "submessages": [],
            "timestamp": 1585936011,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/700775c1b9679bb74bd97d4ced91fadf9cc2ed17?x=x&version=2",
            "client": "website",
            "content": "<p>awesome let's meet in Church at 2? <a href=\"https://www.recurse.com/zoom/church\" title=\"https://www.recurse.com/zoom/church\">https://www.recurse.com/zoom/church</a></p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 192840700,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "roland@rolandcrosby.com",
            "sender_full_name": "Roland Crosby (he) (SP2'20)",
            "sender_id": 276197,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "30 Day LeetCoding Challenge",
            "submessages": [],
            "timestamp": 1585936157,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/700775c1b9679bb74bd97d4ced91fadf9cc2ed17?x=x&version=2",
            "client": "website",
            "content": "<p>(in 10 mins)</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 192840717,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "roland@rolandcrosby.com",
            "sender_full_name": "Roland Crosby (he) (SP2'20)",
            "sender_id": 276197,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "30 Day LeetCoding Challenge",
            "submessages": [],
            "timestamp": 1585936173,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/6ae811d40ff8600863755aa510198b5144ebff2c?x=x&version=2",
            "client": "website",
            "content": "<p>Sounds good</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 192840937,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "jo@johanndiedrick.com",
            "sender_full_name": "Johann Diedrick (he) (W2'20)",
            "sender_id": 255042,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "30 Day LeetCoding Challenge",
            "submessages": [],
            "timestamp": 1585936264,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/6ae811d40ff8600863755aa510198b5144ebff2c?x=x&version=2",
            "client": "website",
            "content": "<p>xkcd comic related to numerical cycles from our call (h/t <span class=\"user-mention\" data-user-id=\"276160\">@Justin Jaffray (he) (m3'20)</span> ) <a href=\"https://xkcd.com/710/\" title=\"https://xkcd.com/710/\">https://xkcd.com/710/</a></p>\n<p><a href=\"user_uploads/13/YQvLf0IDwWJf3vQvDinYXh-g/collatz_conjecture.png\" title=\"user_uploads/13/YQvLf0IDwWJf3vQvDinYXh-g/collatz_conjecture.png\">collatz_conjecture.png</a></p>\n<div class=\"message_inline_image\"><a href=\"user_uploads/13/YQvLf0IDwWJf3vQvDinYXh-g/collatz_conjecture.png\" title=\"collatz_conjecture.png\"><img src=\"user_uploads/13/YQvLf0IDwWJf3vQvDinYXh-g/collatz_conjecture.png\"></a></div>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 192850222,
            "is_me_message": false,
            "last_edit_timestamp": 1585943636,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "jo@johanndiedrick.com",
            "sender_full_name": "Johann Diedrick (he) (W2'20)",
            "sender_id": 255042,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "30 Day LeetCoding Challenge",
            "submessages": [],
            "timestamp": 1585940606,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/700775c1b9679bb74bd97d4ced91fadf9cc2ed17?x=x&version=2",
            "client": "website",
            "content": "<p>hm. now i'm getting \"wrong answer\" for the linear solution when i submit it to leetcode</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 192850458,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "roland@rolandcrosby.com",
            "sender_full_name": "Roland Crosby (he) (SP2'20)",
            "sender_id": 276197,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "30 Day LeetCoding Challenge",
            "submessages": [],
            "timestamp": 1585940714,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/2bd944ad38bd10b190c5deef99eeee9a?d=identicon&version=1",
            "client": "website",
            "content": "<p>do you have one of the failing test cases?</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 192850619,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "justin.jaffray@gmail.com",
            "sender_full_name": "Justin Jaffray (he) (m3'20)",
            "sender_id": 276160,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "30 Day LeetCoding Challenge",
            "submessages": [],
            "timestamp": 1585940797,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/700775c1b9679bb74bd97d4ced91fadf9cc2ed17?x=x&version=2",
            "client": "website",
            "content": "<p>yeah one sec i was just adding it to my test cases</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 192850750,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "roland@rolandcrosby.com",
            "sender_full_name": "Roland Crosby (he) (SP2'20)",
            "sender_id": 276197,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "30 Day LeetCoding Challenge",
            "submessages": [],
            "timestamp": 1585940876,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/700775c1b9679bb74bd97d4ced91fadf9cc2ed17?x=x&version=2",
            "client": "website",
            "content": "<p>LinearSolution: wrong answer for input [1, 2]: expected 3, got 2</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 192850843,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "roland@rolandcrosby.com",
            "sender_full_name": "Roland Crosby (he) (SP2'20)",
            "sender_id": 276197,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "30 Day LeetCoding Challenge",
            "submessages": [],
            "timestamp": 1585940909,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/6b283009bf4375b73d9628bb245367165da5c360?x=x&version=2",
            "client": "ZulipElectron",
            "content": "<p><span class=\"user-mention\" data-user-id=\"255042\">@Johann Diedrick (he) (W2'20)</span> kindly share the iterative solution.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 192850931,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "anthonyabeo@gmail.com",
            "sender_full_name": "Anthony Anabila Abeo (he) (SP2'20)",
            "sender_id": 276302,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "30 Day LeetCoding Challenge",
            "submessages": [],
            "timestamp": 1585940954,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/700775c1b9679bb74bd97d4ced91fadf9cc2ed17?x=x&version=2",
            "client": "website",
            "content": "<p><span class=\"user-mention\" data-user-id=\"276302\">@Anthony Anabila Abeo (he) (SP2'20)</span> hang tight i'm about to push it to github</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 192850967,
            "is_me_message": false,
            "reactions": [
                {
                    "emoji_code": "1f44d",
                    "emoji_name": "+1",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "anthonyabeo@gmail.com",
                        "full_name": "Anthony Anabila Abeo (he) (SP2'20)",
                        "id": 276302
                    },
                    "user_id": 276302
                }
            ],
            "recipient_id": 24954,
            "sender_email": "roland@rolandcrosby.com",
            "sender_full_name": "Roland Crosby (he) (SP2'20)",
            "sender_id": 276197,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "30 Day LeetCoding Challenge",
            "submessages": [],
            "timestamp": 1585940974,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/700775c1b9679bb74bd97d4ced91fadf9cc2ed17?x=x&version=2",
            "client": "website",
            "content": "<p>i figured out the problem i think - we should be iterating over all the nums, not the nums minus the first element</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 192851012,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "roland@rolandcrosby.com",
            "sender_full_name": "Roland Crosby (he) (SP2'20)",
            "sender_id": 276197,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "30 Day LeetCoding Challenge",
            "submessages": [],
            "timestamp": 1585940994,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/2bd944ad38bd10b190c5deef99eeee9a?d=identicon&version=1",
            "client": "website",
            "content": "<p>oh yeah i think we made that change on johann's version, you might have missed it on your end</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 192851083,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "justin.jaffray@gmail.com",
            "sender_full_name": "Justin Jaffray (he) (m3'20)",
            "sender_id": 276160,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "30 Day LeetCoding Challenge",
            "submessages": [],
            "timestamp": 1585941018,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/700775c1b9679bb74bd97d4ced91fadf9cc2ed17?x=x&version=2",
            "client": "website",
            "content": "<p>makes sense :)</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 192851098,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "roland@rolandcrosby.com",
            "sender_full_name": "Roland Crosby (he) (SP2'20)",
            "sender_id": 276197,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "30 Day LeetCoding Challenge",
            "submessages": [],
            "timestamp": 1585941026,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/700775c1b9679bb74bd97d4ced91fadf9cc2ed17?x=x&version=2",
            "client": "website",
            "content": "<p><span class=\"user-mention\" data-user-id=\"276302\">@Anthony Anabila Abeo (he) (SP2'20)</span> here you go <a href=\"https://github.com/rolandcrosby/leetcode/blob/master/20200403-maximumsubarray.py\" title=\"https://github.com/rolandcrosby/leetcode/blob/master/20200403-maximumsubarray.py\">https://github.com/rolandcrosby/leetcode/blob/master/20200403-maximumsubarray.py</a></p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 192851214,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "roland@rolandcrosby.com",
            "sender_full_name": "Roland Crosby (he) (SP2'20)",
            "sender_id": 276197,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "30 Day LeetCoding Challenge",
            "submessages": [],
            "timestamp": 1585941079,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/6b283009bf4375b73d9628bb245367165da5c360?x=x&version=2",
            "client": "ZulipElectron",
            "content": "<p>got it <span class=\"user-mention\" data-user-id=\"276197\">@Roland Crosby (he) (SP2'20)</span></p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 192851504,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "anthonyabeo@gmail.com",
            "sender_full_name": "Anthony Anabila Abeo (he) (SP2'20)",
            "sender_id": 276302,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "30 Day LeetCoding Challenge",
            "submessages": [],
            "timestamp": 1585941239,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/6b283009bf4375b73d9628bb245367165da5c360?x=x&version=2",
            "client": "ZulipElectron",
            "content": "<p>the iterative approach is more intuitive for me.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 192852510,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "anthonyabeo@gmail.com",
            "sender_full_name": "Anthony Anabila Abeo (he) (SP2'20)",
            "sender_id": 276302,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "30 Day LeetCoding Challenge",
            "submessages": [],
            "timestamp": 1585941810,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/c96a3927ee49dcc488ffe1745c837cfda1bd8279?x=x&version=2",
            "client": "ZulipElectron",
            "content": "<p>I added <a href=\"https://github.com/saoirse-zee/ctci/tree/master/00-other/fibonacci\" title=\"https://github.com/saoirse-zee/ctci/tree/master/00-other/fibonacci\">a fibonacci section to my CTCI-in-JS repo</a>. I tried to reproduce what we did on the call today. There are three solutions -- iterative, naive recursive, and memoized. Hope this might be helpful! And very curious to hear any feedback. This is my first time doing anything with memoization.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 192855402,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "emmazee9009@gmail.com",
            "sender_full_name": "Emma Smith (she) (F2'19)",
            "sender_id": 241369,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "cracking coding interview",
            "submessages": [],
            "timestamp": 1585943372,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/6ae811d40ff8600863755aa510198b5144ebff2c?x=x&version=2",
            "client": "website",
            "content": "<p>Sorry <span class=\"user-mention\" data-user-id=\"276302\">@Anthony Anabila Abeo (he) (SP2'20)</span> ! I got caught up in another call. Looks like <span class=\"user-mention\" data-user-id=\"276197\">@Roland Crosby (he) (SP2'20)</span> got you :) My similar solution is here too: <a href=\"https://github.com/jdiedrick/30-day-leetcoding-challenge-april-2020/blob/master/03_max_subarray.py\" title=\"https://github.com/jdiedrick/30-day-leetcoding-challenge-april-2020/blob/master/03_max_subarray.py\">https://github.com/jdiedrick/30-day-leetcoding-challenge-april-2020/blob/master/03_max_subarray.py</a></p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 192855686,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "jo@johanndiedrick.com",
            "sender_full_name": "Johann Diedrick (he) (W2'20)",
            "sender_id": 255042,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "30 Day LeetCoding Challenge",
            "submessages": [],
            "timestamp": 1585943514,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/6b283009bf4375b73d9628bb245367165da5c360?x=x&version=2",
            "client": "ZulipElectron",
            "content": "<p><span class=\"user-mention silent\" data-user-id=\"255042\">Johann Diedrick (he) (W2'20)</span> <a href=\"#narrow/stream/21502-algorithms/topic/30.20Day.20LeetCoding.20Challenge/near/192855686\" title=\"#narrow/stream/21502-algorithms/topic/30.20Day.20LeetCoding.20Challenge/near/192855686\">said</a>:</p>\n<blockquote>\n<p>Sorry <span class=\"user-mention silent\" data-user-id=\"276302\">Anthony Anabila Abeo (he) (SP2'20)</span> ! I got caught up in another call. Looks like <span class=\"user-mention silent\" data-user-id=\"276197\">Roland Crosby (he) (SP2'20)</span> got you :) My similar solution is here too: <a href=\"https://github.com/jdiedrick/30-day-leetcoding-challenge-april-2020/blob/master/03_max_subarray.py\" title=\"https://github.com/jdiedrick/30-day-leetcoding-challenge-april-2020/blob/master/03_max_subarray.py\">https://github.com/jdiedrick/30-day-leetcoding-challenge-april-2020/blob/master/03_max_subarray.py</a></p>\n</blockquote>\n<p>no worries.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 192857331,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "anthonyabeo@gmail.com",
            "sender_full_name": "Anthony Anabila Abeo (he) (SP2'20)",
            "sender_id": 276302,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "30 Day LeetCoding Challenge",
            "submessages": [],
            "timestamp": 1585944340,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/998033fdaf174de3fed5af64a4382f61dffa8db6?x=x&version=2",
            "client": "ZulipElectron",
            "content": "<p>for accountability, checking in that i finished today's leetcode. thanks for starting this, y'all. i'd have dropped off after day one otherwise</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 192905101,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "contrepoint21@gmail.com",
            "sender_full_name": "Janice Shiu (she) (SP2'18)",
            "sender_id": 112188,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "30 Day LeetCoding Challenge",
            "submessages": [],
            "timestamp": 1586002699,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/700775c1b9679bb74bd97d4ced91fadf9cc2ed17?x=x&version=2",
            "client": "website",
            "content": "<p><span class=\"user-mention\" data-user-id=\"112188\">@Janice Shiu (she) (SP2'18)</span>  seconded on all counts!</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 192908071,
            "is_me_message": false,
            "reactions": [
                {
                    "emoji_code": "1f600",
                    "emoji_name": "grinning",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "contrepoint21@gmail.com",
                        "full_name": "Janice Shiu (she) (SP2'18)",
                        "id": 112188
                    },
                    "user_id": 112188
                }
            ],
            "recipient_id": 24954,
            "sender_email": "roland@rolandcrosby.com",
            "sender_full_name": "Roland Crosby (he) (SP2'20)",
            "sender_id": 276197,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "30 Day LeetCoding Challenge",
            "submessages": [],
            "timestamp": 1586007602,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/b2a6b06ba040fd7f7c2acd4d1440e7de?d=identicon&version=1",
            "client": "website",
            "content": "<p>The qualification round has begun, and there are 12 hours left. Score 30 points or more to advance to the next round.  <a href=\"https://codingcompetitions.withgoogle.com/codejam/\" title=\"https://codingcompetitions.withgoogle.com/codejam/\">https://codingcompetitions.withgoogle.com/codejam/</a></p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 192908260,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "mauricio@collares.org",
            "sender_full_name": "Mauricio Collares (he) (W2'19)",
            "sender_id": 158563,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Code Jam 2020",
            "submessages": [],
            "timestamp": 1586007889,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/096bee6351ba6927af83e84c635be5f5?d=identicon&version=1",
            "client": "ZulipElectron",
            "content": "<p>Can we pair up to solve?</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 192909817,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "unnati97@gmail.com",
            "sender_full_name": "Unnati Niraj Patel (she) (S2'20)",
            "sender_id": 277193,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Code Jam 2020",
            "submessages": [],
            "timestamp": 1586010104,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/096bee6351ba6927af83e84c635be5f5?d=identicon&version=1",
            "client": "ZulipElectron",
            "content": "<p>As in are teams allowed?</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 192909827,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "unnati97@gmail.com",
            "sender_full_name": "Unnati Niraj Patel (she) (S2'20)",
            "sender_id": 277193,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Code Jam 2020",
            "submessages": [],
            "timestamp": 1586010118,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/096bee6351ba6927af83e84c635be5f5?d=identicon&version=1",
            "client": "ZulipElectron",
            "content": "<p>If yes,does anyone want to participate together?</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 192909873,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "unnati97@gmail.com",
            "sender_full_name": "Unnati Niraj Patel (she) (S2'20)",
            "sender_id": 277193,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Code Jam 2020",
            "submessages": [],
            "timestamp": 1586010133,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/6ae811d40ff8600863755aa510198b5144ebff2c?x=x&version=2",
            "client": "website",
            "content": "<p>Here's my solution for day 4! <a href=\"https://github.com/jdiedrick/30-day-leetcoding-challenge-april-2020/blob/master/04_move_zeroes.py\" title=\"https://github.com/jdiedrick/30-day-leetcoding-challenge-april-2020/blob/master/04_move_zeroes.py\">https://github.com/jdiedrick/30-day-leetcoding-challenge-april-2020/blob/master/04_move_zeroes.py</a></p>\n<p>I actually JUST had this problem in a mock interview on Pramp earlier this week <span aria-label=\"laughing\" class=\"emoji emoji-1f606\" role=\"img\" title=\"laughing\">:laughing:</span> so it was pretty fresh in my head. I like this one! Used tortoise and hare variable names, inspired by <span class=\"user-mention\" data-user-id=\"276160\">@Justin Jaffray (he) (m3'20)</span></p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 192910240,
            "is_me_message": false,
            "reactions": [
                {
                    "emoji_code": "1f422",
                    "emoji_name": "turtle",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "silvaj1503@gmail.com",
                        "full_name": "James Silva (he) (SP2'20)",
                        "id": 276604
                    },
                    "user_id": 276604
                },
                {
                    "emoji_code": "1f407",
                    "emoji_name": "rabbit",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "silvaj1503@gmail.com",
                        "full_name": "James Silva (he) (SP2'20)",
                        "id": 276604
                    },
                    "user_id": 276604
                },
                {
                    "emoji_code": "1f407",
                    "emoji_name": "rabbit",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "neil.liu16@gmail.com",
                        "full_name": "Neil Liu (he) (SP2'20)",
                        "id": 276158
                    },
                    "user_id": 276158
                },
                {
                    "emoji_code": "1f422",
                    "emoji_name": "turtle",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "neil.liu16@gmail.com",
                        "full_name": "Neil Liu (he) (SP2'20)",
                        "id": 276158
                    },
                    "user_id": 276158
                },
                {
                    "emoji_code": "1f422",
                    "emoji_name": "turtle",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "anthonyabeo@gmail.com",
                        "full_name": "Anthony Anabila Abeo (he) (SP2'20)",
                        "id": 276302
                    },
                    "user_id": 276302
                },
                {
                    "emoji_code": "1f407",
                    "emoji_name": "rabbit",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "anthonyabeo@gmail.com",
                        "full_name": "Anthony Anabila Abeo (he) (SP2'20)",
                        "id": 276302
                    },
                    "user_id": 276302
                },
                {
                    "emoji_code": "1f407",
                    "emoji_name": "rabbit",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "justin.jaffray@gmail.com",
                        "full_name": "Justin Jaffray (he) (m3'20)",
                        "id": 276160
                    },
                    "user_id": 276160
                },
                {
                    "emoji_code": "1f422",
                    "emoji_name": "turtle",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "justin.jaffray@gmail.com",
                        "full_name": "Justin Jaffray (he) (m3'20)",
                        "id": 276160
                    },
                    "user_id": 276160
                }
            ],
            "recipient_id": 24954,
            "sender_email": "jo@johanndiedrick.com",
            "sender_full_name": "Johann Diedrick (he) (W2'20)",
            "sender_id": 255042,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "30 Day LeetCoding Challenge",
            "submessages": [],
            "timestamp": 1586010660,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/b2a6b06ba040fd7f7c2acd4d1440e7de?d=identicon&version=1",
            "client": "website",
            "content": "<p>Unfortunately teams/pairs are against the rules :( I don't think this matters for the qualification round, but subsequent rounds are competitive (that is, the X highest-ranked people advance to the next round).</p>\n<p>Edit:  Even though it's against Google's Coding Competition Terms, they explicitly say in the Code Jam rules they won't disqualify people in this particular round for sharing information with others. So pairing is OK this time!</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 192911154,
            "is_me_message": false,
            "last_edit_timestamp": 1586012123,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "mauricio@collares.org",
            "sender_full_name": "Mauricio Collares (he) (W2'19)",
            "sender_id": 158563,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Code Jam 2020",
            "submessages": [],
            "timestamp": 1586011901,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/6b283009bf4375b73d9628bb245367165da5c360?x=x&version=2",
            "client": "ZulipElectron",
            "content": "<p>I decided to go with using a queue to hold the indices where the zeros appear. Then i do the necessary swaps. <a href=\"https://github.com/anthonyabeo/leetcode-30-day-challenge/blob/master/move_zeros.cpp\" title=\"https://github.com/anthonyabeo/leetcode-30-day-challenge/blob/master/move_zeros.cpp\">https://github.com/anthonyabeo/leetcode-30-day-challenge/blob/master/move_zeros.cpp</a></p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 192915781,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "anthonyabeo@gmail.com",
            "sender_full_name": "Anthony Anabila Abeo (he) (SP2'20)",
            "sender_id": 276302,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "30 Day LeetCoding Challenge",
            "submessages": [],
            "timestamp": 1586018034,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/3623090b52bac8ecada233272cb050d05771d590?x=x&version=2",
            "client": "ZulipElectron",
            "content": "<p>I bit late but I'm jumping on this leetrain <span aria-label=\"train\" class=\"emoji emoji-1f682\" role=\"img\" title=\"train\">:train:</span></p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 192919673,
            "is_me_message": false,
            "last_edit_timestamp": 1586023222,
            "reactions": [
                {
                    "emoji_code": "1f682",
                    "emoji_name": "train",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "silvaj1503@gmail.com",
                        "full_name": "James Silva (he) (SP2'20)",
                        "id": 276604
                    },
                    "user_id": 276604
                },
                {
                    "emoji_code": "1f682",
                    "emoji_name": "train",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "jo@johanndiedrick.com",
                        "full_name": "Johann Diedrick (he) (W2'20)",
                        "id": 255042
                    },
                    "user_id": 255042
                },
                {
                    "emoji_code": "1f685",
                    "emoji_name": "bullet_train",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "roland@rolandcrosby.com",
                        "full_name": "Roland Crosby (he) (SP2'20)",
                        "id": 276197
                    },
                    "user_id": 276197
                }
            ],
            "recipient_id": 24954,
            "sender_email": "souren@papazian.info",
            "sender_full_name": "Souren Papazian (he) (SP2'20)",
            "sender_id": 255060,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "30 Day LeetCoding Challenge",
            "submessages": [],
            "timestamp": 1586023216,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/096bee6351ba6927af83e84c635be5f5?d=identicon&version=1",
            "client": "ZulipElectron",
            "content": "<p><span class=\"user-mention silent\" data-user-id=\"263547\">Aditya Athalye (he) (SP1'20)</span> <a href=\"#narrow/stream/21502-algorithms/topic/art.20math.20algorithms.20puzzles/near/192679895\" title=\"#narrow/stream/21502-algorithms/topic/art.20math.20algorithms.20puzzles/near/192679895\">said</a>:</p>\n<blockquote>\n<p>Erik Demaine: Algorithms Meet Art, Puzzles, and Magic<br>\n<a href=\"https://youtu.be/WlO80TOMK7Y?t=142\" title=\"https://youtu.be/WlO80TOMK7Y?t=142\">https://youtu.be/WlO80TOMK7Y?t=142</a></p>\n</blockquote>\n<p><a href=\"https://ocw.mit.edu/courses/electrical-engineering-and-computer-science/6-849-geometric-folding-algorithms-linkages-origami-polyhedra-fall-2012/\" title=\"https://ocw.mit.edu/courses/electrical-engineering-and-computer-science/6-849-geometric-folding-algorithms-linkages-origami-polyhedra-fall-2012/\">https://ocw.mit.edu/courses/electrical-engineering-and-computer-science/6-849-geometric-folding-algorithms-linkages-origami-polyhedra-fall-2012/</a></p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 192921562,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "unnati97@gmail.com",
            "sender_full_name": "Unnati Niraj Patel (she) (S2'20)",
            "sender_id": 277193,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "art math algorithms puzzles",
            "submessages": [],
            "timestamp": 1586025933,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/6b283009bf4375b73d9628bb245367165da5c360?x=x&version=2",
            "client": "ZulipElectron",
            "content": "<p><span class=\"user-mention\" data-user-id=\"255060\">@Souren Papazian (he) (SP2'20)</span> welcome aboard</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 192922501,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "anthonyabeo@gmail.com",
            "sender_full_name": "Anthony Anabila Abeo (he) (SP2'20)",
            "sender_id": 276302,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "30 Day LeetCoding Challenge",
            "submessages": [],
            "timestamp": 1586027290,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/af24ea97d27746b09489da7d27991698b34ba37a?x=x&version=4",
            "client": "website",
            "content": "<p>I've been doing these in C++, if anyone is interested here is my solution :) <a href=\"https://gist.github.com/James-Silva/f002f464e2f207ba7a436ddc72816f5f\" title=\"https://gist.github.com/James-Silva/f002f464e2f207ba7a436ddc72816f5f\">https://gist.github.com/James-Silva/f002f464e2f207ba7a436ddc72816f5f</a></p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 192926498,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "silvaj1503@gmail.com",
            "sender_full_name": "James Silva (he) (SP2'20)",
            "sender_id": 276604,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "30 Day LeetCoding Challenge",
            "submessages": [],
            "timestamp": 1586033510,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/af24ea97d27746b09489da7d27991698b34ba37a?x=x&version=4",
            "client": "website",
            "content": "<p>Oh rock on <span class=\"user-mention\" data-user-id=\"276302\">@Anthony Anabila Abeo (he) (SP2'20)</span> , happy to see someone else is doing it in C++ <span aria-label=\"grinning face with smiling eyes\" class=\"emoji emoji-1f601\" role=\"img\" title=\"grinning face with smiling eyes\">:grinning_face_with_smiling_eyes:</span></p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 192926563,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "silvaj1503@gmail.com",
            "sender_full_name": "James Silva (he) (SP2'20)",
            "sender_id": 276604,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "30 Day LeetCoding Challenge",
            "submessages": [],
            "timestamp": 1586033618,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/6b283009bf4375b73d9628bb245367165da5c360?x=x&version=2",
            "client": "ZulipElectron",
            "content": "<p><span class=\"user-mention\" data-user-id=\"276604\">@James Silva (he) (SP2'20)</span> i'll grab any opportunity to write more C++. Hoping to get better at it.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 192928494,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "anthonyabeo@gmail.com",
            "sender_full_name": "Anthony Anabila Abeo (he) (SP2'20)",
            "sender_id": 276302,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "30 Day LeetCoding Challenge",
            "submessages": [],
            "timestamp": 1586036856,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/998033fdaf174de3fed5af64a4382f61dffa8db6?x=x&version=2",
            "client": "ZulipElectron",
            "content": "<p>finished day 5.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 192947592,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "contrepoint21@gmail.com",
            "sender_full_name": "Janice Shiu (she) (SP2'18)",
            "sender_id": 112188,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "30 Day LeetCoding Challenge",
            "submessages": [],
            "timestamp": 1586073908,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/6ae811d40ff8600863755aa510198b5144ebff2c?x=x&version=2",
            "client": "website",
            "content": "<p>Here's my solution for day 5: <a href=\"https://github.com/jdiedrick/30-day-leetcoding-challenge-april-2020/blob/master/05_buy_sell_stocks_ii.py\" title=\"https://github.com/jdiedrick/30-day-leetcoding-challenge-april-2020/blob/master/05_buy_sell_stocks_ii.py\">https://github.com/jdiedrick/30-day-leetcoding-challenge-april-2020/blob/master/05_buy_sell_stocks_ii.py</a></p>\n<p>I had to watch this video to get a hint..I stopped watching about half way once I felt like I had been nudged to the right solution:</p>\n<p><a href=\"https://www.youtube.com/watch?v=XPCXGT4u6Qc\" title=\"https://www.youtube.com/watch?v=XPCXGT4u6Qc\">https://www.youtube.com/watch?v=XPCXGT4u6Qc</a></p>\n<div class=\"youtube-video message_inline_image\"><a data-id=\"XPCXGT4u6Qc\" href=\"https://www.youtube.com/watch?v=XPCXGT4u6Qc\" title=\"https://www.youtube.com/watch?v=XPCXGT4u6Qc\"><img src=\"https://i.ytimg.com/vi/XPCXGT4u6Qc/default.jpg\"></a></div>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 192968925,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "jo@johanndiedrick.com",
            "sender_full_name": "Johann Diedrick (he) (W2'20)",
            "sender_id": 255042,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "30 Day LeetCoding Challenge",
            "submessages": [],
            "timestamp": 1586107548,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/700775c1b9679bb74bd97d4ced91fadf9cc2ed17?x=x&version=2",
            "client": "website",
            "content": "<p>yeah i was overthinking it for a while, until i realized that the only thing you need to do is check if the price went up between yesterday and today</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 192970093,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "roland@rolandcrosby.com",
            "sender_full_name": "Roland Crosby (he) (SP2'20)",
            "sender_id": 276197,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "30 Day LeetCoding Challenge",
            "submessages": [],
            "timestamp": 1586109232,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/6ae811d40ff8600863755aa510198b5144ebff2c?x=x&version=2",
            "client": "website",
            "content": "<p>Yeah I had a mess of  code, also overthinking it :/ I guess this would be an example of a greedy algorithm? Take the best guess with the current information you have at hand (price for today and price for yesterday).</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 192970181,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "jo@johanndiedrick.com",
            "sender_full_name": "Johann Diedrick (he) (W2'20)",
            "sender_id": 255042,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "30 Day LeetCoding Challenge",
            "submessages": [],
            "timestamp": 1586109333,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/6b283009bf4375b73d9628bb245367165da5c360?x=x&version=2",
            "client": "ZulipElectron",
            "content": "<p>What helped me was abstracting away all the information about stocks and looking for the invariant (that the maximum profit increase when the price of the current day is lower than that of the previous day)<br>\n<a href=\"https://github.com/anthonyabeo/leetcode-30-day-challenge/blob/master/buy_sell_stock_2.cpp\" title=\"https://github.com/anthonyabeo/leetcode-30-day-challenge/blob/master/buy_sell_stock_2.cpp\">https://github.com/anthonyabeo/leetcode-30-day-challenge/blob/master/buy_sell_stock_2.cpp</a></p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 192973095,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "anthonyabeo@gmail.com",
            "sender_full_name": "Anthony Anabila Abeo (he) (SP2'20)",
            "sender_id": 276302,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "30 Day LeetCoding Challenge",
            "submessages": [],
            "timestamp": 1586113642,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/af24ea97d27746b09489da7d27991698b34ba37a?x=x&version=4",
            "client": "website",
            "content": "<p>Not super in love with my solution (pretty slow), but I created a class Trader to be a little more expressive. Will probably revisit my solution later: <a href=\"https://gist.github.com/James-Silva/7fde6ed6fe20123908bcbfbd341c9afb\" title=\"https://gist.github.com/James-Silva/7fde6ed6fe20123908bcbfbd341c9afb\">https://gist.github.com/James-Silva/7fde6ed6fe20123908bcbfbd341c9afb</a></p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 192975652,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "silvaj1503@gmail.com",
            "sender_full_name": "James Silva (he) (SP2'20)",
            "sender_id": 276604,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "30 Day LeetCoding Challenge",
            "submessages": [],
            "timestamp": 1586117264,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/6ae811d40ff8600863755aa510198b5144ebff2c?x=x&version=2",
            "client": "website",
            "content": "<p>Here's my solution for day 6:<a href=\"https://github.com/jdiedrick/30-day-leetcoding-challenge-april-2020/blob/master/06_group_anagrams.py\" title=\"https://github.com/jdiedrick/30-day-leetcoding-challenge-april-2020/blob/master/06_group_anagrams.py\">https://github.com/jdiedrick/30-day-leetcoding-challenge-april-2020/blob/master/06_group_anagrams.py</a></p>\n<p>Went down a brute force O(n^2) rabbit hole during the beginning, got some time exceeding failures so that lead me to think of a quick way to compute/store/retrieve anagrams with a hash table. I'm curious to see other solutions!</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 193062219,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "jo@johanndiedrick.com",
            "sender_full_name": "Johann Diedrick (he) (W2'20)",
            "sender_id": 255042,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "30 Day LeetCoding Challenge",
            "submessages": [],
            "timestamp": 1586188451,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/b2a6b06ba040fd7f7c2acd4d1440e7de?d=identicon&version=1",
            "client": "website",
            "content": "<p>An alternative solution for day 6: <a href=\"https://gist.github.com/collares/60d2c899d3dffdd820936ffad36c21d7\" title=\"https://gist.github.com/collares/60d2c899d3dffdd820936ffad36c21d7\">https://gist.github.com/collares/60d2c899d3dffdd820936ffad36c21d7</a></p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 193063308,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "mauricio@collares.org",
            "sender_full_name": "Mauricio Collares (he) (W2'19)",
            "sender_id": 158563,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "30 Day LeetCoding Challenge",
            "submessages": [],
            "timestamp": 1586188965,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/6ae811d40ff8600863755aa510198b5144ebff2c?x=x&version=2",
            "client": "website",
            "content": "<p><span class=\"user-mention\" data-user-id=\"276604\">@James Silva (he) (SP2'20)</span> Love that Trader class - really cool OOP way to approach the problem!</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 193072167,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "jo@johanndiedrick.com",
            "sender_full_name": "Johann Diedrick (he) (W2'20)",
            "sender_id": 255042,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "30 Day LeetCoding Challenge",
            "submessages": [],
            "timestamp": 1586193111,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/af24ea97d27746b09489da7d27991698b34ba37a?x=x&version=4",
            "client": "website",
            "content": "<p>Thanks man, I appreciate it :) Let's keep up the good work!</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 193072347,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "silvaj1503@gmail.com",
            "sender_full_name": "James Silva (he) (SP2'20)",
            "sender_id": 276604,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "30 Day LeetCoding Challenge",
            "submessages": [],
            "timestamp": 1586193179,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/6ae811d40ff8600863755aa510198b5144ebff2c?x=x&version=2",
            "client": "website",
            "content": "<p><span class=\"user-mention\" data-user-id=\"158563\">@Mauricio Collares (he) (W2'19)</span> Can you explain how/why <code>characterTuple</code> works? Its working in place of my <code>sorted</code> approach but is faster (n vs n log n) than what I'm doing per item in strs.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 193073011,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "jo@johanndiedrick.com",
            "sender_full_name": "Johann Diedrick (he) (W2'20)",
            "sender_id": 255042,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "30 Day LeetCoding Challenge",
            "submessages": [],
            "timestamp": 1586193526,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/b2a6b06ba040fd7f7c2acd4d1440e7de?d=identicon&version=1",
            "client": "ZulipMobile",
            "content": "<p>The key observation is that two alphabetic strings s1 and s2 are anagrams of each other if and only if every char c in the alphabet appears the same number of times in s1 and s2. So if you compute a 26-tuple of character counts, that works as the dictionary key.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 193073548,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "mauricio@collares.org",
            "sender_full_name": "Mauricio Collares (he) (W2'19)",
            "sender_id": 158563,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "30 Day LeetCoding Challenge",
            "submessages": [],
            "timestamp": 1586193791,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/b2a6b06ba040fd7f7c2acd4d1440e7de?d=identicon&version=1",
            "client": "ZulipMobile",
            "content": "<p>A similar solution would be to sort using counting sort instead of sorted()</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 193073843,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "mauricio@collares.org",
            "sender_full_name": "Mauricio Collares (he) (W2'19)",
            "sender_id": 158563,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "30 Day LeetCoding Challenge",
            "submessages": [],
            "timestamp": 1586193923,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/0789f8732b00c0952a58c7e4de8ae016e1bfbe20?x=x&version=2",
            "client": "ZulipElectron",
            "content": "<p>Late to the party but here's my solution</p>\n<p><a href=\"https://github.com/nh2liu/lc-april-recurse/blob/master/06-group-anagrams.py\" title=\"https://github.com/nh2liu/lc-april-recurse/blob/master/06-group-anagrams.py\">https://github.com/nh2liu/lc-april-recurse/blob/master/06-group-anagrams.py</a></p>\n<p>Very similar to those already said! I love python for these problems.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 193083829,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "neil.liu16@gmail.com",
            "sender_full_name": "Neil Liu (he) (SP2'20)",
            "sender_id": 276158,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "30 Day LeetCoding Challenge",
            "submessages": [],
            "timestamp": 1586198495,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/6b283009bf4375b73d9628bb245367165da5c360?x=x&version=2",
            "client": "ZulipElectron",
            "content": "<p>A combination of sorting and hashing <br>\n<a href=\"https://github.com/anthonyabeo/leetcode-30-day-challenge/blob/master/group_anagrams.cpp\" title=\"https://github.com/anthonyabeo/leetcode-30-day-challenge/blob/master/group_anagrams.cpp\">https://github.com/anthonyabeo/leetcode-30-day-challenge/blob/master/group_anagrams.cpp</a></p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 193088490,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "anthonyabeo@gmail.com",
            "sender_full_name": "Anthony Anabila Abeo (he) (SP2'20)",
            "sender_id": 276302,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "30 Day LeetCoding Challenge",
            "submessages": [],
            "timestamp": 1586200799,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/3623090b52bac8ecada233272cb050d05771d590?x=x&version=2",
            "client": "ZulipElectron",
            "content": "<p>Trying to also learn C# while I learn these so the code might be ugly <span aria-label=\"see no evil\" class=\"emoji emoji-1f648\" role=\"img\" title=\"see no evil\">:see_no_evil:</span> <br>\nHere is my anagram solution: <a href=\"https://github.com/SourenP/leetcode/blob/master/30_day_challenge/group_anagrams.cs\" title=\"https://github.com/SourenP/leetcode/blob/master/30_day_challenge/group_anagrams.cs\">https://github.com/SourenP/leetcode/blob/master/30_day_challenge/group_anagrams.cs</a></p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 193127550,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "souren@papazian.info",
            "sender_full_name": "Souren Papazian (he) (SP2'20)",
            "sender_id": 255060,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "30 Day LeetCoding Challenge",
            "submessages": [],
            "timestamp": 1586229159,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/3623090b52bac8ecada233272cb050d05771d590?x=x&version=2",
            "client": "ZulipElectron",
            "content": "<p>Seems to be similar to <span class=\"user-mention\" data-user-id=\"276302\">@Anthony Anabila Abeo (he) (SP2'20)</span> except I used a string with the sorted characters instead of an int for the map key</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 193127560,
            "is_me_message": false,
            "last_edit_timestamp": 1586229207,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "souren@papazian.info",
            "sender_full_name": "Souren Papazian (he) (SP2'20)",
            "sender_id": 255060,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "30 Day LeetCoding Challenge",
            "submessages": [],
            "timestamp": 1586229191,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/998033fdaf174de3fed5af64a4382f61dffa8db6?x=x&version=2",
            "client": "ZulipElectron",
            "content": "<p>done with today's (and the previous day's)</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 193159055,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "contrepoint21@gmail.com",
            "sender_full_name": "Janice Shiu (she) (SP2'18)",
            "sender_id": 112188,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "30 Day LeetCoding Challenge",
            "submessages": [],
            "timestamp": 1586250882,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/700775c1b9679bb74bd97d4ced91fadf9cc2ed17?x=x&version=2",
            "client": "website",
            "content": "<p>what a bizarrely written problem today's is</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 193194367,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "roland@rolandcrosby.com",
            "sender_full_name": "Roland Crosby (he) (SP2'20)",
            "sender_id": 276197,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "30 Day LeetCoding Challenge",
            "submessages": [],
            "timestamp": 1586269232,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/998033fdaf174de3fed5af64a4382f61dffa8db6?x=x&version=2",
            "client": "ZulipElectron",
            "content": "<p><span class=\"user-mention silent\" data-user-id=\"276197\">Roland Crosby (he) (SP2'20)</span> <a href=\"#narrow/stream/21502-algorithms/topic/30.20Day.20LeetCoding.20Challenge/near/193194367\" title=\"#narrow/stream/21502-algorithms/topic/30.20Day.20LeetCoding.20Challenge/near/193194367\">said</a>:</p>\n<blockquote>\n<p>what a bizarrely written problem today's is</p>\n</blockquote>\n<p>I agree. I failed my first submission because I didn't understand the requirements</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 193194929,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "contrepoint21@gmail.com",
            "sender_full_name": "Janice Shiu (she) (SP2'18)",
            "sender_id": 112188,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "30 Day LeetCoding Challenge",
            "submessages": [],
            "timestamp": 1586269462,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/0265934fdc86859bdd65431acfcb67e5?d=identicon&version=1",
            "client": "ZulipElectron",
            "content": "<p>Done with today's and committing to Tuesday/Thursday submissions for timeboxing. I agree that it's oddly written.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 193211128,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "emilyrchiggins@gmail.com",
            "sender_full_name": "Emily Higgins (she) (W2'20)",
            "sender_id": 256959,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "30 Day LeetCoding Challenge",
            "submessages": [],
            "timestamp": 1586275686,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/6b283009bf4375b73d9628bb245367165da5c360?x=x&version=2",
            "client": "ZulipElectron",
            "content": "<p>Counting elements, day 7.<br>\n<a href=\"https://github.com/anthonyabeo/leetcode-30-day-challenge/blob/master/counting_elements.cpp\" title=\"https://github.com/anthonyabeo/leetcode-30-day-challenge/blob/master/counting_elements.cpp\">https://github.com/anthonyabeo/leetcode-30-day-challenge/blob/master/counting_elements.cpp</a></p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 193216531,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "anthonyabeo@gmail.com",
            "sender_full_name": "Anthony Anabila Abeo (he) (SP2'20)",
            "sender_id": 276302,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "30 Day LeetCoding Challenge",
            "submessages": [],
            "timestamp": 1586278180,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/6ae811d40ff8600863755aa510198b5144ebff2c?x=x&version=2",
            "client": "website",
            "content": "<p>My day 7 solution: <a href=\"https://github.com/jdiedrick/30-day-leetcoding-challenge-april-2020/blob/master/07_counting_elements.py\" title=\"https://github.com/jdiedrick/30-day-leetcoding-challenge-april-2020/blob/master/07_counting_elements.py\">https://github.com/jdiedrick/30-day-leetcoding-challenge-april-2020/blob/master/07_counting_elements.py</a></p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 193216905,
            "is_me_message": false,
            "reactions": [
                {
                    "emoji_code": "1f44f",
                    "emoji_name": "clap",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "anthonyabeo@gmail.com",
                        "full_name": "Anthony Anabila Abeo (he) (SP2'20)",
                        "id": 276302
                    },
                    "user_id": 276302
                }
            ],
            "recipient_id": 24954,
            "sender_email": "jo@johanndiedrick.com",
            "sender_full_name": "Johann Diedrick (he) (W2'20)",
            "sender_id": 255042,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "30 Day LeetCoding Challenge",
            "submessages": [],
            "timestamp": 1586278344,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/6b283009bf4375b73d9628bb245367165da5c360?x=x&version=2",
            "client": "ZulipElectron",
            "content": "<p>that's some clean code right there <span class=\"user-mention\" data-user-id=\"255042\">@Johann Diedrick (he) (W2'20)</span></p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 193238087,
            "is_me_message": false,
            "reactions": [
                {
                    "emoji_code": "1f6c0",
                    "emoji_name": "bath",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "silvaj1503@gmail.com",
                        "full_name": "James Silva (he) (SP2'20)",
                        "id": 276604
                    },
                    "user_id": 276604
                },
                {
                    "emoji_code": "1f6c0",
                    "emoji_name": "bath",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "jo@johanndiedrick.com",
                        "full_name": "Johann Diedrick (he) (W2'20)",
                        "id": 255042
                    },
                    "user_id": 255042
                }
            ],
            "recipient_id": 24954,
            "sender_email": "anthonyabeo@gmail.com",
            "sender_full_name": "Anthony Anabila Abeo (he) (SP2'20)",
            "sender_id": 276302,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "30 Day LeetCoding Challenge",
            "submessages": [],
            "timestamp": 1586288669,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/6ae811d40ff8600863755aa510198b5144ebff2c?x=x&version=2",
            "client": "website",
            "content": "<p>Thanks! I think the ~ insight ~ that I'm having now is that if you have a situation where some calculation based on your input is going to relate to other things in your input, try precomputing that relationship and then scan back over your precomputed answers to find what you're looking for.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 193246027,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "jo@johanndiedrick.com",
            "sender_full_name": "Johann Diedrick (he) (W2'20)",
            "sender_id": 255042,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "30 Day LeetCoding Challenge",
            "submessages": [],
            "timestamp": 1586292558,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/b2a6b06ba040fd7f7c2acd4d1440e7de?d=identicon&version=1",
            "client": "website",
            "content": "<p>Similar solution: <a href=\"https://gist.github.com/collares/f5ccf865f1f7b80f1d2fc17f8c6cbafc\" title=\"https://gist.github.com/collares/f5ccf865f1f7b80f1d2fc17f8c6cbafc\">https://gist.github.com/collares/f5ccf865f1f7b80f1d2fc17f8c6cbafc</a></p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 193248176,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "mauricio@collares.org",
            "sender_full_name": "Mauricio Collares (he) (W2'19)",
            "sender_id": 158563,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "30 Day LeetCoding Challenge",
            "submessages": [],
            "timestamp": 1586293581,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/6948faab4e5ab8c9d107dba94c9f00e0?d=identicon&version=1",
            "client": "ZulipElectron",
            "content": "<p>Hi y'all, is anyone on for presenting tomorrow? I came across an interesting dynamic programming problem i could present on (this or next week), but not attached :)</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 193324742,
            "is_me_message": false,
            "last_edit_timestamp": 1586354834,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "asa@cottageclass.com",
            "sender_full_name": "Asa Needle (he/they) (S1'20)",
            "sender_id": 263510,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Study Group",
            "submessages": [],
            "timestamp": 1586354826,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/a94df6a414bc64771690399a940d1c52?d=identicon&version=1",
            "client": "ZulipElectron",
            "content": "<p>Currently the plan is hashing algorithms!</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 193325434,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "dylnuge@gmail.com",
            "sender_full_name": "Dylan Nugent (he) (S1'20)",
            "sender_id": 263512,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Study Group",
            "submessages": [],
            "timestamp": 1586355113,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/c6a4682e6a46285de64c97c77b771481?d=identicon&version=1",
            "client": "ZulipMobile",
            "content": "<p>Ooh. What about them?</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 193331343,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "ori@eigenstate.org",
            "sender_full_name": "Ori Dean Bernstein (he) (W2'20)",
            "sender_id": 255045,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Study Group",
            "submessages": [],
            "timestamp": 1586357651,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/6ae811d40ff8600863755aa510198b5144ebff2c?x=x&version=2",
            "client": "website",
            "content": "<p>My day 8 solution: <a href=\"https://github.com/jdiedrick/30-day-leetcoding-challenge-april-2020/blob/master/08_middle_of_the_linked_list.py\" title=\"https://github.com/jdiedrick/30-day-leetcoding-challenge-april-2020/blob/master/08_middle_of_the_linked_list.py\">https://github.com/jdiedrick/30-day-leetcoding-challenge-april-2020/blob/master/08_middle_of_the_linked_list.py</a></p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 193347554,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "jo@johanndiedrick.com",
            "sender_full_name": "Johann Diedrick (he) (W2'20)",
            "sender_id": 255042,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "30 Day LeetCoding Challenge",
            "submessages": [],
            "timestamp": 1586364567,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/0789f8732b00c0952a58c7e4de8ae016e1bfbe20?x=x&version=2",
            "client": "website",
            "content": "<p>My day 8 solution: <a href=\"https://github.com/nh2liu/lc-april-recurse/blob/master/08-middle-of-linked-list.py\" title=\"https://github.com/nh2liu/lc-april-recurse/blob/master/08-middle-of-linked-list.py\">https://github.com/nh2liu/lc-april-recurse/blob/master/08-middle-of-linked-list.py</a></p>\n<p>I used the fast slow pointer strategy to find the middle.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 193349749,
            "is_me_message": false,
            "reactions": [
                {
                    "emoji_code": "1f44d",
                    "emoji_name": "+1",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "anthonyabeo@gmail.com",
                        "full_name": "Anthony Anabila Abeo (he) (SP2'20)",
                        "id": 276302
                    },
                    "user_id": 276302
                },
                {
                    "emoji_code": "1f44d",
                    "emoji_name": "+1",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "jo@johanndiedrick.com",
                        "full_name": "Johann Diedrick (he) (W2'20)",
                        "id": 255042
                    },
                    "user_id": 255042
                }
            ],
            "recipient_id": 24954,
            "sender_email": "neil.liu16@gmail.com",
            "sender_full_name": "Neil Liu (he) (SP2'20)",
            "sender_id": 276158,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "30 Day LeetCoding Challenge",
            "submessages": [],
            "timestamp": 1586365541,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/6ae811d40ff8600863755aa510198b5144ebff2c?x=x&version=2",
            "client": "website",
            "content": "<p>Nice! One pass instead of my two pass approach :)</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 193350519,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "jo@johanndiedrick.com",
            "sender_full_name": "Johann Diedrick (he) (W2'20)",
            "sender_id": 255042,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "30 Day LeetCoding Challenge",
            "submessages": [],
            "timestamp": 1586365895,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/6b283009bf4375b73d9628bb245367165da5c360?x=x&version=2",
            "client": "ZulipElectron",
            "content": "<p>I am shamelessly stealing the tortoise and hare variable names. <br>\n<a href=\"https://github.com/anthonyabeo/leetcode-30-day-challenge/blob/master/middle_linked_list.cpp\" title=\"https://github.com/anthonyabeo/leetcode-30-day-challenge/blob/master/middle_linked_list.cpp\">https://github.com/anthonyabeo/leetcode-30-day-challenge/blob/master/middle_linked_list.cpp</a></p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 193366906,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "anthonyabeo@gmail.com",
            "sender_full_name": "Anthony Anabila Abeo (he) (SP2'20)",
            "sender_id": 276302,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "30 Day LeetCoding Challenge",
            "submessages": [],
            "timestamp": 1586373738,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/700775c1b9679bb74bd97d4ced91fadf9cc2ed17?x=x&version=2",
            "client": "website",
            "content": "<p><span class=\"user-mention\" data-user-id=\"276158\">@Neil Liu (he) (SP2'20)</span> hah mine ended up being almost identical except i didn't think to do \"<code>if fast is not None and fast.next is not None</code>\".</p>\n<p>did you end up doing any testing locally? if so how did you construct the list/validate your answer? <a href=\"https://github.com/rolandcrosby/leetcode/blob/master/20200408-middleoflinkedlist.py\" title=\"https://github.com/rolandcrosby/leetcode/blob/master/20200408-middleoflinkedlist.py\">here's what i ended up doing</a> but i don't think comparing by value is the best way to do this...</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 193370735,
            "is_me_message": false,
            "reactions": [
                {
                    "emoji_code": "1f389",
                    "emoji_name": "tada",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "neil.liu16@gmail.com",
                        "full_name": "Neil Liu (he) (SP2'20)",
                        "id": 276158
                    },
                    "user_id": 276158
                }
            ],
            "recipient_id": 24954,
            "sender_email": "roland@rolandcrosby.com",
            "sender_full_name": "Roland Crosby (he) (SP2'20)",
            "sender_id": 276197,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "30 Day LeetCoding Challenge",
            "submessages": [],
            "timestamp": 1586375745,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/0789f8732b00c0952a58c7e4de8ae016e1bfbe20?x=x&version=2",
            "client": "ZulipElectron",
            "content": "<p>my form of testing is repeatedly smashing the submit button until it works haha</p>\n<p>If you want to test, I think on leetcode, you can run your code on your own cases prior to submitting them. But in this case, I think your local testing is fine and works quite well. Leetcode also uses the same linkedlist class everywhere so you can probably reuse that if you want to test locally in the future</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 193372513,
            "is_me_message": false,
            "reactions": [
                {
                    "emoji_code": "1f419",
                    "emoji_name": "octopus",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "mail@jesentanadi.com",
                        "full_name": "Jesen Tanadi (he) (m3'20)",
                        "id": 276132
                    },
                    "user_id": 276132
                }
            ],
            "recipient_id": 24954,
            "sender_email": "neil.liu16@gmail.com",
            "sender_full_name": "Neil Liu (he) (SP2'20)",
            "sender_id": 276158,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "30 Day LeetCoding Challenge",
            "submessages": [],
            "timestamp": 1586376691,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/c6a4682e6a46285de64c97c77b771481?d=identicon&version=1",
            "client": "website",
            "content": "<p>Testing? where's your confidence?</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 193376898,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "ori@eigenstate.org",
            "sender_full_name": "Ori Dean Bernstein (he) (W2'20)",
            "sender_id": 255045,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "30 Day LeetCoding Challenge",
            "submessages": [],
            "timestamp": 1586379107,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/c6a4682e6a46285de64c97c77b771481?d=identicon&version=1",
            "client": "website",
            "content": "<p>:P</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 193376904,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "ori@eigenstate.org",
            "sender_full_name": "Ori Dean Bernstein (he) (W2'20)",
            "sender_id": 255045,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "30 Day LeetCoding Challenge",
            "submessages": [],
            "timestamp": 1586379108,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/700775c1b9679bb74bd97d4ced91fadf9cc2ed17?x=x&version=2",
            "client": "website",
            "content": "<p>well i want to at least make sure my code works on the examples before i hit submit :)</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 193377448,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "roland@rolandcrosby.com",
            "sender_full_name": "Roland Crosby (he) (SP2'20)",
            "sender_id": 276197,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "30 Day LeetCoding Challenge",
            "submessages": [],
            "timestamp": 1586379385,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/2bd944ad38bd10b190c5deef99eeee9a?d=identicon&version=1",
            "client": "website",
            "content": "<p>Today's is really sweet imo! I don't have time this morn to neaten up my solution (I think it can be simplified to remove at least one case) but I really enjoyed solving this one: <a href=\"https://gist.github.com/justinj/f283ead36d3095892f19de13c1487ad0\" title=\"https://gist.github.com/justinj/f283ead36d3095892f19de13c1487ad0\">solution</a>.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 193449198,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "justin.jaffray@gmail.com",
            "sender_full_name": "Justin Jaffray (he) (m3'20)",
            "sender_id": 276160,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "30 Day LeetCoding Challenge",
            "submessages": [],
            "timestamp": 1586438691,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/c8cec51f2fb41f1bbf0183ec6ada0450880a67a6?x=x&version=2",
            "client": "ZulipElectron",
            "content": "<p><span class=\"user-group-mention\" data-user-group-id=\"41\">@Currently at RC</span> Come join Algorithms Study Group in Hopper after AM Check-Ins! <span class=\"user-mention\" data-user-id=\"263512\">@Dylan Nugent (he) (SP1'20)</span> will be teaching us all about hashing.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 193460915,
            "is_me_message": false,
            "reactions": [
                {
                    "emoji_code": "0023-20e3",
                    "emoji_name": "hash",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "allicolyer@gmail.com",
                        "full_name": "Alli Colyer (she) (W2'20)",
                        "id": 255791
                    },
                    "user_id": 255791
                },
                {
                    "emoji_code": "0023-20e3",
                    "emoji_name": "hash",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "talyian@gmail.com",
                        "full_name": "Jimmy Tang (he) (SP2'20)",
                        "id": 276140
                    },
                    "user_id": 276140
                },
                {
                    "emoji_code": "0023-20e3",
                    "emoji_name": "hash",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "tobinyehle@gmail.com",
                        "full_name": "Tobin Yehle (he) (SP1'20)",
                        "id": 105607
                    },
                    "user_id": 105607
                },
                {
                    "emoji_code": "0023-20e3",
                    "emoji_name": "hash",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "anthonyabeo@gmail.com",
                        "full_name": "Anthony Anabila Abeo (he) (SP2'20)",
                        "id": 276302
                    },
                    "user_id": 276302
                }
            ],
            "recipient_id": 24954,
            "sender_email": "sgorecki@gmail.com",
            "sender_full_name": "Sara Gulotta (she) (S1'20)",
            "sender_id": 263732,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Study Group",
            "submessages": [],
            "timestamp": 1586444035,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/b2a6b06ba040fd7f7c2acd4d1440e7de?d=identicon&version=1",
            "client": "website",
            "content": "<p>Same idea, I think: <a href=\"https://gist.github.com/collares/23eebf5e9132a8638865ed3dcd86039b\" title=\"https://gist.github.com/collares/23eebf5e9132a8638865ed3dcd86039b\">https://gist.github.com/collares/23eebf5e9132a8638865ed3dcd86039b</a></p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 193465947,
            "is_me_message": false,
            "last_edit_timestamp": 1586448533,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "mauricio@collares.org",
            "sender_full_name": "Mauricio Collares (he) (W2'19)",
            "sender_id": 158563,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "30 Day LeetCoding Challenge",
            "submessages": [],
            "timestamp": 1586446043,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/1bd49962ff0f7e7f3ee603f8243a1015bb6690bd?x=x&version=7",
            "client": "website",
            "content": "<p>Thanks <span class=\"user-mention\" data-user-id=\"263512\">@Dylan Nugent (he) (SP1'20)</span>  for the great discussion on hashing and hash tables! I liked <span class=\"user-mention\" data-user-id=\"255130\">@Malte Skarupke (he) (W2'20)</span> 's \"I built a fast/faster/fastest hash table\" series at <a href=\"https://probablydance.com/tag/hash-table/\" title=\"https://probablydance.com/tag/hash-table/\">https://probablydance.com/tag/hash-table/</a> and the last entry has a cool hybrid solution that finds a best of both sort of compromise between the linked list chain and the probing we discussed today.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 193477616,
            "is_me_message": false,
            "reactions": [
                {
                    "emoji_code": "1f419",
                    "emoji_name": "octopus",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "sgorecki@gmail.com",
                        "full_name": "Sara Gulotta (she) (S1'20)",
                        "id": 263732
                    },
                    "user_id": 263732
                },
                {
                    "emoji_code": "1f4be",
                    "emoji_name": "floppy_disk",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "contrepoint21@gmail.com",
                        "full_name": "Janice Shiu (she) (SP2'18)",
                        "id": 112188
                    },
                    "user_id": 112188
                },
                {
                    "emoji_code": "1f419",
                    "emoji_name": "octopus",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "contrepoint21@gmail.com",
                        "full_name": "Janice Shiu (she) (SP2'18)",
                        "id": 112188
                    },
                    "user_id": 112188
                },
                {
                    "emoji_code": "1f4be",
                    "emoji_name": "floppy_disk",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "dylnuge@gmail.com",
                        "full_name": "Dylan Nugent (he) (S1'20)",
                        "id": 263512
                    },
                    "user_id": 263512
                }
            ],
            "recipient_id": 24954,
            "sender_email": "talyian@gmail.com",
            "sender_full_name": "Jimmy Tang (he) (SP2'20)",
            "sender_id": 276140,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Study Group",
            "submessages": [],
            "timestamp": 1586450991,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/6ae811d40ff8600863755aa510198b5144ebff2c?x=x&version=2",
            "client": "website",
            "content": "<p>Here's my day 9: <a href=\"https://github.com/jdiedrick/30-day-leetcoding-challenge-april-2020/blob/master/09_backspace_string_compare.py\" title=\"https://github.com/jdiedrick/30-day-leetcoding-challenge-april-2020/blob/master/09_backspace_string_compare.py\">https://github.com/jdiedrick/30-day-leetcoding-challenge-april-2020/blob/master/09_backspace_string_compare.py</a></p>\n<p><span class=\"user-mention\" data-user-id=\"276160\">@Justin Jaffray (he) (m3'20)</span> <span class=\"user-mention\" data-user-id=\"158563\">@Mauricio Collares (he) (W2'19)</span> Did you do it with O(1) space? I didn't, so I'm going to try that later today. I'm going to try not peeking at your solutions if you did.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 193484504,
            "is_me_message": false,
            "last_edit_timestamp": 1586454123,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "jo@johanndiedrick.com",
            "sender_full_name": "Johann Diedrick (he) (W2'20)",
            "sender_id": 255042,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "30 Day LeetCoding Challenge",
            "submessages": [],
            "timestamp": 1586454100,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/b2a6b06ba040fd7f7c2acd4d1440e7de?d=identicon&version=1",
            "client": "ZulipMobile",
            "content": "<p>Yep, mine's O(1) space I think.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 193485948,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "mauricio@collares.org",
            "sender_full_name": "Mauricio Collares (he) (W2'19)",
            "sender_id": 158563,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "30 Day LeetCoding Challenge",
            "submessages": [],
            "timestamp": 1586454834,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/c6a4682e6a46285de64c97c77b771481?d=identicon&version=1",
            "client": "website",
            "content": "<p>(edit) ah, one dumb edge case; amending. And then I broke it trying to clean up the iteration a bit.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 193489775,
            "is_me_message": false,
            "last_edit_timestamp": 1586461740,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "ori@eigenstate.org",
            "sender_full_name": "Ori Dean Bernstein (he) (W2'20)",
            "sender_id": 255045,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "30 Day LeetCoding Challenge",
            "submessages": [],
            "timestamp": 1586456506,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/c6a4682e6a46285de64c97c77b771481?d=identicon&version=1",
            "client": "website",
            "content": "<p><a href=\"https://eigenstate.org/tmp/erase.py\" title=\"https://eigenstate.org/tmp/erase.py\">https://eigenstate.org/tmp/erase.py</a></p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 193492263,
            "is_me_message": false,
            "last_edit_timestamp": 1586460830,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "ori@eigenstate.org",
            "sender_full_name": "Ori Dean Bernstein (he) (W2'20)",
            "sender_id": 255045,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "30 Day LeetCoding Challenge",
            "submessages": [],
            "timestamp": 1586457683,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/6b283009bf4375b73d9628bb245367165da5c360?x=x&version=2",
            "client": "ZulipElectron",
            "content": "<p><a href=\"https://github.com/anthonyabeo/leetcode-30-day-challenge/blob/master/backspace_string_compare.cpp\" title=\"https://github.com/anthonyabeo/leetcode-30-day-challenge/blob/master/backspace_string_compare.cpp\">https://github.com/anthonyabeo/leetcode-30-day-challenge/blob/master/backspace_string_compare.cpp</a></p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 193499224,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "anthonyabeo@gmail.com",
            "sender_full_name": "Anthony Anabila Abeo (he) (SP2'20)",
            "sender_id": 276302,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "30 Day LeetCoding Challenge",
            "submessages": [],
            "timestamp": 1586460965,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/c6a4682e6a46285de64c97c77b771481?d=identicon&version=1",
            "client": "website",
            "content": "<p>For the heck of it, same thing in C: <a href=\"https://eigenstate.org/tmp/erase.c\" title=\"https://eigenstate.org/tmp/erase.c\">https://eigenstate.org/tmp/erase.c</a></p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 193517822,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "ori@eigenstate.org",
            "sender_full_name": "Ori Dean Bernstein (he) (W2'20)",
            "sender_id": 255045,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "30 Day LeetCoding Challenge",
            "submessages": [],
            "timestamp": 1586471480,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/a94df6a414bc64771690399a940d1c52?d=identicon&version=1",
            "client": "ZulipElectron",
            "content": "<p>Slides from today: <a href=\"https://docs.google.com/presentation/d/1gfPmKjFP7pJFsfwTxPotapVBv1zsBgP7KLt8RpNu8BI/edit#slide=id.p\" title=\"https://docs.google.com/presentation/d/1gfPmKjFP7pJFsfwTxPotapVBv1zsBgP7KLt8RpNu8BI/edit#slide=id.p\">https://docs.google.com/presentation/d/1gfPmKjFP7pJFsfwTxPotapVBv1zsBgP7KLt8RpNu8BI/edit#slide=id.p</a></p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 193525805,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "dylnuge@gmail.com",
            "sender_full_name": "Dylan Nugent (he) (S1'20)",
            "sender_id": 263512,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Study Group",
            "submessages": [],
            "timestamp": 1586477629,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/af24ea97d27746b09489da7d27991698b34ba37a?x=x&version=4",
            "client": "website",
            "content": "<p>Just a pleasant O(n) space C++ solution: <a href=\"https://gist.github.com/James-Silva/ed41d88e2d12e1602a8292f1d650ab21\" title=\"https://gist.github.com/James-Silva/ed41d88e2d12e1602a8292f1d650ab21\">https://gist.github.com/James-Silva/ed41d88e2d12e1602a8292f1d650ab21</a></p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 193536781,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "silvaj1503@gmail.com",
            "sender_full_name": "James Silva (he) (SP2'20)",
            "sender_id": 276604,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "30 Day LeetCoding Challenge",
            "submessages": [],
            "timestamp": 1586491953,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/6ae811d40ff8600863755aa510198b5144ebff2c?x=x&version=2",
            "client": "website",
            "content": "<p>Day 10 solution: <a href=\"https://github.com/jdiedrick/30-day-leetcoding-challenge-april-2020/blob/master/10_min_stack.py\" title=\"https://github.com/jdiedrick/30-day-leetcoding-challenge-april-2020/blob/master/10_min_stack.py\">https://github.com/jdiedrick/30-day-leetcoding-challenge-april-2020/blob/master/10_min_stack.py</a></p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 193572112,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "jo@johanndiedrick.com",
            "sender_full_name": "Johann Diedrick (he) (W2'20)",
            "sender_id": 255042,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "30 Day LeetCoding Challenge",
            "submessages": [],
            "timestamp": 1586527487,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/02a5b2b6f7220adaf39b9eeea3870a2a8b853948?x=x&version=2",
            "client": "website",
            "content": "<p>Thanks for sharing the slides Dylan! I was so sad to miss this, especially as I was the one to request we cover this topic.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 193580653,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "driijko@gmail.com",
            "sender_full_name": "Dree Ko (they) (SP2'20)",
            "sender_id": 257188,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Study Group",
            "submessages": [],
            "timestamp": 1586532120,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/700775c1b9679bb74bd97d4ced91fadf9cc2ed17?x=x&version=2",
            "client": "website",
            "content": "<p>today's was fun, here's mine: <a href=\"https://github.com/rolandcrosby/leetcode/blob/master/20200410-minstack.py\" title=\"https://github.com/rolandcrosby/leetcode/blob/master/20200410-minstack.py\">https://github.com/rolandcrosby/leetcode/blob/master/20200410-minstack.py</a></p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 193603699,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "roland@rolandcrosby.com",
            "sender_full_name": "Roland Crosby (he) (SP2'20)",
            "sender_id": 276197,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "30 Day LeetCoding Challenge",
            "submessages": [],
            "timestamp": 1586544486,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/3e7fd7e23daa8696efc1dffaf4002178?d=identicon&version=1",
            "client": "website",
            "content": "<p>I wrote this up as a question (reproduceable example with code/dataset) <a href=\"https://or.stackexchange.com/questions/3865/heuristic-search-planning-tree-leading-to-worse-tsp-solutions-than-naive-greedy\" title=\"https://or.stackexchange.com/questions/3865/heuristic-search-planning-tree-leading-to-worse-tsp-solutions-than-naive-greedy\">and posted on or.stackexchange</a>, but thought I might drop it here as well.</p>\n<p>I'm doing a Traveling Salesman Problem (TSP) homework for a coursera optimization course. My first attempt was a regular naive greedy approach, from each point, moving to the closest node (that hadn't yet been selected). The second algorithm I tried was heuristic search, as described by <a href=\"http://www.andrew.cmu.edu/course/10-703/textbook/BartoSutton.pdf\" title=\"http://www.andrew.cmu.edu/course/10-703/textbook/BartoSutton.pdf\">Sutton and Barto Sec 8.9</a>. I build a planning tree to consider possible paths looking several steps forward, then choose the first step along the shortest potential path. Very surprisingly to me, this second approach does consistently worse than regular naive greedy. </p>\n<p>I was sure at first this was due to a bug in my implementation, but after tons of time stepping through results, it seems not to be? e.g. It finds the global optimum on small enough problems it can plan through to the end, as expected. One final note: I'm not asking how to get a better solution to the TSP. I have alternative approaches that do much better. What is bothering me is that I can't grok why this particular algorithm is consistently worse than naive greedy.</p>\n<p>See link above for reproduceable example with my code, results for sample runs, and a sample dataset, if interested.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 193616583,
            "is_me_message": false,
            "last_edit_timestamp": 1586552084,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "mepstein68@gmail.com",
            "sender_full_name": "Max Epstein (he) (S1'19)",
            "sender_id": 222514,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Heuristic Search Performing Worse on TSP than Naive Greedy",
            "submessages": [],
            "timestamp": 1586552034,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/e53f7dbb47c94693d5ecb4059df20f05?d=identicon&version=1",
            "client": "website",
            "content": "<p>I don't think I can help you but I actually started this course recently too and got stuck trying to get a branch and bound approach to the knapsack problem to solve the test problems fast enough :(. I feel defeated. I was really bummed because I love the lectures and was looking forward to learning more about the topic</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 193618126,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "brhpkns@gmail.com",
            "sender_full_name": "Brandon Hopkins (he) (SP2'19)",
            "sender_id": 216115,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Heuristic Search Performing Worse on TSP than Naive Greedy",
            "submessages": [],
            "timestamp": 1586553107,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/3e7fd7e23daa8696efc1dffaf4002178?d=identicon&version=1",
            "client": "website",
            "content": "<p>Hey Brandon! I also tried and failed to solve the knapsack problem with branch and bound, then I tried Dynamic Programming and had some reasonable success. Once I added numba jit, it blew through the first five problems. I wrote up a blogpost of that approach here, in case you're interested: <a href=\"https://maxpowerwastaken.gitlab.io/model-idiot/posts/knapsack_blog/\" title=\"https://maxpowerwastaken.gitlab.io/model-idiot/posts/knapsack_blog/\">https://maxpowerwastaken.gitlab.io/model-idiot/posts/knapsack_blog/</a></p>\n<p>Alternatively, I've been meaning to go back and try and create a branch and bound solution to solve the largest problem (problem 6). I'll drop you a line if I figure it out, or if you're interested I'd be down to try pair programming on it a bit some weekend over zoom.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 193619155,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "mepstein68@gmail.com",
            "sender_full_name": "Max Epstein (he) (S1'19)",
            "sender_id": 222514,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Heuristic Search Performing Worse on TSP than Naive Greedy",
            "submessages": [],
            "timestamp": 1586553747,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/0789f8732b00c0952a58c7e4de8ae016e1bfbe20?x=x&version=2",
            "client": "website",
            "content": "<p>Hey, I also did this course a couple of months ago but kinda burned out during the MIP part near the end. Interested in taking a look at this again.</p>\n<p><span class=\"user-mention\" data-user-id=\"216115\">@Brandon Hopkins (he) (SP2'19)</span> Are you using linear slacking (greedy method) in the branch and bound to reduce the search space? I was able to complete it after incorporating that into my search. (no numba needed)</p>\n<p><span class=\"user-mention\" data-user-id=\"222514\">@Max Epstein (he) (S1'19)</span>  I haven't looked into the code in depth but is this what you're seeing across different setups or just <code>data/tsp_51_1</code>? I would try changing your initial node so your search doesn't always start at node 0 and see what happens there.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 193624326,
            "is_me_message": false,
            "last_edit_timestamp": 1586557860,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "neil.liu16@gmail.com",
            "sender_full_name": "Neil Liu (he) (SP2'20)",
            "sender_id": 276158,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Heuristic Search Performing Worse on TSP than Naive Greedy",
            "submessages": [],
            "timestamp": 1586557015,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/3e7fd7e23daa8696efc1dffaf4002178?d=identicon&version=1",
            "client": "website",
            "content": "<p>Thanks <span class=\"user-mention\" data-user-id=\"276158\">@Neil Liu (he) (SP2'20)</span> . Yeah I tried it with many different starting points, different problems, and many different depth/breadth parameters. Maybe 5% of ways I try I  get a very narrowly better solution from the heuristic search, about 95% I get a worse solution. It's very weirdly consistent.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 193628044,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "mepstein68@gmail.com",
            "sender_full_name": "Max Epstein (he) (S1'19)",
            "sender_id": 222514,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Heuristic Search Performing Worse on TSP than Naive Greedy",
            "submessages": [],
            "timestamp": 1586559933,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/998033fdaf174de3fed5af64a4382f61dffa8db6?x=x&version=2",
            "client": "ZulipElectron",
            "content": "<p>totally stuck on today's ughhhh<br>\nam terrible at recursion</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 193657896,
            "is_me_message": false,
            "last_edit_timestamp": 1586608050,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "contrepoint21@gmail.com",
            "sender_full_name": "Janice Shiu (she) (SP2'18)",
            "sender_id": 112188,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "30 Day LeetCoding Challenge",
            "submessages": [],
            "timestamp": 1586608041,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/2bd944ad38bd10b190c5deef99eeee9a?d=identicon&version=1",
            "client": "website",
            "content": "<p>A kind of self-indulgent solution: <a href=\"https://gist.github.com/justinj/84525aca56c61b7240f162924847176c\" title=\"https://gist.github.com/justinj/84525aca56c61b7240f162924847176c\">https://gist.github.com/justinj/84525aca56c61b7240f162924847176c</a>. I liked this problem\u2014it took me a bit to figure out exactly how to generalize it nicely. I'm sure there's some kind of interesting statement to be made about exactly what problems on trees can be solved this way, but it's beyond me.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 193662405,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "justin.jaffray@gmail.com",
            "sender_full_name": "Justin Jaffray (he) (m3'20)",
            "sender_id": 276160,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "30 Day LeetCoding Challenge",
            "submessages": [],
            "timestamp": 1586614382,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/e53f7dbb47c94693d5ecb4059df20f05?d=identicon&version=1",
            "client": "website",
            "content": "<p>Thanks, <span class=\"user-mention\" data-user-id=\"222514\">@Max Epstein (he) (S1'19)</span>! Looking forward to reading your blog post. I would love to pair on this (and catch up in general!), I'm weirdly busy this weekend but how's next weekend?</p>\n<p>If the problem is the Python interpreter, maybe I'll just take a crack at switching to Go.</p>\n<p>Is linear slacking the same as linear relaxation? I tried DFS and best first search using linear relaxation but neither could do more than 50 items in a reasonable amount of time. I did take a class-based approach (representing each node in the search tree as an object - it felt like otherwise it'd be hard to do best first search) so it's possible that's my issue. Bottom up dynamic programming had me running out of memory, I can't remember what happened when I did top down, not sure I actually tried it on all the problems so might be worth exploring again.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 193662567,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "brhpkns@gmail.com",
            "sender_full_name": "Brandon Hopkins (he) (SP2'19)",
            "sender_id": 216115,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Heuristic Search Performing Worse on TSP than Naive Greedy",
            "submessages": [],
            "timestamp": 1586614595,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/6ae811d40ff8600863755aa510198b5144ebff2c?x=x&version=2",
            "client": "website",
            "content": "<p>I'm working on this now, I think I have a general idea on what to do but missing some edge cases.  <span class=\"user-mention\" data-user-id=\"112188\">@Janice Shiu (she) (SP2'18)</span> are you still around/want to pair?</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 193663259,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "jo@johanndiedrick.com",
            "sender_full_name": "Johann Diedrick (he) (W2'20)",
            "sender_id": 255042,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "30 Day LeetCoding Challenge",
            "submessages": [],
            "timestamp": 1586615686,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/6ae811d40ff8600863755aa510198b5144ebff2c?x=x&version=2",
            "client": "website",
            "content": "<p>Day 11 solution with pairing help from <span class=\"user-mention\" data-user-id=\"276160\">@Justin Jaffray (he) (m3'20)</span> <a href=\"https://github.com/jdiedrick/30-day-leetcoding-challenge-april-2020/blob/master/11_binary_tree_diameter.py\" title=\"https://github.com/jdiedrick/30-day-leetcoding-challenge-april-2020/blob/master/11_binary_tree_diameter.py\">https://github.com/jdiedrick/30-day-leetcoding-challenge-april-2020/blob/master/11_binary_tree_diameter.py</a></p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 193665632,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "jo@johanndiedrick.com",
            "sender_full_name": "Johann Diedrick (he) (W2'20)",
            "sender_id": 255042,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "30 Day LeetCoding Challenge",
            "submessages": [],
            "timestamp": 1586619084,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/0789f8732b00c0952a58c7e4de8ae016e1bfbe20?x=x&version=2",
            "client": "website",
            "content": "<p>Similar solution - <a href=\"https://github.com/nh2liu/lc-april-recurse/blob/master/11-diameter-of-binary-tree.py\" title=\"https://github.com/nh2liu/lc-april-recurse/blob/master/11-diameter-of-binary-tree.py\">https://github.com/nh2liu/lc-april-recurse/blob/master/11-diameter-of-binary-tree.py</a></p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 193670402,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "neil.liu16@gmail.com",
            "sender_full_name": "Neil Liu (he) (SP2'20)",
            "sender_id": 276158,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "30 Day LeetCoding Challenge",
            "submessages": [],
            "timestamp": 1586625854,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/3f29df543be812656249f5932737560869ab8f09?x=x&version=5",
            "client": "website",
            "content": "<p>Hey <span class=\"user-mention\" data-user-id=\"222514\">@Max Epstein (he) (S1'19)</span> <span class=\"user-mention\" data-user-id=\"216115\">@Brandon Hopkins (he) (SP2'19)</span> ! Been a while... :-)</p>\n<p>I'm too busy now to dive into the specifics of these problems (maybe ping me in about 2 weeks if you're still stuck?), but this is exactly my kind of stuff. You are super welcome to tag me or send me a message (I miss most of the Zulip stuff these days). For now I have just one comment: why are you using Sutton's book? Is it a part of the course syllabus? I'm not a big Sutton fan to say the least. In my opinion you'll find a classic algorithms book (e.g. CLRS) much more suitable for these types of problems.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 193688769,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "elhanani@gmail.com",
            "sender_full_name": "Yoni Elhanani (he) (SP2'19)",
            "sender_id": 215273,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Heuristic Search Performing Worse on TSP than Naive Greedy",
            "submessages": [],
            "timestamp": 1586655447,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/3e7fd7e23daa8696efc1dffaf4002178?d=identicon&version=1",
            "client": "website",
            "content": "<p><span class=\"user-mention\" data-user-id=\"216115\">@Brandon Hopkins (he) (SP2'19)</span>  - I am also weirdly busy this weekend, next weekend would be perfect!</p>\n<p><span class=\"user-mention\" data-user-id=\"215273\">@Yoni Elhanani (he) (SP2'19)</span> , great to hear from you! Hope grad school is going well! Interesting to hear you're not a fan of Sutton and Barto. I've been reading it to learn (or get an introduction to) Reinforcement Learning, it was the assigned textbook for the Coursera course on RL by Martha and Adam White at UAlberta (where you're studying now if memory serves?). And when I got to the heuristic search section on planning in the RL book, I happened to be on the TSP section of the algorithms class, and I thought heuristic search would be good to try out for that problem. </p>\n<p>No rush on looking more into this. I think I'm at peace that it just wasn't helpful for this particular problem for whatever reason. And thanks for the tip on CLRS, I'll check it out.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 193689435,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "mepstein68@gmail.com",
            "sender_full_name": "Max Epstein (he) (S1'19)",
            "sender_id": 222514,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Heuristic Search Performing Worse on TSP than Naive Greedy",
            "submessages": [],
            "timestamp": 1586656764,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/6ae811d40ff8600863755aa510198b5144ebff2c?x=x&version=2",
            "client": "website",
            "content": "<p>Day 12 solution: <a href=\"https://github.com/jdiedrick/30-day-leetcoding-challenge-april-2020/blob/master/12_last_stone_weight.py\" title=\"https://github.com/jdiedrick/30-day-leetcoding-challenge-april-2020/blob/master/12_last_stone_weight.py\">https://github.com/jdiedrick/30-day-leetcoding-challenge-april-2020/blob/master/12_last_stone_weight.py</a></p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 193723895,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "jo@johanndiedrick.com",
            "sender_full_name": "Johann Diedrick (he) (W2'20)",
            "sender_id": 255042,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "30 Day LeetCoding Challenge",
            "submessages": [],
            "timestamp": 1586715687,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/0789f8732b00c0952a58c7e4de8ae016e1bfbe20?x=x&version=2",
            "client": "website",
            "content": "<p>My sln: <a href=\"https://github.com/nh2liu/lc-april-recurse/blob/master/12-last-stone-weight.py\" title=\"https://github.com/nh2liu/lc-april-recurse/blob/master/12-last-stone-weight.py\">https://github.com/nh2liu/lc-april-recurse/blob/master/12-last-stone-weight.py</a></p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 193725864,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "neil.liu16@gmail.com",
            "sender_full_name": "Neil Liu (he) (SP2'20)",
            "sender_id": 276158,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "30 Day LeetCoding Challenge",
            "submessages": [],
            "timestamp": 1586718586,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/af24ea97d27746b09489da7d27991698b34ba37a?x=x&version=4",
            "client": "website",
            "content": "<p>Here's a little C++ for your Sunday afternoon: <a href=\"https://gist.github.com/James-Silva/e04055053a8338b6e07a8a81e4b10af4\" title=\"https://gist.github.com/James-Silva/e04055053a8338b6e07a8a81e4b10af4\">https://gist.github.com/James-Silva/e04055053a8338b6e07a8a81e4b10af4</a></p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 193732618,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "silvaj1503@gmail.com",
            "sender_full_name": "James Silva (he) (SP2'20)",
            "sender_id": 276604,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "30 Day LeetCoding Challenge",
            "submessages": [],
            "timestamp": 1586729733,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/2bd944ad38bd10b190c5deef99eeee9a?d=identicon&version=1",
            "client": "website",
            "content": "<p>I didn't really like this one\u2014I felt like the problem description hinted at the existence of an O(n) solution, but after a bunch of thinking and subsequent giving up and googling I don't think there is one. Maybe I was just too optimistic, dunno!</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 193740139,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "justin.jaffray@gmail.com",
            "sender_full_name": "Justin Jaffray (he) (m3'20)",
            "sender_id": 276160,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "30 Day LeetCoding Challenge",
            "submessages": [],
            "timestamp": 1586743698,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/1bd49962ff0f7e7f3ee603f8243a1015bb6690bd?x=x&version=7",
            "client": "website",
            "content": "<p><del>I think there is an O(N) solution! PM me if you want a hint or explanation. But sometimes knowing the answer exists makes the search easier :)</del> </p>\n<p>oops, this didn't work. Nevermind!</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 193740516,
            "is_me_message": false,
            "last_edit_timestamp": 1586770177,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "talyian@gmail.com",
            "sender_full_name": "Jimmy Tang (he) (SP2'20)",
            "sender_id": 276140,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "30 Day LeetCoding Challenge",
            "submessages": [],
            "timestamp": 1586744420,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/700775c1b9679bb74bd97d4ced91fadf9cc2ed17?x=x&version=2",
            "client": "website",
            "content": "<p>I enjoyed today's, though I don't know if I have a particularly optimal solution - <a href=\"https://github.com/rolandcrosby/leetcode/blob/master/20200413-contiguousarray.py\" title=\"https://github.com/rolandcrosby/leetcode/blob/master/20200413-contiguousarray.py\">here's what I came up with</a>.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 193804077,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "roland@rolandcrosby.com",
            "sender_full_name": "Roland Crosby (he) (SP2'20)",
            "sender_id": 276197,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "30 Day LeetCoding Challenge",
            "submessages": [],
            "timestamp": 1586802729,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/6ae811d40ff8600863755aa510198b5144ebff2c?x=x&version=2",
            "client": "website",
            "content": "<p>I think it is! I came up with a similar solution (with hints): <a href=\"https://github.com/jdiedrick/30-day-leetcoding-challenge-april-2020/blob/master/13_contiguous_array.py\" title=\"https://github.com/jdiedrick/30-day-leetcoding-challenge-april-2020/blob/master/13_contiguous_array.py\">https://github.com/jdiedrick/30-day-leetcoding-challenge-april-2020/blob/master/13_contiguous_array.py</a></p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 193804450,
            "is_me_message": false,
            "reactions": [
                {
                    "emoji_code": "1f44d",
                    "emoji_name": "+1",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "neil.liu16@gmail.com",
                        "full_name": "Neil Liu (he) (SP2'20)",
                        "id": 276158
                    },
                    "user_id": 276158
                },
                {
                    "emoji_code": "1f44d",
                    "emoji_name": "+1",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "roland@rolandcrosby.com",
                        "full_name": "Roland Crosby (he) (SP2'20)",
                        "id": 276197
                    },
                    "user_id": 276197
                }
            ],
            "recipient_id": 24954,
            "sender_email": "jo@johanndiedrick.com",
            "sender_full_name": "Johann Diedrick (he) (W2'20)",
            "sender_id": 255042,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "30 Day LeetCoding Challenge",
            "submessages": [],
            "timestamp": 1586802949,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/b2a6b06ba040fd7f7c2acd4d1440e7de?d=identicon&version=1",
            "client": "website",
            "content": "<p>Day 14 in C++: <a href=\"https://gist.github.com/collares/2018c2a000c1cab1304909462b66364f\" title=\"https://gist.github.com/collares/2018c2a000c1cab1304909462b66364f\">https://gist.github.com/collares/2018c2a000c1cab1304909462b66364f</a></p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 193905210,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "mauricio@collares.org",
            "sender_full_name": "Mauricio Collares (he) (W2'19)",
            "sender_id": 158563,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "30 Day LeetCoding Challenge",
            "submessages": [],
            "timestamp": 1586874354,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/b2a6b06ba040fd7f7c2acd4d1440e7de?d=identicon&version=1",
            "client": "website",
            "content": "<p>The first two lines are as efficient as a loop, but the function call on the third line is not inlined: <a href=\"https://godbolt.org/z/iW7AhD\" title=\"https://godbolt.org/z/iW7AhD\">https://godbolt.org/z/iW7AhD</a></p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 193908240,
            "is_me_message": false,
            "last_edit_timestamp": 1586875584,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "mauricio@collares.org",
            "sender_full_name": "Mauricio Collares (he) (W2'19)",
            "sender_id": 158563,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "30 Day LeetCoding Challenge",
            "submessages": [],
            "timestamp": 1586875551,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/6ae811d40ff8600863755aa510198b5144ebff2c?x=x&version=2",
            "client": "website",
            "content": "<p>My day 14: <a href=\"https://github.com/jdiedrick/30-day-leetcoding-challenge-april-2020/blob/master/14_perform_string_shifts.py\" title=\"https://github.com/jdiedrick/30-day-leetcoding-challenge-april-2020/blob/master/14_perform_string_shifts.py\">https://github.com/jdiedrick/30-day-leetcoding-challenge-april-2020/blob/master/14_perform_string_shifts.py</a> I think my shiftLeft/shiftRight functions could be more efficient.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 193919781,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "jo@johanndiedrick.com",
            "sender_full_name": "Johann Diedrick (he) (W2'20)",
            "sender_id": 255042,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "30 Day LeetCoding Challenge",
            "submessages": [],
            "timestamp": 1586880185,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/b2a6b06ba040fd7f7c2acd4d1440e7de?d=identicon&version=1",
            "client": "website",
            "content": "<p>Same as before but inlining the standard library function: <a href=\"https://gist.github.com/collares/9b0ec67a03bd00f9b3d0eb779df0fe11\" title=\"https://gist.github.com/collares/9b0ec67a03bd00f9b3d0eb779df0fe11\">https://gist.github.com/collares/9b0ec67a03bd00f9b3d0eb779df0fe11</a></p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 193922316,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "mauricio@collares.org",
            "sender_full_name": "Mauricio Collares (he) (W2'19)",
            "sender_id": 158563,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "30 Day LeetCoding Challenge",
            "submessages": [],
            "timestamp": 1586881364,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/c8cec51f2fb41f1bbf0183ec6ada0450880a67a6?x=x&version=2",
            "client": "ZulipElectron",
            "content": "<p>Does anyone have something they want to present or learn about in Study Group this week?</p>\n<p>I think <span class=\"user-mention\" data-user-id=\"263510\">@Asa Needle (he/they) (SP1'20)</span> mentioned a dynamic programming problem, <span class=\"user-mention\" data-user-id=\"276140\">@Jimmy Tang (he) (SP2'20)</span> inverse square roots, and <span class=\"user-mention\" data-user-id=\"255045\">@Ori Dean Bernstein (he) (W2'20)</span> bloom filters? Would any of you want to present Thursday?</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 193934672,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "sgorecki@gmail.com",
            "sender_full_name": "Sara Gulotta (she) (S1'20)",
            "sender_id": 263732,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Study Group",
            "submessages": [],
            "timestamp": 1586887013,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/6b283009bf4375b73d9628bb245367165da5c360?x=x&version=2",
            "client": "ZulipElectron",
            "content": "<p>Python to the rescue today. <a href=\"https://github.com/anthonyabeo/leetcode-30-day-challenge/blob/master/string_shift.py\" title=\"https://github.com/anthonyabeo/leetcode-30-day-challenge/blob/master/string_shift.py\">https://github.com/anthonyabeo/leetcode-30-day-challenge/blob/master/string_shift.py</a></p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 193935913,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "anthonyabeo@gmail.com",
            "sender_full_name": "Anthony Anabila Abeo (he) (SP2'20)",
            "sender_id": 276302,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "30 Day LeetCoding Challenge",
            "submessages": [],
            "timestamp": 1586887596,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/6b283009bf4375b73d9628bb245367165da5c360?x=x&version=2",
            "client": "ZulipElectron",
            "content": "<p>turns out the modulo operator works differently in python vs java vs c++ for -ve numbers e.g. (-16 % 10).</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 193936104,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "anthonyabeo@gmail.com",
            "sender_full_name": "Anthony Anabila Abeo (he) (SP2'20)",
            "sender_id": 276302,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "30 Day LeetCoding Challenge",
            "submessages": [],
            "timestamp": 1586887691,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/af24ea97d27746b09489da7d27991698b34ba37a?x=x&version=4",
            "client": "website",
            "content": "<p>Kinda cheating but thought I'd share: <a href=\"https://gist.github.com/James-Silva/8bbeeab807b7350414eb77ca94e23f6f\" title=\"https://gist.github.com/James-Silva/8bbeeab807b7350414eb77ca94e23f6f\">https://gist.github.com/James-Silva/8bbeeab807b7350414eb77ca94e23f6f</a></p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 193943272,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "silvaj1503@gmail.com",
            "sender_full_name": "James Silva (he) (SP2'20)",
            "sender_id": 276604,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "30 Day LeetCoding Challenge",
            "submessages": [],
            "timestamp": 1586891194,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/c6a4682e6a46285de64c97c77b771481?d=identicon&version=1",
            "client": "website",
            "content": "<p>\"That's a rotate\" <a href=\"https://www.youtube.com/watch?v=W2tWOdzgXHA\" title=\"https://www.youtube.com/watch?v=W2tWOdzgXHA\">https://www.youtube.com/watch?v=W2tWOdzgXHA</a></p>\n<div class=\"youtube-video message_inline_image\"><a data-id=\"W2tWOdzgXHA\" href=\"https://www.youtube.com/watch?v=W2tWOdzgXHA\" title=\"https://www.youtube.com/watch?v=W2tWOdzgXHA\"><img src=\"https://i.ytimg.com/vi/W2tWOdzgXHA/default.jpg\"></a></div>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 193943601,
            "is_me_message": false,
            "reactions": [
                {
                    "emoji_code": "1f923",
                    "emoji_name": "rolling_on_the_floor_laughing",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "silvaj1503@gmail.com",
                        "full_name": "James Silva (he) (SP2'20)",
                        "id": 276604
                    },
                    "user_id": 276604
                }
            ],
            "recipient_id": 24954,
            "sender_email": "ori@eigenstate.org",
            "sender_full_name": "Ori Dean Bernstein (he) (W2'20)",
            "sender_id": 255045,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "30 Day LeetCoding Challenge",
            "submessages": [],
            "timestamp": 1586891337,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/a69d4a0c241149eb248884f45de839da?d=identicon&version=1",
            "client": "ZulipElectron",
            "content": "<p>extremmmmmmmmmely late to the party but here we go anyway: <a href=\"https://github.com/msmedes/lc2020/\" title=\"https://github.com/msmedes/lc2020/\">https://github.com/msmedes/lc2020/</a></p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 193955231,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "smichaelmedes@gmail.com",
            "sender_full_name": "Michael Smedes (W2'20)",
            "sender_id": 256966,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "30 Day LeetCoding Challenge",
            "submessages": [],
            "timestamp": 1586897378,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/6ae811d40ff8600863755aa510198b5144ebff2c?x=x&version=2",
            "client": "website",
            "content": "<p>TIL the existence of <code>connections.deque.rotate()</code> in python: <a href=\"https://www.geeksforgeeks.org/python-ways-to-rotate-a-list/\" title=\"https://www.geeksforgeeks.org/python-ways-to-rotate-a-list/\">https://www.geeksforgeeks.org/python-ways-to-rotate-a-list/</a></p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 193970469,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "jo@johanndiedrick.com",
            "sender_full_name": "Johann Diedrick (he) (W2'20)",
            "sender_id": 255042,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "30 Day LeetCoding Challenge",
            "submessages": [],
            "timestamp": 1586908442,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/c6a4682e6a46285de64c97c77b771481?d=identicon&version=1",
            "client": "website",
            "content": "<p>hm. I'd prefer not to go thursday, but if I can do next week that'd be good.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 193971343,
            "is_me_message": false,
            "reactions": [
                {
                    "emoji_code": "1f44d",
                    "emoji_name": "+1",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "sgorecki@gmail.com",
                        "full_name": "Sara Gulotta (she) (S1'20)",
                        "id": 263732
                    },
                    "user_id": 263732
                }
            ],
            "recipient_id": 24954,
            "sender_email": "ori@eigenstate.org",
            "sender_full_name": "Ori Dean Bernstein (he) (W2'20)",
            "sender_id": 255045,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Study Group",
            "submessages": [],
            "timestamp": 1586909272,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/1d9cae1f0cbcb78efb0fbd9650fbccb2?d=identicon&version=1",
            "client": "website",
            "content": "<p>Day 13, Contiguous Array, was challenging. I glanced at the discussion for hints but couldn't figure anything out and I eventually had to look at the solution... I wonder what other problems look like this, since this technique isn't one I'm comfortable with yet.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 193979671,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "julianvmodesto@gmail.com",
            "sender_full_name": "Julian Modesto (he) (m3'20)",
            "sender_id": 276201,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "30 Day LeetCoding Challenge",
            "submessages": [],
            "timestamp": 1586918803,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/6ae811d40ff8600863755aa510198b5144ebff2c?x=x&version=2",
            "client": "website",
            "content": "<p>I have difficulty with these kind of problems as well.  I think this is considered a sliding window problem? I came up against a similar problem today on Pramp, finding the smallest subsequence of distinct characters: <a href=\"https://leetcode.com/problems/smallest-subsequence-of-distinct-characters/\" title=\"https://leetcode.com/problems/smallest-subsequence-of-distinct-characters/\">https://leetcode.com/problems/smallest-subsequence-of-distinct-characters/</a></p>\n<p>The version on Pramp:</p>\n<div class=\"codehilite\"><pre><span></span>Smallest Substring of All Characters\n\nGiven an array of unique characters arr and a string str, Implement a function getShortestUniqueSubstring that finds the smallest substring of str containing all the characters in arr. Return &quot;&quot; (empty string) if such a substring doesn\u2019t exist.\n\nCome up with an asymptotically optimal solution and analyze the time and space complexities.\n\nExample:\n\ninput:  arr = [&#39;x&#39;,&#39;y&#39;,&#39;z&#39;], str = &quot;xyyzyzyx&quot;\n\noutput: &quot;zyx&quot;\n</pre></div>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 193979969,
            "is_me_message": false,
            "last_edit_timestamp": 1586921097,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "jo@johanndiedrick.com",
            "sender_full_name": "Johann Diedrick (he) (W2'20)",
            "sender_id": 255042,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "30 Day LeetCoding Challenge",
            "submessages": [],
            "timestamp": 1586919319,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/1bd49962ff0f7e7f3ee603f8243a1015bb6690bd?x=x&version=7",
            "client": "website",
            "content": "<p>I'd like to learn more about dynamic programming! If <span class=\"user-mention\" data-user-id=\"263510\">@Asa Needle (he/they) (SP1'20)</span> isn't ready to present though I can get some slides together for Thursday. Theme would be introduction to floating point numbers by deconstructing the Quake III fast inverse square root function.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 193982518,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "talyian@gmail.com",
            "sender_full_name": "Jimmy Tang (he) (SP2'20)",
            "sender_id": 276140,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Study Group",
            "submessages": [],
            "timestamp": 1586922931,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/c6a4682e6a46285de64c97c77b771481?d=identicon&version=1",
            "client": "website",
            "content": "<p>so, the way I would think about this problem: you can grow your window at one end of the string, or skip forward until things are balanced again -- but the leetcode version is harder, because you're trying to come up with a balanced count.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 193983098,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "ori@eigenstate.org",
            "sender_full_name": "Ori Dean Bernstein (he) (W2'20)",
            "sender_id": 255045,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "30 Day LeetCoding Challenge",
            "submessages": [],
            "timestamp": 1586923707,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/0789f8732b00c0952a58c7e4de8ae016e1bfbe20?x=x&version=2",
            "client": "website",
            "content": "<p><span class=\"user-mention\" data-user-id=\"222514\">@Max Epstein (he) (S1'19)</span>  So I dove a little bit deeper into the dataset and plotted some of the paths out.</p>\n<p>It seems that heuristic search prioritizes searching in the middle at versus greedy search, which is especially problematic to minimizing the cost function of TSP. Searching in the middle is bad because this often cuts the graph in half which leads to suboptimal solutions. (where the final path crosses eachother).</p>\n<p>The reason why heuristic search searches priorities cutting to the center is because the point density is higher in the middle of the graph and often, these dense points in the center will always lead to a lower path length when heuristic searching.</p>\n<p>And this leads the underlying reason why search isn't the optimal solution for TSP here because the heuristic objective function is not a great approximation for the true hamiltonian cycle objective function. I would conclude here that minimizing the path for the next 5 nodes does not take into account that hamiltonian path length is a function of all the nodes.</p>\n<p>It seems that greedy pathing is better because it avoids this middle cutting behavior.</p>\n<p>Would love to talk more about this!</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 193984578,
            "is_me_message": false,
            "last_edit_timestamp": 1586925942,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "neil.liu16@gmail.com",
            "sender_full_name": "Neil Liu (he) (SP2'20)",
            "sender_id": 276158,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Heuristic Search Performing Worse on TSP than Naive Greedy",
            "submessages": [],
            "timestamp": 1586925861,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/3e7fd7e23daa8696efc1dffaf4002178?d=identicon&version=1",
            "client": "website",
            "content": "<p>Wow <span class=\"user-mention\" data-user-id=\"276158\">@Neil Liu (he) (SP2'20)</span> that makes so much sense! Thank you so much! Oh man I feel so much better now. I put a 150pt bounty on the question at or.stackexchange (linked in original post), if you have a stackexchange account care to post your explanation there so I can award you the bounty?</p>\n<p>Your explanation makes so much sense, and now makes me now want to chase down another tsp 'heuristic' - like what about even a 1-step greedy but with a tuneable bias to prefer steps away from the middle of the point cloud, at least early? Very cool insight.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 193984962,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "mepstein68@gmail.com",
            "sender_full_name": "Max Epstein (he) (S1'19)",
            "sender_id": 222514,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Heuristic Search Performing Worse on TSP than Naive Greedy",
            "submessages": [],
            "timestamp": 1586926429,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/6948faab4e5ab8c9d107dba94c9f00e0?d=identicon&version=1",
            "client": "ZulipElectron",
            "content": "<p>Hi, I've been thinking about dynamic programming a bunch recently and am down to present, I was really intrigued by the change-making problem, because it stretched my thinking about memoization and could talk about that. Also down to split time with Jimmy, not sure if I have a full hour's worth of material</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 194021572,
            "is_me_message": false,
            "reactions": [
                {
                    "emoji_code": "1f44d",
                    "emoji_name": "+1",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "talyian@gmail.com",
                        "full_name": "Jimmy Tang (he) (SP2'20)",
                        "id": 276140
                    },
                    "user_id": 276140
                },
                {
                    "emoji_code": "1f44d",
                    "emoji_name": "+1",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "anthonyabeo@gmail.com",
                        "full_name": "Anthony Anabila Abeo (he) (SP2'20)",
                        "id": 276302
                    },
                    "user_id": 276302
                }
            ],
            "recipient_id": 24954,
            "sender_email": "asa@cottageclass.com",
            "sender_full_name": "Asa Needle (he/they) (S1'20)",
            "sender_id": 263510,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Study Group",
            "submessages": [],
            "timestamp": 1586953691,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/c8cec51f2fb41f1bbf0183ec6ada0450880a67a6?x=x&version=2",
            "client": "ZulipElectron",
            "content": "<p><span class=\"user-mention\" data-user-id=\"263510\">@Asa Needle (he/they) (SP1'20)</span> That sounds great. I don't think we need to split the time. You don't need to use all of it; we can definitely leave time for discussion after your presentation is over. Thank you for volunteering to present! I'm excited to learn about this!</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 194041915,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "sgorecki@gmail.com",
            "sender_full_name": "Sara Gulotta (she) (S1'20)",
            "sender_id": 263732,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Study Group",
            "submessages": [],
            "timestamp": 1586962145,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/0789f8732b00c0952a58c7e4de8ae016e1bfbe20?x=x&version=2",
            "client": "website",
            "content": "<p><span class=\"user-mention\" data-user-id=\"222514\">@Max Epstein (he) (S1'19)</span>  Thank you! I just posted it as a solution on stackoverflow (new account).</p>\n<p>I'm curious to see if that would work as well. If you want to do a non local-search solver on TSP, it seems ant colony optimization is up your alley and sounds similar to your search strategy.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 194067425,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "neil.liu16@gmail.com",
            "sender_full_name": "Neil Liu (he) (SP2'20)",
            "sender_id": 276158,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Heuristic Search Performing Worse on TSP than Naive Greedy",
            "submessages": [],
            "timestamp": 1586972921,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/6ae811d40ff8600863755aa510198b5144ebff2c?x=x&version=2",
            "client": "website",
            "content": "<p>Day 15: <a href=\"https://github.com/jdiedrick/30-day-leetcoding-challenge-april-2020/blob/master/15_product_of_array_except_self.py\" title=\"https://github.com/jdiedrick/30-day-leetcoding-challenge-april-2020/blob/master/15_product_of_array_except_self.py\">https://github.com/jdiedrick/30-day-leetcoding-challenge-april-2020/blob/master/15_product_of_array_except_self.py</a> I came up with the brute force solution and had to look up the optimal solution :/ Even after writing it out I don't find it intuitive/feel like it doesn't make sense in a way that feels satisfying. I'll keep staring at it...</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 194220283,
            "is_me_message": false,
            "reactions": [
                {
                    "emoji_code": "15890",
                    "emoji_name": "same",
                    "reaction_type": "realm_emoji",
                    "user": {
                        "email": "silvaj1503@gmail.com",
                        "full_name": "James Silva (he) (SP2'20)",
                        "id": 276604
                    },
                    "user_id": 276604
                },
                {
                    "emoji_code": "15890",
                    "emoji_name": "same",
                    "reaction_type": "realm_emoji",
                    "user": {
                        "email": "julianvmodesto@gmail.com",
                        "full_name": "Julian Modesto (he) (m3'20)",
                        "id": 276201
                    },
                    "user_id": 276201
                }
            ],
            "recipient_id": 24954,
            "sender_email": "jo@johanndiedrick.com",
            "sender_full_name": "Johann Diedrick (he) (W2'20)",
            "sender_id": 255042,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "30 Day LeetCoding Challenge",
            "submessages": [],
            "timestamp": 1586981170,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/b2a6b06ba040fd7f7c2acd4d1440e7de?d=identicon&version=1",
            "client": "website",
            "content": "<p><span class=\"user-mention\" data-user-id=\"255042\">@Johann Diedrick (he) (W2'20)</span> Here are two \"intermediate steps\" between the brute force solution and the final one which may be useful: <a href=\"https://gist.github.com/collares/3759570812ede53053be6152ea0e7fdf\" title=\"https://gist.github.com/collares/3759570812ede53053be6152ea0e7fdf\">https://gist.github.com/collares/3759570812ede53053be6152ea0e7fdf</a></p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 194241222,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "mauricio@collares.org",
            "sender_full_name": "Mauricio Collares (he) (W2'19)",
            "sender_id": 158563,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "30 Day LeetCoding Challenge",
            "submessages": [],
            "timestamp": 1586993342,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/6ae811d40ff8600863755aa510198b5144ebff2c?x=x&version=2",
            "client": "website",
            "content": "<p>Thank you <span class=\"user-mention\" data-user-id=\"158563\">@Mauricio Collares (he) (W2'19)</span> !</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 194256081,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "jo@johanndiedrick.com",
            "sender_full_name": "Johann Diedrick (he) (W2'20)",
            "sender_id": 255042,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "30 Day LeetCoding Challenge",
            "submessages": [],
            "timestamp": 1587009899,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/af24ea97d27746b09489da7d27991698b34ba37a?x=x&version=4",
            "client": "website",
            "content": "<p>Also had a real tough time with day 15! Here's C++ answer with lots of STL baked-in: <a href=\"https://gist.github.com/James-Silva/39c68a920aa3f1279c5201797c0b8a41\" title=\"https://gist.github.com/James-Silva/39c68a920aa3f1279c5201797c0b8a41\">https://gist.github.com/James-Silva/39c68a920aa3f1279c5201797c0b8a41</a></p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 194257776,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "silvaj1503@gmail.com",
            "sender_full_name": "James Silva (he) (SP2'20)",
            "sender_id": 276604,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "30 Day LeetCoding Challenge",
            "submessages": [],
            "timestamp": 1587012467,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/c8cec51f2fb41f1bbf0183ec6ada0450880a67a6?x=x&version=2",
            "client": "ZulipElectron",
            "content": "<p><span class=\"user-group-mention\" data-user-group-id=\"41\">@Currently at RC</span> Join us in <a href=\"https://www.recurse.com/zoom/hopper\" title=\"https://www.recurse.com/zoom/hopper\">Hopper</a> in <strong>1 hour</strong> for <span aria-label=\"sparkles\" class=\"emoji emoji-2728\" role=\"img\" title=\"sparkles\">:sparkles:</span>Algorithms Study Group! <span aria-label=\"sparkles\" class=\"emoji emoji-2728\" role=\"img\" title=\"sparkles\">:sparkles:</span>. <span class=\"user-mention\" data-user-id=\"263510\">@Asa Needle (he/they) (SP1'20)</span> is going to teach us about dynamic programming and the change-making problem.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 194312552,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "sgorecki@gmail.com",
            "sender_full_name": "Sara Gulotta (she) (S1'20)",
            "sender_id": 263732,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Study Group",
            "submessages": [],
            "timestamp": 1587047405,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/3e7fd7e23daa8696efc1dffaf4002178?d=identicon&version=1",
            "client": "website",
            "content": "<p>Thanks Neil, I'll look into ant colony optimization. From a brief skim of wikipedia certainly sounds interesting</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 194321401,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "mepstein68@gmail.com",
            "sender_full_name": "Max Epstein (he) (S1'19)",
            "sender_id": 222514,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Heuristic Search Performing Worse on TSP than Naive Greedy",
            "submessages": [],
            "timestamp": 1587050665,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/6b283009bf4375b73d9628bb245367165da5c360?x=x&version=2",
            "client": "ZulipElectron",
            "content": "<p><span class=\"user-mention\" data-user-id=\"263510\">@Asa Needle (he/they) (SP1'20)</span> kindly share the slides to your DP presentation.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 194331743,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "anthonyabeo@gmail.com",
            "sender_full_name": "Anthony Anabila Abeo (he) (SP2'20)",
            "sender_id": 276302,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Study Group",
            "submessages": [],
            "timestamp": 1587054605,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/6948faab4e5ab8c9d107dba94c9f00e0?d=identicon&version=1",
            "client": "ZulipElectron",
            "content": "<p>Here they are! Thanks everyone :) <a href=\"https://docs.google.com/presentation/d/1_XOpl4BwmOQdwX4q7Btqjn7qSNO0Z-C3NFJT_XlNZgo/edit?usp=sharing\" title=\"https://docs.google.com/presentation/d/1_XOpl4BwmOQdwX4q7Btqjn7qSNO0Z-C3NFJT_XlNZgo/edit?usp=sharing\">https://docs.google.com/presentation/d/1_XOpl4BwmOQdwX4q7Btqjn7qSNO0Z-C3NFJT_XlNZgo/edit?usp=sharing</a></p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 194332256,
            "is_me_message": false,
            "reactions": [
                {
                    "emoji_code": "1f44d",
                    "emoji_name": "+1",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "neil.liu16@gmail.com",
                        "full_name": "Neil Liu (he) (SP2'20)",
                        "id": 276158
                    },
                    "user_id": 276158
                },
                {
                    "emoji_code": "1f44d",
                    "emoji_name": "+1",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "anthonyabeo@gmail.com",
                        "full_name": "Anthony Anabila Abeo (he) (SP2'20)",
                        "id": 276302
                    },
                    "user_id": 276302
                }
            ],
            "recipient_id": 24954,
            "sender_email": "asa@cottageclass.com",
            "sender_full_name": "Asa Needle (he/they) (S1'20)",
            "sender_id": 263510,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Study Group",
            "submessages": [],
            "timestamp": 1587054826,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/51c7e3813e992d0a4e45cda57334d8a29aed680c?x=x&version=2",
            "client": "ZulipElectron",
            "content": "<p>This is a pretty cool Fibonacci example from pythons page on <a href=\"https://www.python.org/dev/peps/pep-0255/\" title=\"https://www.python.org/dev/peps/pep-0255/\">Generators</a>.</p>\n<div class=\"codehilite\"><pre><span></span>def fib():\n    a, b = 0, 1\n    while 1:\n       yield b\n       a, b = b, a+b\n\nfibs = fib()\n\nfor _ in range(100):\n  print(next(fibs))\n</pre></div>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 194333884,
            "is_me_message": false,
            "last_edit_timestamp": 1587055684,
            "reactions": [
                {
                    "emoji_code": "1f44d",
                    "emoji_name": "+1",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "mepstein68@gmail.com",
                        "full_name": "Max Epstein (he) (S1'19)",
                        "id": 222514
                    },
                    "user_id": 222514
                }
            ],
            "recipient_id": 24954,
            "sender_email": "studio@robertdelanghe.com",
            "sender_full_name": "Bobby DeLanghe (he) (F2'19)",
            "sender_id": 240584,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Study Group",
            "submessages": [],
            "timestamp": 1587055585,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/6948faab4e5ab8c9d107dba94c9f00e0?d=identicon&version=1",
            "client": "ZulipElectron",
            "content": "<p>that's more pythonic :)</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 194334158,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "asa@cottageclass.com",
            "sender_full_name": "Asa Needle (he/they) (S1'20)",
            "sender_id": 263510,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Study Group",
            "submessages": [],
            "timestamp": 1587055726,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/b2a6b06ba040fd7f7c2acd4d1440e7de?d=identicon&version=1",
            "client": "website",
            "content": "<p>Day 16 in linear time and constant space (considering the input string is immutable): <a href=\"https://gist.github.com/collares/34ee0fcbd8fc0beb74585c91dcb6f1b2\" title=\"https://gist.github.com/collares/34ee0fcbd8fc0beb74585c91dcb6f1b2\">https://gist.github.com/collares/34ee0fcbd8fc0beb74585c91dcb6f1b2</a></p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 194355207,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "mauricio@collares.org",
            "sender_full_name": "Mauricio Collares (he) (W2'19)",
            "sender_id": 158563,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "30 Day LeetCoding Challenge",
            "submessages": [],
            "timestamp": 1587065175,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/700775c1b9679bb74bd97d4ced91fadf9cc2ed17?x=x&version=2",
            "client": "website",
            "content": "<p><span class=\"user-mention\" data-user-id=\"158563\">@Mauricio Collares (he) (W2'19)</span> nice, I was feeling pretty stuck and reviewing this helped</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 194356509,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "roland@rolandcrosby.com",
            "sender_full_name": "Roland Crosby (he) (SP2'20)",
            "sender_id": 276197,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "30 Day LeetCoding Challenge",
            "submessages": [],
            "timestamp": 1587065827,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/af24ea97d27746b09489da7d27991698b34ba37a?x=x&version=4",
            "client": "website",
            "content": "<p>A C++ solution with no nice explanation like <span class=\"user-mention\" data-user-id=\"158563\">@Mauricio Collares (he) (W2'19)</span>  (nice stuff dude!): <a href=\"https://gist.github.com/James-Silva/d8e47886d2f55d0aa27aa16f86edaf0d\" title=\"https://gist.github.com/James-Silva/d8e47886d2f55d0aa27aa16f86edaf0d\">https://gist.github.com/James-Silva/d8e47886d2f55d0aa27aa16f86edaf0d</a></p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 194358222,
            "is_me_message": false,
            "last_edit_timestamp": 1587066756,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "silvaj1503@gmail.com",
            "sender_full_name": "James Silva (he) (SP2'20)",
            "sender_id": 276604,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "30 Day LeetCoding Challenge",
            "submessages": [],
            "timestamp": 1587066703,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/b2a6b06ba040fd7f7c2acd4d1440e7de?d=identicon&version=1",
            "client": "ZulipMobile",
            "content": "<p>Oh, I didn't notice that the two parts of the solution could be unified like you did! That's very clever</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 194358559,
            "is_me_message": false,
            "reactions": [
                {
                    "emoji_code": "1f60a",
                    "emoji_name": "blush",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "silvaj1503@gmail.com",
                        "full_name": "James Silva (he) (SP2'20)",
                        "id": 276604
                    },
                    "user_id": 276604
                }
            ],
            "recipient_id": 24954,
            "sender_email": "mauricio@collares.org",
            "sender_full_name": "Mauricio Collares (he) (W2'19)",
            "sender_id": 158563,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "30 Day LeetCoding Challenge",
            "submessages": [],
            "timestamp": 1587066862,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/1d9cae1f0cbcb78efb0fbd9650fbccb2?d=identicon&version=1",
            "client": "website",
            "content": "<p>Valid parenthesis O(n) time + space that I happened to work out, but interesting that you can do better with space. Didn't figure that one out... <a href=\"https://gist.github.com/julianvmodesto/a2a1c860f79b3d36295ff33f0a791d74\" title=\"https://gist.github.com/julianvmodesto/a2a1c860f79b3d36295ff33f0a791d74\">https://gist.github.com/julianvmodesto/a2a1c860f79b3d36295ff33f0a791d74</a></p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 194387446,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "julianvmodesto@gmail.com",
            "sender_full_name": "Julian Modesto (he) (m3'20)",
            "sender_id": 276201,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "30 Day LeetCoding Challenge",
            "submessages": [],
            "timestamp": 1587087024,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/998033fdaf174de3fed5af64a4382f61dffa8db6?x=x&version=2",
            "client": "ZulipElectron",
            "content": "<p>welcome <span class=\"user-mention\" data-user-id=\"277502\">@Sara Bobo (she) (SP2'20)</span>! ^____^ sara - for your reference - people are checking in here. no pressure to do it every day, so do what feels right for you and feel free to post both successes and challenges here ^____^</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 194452082,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "contrepoint21@gmail.com",
            "sender_full_name": "Janice Shiu (she) (SP2'18)",
            "sender_id": 112188,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "30 Day LeetCoding Challenge",
            "submessages": [],
            "timestamp": 1587135169,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/0789f8732b00c0952a58c7e4de8ae016e1bfbe20?x=x&version=2",
            "client": "website",
            "content": "<p><a href=\"https://github.com/nh2liu/lc-april-recurse/blob/master/17-number-of-islands.py\" title=\"https://github.com/nh2liu/lc-april-recurse/blob/master/17-number-of-islands.py\">https://github.com/nh2liu/lc-april-recurse/blob/master/17-number-of-islands.py</a></p>\n<p>My favorite algorithm is flood-fill so I'm very happy they included a question on this!</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 194462628,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "neil.liu16@gmail.com",
            "sender_full_name": "Neil Liu (he) (SP2'20)",
            "sender_id": 276158,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "30 Day LeetCoding Challenge",
            "submessages": [],
            "timestamp": 1587139279,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/6ae811d40ff8600863755aa510198b5144ebff2c?x=x&version=2",
            "client": "website",
            "content": "<p>Day 17: <a href=\"https://github.com/jdiedrick/30-day-leetcoding-challenge-april-2020/blob/master/17_number_of_islands.py\" title=\"https://github.com/jdiedrick/30-day-leetcoding-challenge-april-2020/blob/master/17_number_of_islands.py\">https://github.com/jdiedrick/30-day-leetcoding-challenge-april-2020/blob/master/17_number_of_islands.py</a></p>\n<p>Yeah I really like flood fill :) I remember getting introduced to this algo in a Spatial Media class (designing interactive installations). Kind of an advanced graphics computing/computer vision course.  Anyways it was over my head at the time but I'm happy to understand it now.</p>\n<p>As a follow up, is it possible to solve this problem without altering your input grid via flood flll? So that you can still have your grid with its islands and the num count (without having set everything to 0)</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 194486072,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "jo@johanndiedrick.com",
            "sender_full_name": "Johann Diedrick (he) (W2'20)",
            "sender_id": 255042,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "30 Day LeetCoding Challenge",
            "submessages": [],
            "timestamp": 1587150267,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/6ae811d40ff8600863755aa510198b5144ebff2c?x=x&version=2",
            "client": "website",
            "content": "<p>There are a couple of other cute island problems on here like finding the largest island perimeter and finding the largest island by area. If I ever gave technical interviews mine would be island themed <span aria-label=\"island\" class=\"emoji emoji-1f3dd\" role=\"img\" title=\"island\">:island:</span></p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 194486858,
            "is_me_message": false,
            "last_edit_timestamp": 1587150727,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "jo@johanndiedrick.com",
            "sender_full_name": "Johann Diedrick (he) (W2'20)",
            "sender_id": 255042,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "30 Day LeetCoding Challenge",
            "submessages": [],
            "timestamp": 1587150683,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/700775c1b9679bb74bd97d4ced91fadf9cc2ed17?x=x&version=2",
            "client": "website",
            "content": "<p>i liked this one, here's my solution: <a href=\"https://github.com/rolandcrosby/leetcode/blob/master/20200417-numberofislands.py\" title=\"https://github.com/rolandcrosby/leetcode/blob/master/20200417-numberofislands.py\">https://github.com/rolandcrosby/leetcode/blob/master/20200417-numberofislands.py</a></p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 194491484,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "roland@rolandcrosby.com",
            "sender_full_name": "Roland Crosby (he) (SP2'20)",
            "sender_id": 276197,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "30 Day LeetCoding Challenge",
            "submessages": [],
            "timestamp": 1587153082,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/700775c1b9679bb74bd97d4ced91fadf9cc2ed17?x=x&version=2",
            "client": "website",
            "content": "<p><span class=\"user-mention\" data-user-id=\"255042\">@Johann Diedrick (he) (W2'20)</span> I kept the islands but just colored them differently instead of sinking them all</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 194491602,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "roland@rolandcrosby.com",
            "sender_full_name": "Roland Crosby (he) (SP2'20)",
            "sender_id": 276197,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "30 Day LeetCoding Challenge",
            "submessages": [],
            "timestamp": 1587153141,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/6ae811d40ff8600863755aa510198b5144ebff2c?x=x&version=2",
            "client": "website",
            "content": "<p>Thats a good idea yea, and then maybe  you could do another pass to re-color them. I dunno , was just thinking about a real world case of using this algorithm where you wouldn't want to alter your input grid.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 194492456,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "jo@johanndiedrick.com",
            "sender_full_name": "Johann Diedrick (he) (W2'20)",
            "sender_id": 255042,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "30 Day LeetCoding Challenge",
            "submessages": [],
            "timestamp": 1587153569,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/0789f8732b00c0952a58c7e4de8ae016e1bfbe20?x=x&version=2",
            "client": "website",
            "content": "<p>I used this algorithm once in a coding a terminal based game. The user inputted a map (something like the 1s representing room space, # to represent paths between rooms, 0 representing nothing), the problem was to find each of the rooms and then spawn monsters and items in them. I used something like <span class=\"user-mention\" data-user-id=\"276197\">@Roland Crosby (he) (SP2'20)</span>  algorithm to color the rooms differently to index them.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 194493533,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "neil.liu16@gmail.com",
            "sender_full_name": "Neil Liu (he) (SP2'20)",
            "sender_id": 276158,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "30 Day LeetCoding Challenge",
            "submessages": [],
            "timestamp": 1587154088,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/6b283009bf4375b73d9628bb245367165da5c360?x=x&version=2",
            "client": "ZulipElectron",
            "content": "<p>Algorithms Notes from the last session.<br>\n<a href=\"https://docs.google.com/document/d/1GDK1llrQukro41QNUVZTH_p0h5fZdGHwC2mZoyYzdTs/edit?usp=sharing\" title=\"https://docs.google.com/document/d/1GDK1llrQukro41QNUVZTH_p0h5fZdGHwC2mZoyYzdTs/edit?usp=sharing\">https://docs.google.com/document/d/1GDK1llrQukro41QNUVZTH_p0h5fZdGHwC2mZoyYzdTs/edit?usp=sharing</a></p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 194546397,
            "is_me_message": false,
            "reactions": [
                {
                    "emoji_code": "14181",
                    "emoji_name": "thank-you-word",
                    "reaction_type": "realm_emoji",
                    "user": {
                        "email": "sgorecki@gmail.com",
                        "full_name": "Sara Gulotta (she) (S1'20)",
                        "id": 263732
                    },
                    "user_id": 263732
                },
                {
                    "emoji_code": "1f419",
                    "emoji_name": "octopus",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "sgorecki@gmail.com",
                        "full_name": "Sara Gulotta (she) (S1'20)",
                        "id": 263732
                    },
                    "user_id": 263732
                },
                {
                    "emoji_code": "1f419",
                    "emoji_name": "octopus",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "julianvmodesto@gmail.com",
                        "full_name": "Julian Modesto (he) (m3'20)",
                        "id": 276201
                    },
                    "user_id": 276201
                },
                {
                    "emoji_code": "1f419",
                    "emoji_name": "octopus",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "neil.liu16@gmail.com",
                        "full_name": "Neil Liu (he) (SP2'20)",
                        "id": 276158
                    },
                    "user_id": 276158
                }
            ],
            "recipient_id": 24954,
            "sender_email": "anthonyabeo@gmail.com",
            "sender_full_name": "Anthony Anabila Abeo (he) (SP2'20)",
            "sender_id": 276302,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Study Group",
            "submessages": [],
            "timestamp": 1587218876,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/6b283009bf4375b73d9628bb245367165da5c360?x=x&version=2",
            "client": "ZulipElectron",
            "content": "<p>Day 18. <a href=\"https://github.com/anthonyabeo/leetcode-30-day-challenge/blob/master/min_path_sum.cpp\" title=\"https://github.com/anthonyabeo/leetcode-30-day-challenge/blob/master/min_path_sum.cpp\">https://github.com/anthonyabeo/leetcode-30-day-challenge/blob/master/min_path_sum.cpp</a></p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 194560194,
            "is_me_message": false,
            "last_edit_timestamp": 1587239994,
            "reactions": [
                {
                    "emoji_code": "1f419",
                    "emoji_name": "octopus",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "stefania.rosca2309@gmail.com",
                        "full_name": "Stefi Rosca (she) (SP2'20)",
                        "id": 276169
                    },
                    "user_id": 276169
                }
            ],
            "recipient_id": 24954,
            "sender_email": "anthonyabeo@gmail.com",
            "sender_full_name": "Anthony Anabila Abeo (he) (SP2'20)",
            "sender_id": 276302,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "30 Day LeetCoding Challenge",
            "submessages": [],
            "timestamp": 1587238340,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/6b283009bf4375b73d9628bb245367165da5c360?x=x&version=2",
            "client": "ZulipElectron",
            "content": "<p><span class=\"user-mention\" data-user-id=\"276158\">@Neil Liu (he) (SP2'20)</span> , <span class=\"user-mention\" data-user-id=\"255042\">@Johann Diedrick (he) (W2'20)</span> , <span class=\"user-mention\" data-user-id=\"276197\">@Roland Crosby (he) (SP2'20)</span> ,  anyone available to explain the \"Number of Island\" question to me? Just can't seem to figure it out.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 194570992,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "anthonyabeo@gmail.com",
            "sender_full_name": "Anthony Anabila Abeo (he) (SP2'20)",
            "sender_id": 276302,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "30 Day LeetCoding Challenge",
            "submessages": [],
            "timestamp": 1587255767,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/6ae811d40ff8600863755aa510198b5144ebff2c?x=x&version=2",
            "client": "website",
            "content": "<p>Day 18: <a href=\"https://github.com/jdiedrick/30-day-leetcoding-challenge-april-2020/blob/master/18_min_sum_path.py\" title=\"https://github.com/jdiedrick/30-day-leetcoding-challenge-april-2020/blob/master/18_min_sum_path.py\">https://github.com/jdiedrick/30-day-leetcoding-challenge-april-2020/blob/master/18_min_sum_path.py</a></p>\n<p><span class=\"user-mention\" data-user-id=\"276302\">@Anthony Anabila Abeo (he) (SP2'20)</span> and I paird on the Number of Islands questions (for him) and Min Sum Path (for me). It was super fun! I'm down for pairing on these in the future.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 194579958,
            "is_me_message": false,
            "reactions": [
                {
                    "emoji_code": "1f350",
                    "emoji_name": "pear",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "julianvmodesto@gmail.com",
                        "full_name": "Julian Modesto (he) (m3'20)",
                        "id": 276201
                    },
                    "user_id": 276201
                },
                {
                    "emoji_code": "1f44a",
                    "emoji_name": "fist_bump",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "anthonyabeo@gmail.com",
                        "full_name": "Anthony Anabila Abeo (he) (SP2'20)",
                        "id": 276302
                    },
                    "user_id": 276302
                }
            ],
            "recipient_id": 24954,
            "sender_email": "jo@johanndiedrick.com",
            "sender_full_name": "Johann Diedrick (he) (W2'20)",
            "sender_id": 255042,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "30 Day LeetCoding Challenge",
            "submessages": [],
            "timestamp": 1587273498,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/6ae811d40ff8600863755aa510198b5144ebff2c?x=x&version=2",
            "client": "website",
            "content": "<p>Day 19: <a href=\"https://github.com/jdiedrick/30-day-leetcoding-challenge-april-2020/blob/master/19_search_in_rotated_sorted_array.py\" title=\"https://github.com/jdiedrick/30-day-leetcoding-challenge-april-2020/blob/master/19_search_in_rotated_sorted_array.py\">https://github.com/jdiedrick/30-day-leetcoding-challenge-april-2020/blob/master/19_search_in_rotated_sorted_array.py</a></p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 194627328,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "jo@johanndiedrick.com",
            "sender_full_name": "Johann Diedrick (he) (W2'20)",
            "sender_id": 255042,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "30 Day LeetCoding Challenge",
            "submessages": [],
            "timestamp": 1587347610,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/6b283009bf4375b73d9628bb245367165da5c360?x=x&version=2",
            "client": "ZulipElectron",
            "content": "<p>Day 20: <a href=\"https://github.com/anthonyabeo/leetcode-30-day-challenge/blob/master/bst_from_preorder.py\" title=\"https://github.com/anthonyabeo/leetcode-30-day-challenge/blob/master/bst_from_preorder.py\">https://github.com/anthonyabeo/leetcode-30-day-challenge/blob/master/bst_from_preorder.py</a></p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 194657745,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "anthonyabeo@gmail.com",
            "sender_full_name": "Anthony Anabila Abeo (he) (SP2'20)",
            "sender_id": 276302,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "30 Day LeetCoding Challenge",
            "submessages": [],
            "timestamp": 1587378996,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/700775c1b9679bb74bd97d4ced91fadf9cc2ed17?x=x&version=2",
            "client": "website",
            "content": "<p>I just came up with basically the same solution to #20 as <span class=\"user-mention\" data-user-id=\"276302\">@Anthony Anabila Abeo (he) (SP2'20)</span>. It got accepted but feels suboptimal; you have to traverse the whole tree for each insertion. I feel like there must be a way to do this by keeping a stack of the latest-inserted values and popping items off as they get larger but I didn't have a good idea of how to solve this.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 194727471,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "roland@rolandcrosby.com",
            "sender_full_name": "Roland Crosby (he) (SP2'20)",
            "sender_id": 276197,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "30 Day LeetCoding Challenge",
            "submessages": [],
            "timestamp": 1587414028,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/0789f8732b00c0952a58c7e4de8ae016e1bfbe20?x=x&version=2",
            "client": "website",
            "content": "<p><a href=\"https://github.com/nh2liu/lc-april-recurse/blob/master/20-construct-binary-search-tree-preorder.py\" title=\"https://github.com/nh2liu/lc-april-recurse/blob/master/20-construct-binary-search-tree-preorder.py\">https://github.com/nh2liu/lc-april-recurse/blob/master/20-construct-binary-search-tree-preorder.py</a></p>\n<p>I did a DFS and exploited the preorder property.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 194728034,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "neil.liu16@gmail.com",
            "sender_full_name": "Neil Liu (he) (SP2'20)",
            "sender_id": 276158,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "30 Day LeetCoding Challenge",
            "submessages": [],
            "timestamp": 1587414346,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/c6a4682e6a46285de64c97c77b771481?d=identicon&version=1",
            "client": "website",
            "content": "<p>Hm. I don't know if I can talk for a full hour on bloom filters, so I may expand to some other interesting hashy data structures.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 194734525,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "ori@eigenstate.org",
            "sender_full_name": "Ori Dean Bernstein (he) (W2'20)",
            "sender_id": 255045,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Study Group",
            "submessages": [],
            "timestamp": 1587417359,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/c6a4682e6a46285de64c97c77b771481?d=identicon&version=1",
            "client": "website",
            "content": "<p>merkle trees and possibly the rsync algorithm.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 194734577,
            "is_me_message": false,
            "reactions": [
                {
                    "emoji_code": "1f389",
                    "emoji_name": "tada",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "dylnuge@gmail.com",
                        "full_name": "Dylan Nugent (he) (S1'20)",
                        "id": 263512
                    },
                    "user_id": 263512
                }
            ],
            "recipient_id": 24954,
            "sender_email": "ori@eigenstate.org",
            "sender_full_name": "Ori Dean Bernstein (he) (W2'20)",
            "sender_id": 255045,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Study Group",
            "submessages": [],
            "timestamp": 1587417368,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/c8cec51f2fb41f1bbf0183ec6ada0450880a67a6?x=x&version=2",
            "client": "ZulipMobile",
            "content": "<p>That sounds great, thanks <span class=\"user-mention\" data-user-id=\"255045\">@Ori Dean Bernstein (he) (W2'20)</span>!</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 194735078,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "sgorecki@gmail.com",
            "sender_full_name": "Sara Gulotta (she) (S1'20)",
            "sender_id": 263732,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Study Group",
            "submessages": [],
            "timestamp": 1587417644,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/2a6345cc359fb9370ce011d04d4965f20e0cf051?x=x&version=2",
            "client": "website",
            "content": "<p>My interesting solution to Day 15: Product of Array Except Self. Constant space and linear time using logarithms and complex math</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"kn\">import</span> <span class=\"nn\">cmath</span>\n<span class=\"k\">def</span> <span class=\"nf\">productExceptSelf</span><span class=\"p\">(</span><span class=\"n\">nums</span><span class=\"p\">):</span>\n    <span class=\"n\">pi2</span> <span class=\"o\">=</span> <span class=\"mi\">2</span><span class=\"o\">*</span><span class=\"n\">math</span><span class=\"o\">.</span><span class=\"n\">pi</span>\n    <span class=\"n\">is_negative</span> <span class=\"o\">=</span> <span class=\"k\">lambda</span> <span class=\"n\">x</span><span class=\"p\">,</span> <span class=\"n\">b</span><span class=\"p\">:</span> <span class=\"n\">math</span><span class=\"o\">.</span><span class=\"n\">isclose</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"o\">.</span><span class=\"n\">imag</span><span class=\"o\">%</span><span class=\"n\">pi2</span><span class=\"p\">,</span> <span class=\"n\">b</span><span class=\"p\">,</span> <span class=\"n\">abs_tol</span><span class=\"o\">=</span><span class=\"mf\">1e-9</span><span class=\"p\">)</span>\n    <span class=\"n\">to_real</span> <span class=\"o\">=</span> <span class=\"k\">lambda</span> <span class=\"n\">x</span><span class=\"p\">:</span> <span class=\"p\">(</span><span class=\"mi\">1</span> <span class=\"k\">if</span> <span class=\"n\">is_negative</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">)</span> <span class=\"ow\">or</span> <span class=\"n\">is_negative</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">,</span> <span class=\"n\">pi2</span><span class=\"p\">)</span> <span class=\"k\">else</span> <span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">)</span> <span class=\"o\">*</span> <span class=\"nb\">round</span><span class=\"p\">(</span><span class=\"n\">math</span><span class=\"o\">.</span><span class=\"n\">exp</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"o\">.</span><span class=\"n\">real</span><span class=\"p\">))</span>\n    <span class=\"n\">k</span> <span class=\"o\">=</span> <span class=\"n\">nums</span><span class=\"o\">.</span><span class=\"n\">count</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">)</span>\n    <span class=\"k\">if</span> <span class=\"n\">k</span> <span class=\"o\">&lt;=</span> <span class=\"mi\">1</span><span class=\"p\">:</span>\n        <span class=\"n\">log_product</span> <span class=\"o\">=</span> <span class=\"nb\">sum</span><span class=\"p\">(</span><span class=\"n\">cmath</span><span class=\"o\">.</span><span class=\"n\">log</span><span class=\"p\">(</span><span class=\"n\">num</span><span class=\"p\">)</span> <span class=\"k\">for</span> <span class=\"n\">num</span> <span class=\"ow\">in</span> <span class=\"n\">nums</span> <span class=\"k\">if</span> <span class=\"n\">num</span><span class=\"p\">)</span>\n        <span class=\"n\">product_list</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n        <span class=\"k\">for</span> <span class=\"n\">num</span> <span class=\"ow\">in</span> <span class=\"n\">nums</span><span class=\"p\">:</span>\n            <span class=\"k\">if</span> <span class=\"n\">k</span> <span class=\"o\">==</span> <span class=\"mi\">0</span><span class=\"p\">:</span>\n                <span class=\"n\">product</span> <span class=\"o\">=</span> <span class=\"n\">to_real</span><span class=\"p\">(</span><span class=\"n\">log_product</span> <span class=\"o\">-</span> <span class=\"n\">cmath</span><span class=\"o\">.</span><span class=\"n\">log</span><span class=\"p\">(</span><span class=\"n\">num</span><span class=\"p\">))</span>\n            <span class=\"k\">elif</span> <span class=\"n\">num</span><span class=\"p\">:</span>\n                <span class=\"n\">product</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>\n            <span class=\"k\">else</span><span class=\"p\">:</span>\n                <span class=\"n\">product</span> <span class=\"o\">=</span> <span class=\"n\">to_real</span><span class=\"p\">(</span><span class=\"n\">log_product</span><span class=\"p\">)</span>\n            <span class=\"n\">product_list</span> <span class=\"o\">+=</span> <span class=\"p\">[</span><span class=\"n\">product</span><span class=\"p\">]</span>\n        <span class=\"k\">return</span> <span class=\"n\">product_list</span>\n    <span class=\"k\">return</span> <span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span><span class=\"o\">*</span><span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">nums</span><span class=\"p\">)</span>\n</pre></div>\n\n\n<p><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>A</mi><mi mathvariant=\"normal\">/</mi><mi>B</mi><mo>=</mo><msup><mi>e</mi><mrow><mi>l</mi><mi>o</mi><mi>g</mi><mi>A</mi><mo>\u2212</mo><mi>l</mi><mi>o</mi><mi>g</mi><mi>B</mi></mrow></msup></mrow><annotation encoding=\"application/x-tex\"> A/B = e^{log A - log B}</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\">A</span><span class=\"mord\">/</span><span class=\"mord mathdefault\" style=\"margin-right:0.05017em;\">B</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8491079999999999em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">e</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8491079999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathdefault mtight\">o</span><span class=\"mord mathdefault mtight\" style=\"margin-right:0.03588em;\">g</span><span class=\"mord mathdefault mtight\">A</span><span class=\"mbin mtight\">\u2212</span><span class=\"mord mathdefault mtight\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathdefault mtight\">o</span><span class=\"mord mathdefault mtight\" style=\"margin-right:0.03588em;\">g</span><span class=\"mord mathdefault mtight\" style=\"margin-right:0.05017em;\">B</span></span></span></span></span></span></span></span></span></span></span></span><br>\nLet P be the product of every number excluding zeroes.</p>\n<p>Case 1: No zeroes<br>\nThe product of every number except self is P divided by self. That means the product is <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mi>e</mi><mrow><mi>l</mi><mi>o</mi><mi>g</mi><mi>P</mi><mo>\u2212</mo><mi>l</mi><mi>o</mi><mi>g</mi><mi>s</mi><mi>e</mi><mi>l</mi><mi>f</mi></mrow></msup></mrow><annotation encoding=\"application/x-tex\"> e^{log P - log self}</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8491079999999999em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">e</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8491079999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathdefault mtight\">o</span><span class=\"mord mathdefault mtight\" style=\"margin-right:0.03588em;\">g</span><span class=\"mord mathdefault mtight\" style=\"margin-right:0.13889em;\">P</span><span class=\"mbin mtight\">\u2212</span><span class=\"mord mathdefault mtight\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathdefault mtight\">o</span><span class=\"mord mathdefault mtight\" style=\"margin-right:0.03588em;\">g</span><span class=\"mord mathdefault mtight\">s</span><span class=\"mord mathdefault mtight\">e</span><span class=\"mord mathdefault mtight\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathdefault mtight\" style=\"margin-right:0.10764em;\">f</span></span></span></span></span></span></span></span></span></span></span></span>.</p>\n<p>Case 2: Exactly one zero<br>\nIf self != 0, the product of every number except self is 0. If self = 0, the product is P.</p>\n<p>Case 3: More than one zero<br>\nThe product of every number except self is 0.</p>\n<p>Account for negative numbers and rounding errors when taking logs.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 194745668,
            "is_me_message": false,
            "last_edit_timestamp": 1587426248,
            "reactions": [
                {
                    "emoji_code": "1f44f",
                    "emoji_name": "clap",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "neil.liu16@gmail.com",
                        "full_name": "Neil Liu (he) (SP2'20)",
                        "id": 276158
                    },
                    "user_id": 276158
                },
                {
                    "emoji_code": "1f44f",
                    "emoji_name": "clap",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "roland@rolandcrosby.com",
                        "full_name": "Roland Crosby (he) (SP2'20)",
                        "id": 276197
                    },
                    "user_id": 276197
                },
                {
                    "emoji_code": "1f44f",
                    "emoji_name": "clap",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "jo@johanndiedrick.com",
                        "full_name": "Johann Diedrick (he) (W2'20)",
                        "id": 255042
                    },
                    "user_id": 255042
                }
            ],
            "recipient_id": 24954,
            "sender_email": "ljeng@icloud.com",
            "sender_full_name": "Lareine Jeng (S2'16)",
            "sender_id": 9516,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "30 Day LeetCoding Challenge",
            "submessages": [],
            "timestamp": 1587425452,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/b2a6b06ba040fd7f7c2acd4d1440e7de?d=identicon&version=1",
            "client": "website",
            "content": "<p><span class=\"user-mention\" data-user-id=\"276197\">@Roland Crosby (he) (SP2'20)</span> Indeed! Here's such a solution: <a href=\"https://gist.github.com/collares/c4f7da72be490d2d4671ce76d09dffc3\" title=\"https://gist.github.com/collares/c4f7da72be490d2d4671ce76d09dffc3\">https://gist.github.com/collares/c4f7da72be490d2d4671ce76d09dffc3</a></p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 194757096,
            "is_me_message": false,
            "reactions": [
                {
                    "emoji_code": "1f44d",
                    "emoji_name": "+1",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "roland@rolandcrosby.com",
                        "full_name": "Roland Crosby (he) (SP2'20)",
                        "id": 276197
                    },
                    "user_id": 276197
                }
            ],
            "recipient_id": 24954,
            "sender_email": "mauricio@collares.org",
            "sender_full_name": "Mauricio Collares (he) (W2'19)",
            "sender_id": 158563,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "30 Day LeetCoding Challenge",
            "submessages": [],
            "timestamp": 1587438696,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/700775c1b9679bb74bd97d4ced91fadf9cc2ed17?x=x&version=2",
            "client": "website",
            "content": "<p>It seems like a bunch of people at RC are currently working through this book, present company included. I don't have anything specific to share/ask about it right now, but thought I'd start a thread here where we can discuss it.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 194819583,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "roland@rolandcrosby.com",
            "sender_full_name": "Roland Crosby (he) (SP2'20)",
            "sender_id": 276197,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Grokking Algorithms",
            "submessages": [],
            "timestamp": 1587483073,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/acd774478f8f2c577a7571a7fcfc285fd3564b31?x=x&version=4",
            "client": "ZulipElectron",
            "content": "<p>Thanks <span class=\"user-mention\" data-user-id=\"276197\">@Roland Crosby (he) (SP2'20)</span> ! I'll be starting Ch. 2 when I sit down for lunch</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 194826771,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "sarabobo@gmail.com",
            "sender_full_name": "Sara Bobo (she) (S2'20)",
            "sender_id": 277502,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Grokking Algorithms",
            "submessages": [],
            "timestamp": 1587486085,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/700775c1b9679bb74bd97d4ced91fadf9cc2ed17?x=x&version=2",
            "client": "website",
            "content": "<p>Is anyone else confused by the structure of the matrix in today's puzzle? The prompt says:</p>\n<blockquote>\n<p>BinaryMatrix.get(x, y) returns the element of the matrix at index (x, y) (0-indexed).<br>\nBinaryMatrix.dimensions() returns a list of 2 elements [n, m], which means the matrix is n * m.</p>\n</blockquote>\n<p>And the examples look like this:</p>\n<blockquote>\n<p>0 0 <br>\n1 1<br>\nInput: mat = [[0,0],[1,1]]<br>\nOutput: 0</p>\n</blockquote>\n<p>So I wrote a BinaryMatrix implementation that looks like this:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"k\">class</span> <span class=\"nc\">BinaryMatrix</span><span class=\"p\">:</span>\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">mat</span><span class=\"p\">:</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">List</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">]]</span> <span class=\"o\">=</span> <span class=\"p\">[[]]):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_mat</span> <span class=\"o\">=</span> <span class=\"n\">mat</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">get</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">x</span><span class=\"p\">:</span> <span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"n\">y</span><span class=\"p\">:</span> <span class=\"nb\">int</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"nb\">int</span><span class=\"p\">:</span>\n        <span class=\"k\">if</span> <span class=\"n\">y</span> <span class=\"o\">&gt;=</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_mat</span><span class=\"p\">)</span> <span class=\"ow\">or</span> <span class=\"n\">y</span> <span class=\"o\">&lt;</span> <span class=\"mi\">0</span><span class=\"p\">:</span>\n            <span class=\"k\">raise</span> <span class=\"ne\">IndexError</span><span class=\"p\">(</span><span class=\"s2\">&quot;y out of range&quot;</span><span class=\"p\">)</span>\n        <span class=\"k\">if</span> <span class=\"n\">x</span> <span class=\"o\">&gt;=</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_mat</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">])</span> <span class=\"ow\">or</span> <span class=\"n\">x</span> <span class=\"o\">&lt;</span> <span class=\"mi\">0</span><span class=\"p\">:</span>\n            <span class=\"k\">raise</span> <span class=\"ne\">IndexError</span><span class=\"p\">(</span><span class=\"s2\">&quot;x out of range&quot;</span><span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_mat</span><span class=\"p\">[</span><span class=\"n\">y</span><span class=\"p\">][</span><span class=\"n\">x</span><span class=\"p\">]</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">dimensions</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">]:</span>\n        <span class=\"n\">h</span> <span class=\"o\">=</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_mat</span><span class=\"p\">)</span>\n        <span class=\"n\">w</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>\n        <span class=\"k\">if</span> <span class=\"n\">h</span> <span class=\"o\">&gt;</span> <span class=\"mi\">0</span><span class=\"p\">:</span>\n            <span class=\"n\">w</span> <span class=\"o\">=</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_mat</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">])</span>\n        <span class=\"k\">return</span> <span class=\"p\">[</span><span class=\"n\">w</span><span class=\"p\">,</span> <span class=\"n\">h</span><span class=\"p\">]</span>\n</pre></div>\n\n\n<p>But I think this is flipped somehow from what the puzzle is expecting; my implementation passes my tests but fails on the real data. Does anyone else have this working?</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 194832280,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "roland@rolandcrosby.com",
            "sender_full_name": "Roland Crosby (he) (SP2'20)",
            "sender_id": 276197,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "30 Day LeetCoding Challenge",
            "submessages": [],
            "timestamp": 1587488576,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/700775c1b9679bb74bd97d4ced91fadf9cc2ed17?x=x&version=2",
            "client": "website",
            "content": "<p>(full code is <a href=\"https://github.com/rolandcrosby/leetcode/blob/master/20200421-binarymatrixone.py\" title=\"https://github.com/rolandcrosby/leetcode/blob/master/20200421-binarymatrixone.py\">here</a>)</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 194832441,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "roland@rolandcrosby.com",
            "sender_full_name": "Roland Crosby (he) (SP2'20)",
            "sender_id": 276197,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "30 Day LeetCoding Challenge",
            "submessages": [],
            "timestamp": 1587488647,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/1bd49962ff0f7e7f3ee603f8243a1015bb6690bd?x=x&version=7",
            "client": "website",
            "content": "<p>yes, I think the first coordinate is supposed to be the row and second the column in <code>get</code></p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 194832556,
            "is_me_message": false,
            "reactions": [
                {
                    "emoji_code": "1f44d",
                    "emoji_name": "+1",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "roland@rolandcrosby.com",
                        "full_name": "Roland Crosby (he) (SP2'20)",
                        "id": 276197
                    },
                    "user_id": 276197
                },
                {
                    "emoji_code": "1f44d",
                    "emoji_name": "+1",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "mauricio@collares.org",
                        "full_name": "Mauricio Collares (he) (W2'19)",
                        "id": 158563
                    },
                    "user_id": 158563
                }
            ],
            "recipient_id": 24954,
            "sender_email": "talyian@gmail.com",
            "sender_full_name": "Jimmy Tang (he) (SP2'20)",
            "sender_id": 276140,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "30 Day LeetCoding Challenge",
            "submessages": [],
            "timestamp": 1587488709,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/700775c1b9679bb74bd97d4ced91fadf9cc2ed17?x=x&version=2",
            "client": "website",
            "content": "<p>thx</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 194832637,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "roland@rolandcrosby.com",
            "sender_full_name": "Roland Crosby (he) (SP2'20)",
            "sender_id": 276197,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "30 Day LeetCoding Challenge",
            "submessages": [],
            "timestamp": 1587488754,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/1d9cae1f0cbcb78efb0fbd9650fbccb2?d=identicon&version=1",
            "client": "ZulipMobile",
            "content": "<p>One thing I\u2019ve found useful is using <code>rows</code> and <code>cols</code> explicitly as my variable names since I find i trip up with x and y</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 194875313,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "julianvmodesto@gmail.com",
            "sender_full_name": "Julian Modesto (he) (m3'20)",
            "sender_id": 276201,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "30 Day LeetCoding Challenge",
            "submessages": [],
            "timestamp": 1587512784,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/c6a4682e6a46285de64c97c77b771481?d=identicon&version=1",
            "client": "website",
            "content": "<p>yes, 'x' and 'y' are confusing when you're indexing a matrix; they're generally used the other way around. 'i' and 'j' are traditional, 'r' and 'c' are also ok.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 194875842,
            "is_me_message": false,
            "last_edit_timestamp": 1587513372,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "ori@eigenstate.org",
            "sender_full_name": "Ori Dean Bernstein (he) (W2'20)",
            "sender_id": 255045,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "30 Day LeetCoding Challenge",
            "submessages": [],
            "timestamp": 1587513357,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/b2a6b06ba040fd7f7c2acd4d1440e7de?d=identicon&version=1",
            "client": "website",
            "content": "<p>A follow-up to day 22: If all the array elements are positive, it can be done in worst-case linear time (in particular, typical uses of hash tables/dicts are off the table).</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 194931669,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "mauricio@collares.org",
            "sender_full_name": "Mauricio Collares (he) (W2'19)",
            "sender_id": 158563,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "30 Day LeetCoding Challenge",
            "submessages": [],
            "timestamp": 1587562893,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/51c7e3813e992d0a4e45cda57334d8a29aed680c?x=x&version=2",
            "client": "ZulipElectron",
            "content": "<p>I'm trying to get better at iterative patterns rather than recursive. Only because of the python call stack problem. This morning I was doing merge sort and realized you can turn it into a generator:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"k\">def</span> <span class=\"nf\">merge_sort</span><span class=\"p\">(</span><span class=\"n\">l</span><span class=\"p\">:</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">])</span> <span class=\"o\">-&gt;</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">]:</span>\n  <span class=\"n\">stack</span><span class=\"p\">:</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">List</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">]]</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">l</span><span class=\"p\">]</span>\n  <span class=\"c1\"># output: List[int] = []</span>\n  <span class=\"k\">while</span> <span class=\"n\">stack</span><span class=\"p\">:</span>\n    <span class=\"n\">sublist</span><span class=\"p\">:</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">stack</span><span class=\"o\">.</span><span class=\"n\">pop</span><span class=\"p\">()</span>\n    <span class=\"k\">if</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">sublist</span><span class=\"p\">)</span> <span class=\"o\">==</span> <span class=\"mi\">0</span><span class=\"p\">:</span>\n      <span class=\"k\">continue</span>\n    <span class=\"k\">elif</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">sublist</span><span class=\"p\">)</span> <span class=\"o\">==</span> <span class=\"mi\">1</span><span class=\"p\">:</span>\n      <span class=\"k\">yield</span> <span class=\"n\">sublist</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span>\n      <span class=\"c1\"># output.append(sublist[0])</span>\n    <span class=\"k\">else</span><span class=\"p\">:</span>\n      <span class=\"n\">pivot</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"n\">choice</span><span class=\"p\">(</span><span class=\"n\">sublist</span><span class=\"p\">)</span>\n      <span class=\"n\">greater</span><span class=\"p\">:</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">n</span> <span class=\"k\">for</span> <span class=\"n\">n</span> <span class=\"ow\">in</span> <span class=\"n\">sublist</span> <span class=\"k\">if</span> <span class=\"n\">n</span> <span class=\"o\">&gt;</span> <span class=\"n\">pivot</span><span class=\"p\">]</span>\n      <span class=\"n\">lesser</span><span class=\"p\">:</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">n</span> <span class=\"k\">for</span> <span class=\"n\">n</span> <span class=\"ow\">in</span> <span class=\"n\">sublist</span> <span class=\"k\">if</span> <span class=\"n\">n</span> <span class=\"o\">&lt;</span> <span class=\"n\">pivot</span><span class=\"p\">]</span>\n      <span class=\"n\">stack</span><span class=\"o\">.</span><span class=\"n\">extend</span><span class=\"p\">((</span><span class=\"n\">greater</span><span class=\"p\">,</span> <span class=\"p\">[</span><span class=\"n\">pivot</span><span class=\"p\">],</span> <span class=\"n\">lesser</span><span class=\"p\">))</span>\n  <span class=\"c1\"># return output</span>\n</pre></div>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 194935370,
            "is_me_message": false,
            "last_edit_timestamp": 1587564521,
            "reactions": [
                {
                    "emoji_code": "1f419",
                    "emoji_name": "octopus",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "toph.allen@gmail.com",
                        "full_name": "Toph Allen (he) (SP2'20)",
                        "id": 255104
                    },
                    "user_id": 255104
                }
            ],
            "recipient_id": 24954,
            "sender_email": "studio@robertdelanghe.com",
            "sender_full_name": "Bobby DeLanghe (he) (F2'19)",
            "sender_id": 240584,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Merge Sort Generator",
            "submessages": [],
            "timestamp": 1587564301,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/b2a6b06ba040fd7f7c2acd4d1440e7de?d=identicon&version=1",
            "client": "website",
            "content": "<p><span class=\"user-mention\" data-user-id=\"240584\">@Robert James DeLanghe (he) (F2'19)</span> I like this idea!</p>\n<p>One thing I realized only very recently about Quicksort (which is what I think you're doing?) is that Hoare's original paper [1, second page, end of first column] specifies an order of processing to avoid problems with the call stack. In fact, his description is purely iterative and uses only O(log n) extra memory.</p>\n<p>In his description, Quicksort always maintains a \"currently being processed subarray\", which starts out being the whole array. To process it, you pick a pivot, partition the subarray elements according to this pivot, postpone the processing of the larger of the two new subarrays (that is, push it into a stack/queue), and make smaller of the two subarrays the new current subarray. When the current subarray becomes trivially sorted, you choose a postponed subarray (pop the stack, say) and set it as the new current subarray. This is another nice way to implement it iteratively, and if you follow a similar strategy in a recursive solution it solves the call stack problem too.</p>\n<p>There are two other neat things in this paper: The footnote that says \"The claim to a negative sorting time in the reference is, of course, due to a misprint.\", and the table comparing running times for Mergesort and Quicksort, where Mergesort was unable to sort a 1,500-element array due to a lack of extra memory.</p>\n<p>[1] <a href=\"https://academic.oup.com/comjnl/article/5/1/10/395338\" title=\"https://academic.oup.com/comjnl/article/5/1/10/395338\">https://academic.oup.com/comjnl/article/5/1/10/395338</a></p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 194942233,
            "is_me_message": false,
            "last_edit_timestamp": 1587570770,
            "reactions": [
                {
                    "emoji_code": "1f40d",
                    "emoji_name": "snake",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "studio@robertdelanghe.com",
                        "full_name": "Bobby DeLanghe (he) (F2'19)",
                        "id": 240584
                    },
                    "user_id": 240584
                }
            ],
            "recipient_id": 24954,
            "sender_email": "mauricio@collares.org",
            "sender_full_name": "Mauricio Collares (he) (W2'19)",
            "sender_id": 158563,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Merge Sort Generator",
            "submessages": [],
            "timestamp": 1587566797,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/6948faab4e5ab8c9d107dba94c9f00e0?d=identicon&version=1",
            "client": "ZulipElectron",
            "content": "<p>After looking at all the hints, I finally came up with an implementation for today's: <a href=\"https://gist.github.com/AsaNeedle/6c288f6aceac2b69f4995e935fd62dc7\" title=\"https://gist.github.com/AsaNeedle/6c288f6aceac2b69f4995e935fd62dc7\">https://gist.github.com/AsaNeedle/6c288f6aceac2b69f4995e935fd62dc7</a></p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 194954467,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "asa@cottageclass.com",
            "sender_full_name": "Asa Needle (he/they) (S1'20)",
            "sender_id": 263510,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "30 Day LeetCoding Challenge",
            "submessages": [],
            "timestamp": 1587571839,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/6b283009bf4375b73d9628bb245367165da5c360?x=x&version=2",
            "client": "ZulipElectron",
            "content": "<p>day 21: <a href=\"https://github.com/anthonyabeo/leetcode-30-day-challenge/blob/master/leftmost_col_with_one.py\" title=\"https://github.com/anthonyabeo/leetcode-30-day-challenge/blob/master/leftmost_col_with_one.py\">https://github.com/anthonyabeo/leetcode-30-day-challenge/blob/master/leftmost_col_with_one.py</a><br>\nthe code look hacky, though.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 195004743,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "anthonyabeo@gmail.com",
            "sender_full_name": "Anthony Anabila Abeo (he) (SP2'20)",
            "sender_id": 276302,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "30 Day LeetCoding Challenge",
            "submessages": [],
            "timestamp": 1587599246,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/3623090b52bac8ecada233272cb050d05771d590?x=x&version=2",
            "client": "ZulipElectron",
            "content": "<p>Day 22: <a href=\"https://github.com/SourenP/leetcode/blob/master/30_day_challenge/solutions_c/src/subarray_sum_equals_k.c\" title=\"https://github.com/SourenP/leetcode/blob/master/30_day_challenge/solutions_c/src/subarray_sum_equals_k.c\">https://github.com/SourenP/leetcode/blob/master/30_day_challenge/solutions_c/src/subarray_sum_equals_k.c</a></p>\n<p>That was a fun one :D</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 195009715,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "souren@papazian.info",
            "sender_full_name": "Souren Papazian (he) (SP2'20)",
            "sender_id": 255060,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "30 Day LeetCoding Challenge",
            "submessages": [],
            "timestamp": 1587604109,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/3623090b52bac8ecada233272cb050d05771d590?x=x&version=2",
            "client": "ZulipElectron",
            "content": "<p>Day 21 (used hint 1): <a href=\"https://github.com/SourenP/leetcode/blob/master/30_day_challenge/solutions_cpp/src/leftmost_column_with_at_least_a_one.hpp\" title=\"https://github.com/SourenP/leetcode/blob/master/30_day_challenge/solutions_cpp/src/leftmost_column_with_at_least_a_one.hpp\">https://github.com/SourenP/leetcode/blob/master/30_day_challenge/solutions_cpp/src/leftmost_column_with_at_least_a_one.hpp</a></p>\n<p><span class=\"user-mention\" data-user-id=\"276302\">@Anthony Anabila Abeo (he) (SP2'20)</span>  mine also felt hacky :S <br>\nbecause of edge case ifs</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 195009752,
            "is_me_message": false,
            "last_edit_timestamp": 1587604290,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "souren@papazian.info",
            "sender_full_name": "Souren Papazian (he) (SP2'20)",
            "sender_id": 255060,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "30 Day LeetCoding Challenge",
            "submessages": [],
            "timestamp": 1587604197,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/3623090b52bac8ecada233272cb050d05771d590?x=x&version=2",
            "client": "ZulipElectron",
            "content": "<p>oh your solution is much nicer :D</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 195009833,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "souren@papazian.info",
            "sender_full_name": "Souren Papazian (he) (SP2'20)",
            "sender_id": 255060,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "30 Day LeetCoding Challenge",
            "submessages": [],
            "timestamp": 1587604275,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/6ae811d40ff8600863755aa510198b5144ebff2c?x=x&version=2",
            "client": "website",
            "content": "<p>Day 20: <a href=\"https://github.com/jdiedrick/30-day-leetcoding-challenge-april-2020/blob/master/20_bst_from_preorder.py\" title=\"https://github.com/jdiedrick/30-day-leetcoding-challenge-april-2020/blob/master/20_bst_from_preorder.py\">https://github.com/jdiedrick/30-day-leetcoding-challenge-april-2020/blob/master/20_bst_from_preorder.py</a> Day 21: <a href=\"https://github.com/jdiedrick/30-day-leetcoding-challenge-april-2020/blob/master/21_leftmost_column_at_least_one.py\" title=\"https://github.com/jdiedrick/30-day-leetcoding-challenge-april-2020/blob/master/21_leftmost_column_at_least_one.py\">https://github.com/jdiedrick/30-day-leetcoding-challenge-april-2020/blob/master/21_leftmost_column_at_least_one.py</a> Day 22: <a href=\"https://github.com/jdiedrick/30-day-leetcoding-challenge-april-2020/blob/master/22_subarray_sum_equals_k.py\" title=\"https://github.com/jdiedrick/30-day-leetcoding-challenge-april-2020/blob/master/22_subarray_sum_equals_k.py\">https://github.com/jdiedrick/30-day-leetcoding-challenge-april-2020/blob/master/22_subarray_sum_equals_k.py</a></p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 195013339,
            "is_me_message": false,
            "last_edit_timestamp": 1587614244,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "jo@johanndiedrick.com",
            "sender_full_name": "Johann Diedrick (he) (W2'20)",
            "sender_id": 255042,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "30 Day LeetCoding Challenge",
            "submessages": [],
            "timestamp": 1587609146,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/6ae811d40ff8600863755aa510198b5144ebff2c?x=x&version=2",
            "client": "website",
            "content": "<p>I also came across the Number of Islands questions again in a mock interview and I came up with a solution that doesn't modify the input grid by using some extra space (storing 1s in a set) and doing a second pass of the grid to get coordinates and checking if that x, y is in the set. If so, run flood fill from that coordinate. Poof! And the original grid is intact :)</p>\n<div class=\"codehilite\"><pre><span></span>def get_number_of_islands(binaryMatrix):\n  width = len(binaryMatrix)\n  height = len(binaryMatrix[0])\n\n  count = 0\n\n  found_land = set()\n\n  for x in range(width):\n    for y in range(height):\n      curr_pos = binaryMatrix[x][y]\n\n      if curr_pos == 1:\n        # we found land\n        found_land.add((x, y))\n\n  for x in range(width):\n    for y in range(height):\n      if (x, y) in found_land:\n        count += 1\n        flood_fill_set(found_land, (x, y))\n\n  return count\n\ndef flood_fill_set(set, pos):\n  if pos not in set:\n    return\n\n  set.remove(pos)\n\n  x, y = pos\n  flood_fill_set(set, (x + 1, y))\n  flood_fill_set(set, (x - 1, y))\n  flood_fill_set(set, (x, y + 1))\n  flood_fill_set(set, (x, y - 1))\n</pre></div>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 195013668,
            "is_me_message": false,
            "last_edit_timestamp": 1587609864,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "jo@johanndiedrick.com",
            "sender_full_name": "Johann Diedrick (he) (W2'20)",
            "sender_id": 255042,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "30 Day LeetCoding Challenge",
            "submessages": [],
            "timestamp": 1587609626,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/b2a6b06ba040fd7f7c2acd4d1440e7de?d=identicon&version=1",
            "client": "website",
            "content": "<p>Day 23: <a href=\"https://gist.github.com/collares/917173659077f4fa9b640dc6589e4772\" title=\"https://gist.github.com/collares/917173659077f4fa9b640dc6589e4772\">https://gist.github.com/collares/917173659077f4fa9b640dc6589e4772</a> -- I am very interested in seeing other approaches!</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 195069919,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "mauricio@collares.org",
            "sender_full_name": "Mauricio Collares (he) (W2'19)",
            "sender_id": 158563,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "30 Day LeetCoding Challenge",
            "submessages": [],
            "timestamp": 1587652590,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/c8cec51f2fb41f1bbf0183ec6ada0450880a67a6?x=x&version=2",
            "client": "ZulipElectron",
            "content": "<p><span class=\"user-group-mention\" data-user-group-id=\"41\">@Currently at RC</span>  Join us in <a href=\"https://www.recurse.com/zoom/hopper\" title=\"https://www.recurse.com/zoom/hopper\">Hopper</a> immediately after AM Check-In! Today <span class=\"user-mention\" data-user-id=\"255045\">@Ori Dean Bernstein (he) (W2'20)</span> is going to be teaching us about bloom filters and other hash-related things!</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 195071361,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "sgorecki@gmail.com",
            "sender_full_name": "Sara Gulotta (she) (S1'20)",
            "sender_id": 263732,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Study Group",
            "submessages": [],
            "timestamp": 1587653118,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/6948faab4e5ab8c9d107dba94c9f00e0?d=identicon&version=1",
            "client": "ZulipElectron",
            "content": "<p>Day 23: <a href=\"https://gist.github.com/AsaNeedle/b971ff2a0179c1af0b4d42954d313437\" title=\"https://gist.github.com/AsaNeedle/b971ff2a0179c1af0b4d42954d313437\">https://gist.github.com/AsaNeedle/b971ff2a0179c1af0b4d42954d313437</a><br>\nI had fun with this and feel pretty good about it!</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 195080580,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "asa@cottageclass.com",
            "sender_full_name": "Asa Needle (he/they) (S1'20)",
            "sender_id": 263510,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "30 Day LeetCoding Challenge",
            "submessages": [],
            "timestamp": 1587656819,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/6948faab4e5ab8c9d107dba94c9f00e0?d=identicon&version=1",
            "client": "ZulipElectron",
            "content": "<p>I haven't done a lot with bitshifting at all, so i just made it a string and it seems to be just as fast,  if way less elegant</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 195080766,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "asa@cottageclass.com",
            "sender_full_name": "Asa Needle (he/they) (S1'20)",
            "sender_id": 263510,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "30 Day LeetCoding Challenge",
            "submessages": [],
            "timestamp": 1587656887,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/700775c1b9679bb74bd97d4ced91fadf9cc2ed17?x=x&version=2",
            "client": "website",
            "content": "<p><span class=\"user-mention\" data-user-id=\"158563\">@Mauricio Collares (he) (W2'19)</span> could you explain how your solution works?</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 195080958,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "roland@rolandcrosby.com",
            "sender_full_name": "Roland Crosby (he) (SP2'20)",
            "sender_id": 276197,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "30 Day LeetCoding Challenge",
            "submessages": [],
            "timestamp": 1587656985,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/c6a4682e6a46285de64c97c77b771481?d=identicon&version=1",
            "client": "website",
            "content": "<p>So, tossing this in as a topic that could be covered -- augmenting data structures.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 195095543,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "ori@eigenstate.org",
            "sender_full_name": "Ori Dean Bernstein (he) (W2'20)",
            "sender_id": 255045,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Study Group",
            "submessages": [],
            "timestamp": 1587663683,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/b2a6b06ba040fd7f7c2acd4d1440e7de?d=identicon&version=1",
            "client": "website",
            "content": "<p>Sure! First let me describe what the answer is, then how I compute it. Let's assume wlog that m &lt; n (our answer will be symmetric in m and n, and we can check the case m == n separately later). Writing m, n and the answer in binary, we have</p>\n<div class=\"codehilite\"><pre><span></span>  m = YYYYY0____\n  n = YYYYY1____\nans = YYYYY00000\n           ^\n           |\n</pre></div>\n\n\n<p>where the prefixes (Ys) are equal in the three numbers and the underscores denote irrelevant digits. That is, to obtain the answer, you zero out all bits starting from the first bit where m and n differ (indicated by the arrow). This is because all numbers in the interval [m, n] start out with the prefix YYYYY, so the AND of all of them also does. Moreover, the numbers \"YYYYY011...11\" and \"YYYYY100...00\" are both in the interval, so all the other digits must be 0.</p>\n<p>So now the question is how to zero out the right bits of m. Our goal will be to get a mask of the form x = 0...01...1, where the most significant 1 is in the position pointed to by the arrow. If we have this, then the can clear out the bits of m after the first differing 1 by doing m &amp; ~x (or n &amp; ~x, since m and n agree on the relevant prefix). If we start out with x = m^n, then we don't have this property, but at least the most significant bit of 1 is in the desired position.</p>\n<div class=\"codehilite\"><pre><span></span>  m = YYYYY0____\n  n = YYYYY1____\n  x = 000001____\n</pre></div>\n\n\n<p>If you OR x with x&gt;&gt;1, then you get a binary number with a block of 1s of size (at least) 2 starting in the right place. If you then OR x with x&gt;&gt;2, you get a block of size at least 4, and so on:</p>\n<div class=\"codehilite\"><pre><span></span>  x = 000001____\n                 applying x |= x &gt;&gt; 1, we have\n  x = 0000011___\n                 applying x |= x &gt;&gt; 2, we have\n  x = 000001111_\n                 applying x |= x &gt;&gt; 4, we have\n  x = 0000011111\n</pre></div>\n\n\n<p>Since we are dealing with 32-bit numbers, after 5 block size doublings we will get a number of the form 0...01...1. This is exactly the mask we desired.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 195102217,
            "is_me_message": false,
            "last_edit_timestamp": 1587672811,
            "reactions": [
                {
                    "emoji_code": "1f525",
                    "emoji_name": "fire",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "talyian@gmail.com",
                        "full_name": "Jimmy Tang (he) (SP2'20)",
                        "id": 276140
                    },
                    "user_id": 276140
                }
            ],
            "recipient_id": 24954,
            "sender_email": "mauricio@collares.org",
            "sender_full_name": "Mauricio Collares (he) (W2'19)",
            "sender_id": 158563,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "30 Day LeetCoding Challenge",
            "submessages": [],
            "timestamp": 1587667153,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/b2a6b06ba040fd7f7c2acd4d1440e7de?d=identicon&version=1",
            "client": "website",
            "content": "<p>I guess this is a good place to mention <a href=\"https://graphics.stanford.edu/~seander/bithacks.html\" title=\"https://graphics.stanford.edu/~seander/bithacks.html\">https://graphics.stanford.edu/~seander/bithacks.html</a> and <a href=\"https://en.wikipedia.org/wiki/Hacker%27s_Delight\" title=\"https://en.wikipedia.org/wiki/Hacker%27s_Delight\">https://en.wikipedia.org/wiki/Hacker%27s_Delight</a> if you are interested in stuff like this</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 195103660,
            "is_me_message": false,
            "last_edit_timestamp": 1587667973,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "mauricio@collares.org",
            "sender_full_name": "Mauricio Collares (he) (W2'19)",
            "sender_id": 158563,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "30 Day LeetCoding Challenge",
            "submessages": [],
            "timestamp": 1587667818,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/700775c1b9679bb74bd97d4ced91fadf9cc2ed17?x=x&version=2",
            "client": "website",
            "content": "<p>awesome, thanks!</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 195106419,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "roland@rolandcrosby.com",
            "sender_full_name": "Roland Crosby (he) (SP2'20)",
            "sender_id": 276197,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "30 Day LeetCoding Challenge",
            "submessages": [],
            "timestamp": 1587669219,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/6b283009bf4375b73d9628bb245367165da5c360?x=x&version=2",
            "client": "ZulipElectron",
            "content": "<p>Day 24: LRU <a href=\"https://github.com/anthonyabeo/leetcode-30-day-challenge/blob/master/lru.py\" title=\"https://github.com/anthonyabeo/leetcode-30-day-challenge/blob/master/lru.py\">https://github.com/anthonyabeo/leetcode-30-day-challenge/blob/master/lru.py</a></p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 195185962,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "anthonyabeo@gmail.com",
            "sender_full_name": "Anthony Anabila Abeo (he) (SP2'20)",
            "sender_id": 276302,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "30 Day LeetCoding Challenge",
            "submessages": [],
            "timestamp": 1587734223,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/700775c1b9679bb74bd97d4ced91fadf9cc2ed17?x=x&version=2",
            "client": "website",
            "content": "<p>is it cheating to use collections.OrderedDict for today's? i dunno, but it sure is satisfying<br>\n<a href=\"/user_uploads/13/U100HhVTMJQ3k3w6DmcqaIko/image.png\" title=\"image.png\">image.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/13/U100HhVTMJQ3k3w6DmcqaIko/image.png\" title=\"image.png\"><img src=\"/user_uploads/13/U100HhVTMJQ3k3w6DmcqaIko/image.png\"></a></div>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 195232680,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "roland@rolandcrosby.com",
            "sender_full_name": "Roland Crosby (he) (SP2'20)",
            "sender_id": 276197,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "30 Day LeetCoding Challenge",
            "submessages": [],
            "timestamp": 1587755829,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/3623090b52bac8ecada233272cb050d05771d590?x=x&version=2",
            "client": "ZulipElectron",
            "content": "<p>(deleted)</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 195269457,
            "is_me_message": false,
            "last_edit_timestamp": 1587794615,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "souren@papazian.info",
            "sender_full_name": "Souren Papazian (he) (SP2'20)",
            "sender_id": 255060,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "30 Day LeetCoding Challenge",
            "submessages": [],
            "timestamp": 1587793016,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/2a6345cc359fb9370ce011d04d4965f20e0cf051?x=x&version=2",
            "client": "website",
            "content": "<p>Day 17 - Number of Islands - No recursion</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"k\">def</span> <span class=\"nf\">numIslands</span><span class=\"p\">(</span><span class=\"n\">grid</span><span class=\"p\">):</span>\n    <span class=\"n\">counter</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>\n    <span class=\"k\">if</span> <span class=\"n\">grid</span><span class=\"p\">:</span>\n        <span class=\"n\">n</span><span class=\"p\">,</span> <span class=\"n\">m</span> <span class=\"o\">=</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">grid</span><span class=\"p\">),</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">grid</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">])</span>\n        <span class=\"n\">visited</span> <span class=\"o\">=</span> <span class=\"nb\">set</span><span class=\"p\">()</span>\n        <span class=\"k\">for</span> <span class=\"n\">cell</span> <span class=\"ow\">in</span> <span class=\"n\">itertools</span><span class=\"o\">.</span><span class=\"n\">product</span><span class=\"p\">(</span><span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"n\">n</span><span class=\"p\">),</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"n\">m</span><span class=\"p\">)):</span>\n            <span class=\"n\">i</span><span class=\"p\">,</span> <span class=\"n\">j</span> <span class=\"o\">=</span> <span class=\"n\">cell</span>\n            <span class=\"k\">if</span> <span class=\"n\">grid</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">][</span><span class=\"n\">j</span><span class=\"p\">]</span> <span class=\"o\">==</span> <span class=\"s1\">&#39;1&#39;</span> <span class=\"ow\">and</span> <span class=\"n\">cell</span> <span class=\"ow\">not</span> <span class=\"ow\">in</span> <span class=\"n\">visited</span><span class=\"p\">:</span>\n                <span class=\"n\">stack</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">cell</span><span class=\"p\">]</span>\n                <span class=\"n\">visited</span><span class=\"o\">.</span><span class=\"n\">add</span><span class=\"p\">(</span><span class=\"n\">cell</span><span class=\"p\">)</span>\n                <span class=\"k\">while</span> <span class=\"n\">stack</span><span class=\"p\">:</span>\n                    <span class=\"n\">i</span><span class=\"p\">,</span> <span class=\"n\">j</span> <span class=\"o\">=</span> <span class=\"n\">stack</span><span class=\"o\">.</span><span class=\"n\">pop</span><span class=\"p\">()</span>\n                    <span class=\"k\">for</span> <span class=\"n\">v</span> <span class=\"ow\">in</span> <span class=\"p\">[(</span><span class=\"n\">i</span> <span class=\"o\">-</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"n\">j</span><span class=\"p\">),</span> <span class=\"p\">(</span><span class=\"n\">i</span><span class=\"p\">,</span> <span class=\"n\">j</span> <span class=\"o\">-</span> <span class=\"mi\">1</span><span class=\"p\">),</span> <span class=\"p\">(</span><span class=\"n\">i</span><span class=\"p\">,</span> <span class=\"n\">j</span> <span class=\"o\">+</span> <span class=\"mi\">1</span><span class=\"p\">),</span> <span class=\"p\">(</span><span class=\"n\">i</span> <span class=\"o\">+</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"n\">j</span><span class=\"p\">)]:</span>\n                        <span class=\"n\">r</span><span class=\"p\">,</span> <span class=\"n\">c</span> <span class=\"o\">=</span> <span class=\"n\">v</span>\n                        <span class=\"k\">if</span> <span class=\"mi\">0</span> <span class=\"o\">&lt;=</span> <span class=\"n\">r</span> <span class=\"o\">&lt;</span> <span class=\"n\">n</span> <span class=\"ow\">and</span> <span class=\"mi\">0</span> <span class=\"o\">&lt;=</span> <span class=\"n\">c</span> <span class=\"o\">&lt;</span> <span class=\"n\">m</span> <span class=\"ow\">and</span> <span class=\"n\">grid</span><span class=\"p\">[</span><span class=\"n\">r</span><span class=\"p\">][</span><span class=\"n\">c</span><span class=\"p\">]</span> <span class=\"o\">==</span> <span class=\"s1\">&#39;1&#39;</span> <span class=\"ow\">and</span> <span class=\"n\">v</span> <span class=\"ow\">not</span> <span class=\"ow\">in</span> <span class=\"n\">visited</span><span class=\"p\">:</span>\n                            <span class=\"n\">stack</span> <span class=\"o\">+=</span> <span class=\"p\">[</span><span class=\"n\">v</span><span class=\"p\">]</span>\n                            <span class=\"n\">visited</span><span class=\"o\">.</span><span class=\"n\">add</span><span class=\"p\">(</span><span class=\"n\">v</span><span class=\"p\">)</span>\n                <span class=\"n\">counter</span> <span class=\"o\">+=</span> <span class=\"mi\">1</span>\n    <span class=\"k\">return</span> <span class=\"n\">counter</span>\n</pre></div>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 195356980,
            "is_me_message": false,
            "last_edit_timestamp": 1587941963,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "ljeng@icloud.com",
            "sender_full_name": "Lareine Jeng (S2'16)",
            "sender_id": 9516,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "30 Day LeetCoding Challenge",
            "submessages": [],
            "timestamp": 1587941924,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/0789f8732b00c0952a58c7e4de8ae016e1bfbe20?x=x&version=2",
            "client": "website",
            "content": "<p>day 27 - kinda verbose DP soln</p>\n<p><a href=\"https://github.com/nh2liu/lc-april-recurse/blob/master/27-maximal-squares.py\" title=\"https://github.com/nh2liu/lc-april-recurse/blob/master/27-maximal-squares.py\">https://github.com/nh2liu/lc-april-recurse/blob/master/27-maximal-squares.py</a></p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 195456439,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "neil.liu16@gmail.com",
            "sender_full_name": "Neil Liu (he) (SP2'20)",
            "sender_id": 276158,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "30 Day LeetCoding Challenge",
            "submessages": [],
            "timestamp": 1588011729,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/b2a6b06ba040fd7f7c2acd4d1440e7de?d=identicon&version=1",
            "client": "website",
            "content": "<p>For LRUCache, here's an implementation with O(1) average-time get and put inspired by CPython's collections.OrderedDict implementation: <a href=\"https://gist.github.com/collares/d457d7886cd645a95300708bbc16c11b\" title=\"https://gist.github.com/collares/d457d7886cd645a95300708bbc16c11b\">https://gist.github.com/collares/d457d7886cd645a95300708bbc16c11b</a></p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 195494659,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "mauricio@collares.org",
            "sender_full_name": "Mauricio Collares (he) (W2'19)",
            "sender_id": 158563,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "30 Day LeetCoding Challenge",
            "submessages": [],
            "timestamp": 1588038618,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/2a6345cc359fb9370ce011d04d4965f20e0cf051?x=x&version=2",
            "client": "website",
            "content": "<p>Day 26: Longest Common Subsequence<br>\nO(min(m, n)) space</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"k\">def</span> <span class=\"nf\">longestCommonSubsequence</span><span class=\"p\">(</span><span class=\"n\">text1</span><span class=\"p\">,</span> <span class=\"n\">text2</span><span class=\"p\">):</span>\n    <span class=\"n\">text1</span><span class=\"p\">,</span> <span class=\"n\">text2</span> <span class=\"o\">=</span> <span class=\"nb\">sorted</span><span class=\"p\">([</span><span class=\"n\">text1</span><span class=\"p\">,</span> <span class=\"n\">text2</span><span class=\"p\">],</span> <span class=\"n\">key</span><span class=\"o\">=</span><span class=\"nb\">len</span><span class=\"p\">,</span> <span class=\"n\">reverse</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n    <span class=\"n\">n</span><span class=\"p\">,</span> <span class=\"n\">m</span> <span class=\"o\">=</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">text1</span><span class=\"p\">),</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">text2</span><span class=\"p\">)</span>\n    <span class=\"n\">dp</span> <span class=\"o\">=</span> <span class=\"p\">[[</span><span class=\"mi\">0</span><span class=\"p\">]</span><span class=\"o\">*</span><span class=\"n\">m</span> <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"p\">)]</span>\n    <span class=\"n\">dp</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">][</span><span class=\"mi\">0</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"nb\">int</span><span class=\"p\">(</span><span class=\"n\">text1</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span> <span class=\"o\">==</span> <span class=\"n\">text2</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">])</span>\n    <span class=\"k\">for</span> <span class=\"n\">j</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"n\">m</span><span class=\"p\">):</span>\n        <span class=\"n\">dp</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">][</span><span class=\"n\">j</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"nb\">max</span><span class=\"p\">(</span><span class=\"n\">dp</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">][</span><span class=\"n\">j</span> <span class=\"o\">-</span> <span class=\"mi\">1</span><span class=\"p\">],</span> <span class=\"nb\">int</span><span class=\"p\">(</span><span class=\"n\">text1</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span> <span class=\"o\">==</span> <span class=\"n\">text2</span><span class=\"p\">[</span><span class=\"n\">j</span><span class=\"p\">]))</span>\n    <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"n\">n</span><span class=\"p\">):</span>\n        <span class=\"n\">dp</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">][</span><span class=\"mi\">0</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"nb\">max</span><span class=\"p\">(</span><span class=\"n\">dp</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">][</span><span class=\"mi\">0</span><span class=\"p\">],</span> <span class=\"nb\">int</span><span class=\"p\">(</span><span class=\"n\">text1</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">]</span> <span class=\"o\">==</span> <span class=\"n\">text2</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]))</span>\n        <span class=\"k\">for</span> <span class=\"n\">j</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"n\">m</span><span class=\"p\">):</span>\n            <span class=\"n\">dp</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">][</span><span class=\"n\">j</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"nb\">max</span><span class=\"p\">(</span><span class=\"n\">dp</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">][</span><span class=\"n\">j</span> <span class=\"o\">-</span> <span class=\"mi\">1</span><span class=\"p\">]</span> <span class=\"o\">+</span> <span class=\"nb\">int</span><span class=\"p\">(</span><span class=\"n\">text1</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">]</span> <span class=\"o\">==</span> <span class=\"n\">text2</span><span class=\"p\">[</span><span class=\"n\">j</span><span class=\"p\">]),</span> <span class=\"n\">dp</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">][</span><span class=\"n\">j</span><span class=\"p\">],</span> <span class=\"n\">dp</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">][</span><span class=\"n\">j</span> <span class=\"o\">-</span> <span class=\"mi\">1</span><span class=\"p\">])</span>\n        <span class=\"n\">dp</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">dp</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">][:]</span>\n    <span class=\"k\">return</span> <span class=\"n\">dp</span><span class=\"p\">[</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">][</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">]</span>\n</pre></div>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 195501531,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "ljeng@icloud.com",
            "sender_full_name": "Lareine Jeng (S2'16)",
            "sender_id": 9516,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "30 Day LeetCoding Challenge",
            "submessages": [],
            "timestamp": 1588049580,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/c8cec51f2fb41f1bbf0183ec6ada0450880a67a6?x=x&version=2",
            "client": "ZulipElectron",
            "content": "<p><span class=\"user-group-mention\" data-user-group-id=\"41\">@Currently at RC</span> Does anyone have any topics that they'd like to present on tomorrow?</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 195753967,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "sgorecki@gmail.com",
            "sender_full_name": "Sara Gulotta (she) (S1'20)",
            "sender_id": 263732,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Study Group",
            "submessages": [],
            "timestamp": 1588186390,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/1bd49962ff0f7e7f3ee603f8243a1015bb6690bd?x=x&version=7",
            "client": "website",
            "content": "<p>I have some material on floating point numbers and approximate square roots, which may be interesting to people who have used floating point numbers before but never looked at IEEE-754</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 195754405,
            "is_me_message": false,
            "reactions": [
                {
                    "emoji_code": "1f419",
                    "emoji_name": "octopus",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "kseniaroselake@gmail.com",
                        "full_name": "Ksenia Rose Lake (she) (m2'20)",
                        "id": 264905
                    },
                    "user_id": 264905
                },
                {
                    "emoji_code": "1f419",
                    "emoji_name": "octopus",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "driijko@gmail.com",
                        "full_name": "Dree Ko (they) (SP2'20)",
                        "id": 257188
                    },
                    "user_id": 257188
                },
                {
                    "emoji_code": "1f419",
                    "emoji_name": "octopus",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "asa@cottageclass.com",
                        "full_name": "Asa Needle (he/they) (S1'20)",
                        "id": 263510
                    },
                    "user_id": 263510
                },
                {
                    "emoji_code": "1f419",
                    "emoji_name": "octopus",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "dylnuge@gmail.com",
                        "full_name": "Dylan Nugent (he) (S1'20)",
                        "id": 263512
                    },
                    "user_id": 263512
                }
            ],
            "recipient_id": 24954,
            "sender_email": "talyian@gmail.com",
            "sender_full_name": "Jimmy Tang (he) (SP2'20)",
            "sender_id": 276140,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Study Group",
            "submessages": [],
            "timestamp": 1588186592,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/c8cec51f2fb41f1bbf0183ec6ada0450880a67a6?x=x&version=2",
            "client": "ZulipElectron",
            "content": "<p><span class=\"user-mention\" data-user-id=\"276140\">@Jimmy Tang (he) (SP2'20)</span> That would be great, thanks! <span aria-label=\"slight smile\" class=\"emoji emoji-1f642\" role=\"img\" title=\"slight smile\">:slight_smile:</span></p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 195758027,
            "is_me_message": false,
            "reactions": [
                {
                    "emoji_code": "2795",
                    "emoji_name": "plus",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "dylnuge@gmail.com",
                        "full_name": "Dylan Nugent (he) (S1'20)",
                        "id": 263512
                    },
                    "user_id": 263512
                }
            ],
            "recipient_id": 24954,
            "sender_email": "sgorecki@gmail.com",
            "sender_full_name": "Sara Gulotta (she) (S1'20)",
            "sender_id": 263732,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Study Group",
            "submessages": [],
            "timestamp": 1588188185,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/c8cec51f2fb41f1bbf0183ec6ada0450880a67a6?x=x&version=2",
            "client": "ZulipElectron",
            "content": "<p><span class=\"user-group-mention\" data-user-group-id=\"41\">@Currently at RC</span> Algorithms Study Group is <em>today</em> in <strong>17 minutes</strong>! Come join us in <a href=\"https://www.recurse.com/zoom/hopper\" title=\"https://www.recurse.com/zoom/hopper\">Hopper</a> and learn from <span class=\"user-mention\" data-user-id=\"276140\">@Jimmy Tang (he) (SP2'20)</span> as he tells us about floating point numbers and approximate square roots!</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 195853865,
            "is_me_message": false,
            "last_edit_timestamp": 1588259627,
            "reactions": [
                {
                    "emoji_code": "1f419",
                    "emoji_name": "octopus",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "roland@rolandcrosby.com",
                        "full_name": "Roland Crosby (he) (SP2'20)",
                        "id": 276197
                    },
                    "user_id": 276197
                },
                {
                    "emoji_code": "1f419",
                    "emoji_name": "octopus",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "talyian@gmail.com",
                        "full_name": "Jimmy Tang (he) (SP2'20)",
                        "id": 276140
                    },
                    "user_id": 276140
                }
            ],
            "recipient_id": 24954,
            "sender_email": "sgorecki@gmail.com",
            "sender_full_name": "Sara Gulotta (she) (S1'20)",
            "sender_id": 263732,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Study Group",
            "submessages": [],
            "timestamp": 1588259614,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/700775c1b9679bb74bd97d4ced91fadf9cc2ed17?x=x&version=2",
            "client": "website",
            "content": "<p>if you enjoyed jimmy's presentation you may also enjoy <a href=\"http://tom7.org/nand/nand.pdf\" title=\"http://tom7.org/nand/nand.pdf\">http://tom7.org/nand/nand.pdf</a></p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 195864707,
            "is_me_message": false,
            "reactions": [
                {
                    "emoji_code": "2764",
                    "emoji_name": "heart",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "talyian@gmail.com",
                        "full_name": "Jimmy Tang (he) (SP2'20)",
                        "id": 276140
                    },
                    "user_id": 276140
                }
            ],
            "recipient_id": 24954,
            "sender_email": "roland@rolandcrosby.com",
            "sender_full_name": "Roland Crosby (he) (SP2'20)",
            "sender_id": 276197,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Study Group",
            "submessages": [],
            "timestamp": 1588263968,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/1bd49962ff0f7e7f3ee603f8243a1015bb6690bd?x=x&version=7",
            "client": "website",
            "content": "<p>Slides for Floating Point Numbers / Fast Inverse Square Root are at <a href=\"https://drive.google.com/open?id=1Hb4RQJCyoyx81bqHQzDen3055sMJA8d9\" title=\"https://drive.google.com/open?id=1Hb4RQJCyoyx81bqHQzDen3055sMJA8d9\">https://drive.google.com/open?id=1Hb4RQJCyoyx81bqHQzDen3055sMJA8d9</a></p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 195865926,
            "is_me_message": false,
            "reactions": [
                {
                    "emoji_code": "14181",
                    "emoji_name": "thank-you-word",
                    "reaction_type": "realm_emoji",
                    "user": {
                        "email": "sgorecki@gmail.com",
                        "full_name": "Sara Gulotta (she) (S1'20)",
                        "id": 263732
                    },
                    "user_id": 263732
                }
            ],
            "recipient_id": 24954,
            "sender_email": "talyian@gmail.com",
            "sender_full_name": "Jimmy Tang (he) (SP2'20)",
            "sender_id": 276140,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Study Group",
            "submessages": [],
            "timestamp": 1588264508,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/c6a4682e6a46285de64c97c77b771481?d=identicon&version=1",
            "client": "website",
            "content": "<p>sad I had to miss this -- interview :/</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 195868461,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "ori@eigenstate.org",
            "sender_full_name": "Ori Dean Bernstein (he) (W2'20)",
            "sender_id": 255045,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Study Group",
            "submessages": [],
            "timestamp": 1588265449,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/700775c1b9679bb74bd97d4ced91fadf9cc2ed17?x=x&version=2",
            "client": "website",
            "content": "<p><del>does anyone have a minute to help me understand the failing test case i'm looking at on today's?</del> nvm found my bug without having to decipher the test case format</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 195897268,
            "is_me_message": false,
            "last_edit_timestamp": 1588278947,
            "reactions": [
                {
                    "emoji_code": "1f419",
                    "emoji_name": "octopus",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "stefania.rosca2309@gmail.com",
                        "full_name": "Stefi Rosca (she) (SP2'20)",
                        "id": 276169
                    },
                    "user_id": 276169
                }
            ],
            "recipient_id": 24954,
            "sender_email": "roland@rolandcrosby.com",
            "sender_full_name": "Roland Crosby (he) (SP2'20)",
            "sender_id": 276197,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "30 Day LeetCoding Challenge",
            "submessages": [],
            "timestamp": 1588278682,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/6ae811d40ff8600863755aa510198b5144ebff2c?x=x&version=2",
            "client": "website",
            "content": "<p>I had fun doing this throughout April and think I'm going to try again for May! I'm down to keep working through/pairing/talking about/sharing solutions for the May month-long challenge if others are as well :)</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 195932676,
            "is_me_message": false,
            "reactions": [
                {
                    "emoji_code": "2764",
                    "emoji_name": "heart",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "c.sofiatti@gmail.com",
                        "full_name": "Caroline Sofiatti (she) (S1'15)",
                        "id": 232566
                    },
                    "user_id": 232566
                },
                {
                    "emoji_code": "2764",
                    "emoji_name": "heart",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "Dwaynekj@gmail.com",
                        "full_name": "Dwayne Khallique Jones (F'12)",
                        "id": 915
                    },
                    "user_id": 915
                },
                {
                    "emoji_code": "2764",
                    "emoji_name": "heart",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "ljeng@icloud.com",
                        "full_name": "Lareine Jeng (S2'16)",
                        "id": 9516
                    },
                    "user_id": 9516
                }
            ],
            "recipient_id": 24954,
            "sender_email": "jo@johanndiedrick.com",
            "sender_full_name": "Johann Diedrick (he) (W2'20)",
            "sender_id": 255042,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "May LeetCoding Challenge",
            "submessages": [],
            "timestamp": 1588309602,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/6ae811d40ff8600863755aa510198b5144ebff2c?x=x&version=2",
            "client": "website",
            "content": "<p>Day 1: <a href=\"https://github.com/jdiedrick/may_2020_leetcoding_challenge/blob/master/day_1_first_bad_version.py\" title=\"https://github.com/jdiedrick/may_2020_leetcoding_challenge/blob/master/day_1_first_bad_version.py\">https://github.com/jdiedrick/may_2020_leetcoding_challenge/blob/master/day_1_first_bad_version.py</a> (modified binary search)</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 196002733,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "jo@johanndiedrick.com",
            "sender_full_name": "Johann Diedrick (he) (W2'20)",
            "sender_id": 255042,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "May LeetCoding Challenge",
            "submessages": [],
            "timestamp": 1588362976,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/700775c1b9679bb74bd97d4ced91fadf9cc2ed17?x=x&version=2",
            "client": "website",
            "content": "<p>i decided to keep doing them too, here's mine for today: <a href=\"https://github.com/rolandcrosby/leetcode/blob/master/20200501-firstbadversion.py\" title=\"https://github.com/rolandcrosby/leetcode/blob/master/20200501-firstbadversion.py\">https://github.com/rolandcrosby/leetcode/blob/master/20200501-firstbadversion.py</a></p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 196009811,
            "is_me_message": false,
            "reactions": [
                {
                    "emoji_code": "1f64c",
                    "emoji_name": "praise",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "jo@johanndiedrick.com",
                        "full_name": "Johann Diedrick (he) (W2'20)",
                        "id": 255042
                    },
                    "user_id": 255042
                }
            ],
            "recipient_id": 24954,
            "sender_email": "roland@rolandcrosby.com",
            "sender_full_name": "Roland Crosby (he) (SP2'20)",
            "sender_id": 276197,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "May LeetCoding Challenge",
            "submessages": [],
            "timestamp": 1588367020,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/6ae811d40ff8600863755aa510198b5144ebff2c?x=x&version=2",
            "client": "website",
            "content": "<p>Day 2: <a href=\"https://github.com/jdiedrick/may_2020_leetcoding_challenge/blob/master/day_2_jewels_and_stones.py\" title=\"https://github.com/jdiedrick/may_2020_leetcoding_challenge/blob/master/day_2_jewels_and_stones.py\">https://github.com/jdiedrick/may_2020_leetcoding_challenge/blob/master/day_2_jewels_and_stones.py</a></p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 196065697,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "jo@johanndiedrick.com",
            "sender_full_name": "Johann Diedrick (he) (W2'20)",
            "sender_id": 255042,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "May LeetCoding Challenge",
            "submessages": [],
            "timestamp": 1588446766,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/c8cec51f2fb41f1bbf0183ec6ada0450880a67a6?x=x&version=2",
            "client": "ZulipElectron",
            "content": "<p><span class=\"user-mention\" data-user-id=\"255045\">@Ori Dean Bernstein (he) (W2'20)</span> Would you be up for presenting on augmenting data structures this week? A bunch of people seemed really interested in that when we discussed future topics last week.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 196197896,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "sgorecki@gmail.com",
            "sender_full_name": "Sara Gulotta (she) (S1'20)",
            "sender_id": 263732,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Study Group",
            "submessages": [],
            "timestamp": 1588606469,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/387835e71cae8ffc38a86624de2c74fe59a06ce5?x=x&version=2",
            "client": "website",
            "content": "<p>I'm writing an app in which I want to split a videoconference into pairs of people to chat 1-on-1 for a few minutes, and keep rotating the pairs so that<br>\neveryone ends up talking with everyone.<br>\nDoes anyone know what the CS Graph theory equivalent of this problem is, and if there's any tools I could use and not have to write the code myself?</p>\n<ul>\n<li>I have a complete graph (I want everyone to talk to everyone)</li>\n<li>At each interval, I want a  <a href=\"https://en.wikipedia.org/wiki/Matching_(graph_theory)\" title=\"https://en.wikipedia.org/wiki/Matching_(graph_theory)\">(near) perfect matching</a> which will pair everyone together</li>\n<li>So to program this, I want to find a collection of matchings such that the combined matchings end up using all edges, but only once</li>\n</ul>\n<p>Is there an algorithm or a concept for splitting a  graph into several perfect matchings?</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 196200801,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "amedee.daboville@gmail.com",
            "sender_full_name": "Am\u00e9d\u00e9e d'Aboville (they) (W2'20)",
            "sender_id": 256969,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Pairing every user in app over time",
            "submessages": [],
            "timestamp": 1588607709,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/387835e71cae8ffc38a86624de2c74fe59a06ce5?x=x&version=2",
            "client": "website",
            "content": "<p>Ooh more wikipedia-ing suggests this is be an <a href=\"https://en.wikipedia.org/wiki/Edge_coloring\" title=\"https://en.wikipedia.org/wiki/Edge_coloring\">Edge Coloring</a>, where every distinct matching is a particular color.<br>\nNow I want to find an implementation to copy...</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 196202877,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "amedee.daboville@gmail.com",
            "sender_full_name": "Am\u00e9d\u00e9e d'Aboville (they) (W2'20)",
            "sender_id": 256969,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Pairing every user in app over time",
            "submessages": [],
            "timestamp": 1588608640,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/b2a6b06ba040fd7f7c2acd4d1440e7de?d=identicon&version=1",
            "client": "website",
            "content": "<p>This is called a 1-factorization, and complete graphs of even order always have them</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 196203019,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "mauricio@collares.org",
            "sender_full_name": "Mauricio Collares (he) (W2'19)",
            "sender_id": 158563,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Pairing every user in app over time",
            "submessages": [],
            "timestamp": 1588608694,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/b2a6b06ba040fd7f7c2acd4d1440e7de?d=identicon&version=1",
            "client": "website",
            "content": "<p><a href=\"https://math.stackexchange.com/a/3455750\" title=\"https://math.stackexchange.com/a/3455750\">https://math.stackexchange.com/a/3455750</a> describes one such construction for complete graphs of even order</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 196204169,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "mauricio@collares.org",
            "sender_full_name": "Mauricio Collares (he) (W2'19)",
            "sender_id": 158563,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Pairing every user in app over time",
            "submessages": [],
            "timestamp": 1588609134,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/387835e71cae8ffc38a86624de2c74fe59a06ce5?x=x&version=2",
            "client": "website",
            "content": "<p>update... this is also called Round Robin Tournament Scheduling<br>\nThis  really simple algo to construct it seems to pop up everywhere <a href=\"https://stackoverflow.com/a/26471473\" title=\"https://stackoverflow.com/a/26471473\">https://stackoverflow.com/a/26471473</a></p>\n<p>I will probably use this npm package <a href=\"https://www.npmjs.com/package/round-robin-tournament\" title=\"https://www.npmjs.com/package/round-robin-tournament\">https://www.npmjs.com/package/round-robin-tournament</a></p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 196204527,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "amedee.daboville@gmail.com",
            "sender_full_name": "Am\u00e9d\u00e9e d'Aboville (they) (W2'20)",
            "sender_id": 256969,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Pairing every user in app over time",
            "submessages": [],
            "timestamp": 1588609290,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/c6a4682e6a46285de64c97c77b771481?d=identicon&version=1",
            "client": "website",
            "content": "<p>Yeah, I can do that.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 196206222,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "ori@eigenstate.org",
            "sender_full_name": "Ori Dean Bernstein (he) (W2'20)",
            "sender_id": 255045,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Study Group",
            "submessages": [],
            "timestamp": 1588609929,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/387835e71cae8ffc38a86624de2c74fe59a06ce5?x=x&version=2",
            "client": "website",
            "content": "<p>thanks for looking into it <span class=\"user-mention\" data-user-id=\"158563\">@Mauricio Collares (he) (W2'19)</span>  !</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 196210358,
            "is_me_message": false,
            "reactions": [
                {
                    "emoji_code": "1f64f",
                    "emoji_name": "welcome",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "victoria@unconventionaldata.ai",
                        "full_name": "Victoria Levchenko (she) (W2'19)",
                        "id": 198466
                    },
                    "user_id": 198466
                },
                {
                    "emoji_code": "1f64f",
                    "emoji_name": "welcome",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "mauricio@collares.org",
                        "full_name": "Mauricio Collares (he) (W2'19)",
                        "id": 158563
                    },
                    "user_id": 158563
                }
            ],
            "recipient_id": 24954,
            "sender_email": "amedee.daboville@gmail.com",
            "sender_full_name": "Am\u00e9d\u00e9e d'Aboville (they) (W2'20)",
            "sender_id": 256969,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Pairing every user in app over time",
            "submessages": [],
            "timestamp": 1588611851,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/c8cec51f2fb41f1bbf0183ec6ada0450880a67a6?x=x&version=2",
            "client": "ZulipElectron",
            "content": "<p>Awesome, thanks <span class=\"user-mention\" data-user-id=\"255045\">@Ori Dean Bernstein (he) (W2'20)</span>!</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 196219499,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "sgorecki@gmail.com",
            "sender_full_name": "Sara Gulotta (she) (S1'20)",
            "sender_id": 263732,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Study Group",
            "submessages": [],
            "timestamp": 1588616304,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/d05d1234dcf01c0c049d3178b47069dea9142332?x=x&version=12",
            "client": "website",
            "content": "<p>Hey <span class=\"user-mention\" data-user-id=\"256969\">@Am\u00e9d\u00e9e d'Aboville (they) (W2'20)</span>, it's the Handshake Problem. I don't have an algorithm to recommend off the top of my head, but it's well-studied.</p>\n<p>edit: heh, hadn't seen the rest of the thread before responding. :)</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 196223933,
            "is_me_message": false,
            "last_edit_timestamp": 1588618295,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "pius@alum.mit.edu",
            "sender_full_name": "Pius Uzamere (he) (SP2'20)",
            "sender_id": 256945,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Pairing every user in app over time",
            "submessages": [],
            "timestamp": 1588618212,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/2a6345cc359fb9370ce011d04d4965f20e0cf051?x=x&version=2",
            "client": "website",
            "content": "<p>Day 1: First Bad Version<br>\nEasy 4-liner</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"k\">class</span> <span class=\"nc\">A</span><span class=\"p\">:</span>\n    <span class=\"k\">def</span> <span class=\"fm\">__getitem__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">k</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"n\">isBadVersion</span><span class=\"p\">(</span><span class=\"n\">k</span><span class=\"p\">)</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">Solution</span><span class=\"p\">:</span>\n    <span class=\"k\">def</span> <span class=\"nf\">firstBadVersion</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">n</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"n\">bisect</span><span class=\"o\">.</span><span class=\"n\">bisect_left</span><span class=\"p\">(</span><span class=\"n\">A</span><span class=\"p\">(),</span> <span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"n\">n</span><span class=\"p\">)</span>\n</code></pre></div>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 196392189,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "ljeng@icloud.com",
            "sender_full_name": "Lareine Jeng (S2'16)",
            "sender_id": 9516,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "May LeetCoding Challenge",
            "submessages": [],
            "timestamp": 1588733610,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/c6a4682e6a46285de64c97c77b771481?d=identicon&version=1",
            "client": "website",
            "content": "<p>Also, I should give people a heads up -- I'm currently doing a bunch of interviewing, so this is likely to be even less polished than usual.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 196394921,
            "is_me_message": false,
            "last_edit_timestamp": 1588738239,
            "reactions": [
                {
                    "emoji_code": "1f44d",
                    "emoji_name": "+1",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "sgorecki@gmail.com",
                        "full_name": "Sara Gulotta (she) (S1'20)",
                        "id": 263732
                    },
                    "user_id": 263732
                }
            ],
            "recipient_id": 24954,
            "sender_email": "ori@eigenstate.org",
            "sender_full_name": "Ori Dean Bernstein (he) (W2'20)",
            "sender_id": 255045,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Study Group",
            "submessages": [],
            "timestamp": 1588738193,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/c8cec51f2fb41f1bbf0183ec6ada0450880a67a6?x=x&version=2",
            "client": "ZulipElectron",
            "content": "<p><span class=\"user-group-mention\" data-user-group-id=\"41\">@Currently at RC</span> Are you ready for some <em>algorithms</em>? Well  today is your lucky day! <strong>Algorithms Study Group</strong> is starts in <strong>26 minutes</strong> in <a href=\"https://www.recurse.com/zoom/hopper\" title=\"https://www.recurse.com/zoom/hopper\">Hopper</a>. Come hear <span class=\"user-mention\" data-user-id=\"255045\">@Ori Dean Bernstein (he) (W2'20)</span> tell us all about augmenting data structures.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 196783454,
            "is_me_message": false,
            "reactions": [
                {
                    "emoji_code": "1f419",
                    "emoji_name": "octopus",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "driijko@gmail.com",
                        "full_name": "Dree Ko (they) (SP2'20)",
                        "id": 257188
                    },
                    "user_id": 257188
                },
                {
                    "emoji_code": "1f419",
                    "emoji_name": "octopus",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "talyian@gmail.com",
                        "full_name": "Jimmy Tang (he) (SP2'20)",
                        "id": 276140
                    },
                    "user_id": 276140
                }
            ],
            "recipient_id": 24954,
            "sender_email": "sgorecki@gmail.com",
            "sender_full_name": "Sara Gulotta (she) (S1'20)",
            "sender_id": 263732,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Study Group",
            "submessages": [],
            "timestamp": 1588863858,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/570b5294859a4650f5c6c4f866b6fba3e34af02b?x=x&version=2",
            "client": "website",
            "content": "<p><a href=\"https://www.scala-lang.org/api/2.12.4/scala/collection/immutable/Vector.html\" title=\"https://www.scala-lang.org/api/2.12.4/scala/collection/immutable/Vector.html\">This list-as-a-tree implementation</a> reminded me of the data structure we talked about in the first half today.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 196796861,
            "is_me_message": false,
            "reactions": [
                {
                    "emoji_code": "1f333",
                    "emoji_name": "deciduous_tree",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "studio@robertdelanghe.com",
                        "full_name": "Bobby DeLanghe (he) (F2'19)",
                        "id": 240584
                    },
                    "user_id": 240584
                }
            ],
            "recipient_id": 24954,
            "sender_email": "tobinyehle@gmail.com",
            "sender_full_name": "Tobin Yehle (he) (SP1'20)",
            "sender_id": 105607,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Study Group",
            "submessages": [],
            "timestamp": 1588869316,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/6ae811d40ff8600863755aa510198b5144ebff2c?x=x&version=2",
            "client": "website",
            "content": "<p>Day 7: <a href=\"https://github.com/jdiedrick/may_2020_leetcoding_challenge/blob/master/day_7_binary_tree_cousins.py\" title=\"https://github.com/jdiedrick/may_2020_leetcoding_challenge/blob/master/day_7_binary_tree_cousins.py\">https://github.com/jdiedrick/may_2020_leetcoding_challenge/blob/master/day_7_binary_tree_cousins.py</a></p>\n<p>I had issues trying to just return the depth, parent pair in my recursive traversal function, so I just appended valid pairs to a list. I was wondering if there was a way to do it without appending to a list in my traversal...e.g.</p>\n<div class=\"codehilite\"><pre><span></span><code>    def isCousins(self, root: TreeNode, x: int, y: int) -&gt; bool:\n\n        valid_nodes = []\n\n        def traverse(node, value, depth, parent):\n            if node:\n                if node.val == value:\n                    valid_nodes.append( (depth, parent) )\n                    # why can&#39;t i just return here?\n                    # e.g. return depth, parent -&gt; i get a NoneType error\n                depth += 1\n                parent = node.val\n                traverse(node.left, value, depth, parent)\n                traverse(node.right, value, depth, parent)\n\n        # x_depth, x_parent = traverse(....)\n\n        traverse(root, x, 0, None)\n        traverse(root, y, 0, None)\n        x_node, y_node = valid_nodes[0], valid_nodes[1]\n        x_node_depth, x_node_parent = x_node[0], x_node[1]\n        y_node_depth, y_node_parent = y_node[0], y_node[1]\n        if x_node_depth == y_node_depth and x_node_parent != y_node_parent:\n            return True\n        else:\n            return False\n</code></pre></div>\n\n\n<p>Happy to clarify if this isn't clear.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 196811867,
            "is_me_message": false,
            "last_edit_timestamp": 1588876496,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "jo@johanndiedrick.com",
            "sender_full_name": "Johann Diedrick (he) (W2'20)",
            "sender_id": 255042,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "May LeetCoding Challenge",
            "submessages": [],
            "timestamp": 1588876174,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/b2a6b06ba040fd7f7c2acd4d1440e7de?d=identicon&version=1",
            "client": "website",
            "content": "<p>You can return inside the <code>if node.val == value:</code> branch, but that only returns a value to the parent <code>traverse</code> call, and you need to propagate that upwards. Replacing </p>\n<div class=\"codehilite\"><pre><span></span><code>                traverse(node.left, value, depth, parent)\n                traverse(node.right, value, depth, parent)\n</code></pre></div>\n\n\n<p>by</p>\n<div class=\"codehilite\"><pre><span></span><code>                return traverse(node.left, value, depth, parent) or traverse(node.right, value, depth, parent)\n</code></pre></div>\n\n\n<p>does that for you.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 196813949,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "mauricio@collares.org",
            "sender_full_name": "Mauricio Collares (he) (W2'19)",
            "sender_id": 158563,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "May LeetCoding Challenge",
            "submessages": [],
            "timestamp": 1588877080,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/6ae811d40ff8600863755aa510198b5144ebff2c?x=x&version=2",
            "client": "website",
            "content": "<p>Awesome, thank you! I think before I had something like that but using <code>and</code> not <code>or</code>. That makes a lot of sense, using <code>or</code> in case you hit the end of a branch that returns <code>None</code>. Thanks again for your help :) My updated solution:</p>\n<div class=\"codehilite\"><pre><span></span><code>    def isCousins(self, root: TreeNode, x: int, y: int) -&gt; bool:\n\n        def traverse(node, value, depth, parent):\n            if node:\n                if node.val == value:\n                    return depth, parent\n                depth += 1\n                parent = node.val\n                return traverse(node.left, value, depth, parent) or traverse(node.right, value, depth, parent)\n\n        x_node_depth, x_node_parent = traverse(root, x, 0, None)\n        y_node_depth, y_node_parent = traverse(root, y, 0, None)\n\n        return (x_node_depth == y_node_depth) and (x_node_parent != y_node_parent)\n</code></pre></div>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 196820286,
            "is_me_message": false,
            "last_edit_timestamp": 1588880315,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "jo@johanndiedrick.com",
            "sender_full_name": "Johann Diedrick (he) (W2'20)",
            "sender_id": 255042,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "May LeetCoding Challenge",
            "submessages": [],
            "timestamp": 1588880151,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/51c7e3813e992d0a4e45cda57334d8a29aed680c?x=x&version=2",
            "client": "ZulipElectron",
            "content": "<p>I've been doing a lot of algorithm prep and often there is a comparison between iterative and recursive. I wrote a method for a HackerRank challenge to figure out the depth of a tree. It uses a queue so it feels iterative, but each tuple \"frame\" has a sort of recursive nature to it.</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"k\">def</span> <span class=\"nf\">height</span><span class=\"p\">(</span><span class=\"n\">root</span><span class=\"p\">):</span>\n    <span class=\"n\">q</span> <span class=\"o\">=</span> <span class=\"n\">deque</span><span class=\"p\">([(</span><span class=\"n\">root</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">)])</span>\n    <span class=\"k\">while</span> <span class=\"n\">q</span><span class=\"p\">:</span>\n        <span class=\"n\">node</span><span class=\"p\">,</span> <span class=\"n\">level</span> <span class=\"o\">=</span> <span class=\"n\">q</span><span class=\"o\">.</span><span class=\"n\">popleft</span><span class=\"p\">()</span>\n        <span class=\"k\">if</span> <span class=\"n\">node</span><span class=\"o\">.</span><span class=\"n\">left</span><span class=\"p\">:</span>\n            <span class=\"n\">q</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">((</span><span class=\"n\">node</span><span class=\"o\">.</span><span class=\"n\">left</span><span class=\"p\">,</span> <span class=\"n\">level</span> <span class=\"o\">+</span> <span class=\"mi\">1</span><span class=\"p\">))</span>\n        <span class=\"k\">if</span> <span class=\"n\">node</span><span class=\"o\">.</span><span class=\"n\">right</span><span class=\"p\">:</span>\n            <span class=\"n\">q</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">((</span><span class=\"n\">node</span><span class=\"o\">.</span><span class=\"n\">right</span><span class=\"p\">,</span> <span class=\"n\">level</span> <span class=\"o\">+</span> <span class=\"mi\">1</span><span class=\"p\">))</span>\n        <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">q</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"n\">level</span>\n</code></pre></div>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 196825472,
            "is_me_message": false,
            "last_edit_timestamp": 1588883790,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "studio@robertdelanghe.com",
            "sender_full_name": "Bobby DeLanghe (he) (F2'19)",
            "sender_id": 240584,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Recursive-Like?",
            "submessages": [],
            "timestamp": 1588882937,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/2a6345cc359fb9370ce011d04d4965f20e0cf051?x=x&version=2",
            "client": "website",
            "content": "<p>Day 7: Cousins in Binary Tree<br>\nLinear space and time, no recursion</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"k\">def</span> <span class=\"nf\">isCousins</span><span class=\"p\">(</span><span class=\"n\">root</span><span class=\"p\">,</span> <span class=\"n\">x</span><span class=\"p\">,</span> <span class=\"n\">y</span><span class=\"p\">):</span>\n        <span class=\"n\">stack</span> <span class=\"o\">=</span> <span class=\"p\">[(</span><span class=\"n\">root</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"o\">-</span><span class=\"mi\">2</span><span class=\"p\">)]</span>\n        <span class=\"n\">depth</span> <span class=\"o\">=</span> <span class=\"n\">parent</span> <span class=\"o\">=</span> <span class=\"o\">-</span><span class=\"mi\">1</span>\n        <span class=\"k\">while</span> <span class=\"n\">stack</span><span class=\"p\">:</span>\n            <span class=\"n\">u</span><span class=\"p\">,</span> <span class=\"n\">current_depth</span><span class=\"p\">,</span> <span class=\"n\">current_parent</span> <span class=\"o\">=</span> <span class=\"n\">stack</span><span class=\"o\">.</span><span class=\"n\">pop</span><span class=\"p\">()</span>\n            <span class=\"k\">if</span> <span class=\"n\">u</span><span class=\"o\">.</span><span class=\"n\">val</span> <span class=\"ow\">in</span> <span class=\"p\">{</span><span class=\"n\">x</span><span class=\"p\">,</span> <span class=\"n\">y</span><span class=\"p\">}:</span>\n                <span class=\"k\">if</span> <span class=\"n\">depth</span> <span class=\"o\">==</span> <span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">:</span>\n                    <span class=\"n\">depth</span><span class=\"p\">,</span> <span class=\"n\">parent</span> <span class=\"o\">=</span> <span class=\"n\">current_depth</span><span class=\"p\">,</span> <span class=\"n\">current_parent</span>\n                <span class=\"k\">return</span> <span class=\"n\">current_depth</span> <span class=\"o\">==</span> <span class=\"n\">depth</span> <span class=\"ow\">and</span> <span class=\"n\">current_parent</span> <span class=\"o\">!=</span> <span class=\"n\">parent</span>\n            <span class=\"k\">for</span> <span class=\"n\">v</span> <span class=\"ow\">in</span> <span class=\"p\">[</span><span class=\"n\">u</span><span class=\"o\">.</span><span class=\"n\">left</span><span class=\"p\">,</span> <span class=\"n\">u</span><span class=\"o\">.</span><span class=\"n\">right</span><span class=\"p\">]:</span>\n                <span class=\"k\">if</span> <span class=\"n\">v</span><span class=\"p\">:</span>\n                    <span class=\"n\">stack</span> <span class=\"o\">+=</span> <span class=\"p\">[(</span><span class=\"n\">v</span><span class=\"p\">,</span> <span class=\"n\">current_depth</span> <span class=\"o\">+</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"n\">u</span><span class=\"o\">.</span><span class=\"n\">val</span><span class=\"p\">)]</span>\n</code></pre></div>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 196833187,
            "is_me_message": false,
            "last_edit_timestamp": 1588905162,
            "reactions": [
                {
                    "emoji_code": "1f64c",
                    "emoji_name": "raised_hands",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "c.sofiatti@gmail.com",
                        "full_name": "Caroline Sofiatti (she) (S1'15)",
                        "id": 232566
                    },
                    "user_id": 232566
                },
                {
                    "emoji_code": "1f64c",
                    "emoji_name": "raised_hands",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "studio@robertdelanghe.com",
                        "full_name": "Bobby DeLanghe (he) (F2'19)",
                        "id": 240584
                    },
                    "user_id": 240584
                },
                {
                    "emoji_code": "1f64c",
                    "emoji_name": "raised_hands",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "jo@johanndiedrick.com",
                        "full_name": "Johann Diedrick (he) (W2'20)",
                        "id": 255042
                    },
                    "user_id": 255042
                }
            ],
            "recipient_id": 24954,
            "sender_email": "ljeng@icloud.com",
            "sender_full_name": "Lareine Jeng (S2'16)",
            "sender_id": 9516,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "May LeetCoding Challenge",
            "submessages": [],
            "timestamp": 1588887256,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/2a6345cc359fb9370ce011d04d4965f20e0cf051?x=x&version=2",
            "client": "website",
            "content": "<p>Day 29: Binary Tree Maximum Path Sum<br>\nNo recursion, linear space and time</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"k\">def</span> <span class=\"nf\">maxPathSum</span><span class=\"p\">(</span><span class=\"n\">root</span><span class=\"p\">):</span>\n    <span class=\"n\">stack</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n    <span class=\"n\">max_to_leaf</span> <span class=\"o\">=</span> <span class=\"p\">{</span><span class=\"kc\">None</span><span class=\"p\">:</span> <span class=\"mi\">0</span><span class=\"p\">}</span>\n    <span class=\"k\">if</span> <span class=\"n\">root</span><span class=\"p\">:</span>\n        <span class=\"n\">stack</span> <span class=\"o\">+=</span> <span class=\"p\">[</span><span class=\"n\">root</span><span class=\"p\">]</span>\n    <span class=\"k\">while</span> <span class=\"n\">stack</span><span class=\"p\">:</span>\n        <span class=\"k\">if</span> <span class=\"n\">stack</span><span class=\"p\">[</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">left</span><span class=\"p\">:</span>\n            <span class=\"n\">stack</span> <span class=\"o\">+=</span> <span class=\"p\">[</span><span class=\"n\">stack</span><span class=\"p\">[</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">left</span><span class=\"p\">]</span>\n        <span class=\"k\">elif</span> <span class=\"n\">stack</span><span class=\"p\">[</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">right</span><span class=\"p\">:</span>\n            <span class=\"n\">stack</span> <span class=\"o\">+=</span> <span class=\"p\">[</span><span class=\"n\">stack</span><span class=\"p\">[</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">right</span><span class=\"p\">]</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"k\">while</span> <span class=\"n\">stack</span><span class=\"p\">:</span>\n                <span class=\"n\">current</span> <span class=\"o\">=</span> <span class=\"n\">stack</span><span class=\"o\">.</span><span class=\"n\">pop</span><span class=\"p\">()</span>\n                <span class=\"n\">max_to_leaf</span><span class=\"p\">[</span><span class=\"n\">current</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">current</span><span class=\"o\">.</span><span class=\"n\">val</span> <span class=\"o\">+</span> <span class=\"nb\">max</span><span class=\"p\">(</span><span class=\"n\">max_to_leaf</span><span class=\"p\">[</span><span class=\"n\">current</span><span class=\"o\">.</span><span class=\"n\">left</span><span class=\"p\">],</span> <span class=\"n\">max_to_leaf</span><span class=\"p\">[</span><span class=\"n\">current</span><span class=\"o\">.</span><span class=\"n\">right</span><span class=\"p\">],</span> <span class=\"mi\">0</span><span class=\"p\">)</span>\n                <span class=\"k\">if</span> <span class=\"n\">stack</span> <span class=\"ow\">and</span> <span class=\"n\">stack</span><span class=\"p\">[</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">left</span> <span class=\"ow\">is</span> <span class=\"n\">current</span> <span class=\"ow\">and</span> <span class=\"n\">stack</span><span class=\"p\">[</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">right</span><span class=\"p\">:</span>\n                    <span class=\"n\">stack</span> <span class=\"o\">+=</span> <span class=\"p\">[</span><span class=\"n\">stack</span><span class=\"p\">[</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">right</span><span class=\"p\">]</span>\n                    <span class=\"k\">break</span>\n    <span class=\"k\">del</span> <span class=\"n\">max_to_leaf</span><span class=\"p\">[</span><span class=\"kc\">None</span><span class=\"p\">]</span>\n    <span class=\"n\">max_through</span> <span class=\"o\">=</span> <span class=\"nb\">dict</span><span class=\"p\">()</span>\n    <span class=\"k\">for</span> <span class=\"n\">node</span> <span class=\"ow\">in</span> <span class=\"n\">max_to_leaf</span><span class=\"p\">:</span>\n        <span class=\"n\">max_through</span><span class=\"p\">[</span><span class=\"n\">node</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">node</span><span class=\"o\">.</span><span class=\"n\">val</span>\n        <span class=\"k\">if</span> <span class=\"n\">node</span><span class=\"o\">.</span><span class=\"n\">left</span> <span class=\"ow\">and</span> <span class=\"n\">max_to_leaf</span><span class=\"p\">[</span><span class=\"n\">node</span><span class=\"o\">.</span><span class=\"n\">left</span><span class=\"p\">]</span> <span class=\"o\">&gt;</span> <span class=\"mi\">0</span><span class=\"p\">:</span>\n            <span class=\"n\">max_through</span><span class=\"p\">[</span><span class=\"n\">node</span><span class=\"p\">]</span> <span class=\"o\">+=</span> <span class=\"n\">max_to_leaf</span><span class=\"p\">[</span><span class=\"n\">node</span><span class=\"o\">.</span><span class=\"n\">left</span><span class=\"p\">]</span>\n        <span class=\"k\">if</span> <span class=\"n\">node</span><span class=\"o\">.</span><span class=\"n\">right</span> <span class=\"ow\">and</span> <span class=\"n\">max_to_leaf</span><span class=\"p\">[</span><span class=\"n\">node</span><span class=\"o\">.</span><span class=\"n\">right</span><span class=\"p\">]</span> <span class=\"o\">&gt;</span> <span class=\"mi\">0</span><span class=\"p\">:</span>\n            <span class=\"n\">max_through</span><span class=\"p\">[</span><span class=\"n\">node</span><span class=\"p\">]</span> <span class=\"o\">+=</span> <span class=\"n\">max_to_leaf</span><span class=\"p\">[</span><span class=\"n\">node</span><span class=\"o\">.</span><span class=\"n\">right</span><span class=\"p\">]</span>\n    <span class=\"k\">return</span> <span class=\"nb\">max</span><span class=\"p\">(</span><span class=\"n\">max_through</span><span class=\"o\">.</span><span class=\"n\">values</span><span class=\"p\">())</span>\n</code></pre></div>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 196851864,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "ljeng@icloud.com",
            "sender_full_name": "Lareine Jeng (S2'16)",
            "sender_id": 9516,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "30 Day LeetCoding Challenge",
            "submessages": [],
            "timestamp": 1588904062,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/afcff71a280c619fe7f45af5df2f66b9617479fc?x=x&version=4",
            "client": "ZulipElectron",
            "content": "<p>Computerphile did some nice episodes on loops and recursion: </p>\n<ul>\n<li>Here's loops v/s recursion (historical background, and when and why recursion matters): <a href=\"https://www.youtube.com/watch?v=HXNhEYqFo0o\" title=\"https://www.youtube.com/watch?v=HXNhEYqFo0o\">https://www.youtube.com/watch?v=HXNhEYqFo0o</a></li>\n<li>And here's a nice little demo of solving Towers of Hanoi in Python, with recursion: <a href=\"https://www.youtube.com/watch?v=8lhxIOAfDss\" title=\"https://www.youtube.com/watch?v=8lhxIOAfDss\">https://www.youtube.com/watch?v=8lhxIOAfDss</a></li>\n</ul>\n<p>Here's my understanding:</p>\n<p>Recursion is a general property of the language, such as a function being able to call itself, or an object being able to send a message to itself. </p>\n<p>It is an answer to the question: if a language disallows \"set!\" (set-bang)/mutate of variables, then how should a computation continue with \"new\" values? (see. Haskell, Erlang, Scheme etc.)</p>\n<p>A loop (while / for) etc. is a special construct, which relies on \"set!\"/mutate being generally available in the language. These also work around the difficulty of implementing \"practical\" recursion.</p>\n<p>The difficulty with practical recursion comes from the <em>process</em> that is generated by the implementation of recursive calls. <a href=\"https://mitpress.mit.edu/sites/default/files/sicp/full-text/book/book-Z-H-11.html#%_sec_1.2\" title=\"https://mitpress.mit.edu/sites/default/files/sicp/full-text/book/book-Z-H-11.html#%_sec_1.2\">SICP does a far better job at explaining this</a> than I ever could. </p>\n<p>This further helps us understand why recursive function calls error in Python. Those calls generate a recursive <em>process</em> where each step of the computation consumes a stack frame, eventually running out of stack space (recursion \"depth\" exceeded). On the other hand, we can write recursive calls that never terminate in Haskell or Scheme, because their respective implementations of recursion generate an <em>iterative</em> process, through a technique known as <a href=\"https://en.wikipedia.org/wiki/Tail_call\" title=\"https://en.wikipedia.org/wiki/Tail_call\">Tail Call Elimination</a>. </p>\n<p>Funnily, recursive tail calls are exactly similar to controlled JUMP/GOTO statements in the language runtime :D</p>\n<div class=\"youtube-video message_inline_image\"><a data-id=\"HXNhEYqFo0o\" href=\"https://www.youtube.com/watch?v=HXNhEYqFo0o\" title=\"https://www.youtube.com/watch?v=HXNhEYqFo0o\"><img src=\"https://i.ytimg.com/vi/HXNhEYqFo0o/default.jpg\"></a></div><div class=\"youtube-video message_inline_image\"><a data-id=\"8lhxIOAfDss\" href=\"https://www.youtube.com/watch?v=8lhxIOAfDss\" title=\"https://www.youtube.com/watch?v=8lhxIOAfDss\"><img src=\"https://i.ytimg.com/vi/8lhxIOAfDss/default.jpg\"></a></div>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 196879392,
            "is_me_message": false,
            "last_edit_timestamp": 1588954603,
            "reactions": [
                {
                    "emoji_code": "1f642",
                    "emoji_name": "slight_smile",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "tedroden@gmail.com",
                        "full_name": "Ted Roden (he) (S1'20)",
                        "id": 301217
                    },
                    "user_id": 301217
                },
                {
                    "emoji_code": "1f4a1",
                    "emoji_name": "light_bulb",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "toph.allen@gmail.com",
                        "full_name": "Toph Allen (he) (SP2'20)",
                        "id": 255104
                    },
                    "user_id": 255104
                }
            ],
            "recipient_id": 24954,
            "sender_email": "aditya.athalye@gmail.com",
            "sender_full_name": "Aditya Athalye (he) (SP1'20)",
            "sender_id": 263547,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Recursive-Like?",
            "submessages": [],
            "timestamp": 1588933957,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/ef80dcc578c3d972e3bec8113e3cc65873e8a109?x=x&version=2",
            "client": "ZulipElectron",
            "content": "<p>Joining in! I'll try to catch up on days 1-7 this weekend! Excited to learn alongside you guys</p>\n<p><strong>Day 8:</strong> Check If It Is a Straight Line<br>\nLinear time and constant(?) space [let me know if I got this wrong!]</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"k\">class</span> <span class=\"nc\">Solution</span><span class=\"p\">:</span>\n    <span class=\"k\">def</span> <span class=\"nf\">checkStraightLine</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">coordinates</span><span class=\"p\">:</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">List</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">]])</span> <span class=\"o\">-&gt;</span> <span class=\"nb\">bool</span><span class=\"p\">:</span>\n        <span class=\"c1\">#use the first 2 points to determine the line equation: y = ax + b</span>\n        <span class=\"c1\">#use remainder points to check if points are along line</span>\n\n        <span class=\"n\">x1</span> <span class=\"o\">=</span> <span class=\"n\">coordinates</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">][</span><span class=\"mi\">0</span><span class=\"p\">]</span>\n        <span class=\"n\">x2</span> <span class=\"o\">=</span> <span class=\"n\">coordinates</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">][</span><span class=\"mi\">0</span><span class=\"p\">]</span>\n\n        <span class=\"n\">y1</span> <span class=\"o\">=</span> <span class=\"n\">coordinates</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">][</span><span class=\"mi\">1</span><span class=\"p\">]</span>\n        <span class=\"n\">y2</span> <span class=\"o\">=</span> <span class=\"n\">coordinates</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">][</span><span class=\"mi\">1</span><span class=\"p\">]</span>\n\n        <span class=\"c1\">#check if vertical line (separate case becase div by 0)</span>\n        <span class=\"k\">if</span> <span class=\"n\">x1</span> <span class=\"o\">==</span> <span class=\"n\">x2</span><span class=\"p\">:</span>\n            <span class=\"k\">for</span> <span class=\"n\">point</span> <span class=\"ow\">in</span> <span class=\"n\">coordinates</span><span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">:]:</span>\n                <span class=\"k\">if</span> <span class=\"n\">point</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span> <span class=\"o\">!=</span> <span class=\"n\">x1</span><span class=\"p\">:</span>\n                    <span class=\"k\">return</span> <span class=\"kc\">False</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"c1\">#check if other lines</span>\n            <span class=\"c1\">#a = (y1 - b)/x1</span>\n            <span class=\"c1\">#b = y2 - a*x2</span>\n            <span class=\"n\">a</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"n\">y1</span> <span class=\"o\">-</span> <span class=\"n\">y2</span><span class=\"p\">)</span><span class=\"o\">/</span><span class=\"p\">(</span><span class=\"n\">x1</span> <span class=\"o\">-</span> <span class=\"n\">x2</span><span class=\"p\">)</span>\n            <span class=\"n\">b</span> <span class=\"o\">=</span> <span class=\"n\">y2</span> <span class=\"o\">-</span> <span class=\"p\">((</span><span class=\"n\">y1</span> <span class=\"o\">-</span> <span class=\"n\">y2</span><span class=\"p\">)</span><span class=\"o\">/</span><span class=\"p\">(</span><span class=\"n\">x1</span> <span class=\"o\">-</span> <span class=\"n\">x2</span><span class=\"p\">))</span><span class=\"o\">*</span><span class=\"n\">x2</span>\n            <span class=\"k\">for</span> <span class=\"n\">point</span> <span class=\"ow\">in</span> <span class=\"n\">coordinates</span><span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">:]:</span>\n                <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">point</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]</span> <span class=\"o\">==</span> <span class=\"n\">a</span><span class=\"o\">*</span><span class=\"n\">point</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span> <span class=\"o\">+</span> <span class=\"n\">b</span><span class=\"p\">:</span>\n                    <span class=\"k\">return</span> <span class=\"kc\">False</span>\n\n        <span class=\"k\">return</span> <span class=\"kc\">True</span>\n</code></pre></div>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 196903008,
            "is_me_message": false,
            "reactions": [
                {
                    "emoji_code": "1f389",
                    "emoji_name": "tada",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "jo@johanndiedrick.com",
                        "full_name": "Johann Diedrick (he) (W2'20)",
                        "id": 255042
                    },
                    "user_id": 255042
                },
                {
                    "emoji_code": "1f389",
                    "emoji_name": "tada",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "mauricio@collares.org",
                        "full_name": "Mauricio Collares (he) (W2'19)",
                        "id": 158563
                    },
                    "user_id": 158563
                }
            ],
            "recipient_id": 24954,
            "sender_email": "c.sofiatti@gmail.com",
            "sender_full_name": "Caroline Sofiatti (she) (S1'15)",
            "sender_id": 232566,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "May LeetCoding Challenge",
            "submessages": [],
            "timestamp": 1588948676,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/b2a6b06ba040fd7f7c2acd4d1440e7de?d=identicon&version=1",
            "client": "website",
            "content": "<p>Similar solution: <a href=\"https://gist.github.com/collares/40120d426ea705b49dfd108790a45490\" title=\"https://gist.github.com/collares/40120d426ea705b49dfd108790a45490\">https://gist.github.com/collares/40120d426ea705b49dfd108790a45490</a></p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 196904907,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "mauricio@collares.org",
            "sender_full_name": "Mauricio Collares (he) (W2'19)",
            "sender_id": 158563,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "May LeetCoding Challenge",
            "submessages": [],
            "timestamp": 1588949580,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/b2a6b06ba040fd7f7c2acd4d1440e7de?d=identicon&version=1",
            "client": "website",
            "content": "<p>In fact, I think it's the exact same solution if you multiply by (x1-x2) throughout to avoid division</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 196905604,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "mauricio@collares.org",
            "sender_full_name": "Mauricio Collares (he) (W2'19)",
            "sender_id": 158563,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "May LeetCoding Challenge",
            "submessages": [],
            "timestamp": 1588949890,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/0a7281da0a7289a741650707cabd4fd97b489f0e?x=x&version=2",
            "client": "ZulipElectron",
            "content": "<p>I love computerphile! And your summary here is super concise and comprehensive.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 196914528,
            "is_me_message": false,
            "reactions": [
                {
                    "emoji_code": "263a",
                    "emoji_name": "smile",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "studio@robertdelanghe.com",
                        "full_name": "Bobby DeLanghe (he) (F2'19)",
                        "id": 240584
                    },
                    "user_id": 240584
                },
                {
                    "emoji_code": "263a",
                    "emoji_name": "smile",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "aditya.athalye@gmail.com",
                        "full_name": "Aditya Athalye (he) (SP1'20)",
                        "id": 263547
                    },
                    "user_id": 263547
                }
            ],
            "recipient_id": 24954,
            "sender_email": "toph.allen@gmail.com",
            "sender_full_name": "Toph Allen (he) (SP2'20)",
            "sender_id": 255104,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Recursive-Like?",
            "submessages": [],
            "timestamp": 1588953715,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/6ae811d40ff8600863755aa510198b5144ebff2c?x=x&version=2",
            "client": "website",
            "content": "<p>My day 8: <a href=\"https://github.com/jdiedrick/may_2020_leetcoding_challenge/blob/master/day_8_check_straight_line.py\" title=\"https://github.com/jdiedrick/may_2020_leetcoding_challenge/blob/master/day_8_check_straight_line.py\">https://github.com/jdiedrick/may_2020_leetcoding_challenge/blob/master/day_8_check_straight_line.py</a></p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 196963055,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "jo@johanndiedrick.com",
            "sender_full_name": "Johann Diedrick (he) (W2'20)",
            "sender_id": 255042,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "May LeetCoding Challenge",
            "submessages": [],
            "timestamp": 1588982216,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/6ae811d40ff8600863755aa510198b5144ebff2c?x=x&version=2",
            "client": "website",
            "content": "<p>Day 10: <a href=\"https://github.com/jdiedrick/may_2020_leetcoding_challenge/blob/master/day_10_town_judge.py\" title=\"https://github.com/jdiedrick/may_2020_leetcoding_challenge/blob/master/day_10_town_judge.py\">https://github.com/jdiedrick/may_2020_leetcoding_challenge/blob/master/day_10_town_judge.py</a></p>\n<p>Curious if anyone has a more clever/efficient solution</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 197065526,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "jo@johanndiedrick.com",
            "sender_full_name": "Johann Diedrick (he) (W2'20)",
            "sender_id": 255042,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "May LeetCoding Challenge",
            "submessages": [],
            "timestamp": 1589129214,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/700775c1b9679bb74bd97d4ced91fadf9cc2ed17?x=x&version=2",
            "client": "website",
            "content": "<p>you can keep track of judge candidates by keeping track of who trusts nobody: <a href=\"https://github.com/rolandcrosby/leetcode/blob/master/20200510-townjudge.py\" title=\"https://github.com/rolandcrosby/leetcode/blob/master/20200510-townjudge.py\">https://github.com/rolandcrosby/leetcode/blob/master/20200510-townjudge.py</a></p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 197065961,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "roland@rolandcrosby.com",
            "sender_full_name": "Roland Crosby (he) (SP2'20)",
            "sender_id": 276197,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "May LeetCoding Challenge",
            "submessages": [],
            "timestamp": 1589129918,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/b6389a3870b2757624fefd85d08b75b08f6dc815?x=x&version=2",
            "client": "website",
            "content": "<p><span class=\"user-mention\" data-user-id=\"255042\">@Johann Diedrick (he) (W2'20)</span>: If you are looking for different solutions, I think you can think of this as topological sort (I'm not sure you even need the N input):</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"nn\">networkx</span> <span class=\"k\">as</span> <span class=\"nn\">nx</span>\n<span class=\"k\">def</span> <span class=\"nf\">findJudge</span><span class=\"p\">(</span><span class=\"n\">N</span><span class=\"p\">,</span> <span class=\"n\">trust</span><span class=\"p\">):</span>\n    <span class=\"n\">G</span> <span class=\"o\">=</span> <span class=\"n\">nx</span><span class=\"o\">.</span><span class=\"n\">DiGraph</span><span class=\"p\">(</span><span class=\"n\">trust</span><span class=\"p\">)</span>\n    <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">nx</span><span class=\"o\">.</span><span class=\"n\">is_directed_acyclic_graph</span><span class=\"p\">(</span><span class=\"n\">G</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"o\">-</span><span class=\"mi\">1</span>\n    <span class=\"k\">else</span><span class=\"p\">:</span>\n        <span class=\"n\">sorted_nodes</span> <span class=\"o\">=</span> <span class=\"n\">nx</span><span class=\"o\">.</span><span class=\"n\">topological_sort</span><span class=\"p\">(</span><span class=\"n\">G</span><span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"p\">[</span><span class=\"n\">n</span> <span class=\"k\">for</span> <span class=\"n\">n</span> <span class=\"ow\">in</span> <span class=\"n\">sorted_nodes</span><span class=\"p\">][</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">]</span>\n</code></pre></div>\n\n\n<p>I didn't see the problem link anywhere, but I tested this on the inputs from Roland's version.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 197069869,
            "is_me_message": false,
            "last_edit_timestamp": 1589136949,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "robert@schuessler.org",
            "sender_full_name": "Robert Schuessler (W1'17)",
            "sender_id": 103047,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "May LeetCoding Challenge",
            "submessages": [],
            "timestamp": 1589134775,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/6ae811d40ff8600863755aa510198b5144ebff2c?x=x&version=2",
            "client": "website",
            "content": "<p><span class=\"user-mention\" data-user-id=\"103047\">@Robert Schuessler (W1'17)</span> Thanks for this! Here's a link to the problem: <a href=\"https://leetcode.com/explore/featured/card/may-leetcoding-challenge/535/week-2-may-8th-may-14th/3325/\" title=\"https://leetcode.com/explore/featured/card/may-leetcoding-challenge/535/week-2-may-8th-may-14th/3325/\">https://leetcode.com/explore/featured/card/may-leetcoding-challenge/535/week-2-may-8th-may-14th/3325/</a></p>\n<p>What's the intuition that lead you to topological sort? I don't think I would have seen that as a possibility.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 197070288,
            "is_me_message": false,
            "last_edit_timestamp": 1589135153,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "jo@johanndiedrick.com",
            "sender_full_name": "Johann Diedrick (he) (W2'20)",
            "sender_id": 255042,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "May LeetCoding Challenge",
            "submessages": [],
            "timestamp": 1589135121,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/b6389a3870b2757624fefd85d08b75b08f6dc815?x=x&version=2",
            "client": "website",
            "content": "<p>\"Who trusts nobody?\" just sounded like a DAG -- basically asking who doesn't have an outgoing edge</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 197070583,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "robert@schuessler.org",
            "sender_full_name": "Robert Schuessler (W1'17)",
            "sender_id": 103047,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "May LeetCoding Challenge",
            "submessages": [],
            "timestamp": 1589135396,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/6ae811d40ff8600863755aa510198b5144ebff2c?x=x&version=2",
            "client": "website",
            "content": "<p>Ah yeah, makes sense :)</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 197070661,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "jo@johanndiedrick.com",
            "sender_full_name": "Johann Diedrick (he) (W2'20)",
            "sender_id": 255042,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "May LeetCoding Challenge",
            "submessages": [],
            "timestamp": 1589135465,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/b2a6b06ba040fd7f7c2acd4d1440e7de?d=identicon&version=1",
            "client": "website",
            "content": "<p>Day 10, sacrificing a bit of readability: <a href=\"https://gist.github.com/collares/1d0ae8636c1ec7ad2dbf1c0fd8148556\" title=\"https://gist.github.com/collares/1d0ae8636c1ec7ad2dbf1c0fd8148556\">https://gist.github.com/collares/1d0ae8636c1ec7ad2dbf1c0fd8148556</a></p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 197071863,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "mauricio@collares.org",
            "sender_full_name": "Mauricio Collares (he) (W2'19)",
            "sender_id": 158563,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "May LeetCoding Challenge",
            "submessages": [],
            "timestamp": 1589136731,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/2a6345cc359fb9370ce011d04d4965f20e0cf051?x=x&version=2",
            "client": "website",
            "content": "<p>Day 9: Valid Perfect Square<br>\nConstant time and space, 5 lines</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"kd\">public</span> <span class=\"kt\">boolean</span> <span class=\"nf\">isPerfectSquare</span><span class=\"p\">(</span><span class=\"kt\">int</span> <span class=\"n\">num</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n    <span class=\"kt\">float</span> <span class=\"n\">half</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"kt\">float</span><span class=\"p\">)</span> <span class=\"n\">num</span><span class=\"o\">/</span><span class=\"mi\">2</span><span class=\"p\">;</span>\n    <span class=\"kt\">float</span> <span class=\"n\">inverse</span> <span class=\"o\">=</span> <span class=\"n\">Float</span><span class=\"p\">.</span><span class=\"na\">intBitsToFloat</span><span class=\"p\">(</span><span class=\"mh\">0x5F375A86</span> <span class=\"o\">-</span> <span class=\"n\">Float</span><span class=\"p\">.</span><span class=\"na\">floatToIntBits</span><span class=\"p\">(</span><span class=\"n\">num</span><span class=\"p\">)</span><span class=\"o\">/</span><span class=\"mi\">2</span><span class=\"p\">);</span>\n    <span class=\"n\">inverse</span> <span class=\"o\">*=</span> <span class=\"mf\">1.5</span> <span class=\"o\">-</span> <span class=\"n\">half</span> <span class=\"o\">*</span> <span class=\"n\">Math</span><span class=\"p\">.</span><span class=\"na\">pow</span><span class=\"p\">(</span><span class=\"n\">inverse</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">);</span>\n    <span class=\"n\">inverse</span> <span class=\"o\">*=</span> <span class=\"mf\">1.5</span> <span class=\"o\">-</span> <span class=\"n\">half</span> <span class=\"o\">*</span> <span class=\"n\">Math</span><span class=\"p\">.</span><span class=\"na\">pow</span><span class=\"p\">(</span><span class=\"n\">inverse</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">);</span>\n    <span class=\"k\">return</span> <span class=\"n\">num</span> <span class=\"o\">==</span> <span class=\"n\">Math</span><span class=\"p\">.</span><span class=\"na\">pow</span><span class=\"p\">((</span><span class=\"kt\">int</span><span class=\"p\">)(</span><span class=\"mi\">1</span><span class=\"o\">/</span><span class=\"n\">inverse</span><span class=\"p\">),</span> <span class=\"mi\">2</span><span class=\"p\">);</span>\n<span class=\"p\">}</span>\n</code></pre></div>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 197081742,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "ljeng@icloud.com",
            "sender_full_name": "Lareine Jeng (S2'16)",
            "sender_id": 9516,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "May LeetCoding Challenge",
            "submessages": [],
            "timestamp": 1589148796,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/b2a6b06ba040fd7f7c2acd4d1440e7de?d=identicon&version=1",
            "client": "website",
            "content": "<p>I really enjoy the inverse square root trick, but I am surprised that it works for this problem! I would expect most 32-bit squares to be flagged as non-squares due to rounding errors.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 197086038,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "mauricio@collares.org",
            "sender_full_name": "Mauricio Collares (he) (W2'19)",
            "sender_id": 158563,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "May LeetCoding Challenge",
            "submessages": [],
            "timestamp": 1589154211,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/b2a6b06ba040fd7f7c2acd4d1440e7de?d=identicon&version=1",
            "client": "website",
            "content": "<p>If that's the case, maybe testing ((int)1/inverse + 1)**2 too helps</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 197086120,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "mauricio@collares.org",
            "sender_full_name": "Mauricio Collares (he) (W2'19)",
            "sender_id": 158563,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "May LeetCoding Challenge",
            "submessages": [],
            "timestamp": 1589154300,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/b2a6b06ba040fd7f7c2acd4d1440e7de?d=identicon&version=1",
            "client": "website",
            "content": "<p>Tested it here and it seems that the \"most\" was very pessimistic. It only fails for 306 squares (out of the 46339 31-bit positive squares). Nice! So this procedure overestimates the square root far more often than it underestimates it, which plays well with rounding. Does anyone know why?</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 197086600,
            "is_me_message": false,
            "last_edit_timestamp": 1589155589,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "mauricio@collares.org",
            "sender_full_name": "Mauricio Collares (he) (W2'19)",
            "sender_id": 158563,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "May LeetCoding Challenge",
            "submessages": [],
            "timestamp": 1589155020,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/1bd49962ff0f7e7f3ee603f8243a1015bb6690bd?x=x&version=7",
            "client": "website",
            "content": "<p>As a first-order simplification, an \"unbiased\" inverse square root approximates the reciprocal sqrt of the mantissa of the float over the range [1.0, 2.0) with <code>(3 - m) / 2</code> (see image). <a href=\"/user_uploads/13/Hp9K5TpPjshy4Kg4QcaFii7b/image.png\" title=\"image.png\">image.png</a> . Part of the magic value 0x5F375A86 is a bias that shifts the line slightly, so you could probably change how much it overestimates or underestimates. I think the usual value is close to an empirical minimum error over all values. Additionally, the two iterations of Newton's method really bring down the relative error to within a very small margin; you could see if one more iteration would fix the remaining 306 values.</p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/13/Hp9K5TpPjshy4Kg4QcaFii7b/image.png\" title=\"image.png\"><img src=\"/user_uploads/13/Hp9K5TpPjshy4Kg4QcaFii7b/image.png\"></a></div>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 197087539,
            "is_me_message": false,
            "last_edit_timestamp": 1589156323,
            "reactions": [
                {
                    "emoji_code": "1f44d",
                    "emoji_name": "+1",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "ljeng@icloud.com",
                        "full_name": "Lareine Jeng (S2'16)",
                        "id": 9516
                    },
                    "user_id": 9516
                }
            ],
            "recipient_id": 24954,
            "sender_email": "talyian@gmail.com",
            "sender_full_name": "Jimmy Tang (he) (SP2'20)",
            "sender_id": 276140,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "May LeetCoding Challenge",
            "submessages": [],
            "timestamp": 1589156293,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/b2a6b06ba040fd7f7c2acd4d1440e7de?d=identicon&version=1",
            "client": "website",
            "content": "<p>Thanks <span class=\"user-mention\" data-user-id=\"276140\">@Jimmy Tang (he) (SP2'20)</span>! Here are my findings: </p>\n<p>1) The algorithm works for every 31 bit square if you try rounding up as well as down.<br>\n2) If you don't try rounding up, then a third iteration surprisingly makes the algorithm worse (3558 failing squares). It's not enough to have negligible error, the error has to be positive too.</p>\n<p>Here is the code I'm using, in case I messed it up:</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"cp\">#include</span> <span class=\"cpf\">&lt;math.h&gt;</span><span class=\"cp\"></span>\n<span class=\"cp\">#include</span> <span class=\"cpf\">&lt;stdio.h&gt;</span><span class=\"cp\"></span>\n\n<span class=\"kt\">bool</span> <span class=\"nf\">isPerfectSquare</span><span class=\"p\">(</span><span class=\"kt\">int</span> <span class=\"n\">num</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n    <span class=\"kt\">float</span> <span class=\"n\">fnum</span> <span class=\"o\">=</span> <span class=\"n\">num</span><span class=\"p\">;</span>\n    <span class=\"kt\">int</span> <span class=\"n\">int_inverse</span> <span class=\"o\">=</span> <span class=\"mh\">0x5F375A86</span> <span class=\"o\">-</span> <span class=\"p\">(</span><span class=\"o\">*</span><span class=\"p\">(</span><span class=\"kt\">int</span><span class=\"o\">*</span><span class=\"p\">)</span><span class=\"o\">&amp;</span><span class=\"n\">fnum</span><span class=\"p\">)</span><span class=\"o\">/</span><span class=\"mi\">2</span><span class=\"p\">;</span>\n    <span class=\"kt\">float</span> <span class=\"n\">inverse</span> <span class=\"o\">=</span> <span class=\"o\">*</span><span class=\"p\">(</span><span class=\"kt\">float</span><span class=\"o\">*</span><span class=\"p\">)</span><span class=\"o\">&amp;</span><span class=\"n\">int_inverse</span><span class=\"p\">;</span>\n\n    <span class=\"kt\">float</span> <span class=\"n\">half</span> <span class=\"o\">=</span> <span class=\"n\">fnum</span><span class=\"o\">/</span><span class=\"mf\">2.0f</span><span class=\"p\">;</span>\n    <span class=\"n\">inverse</span> <span class=\"o\">*=</span> <span class=\"mf\">1.5</span> <span class=\"o\">-</span> <span class=\"n\">half</span> <span class=\"o\">*</span> <span class=\"n\">pow</span><span class=\"p\">(</span><span class=\"n\">inverse</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">);</span>\n    <span class=\"n\">inverse</span> <span class=\"o\">*=</span> <span class=\"mf\">1.5</span> <span class=\"o\">-</span> <span class=\"n\">half</span> <span class=\"o\">*</span> <span class=\"n\">pow</span><span class=\"p\">(</span><span class=\"n\">inverse</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">);</span>\n\n    <span class=\"k\">return</span> <span class=\"n\">num</span> <span class=\"o\">==</span> <span class=\"n\">pow</span><span class=\"p\">((</span><span class=\"kt\">int</span><span class=\"p\">)(</span><span class=\"mi\">1</span><span class=\"o\">/</span><span class=\"n\">inverse</span><span class=\"p\">),</span> <span class=\"mi\">2</span><span class=\"p\">);</span>\n<span class=\"p\">}</span>\n\n<span class=\"kt\">int</span> <span class=\"nf\">main</span><span class=\"p\">()</span> <span class=\"p\">{</span>\n    <span class=\"kt\">int</span> <span class=\"n\">counts</span> <span class=\"o\">=</span> <span class=\"mi\">0</span><span class=\"p\">;</span>\n    <span class=\"k\">for</span> <span class=\"p\">(</span><span class=\"kt\">int</span> <span class=\"n\">i</span> <span class=\"o\">=</span> <span class=\"mi\">1</span><span class=\"p\">;</span> <span class=\"n\">i</span> <span class=\"o\">&lt;=</span> <span class=\"mi\">46339</span><span class=\"p\">;</span> <span class=\"n\">i</span><span class=\"o\">++</span><span class=\"p\">)</span>\n        <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"o\">!</span><span class=\"n\">isPerfectSquare</span><span class=\"p\">(</span><span class=\"n\">i</span><span class=\"o\">*</span><span class=\"n\">i</span><span class=\"p\">))</span>\n            <span class=\"n\">counts</span><span class=\"o\">++</span><span class=\"p\">;</span>\n    <span class=\"n\">printf</span><span class=\"p\">(</span><span class=\"s\">&quot;%d</span><span class=\"se\">\\n</span><span class=\"s\">&quot;</span><span class=\"p\">,</span> <span class=\"n\">counts</span><span class=\"p\">);</span>\n<span class=\"p\">}</span>\n</code></pre></div>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 197088036,
            "is_me_message": false,
            "last_edit_timestamp": 1589157023,
            "reactions": [
                {
                    "emoji_code": "2764",
                    "emoji_name": "heart",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "ljeng@icloud.com",
                        "full_name": "Lareine Jeng (S2'16)",
                        "id": 9516
                    },
                    "user_id": 9516
                }
            ],
            "recipient_id": 24954,
            "sender_email": "mauricio@collares.org",
            "sender_full_name": "Mauricio Collares (he) (W2'19)",
            "sender_id": 158563,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "May LeetCoding Challenge",
            "submessages": [],
            "timestamp": 1589156747,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/b2a6b06ba040fd7f7c2acd4d1440e7de?d=identicon&version=1",
            "client": "website",
            "content": "<p>As expected, this code is very sensitive to small changes: With two iterations but doing strength reduction (<code>inverse * inverse</code> instead of <code>pow(inverse, 2)</code>), there are 431 failures.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 197088084,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "mauricio@collares.org",
            "sender_full_name": "Mauricio Collares (he) (W2'19)",
            "sender_id": 158563,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "May LeetCoding Challenge",
            "submessages": [],
            "timestamp": 1589156801,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/1bd49962ff0f7e7f3ee603f8243a1015bb6690bd?x=x&version=7",
            "client": "website",
            "content": "<p>Here's a version we talked about in the Study group a couple weeks ago: it approximates sqrt directly instead of the recipocal sqrt, and so converges faster. Also, it has no mantissa bias and probably always overestimates: </p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"kt\">bool</span> <span class=\"nf\">isPerfectSquare</span><span class=\"p\">(</span><span class=\"kt\">int</span> <span class=\"n\">num</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n  <span class=\"kt\">float</span> <span class=\"n\">fnum</span> <span class=\"o\">=</span> <span class=\"n\">num</span><span class=\"p\">;</span>\n  <span class=\"kt\">int</span> <span class=\"n\">int_sqrt</span> <span class=\"o\">=</span> <span class=\"mh\">0x1fc00000</span> <span class=\"o\">+</span> <span class=\"p\">(</span><span class=\"o\">*</span><span class=\"p\">(</span><span class=\"kt\">int</span><span class=\"o\">*</span><span class=\"p\">)</span><span class=\"o\">&amp;</span><span class=\"n\">fnum</span><span class=\"p\">)</span><span class=\"o\">/</span><span class=\"mi\">2</span><span class=\"p\">;</span>\n  <span class=\"kt\">float</span> <span class=\"n\">fsqrt</span> <span class=\"o\">=</span> <span class=\"o\">*</span><span class=\"p\">(</span><span class=\"kt\">float</span><span class=\"o\">*</span><span class=\"p\">)</span><span class=\"o\">&amp;</span><span class=\"n\">int_sqrt</span><span class=\"p\">;</span>\n  <span class=\"n\">fsqrt</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"n\">fnum</span> <span class=\"o\">/</span> <span class=\"n\">fsqrt</span> <span class=\"o\">+</span> <span class=\"n\">fsqrt</span><span class=\"p\">)</span> <span class=\"o\">*</span> <span class=\"mf\">0.5</span><span class=\"p\">;</span>\n  <span class=\"n\">fsqrt</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"n\">fnum</span> <span class=\"o\">/</span> <span class=\"n\">fsqrt</span> <span class=\"o\">+</span> <span class=\"n\">fsqrt</span><span class=\"p\">)</span> <span class=\"o\">*</span> <span class=\"mf\">0.5</span><span class=\"p\">;</span>\n  <span class=\"k\">return</span> <span class=\"n\">num</span> <span class=\"o\">==</span> <span class=\"n\">pow</span><span class=\"p\">((</span><span class=\"kt\">int</span><span class=\"p\">)</span><span class=\"n\">fsqrt</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">);</span>\n<span class=\"p\">}</span>\n</code></pre></div>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 197088998,
            "is_me_message": false,
            "last_edit_timestamp": 1589158006,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "talyian@gmail.com",
            "sender_full_name": "Jimmy Tang (he) (SP2'20)",
            "sender_id": 276140,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "May LeetCoding Challenge",
            "submessages": [],
            "timestamp": 1589157885,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/b2a6b06ba040fd7f7c2acd4d1440e7de?d=identicon&version=1",
            "client": "website",
            "content": "<p>That's so cool! This one works in all cases. I should have watched the study group presentation :)</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 197089119,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "mauricio@collares.org",
            "sender_full_name": "Mauricio Collares (he) (W2'19)",
            "sender_id": 158563,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "May LeetCoding Challenge",
            "submessages": [],
            "timestamp": 1589158135,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/b2a6b06ba040fd7f7c2acd4d1440e7de?d=identicon&version=1",
            "client": "website",
            "content": "<p>Your mantissa bias explanation makes the overestimation a very intuitive thing too</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 197089178,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "mauricio@collares.org",
            "sender_full_name": "Mauricio Collares (he) (W2'19)",
            "sender_id": 158563,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "May LeetCoding Challenge",
            "submessages": [],
            "timestamp": 1589158228,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/b2a6b06ba040fd7f7c2acd4d1440e7de?d=identicon&version=1",
            "client": "website",
            "content": "<p>For the original code, brute-force tells me 0x5F36A708 is the best constant (with 288 incorrect answers)</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 197096608,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "mauricio@collares.org",
            "sender_full_name": "Mauricio Collares (he) (W2'19)",
            "sender_id": 158563,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "May LeetCoding Challenge",
            "submessages": [],
            "timestamp": 1589168457,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/6ae811d40ff8600863755aa510198b5144ebff2c?x=x&version=2",
            "client": "website",
            "content": "<p>Day 11: Flood Fill <a href=\"https://github.com/jdiedrick/may_2020_leetcoding_challenge/blob/master/day_11_flood_fill.py\">https://github.com/jdiedrick/may_2020_leetcoding_challenge/blob/master/day_11_flood_fill.py</a></p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 197149782,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "jo@johanndiedrick.com",
            "sender_full_name": "Johann Diedrick (he) (W2'20)",
            "sender_id": 255042,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "May LeetCoding Challenge",
            "submessages": [],
            "timestamp": 1589205950,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/2a6345cc359fb9370ce011d04d4965f20e0cf051?x=x&version=2",
            "client": "website",
            "content": "<p>Day 11: Flood Fill<br>\nNo recursion</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"k\">def</span> <span class=\"nf\">floodFill</span><span class=\"p\">(</span><span class=\"n\">image</span><span class=\"p\">,</span> <span class=\"n\">sr</span><span class=\"p\">,</span> <span class=\"n\">sc</span><span class=\"p\">,</span> <span class=\"n\">newColor</span><span class=\"p\">):</span>\n    <span class=\"n\">stack</span> <span class=\"o\">=</span> <span class=\"p\">[(</span><span class=\"n\">sr</span><span class=\"p\">,</span> <span class=\"n\">sc</span><span class=\"p\">)]</span>\n    <span class=\"n\">visited</span> <span class=\"o\">=</span> <span class=\"p\">{(</span><span class=\"n\">sr</span><span class=\"p\">,</span> <span class=\"n\">sc</span><span class=\"p\">)}</span>\n    <span class=\"k\">while</span> <span class=\"n\">stack</span><span class=\"p\">:</span>\n        <span class=\"n\">i</span><span class=\"p\">,</span> <span class=\"n\">j</span> <span class=\"o\">=</span> <span class=\"n\">stack</span><span class=\"o\">.</span><span class=\"n\">pop</span><span class=\"p\">()</span>\n        <span class=\"k\">for</span> <span class=\"n\">v</span> <span class=\"ow\">in</span> <span class=\"p\">[(</span><span class=\"n\">i</span> <span class=\"o\">-</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"n\">j</span><span class=\"p\">),</span> <span class=\"p\">(</span><span class=\"n\">i</span><span class=\"p\">,</span> <span class=\"n\">j</span> <span class=\"o\">-</span> <span class=\"mi\">1</span><span class=\"p\">),</span> <span class=\"p\">(</span><span class=\"n\">i</span><span class=\"p\">,</span> <span class=\"n\">j</span> <span class=\"o\">+</span> <span class=\"mi\">1</span><span class=\"p\">),</span> <span class=\"p\">(</span><span class=\"n\">i</span> <span class=\"o\">+</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"n\">j</span><span class=\"p\">)]:</span>\n            <span class=\"n\">r</span><span class=\"p\">,</span> <span class=\"n\">c</span> <span class=\"o\">=</span> <span class=\"n\">v</span>\n            <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"mi\">0</span> <span class=\"o\">&lt;=</span> <span class=\"n\">r</span> <span class=\"o\">&lt;</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">image</span><span class=\"p\">)</span>\n                <span class=\"ow\">and</span> <span class=\"mi\">0</span> <span class=\"o\">&lt;=</span> <span class=\"n\">c</span> <span class=\"o\">&lt;</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">image</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">])</span>\n                <span class=\"ow\">and</span> <span class=\"n\">image</span><span class=\"p\">[</span><span class=\"n\">r</span><span class=\"p\">][</span><span class=\"n\">c</span><span class=\"p\">]</span> <span class=\"o\">==</span> <span class=\"n\">image</span><span class=\"p\">[</span><span class=\"n\">sr</span><span class=\"p\">][</span><span class=\"n\">sc</span><span class=\"p\">]</span>\n                <span class=\"ow\">and</span> <span class=\"n\">v</span> <span class=\"ow\">not</span> <span class=\"ow\">in</span> <span class=\"n\">visited</span>\n            <span class=\"p\">):</span>\n                <span class=\"n\">stack</span> <span class=\"o\">+=</span> <span class=\"p\">[</span><span class=\"n\">v</span><span class=\"p\">]</span>\n                <span class=\"n\">visited</span><span class=\"o\">.</span><span class=\"n\">add</span><span class=\"p\">(</span><span class=\"n\">v</span><span class=\"p\">)</span>\n    <span class=\"k\">for</span> <span class=\"n\">r</span><span class=\"p\">,</span> <span class=\"n\">c</span> <span class=\"ow\">in</span> <span class=\"n\">visited</span><span class=\"p\">:</span>\n        <span class=\"n\">image</span><span class=\"p\">[</span><span class=\"n\">r</span><span class=\"p\">][</span><span class=\"n\">c</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">newColor</span>\n    <span class=\"k\">return</span> <span class=\"n\">image</span>\n</code></pre></div>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 197158081,
            "is_me_message": false,
            "last_edit_timestamp": 1589209857,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "ljeng@icloud.com",
            "sender_full_name": "Lareine Jeng (S2'16)",
            "sender_id": 9516,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "May LeetCoding Challenge",
            "submessages": [],
            "timestamp": 1589209366,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/51c7e3813e992d0a4e45cda57334d8a29aed680c?x=x&version=2",
            "client": "ZulipElectron",
            "content": "<p><span class=\"user-mention\" data-user-id=\"158563\">@Mauricio Collares (he) (W2'19)</span>  Thanks so much! This paper is great! I definitely meant quick-sort..</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 197206469,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "studio@robertdelanghe.com",
            "sender_full_name": "Bobby DeLanghe (he) (F2'19)",
            "sender_id": 240584,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Merge Sort Generator",
            "submessages": [],
            "timestamp": 1589232179,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/51c7e3813e992d0a4e45cda57334d8a29aed680c?x=x&version=2",
            "client": "ZulipElectron",
            "content": "<p><span class=\"user-mention\" data-user-id=\"263547\">@Aditya Athalye (he) (SP1'20)</span> Thanks! This is really helpful. I really like your description. I often binge on computerphile, I'll check out those videos again.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 197207010,
            "is_me_message": false,
            "reactions": [
                {
                    "emoji_code": "1f419",
                    "emoji_name": "octopus",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "aditya.athalye@gmail.com",
                        "full_name": "Aditya Athalye (he) (SP1'20)",
                        "id": 263547
                    },
                    "user_id": 263547
                }
            ],
            "recipient_id": 24954,
            "sender_email": "studio@robertdelanghe.com",
            "sender_full_name": "Bobby DeLanghe (he) (F2'19)",
            "sender_id": 240584,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Recursive-Like?",
            "submessages": [],
            "timestamp": 1589232522,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/ef80dcc578c3d972e3bec8113e3cc65873e8a109?x=x&version=2",
            "client": "ZulipElectron",
            "content": "<p>Also used DFS for today's solution! </p>\n<p><strong>Day 11:Flood Fill</strong><br>\nTime: O (m * n)???<br>\nSpace:  O(1) </p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"k\">class</span> <span class=\"nc\">Solution</span><span class=\"p\">:</span>\n    <span class=\"k\">def</span> <span class=\"nf\">dfs</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">image</span><span class=\"p\">:</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">List</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">]],</span> <span class=\"n\">i</span><span class=\"p\">:</span> <span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"n\">j</span><span class=\"p\">:</span> <span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"n\">new</span><span class=\"p\">:</span> <span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"n\">old</span><span class=\"p\">:</span> <span class=\"nb\">int</span><span class=\"p\">):</span>\n        <span class=\"k\">if</span> <span class=\"n\">i</span> <span class=\"o\">&gt;=</span> <span class=\"mi\">0</span> <span class=\"ow\">and</span> <span class=\"n\">i</span> <span class=\"o\">&lt;=</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">image</span><span class=\"p\">)</span> <span class=\"o\">-</span> <span class=\"mi\">1</span><span class=\"p\">:</span> <span class=\"c1\">#i in bounds</span>\n            <span class=\"k\">if</span> <span class=\"n\">j</span> <span class=\"o\">&gt;=</span> <span class=\"mi\">0</span> <span class=\"ow\">and</span> <span class=\"n\">j</span> <span class=\"o\">&lt;=</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">image</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">])</span> <span class=\"o\">-</span> <span class=\"mi\">1</span><span class=\"p\">:</span> <span class=\"c1\">#j in bounds</span>\n                <span class=\"k\">if</span> <span class=\"n\">image</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">][</span><span class=\"n\">j</span><span class=\"p\">]</span> <span class=\"o\">==</span> <span class=\"n\">old</span><span class=\"p\">:</span>\n                        <span class=\"n\">image</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">][</span><span class=\"n\">j</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">new</span>\n                        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">dfs</span><span class=\"p\">(</span><span class=\"n\">image</span><span class=\"p\">,</span> <span class=\"n\">i</span><span class=\"o\">+</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"n\">j</span><span class=\"p\">,</span> <span class=\"n\">new</span><span class=\"p\">,</span> <span class=\"n\">old</span><span class=\"p\">)</span> <span class=\"c1\">#check bottom</span>\n                        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">dfs</span><span class=\"p\">(</span><span class=\"n\">image</span><span class=\"p\">,</span> <span class=\"n\">i</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"n\">j</span><span class=\"p\">,</span> <span class=\"n\">new</span><span class=\"p\">,</span> <span class=\"n\">old</span><span class=\"p\">)</span> <span class=\"c1\">#check top</span>\n                        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">dfs</span><span class=\"p\">(</span><span class=\"n\">image</span><span class=\"p\">,</span> <span class=\"n\">i</span><span class=\"p\">,</span> <span class=\"n\">j</span><span class=\"o\">+</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"n\">new</span><span class=\"p\">,</span> <span class=\"n\">old</span><span class=\"p\">)</span> <span class=\"c1\">#check right</span>\n                        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">dfs</span><span class=\"p\">(</span><span class=\"n\">image</span><span class=\"p\">,</span> <span class=\"n\">i</span><span class=\"p\">,</span> <span class=\"n\">j</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"n\">new</span><span class=\"p\">,</span> <span class=\"n\">old</span><span class=\"p\">)</span> <span class=\"c1\">#check left</span>\n\n\n    <span class=\"k\">def</span> <span class=\"nf\">floodFill</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">image</span><span class=\"p\">:</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">List</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">]],</span> <span class=\"n\">sr</span><span class=\"p\">:</span> <span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"n\">sc</span><span class=\"p\">:</span> <span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"n\">newColor</span><span class=\"p\">:</span> <span class=\"nb\">int</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">List</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">]]:</span>\n        <span class=\"k\">if</span> <span class=\"n\">image</span><span class=\"p\">[</span><span class=\"n\">sr</span><span class=\"p\">][</span><span class=\"n\">sc</span><span class=\"p\">]</span> <span class=\"o\">!=</span> <span class=\"n\">newColor</span><span class=\"p\">:</span>\n            <span class=\"n\">oldColor</span> <span class=\"o\">=</span> <span class=\"n\">image</span><span class=\"p\">[</span><span class=\"n\">sr</span><span class=\"p\">][</span><span class=\"n\">sc</span><span class=\"p\">]</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">dfs</span><span class=\"p\">(</span><span class=\"n\">image</span><span class=\"p\">,</span> <span class=\"n\">sr</span><span class=\"p\">,</span> <span class=\"n\">sc</span><span class=\"p\">,</span> <span class=\"n\">newColor</span><span class=\"p\">,</span> <span class=\"n\">oldColor</span><span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"n\">image</span>\n</code></pre></div>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 197219495,
            "is_me_message": false,
            "last_edit_timestamp": 1589240866,
            "reactions": [
                {
                    "emoji_code": "1f389",
                    "emoji_name": "tada",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "studio@robertdelanghe.com",
                        "full_name": "Bobby DeLanghe (he) (F2'19)",
                        "id": 240584
                    },
                    "user_id": 240584
                },
                {
                    "emoji_code": "1f389",
                    "emoji_name": "tada",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "jo@johanndiedrick.com",
                        "full_name": "Johann Diedrick (he) (W2'20)",
                        "id": 255042
                    },
                    "user_id": 255042
                }
            ],
            "recipient_id": 24954,
            "sender_email": "c.sofiatti@gmail.com",
            "sender_full_name": "Caroline Sofiatti (she) (S1'15)",
            "sender_id": 232566,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "May LeetCoding Challenge",
            "submessages": [],
            "timestamp": 1589240685,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/51c7e3813e992d0a4e45cda57334d8a29aed680c?x=x&version=2",
            "client": "ZulipElectron",
            "content": "<p><span class=\"user-mention\" data-user-id=\"232566\">@Caroline Sofiatti (S1'15)</span> You might already know this, but I figured it'd helpful if not. For bounds checking instead of writing :<br>\n<code>i &gt;= 0 and i &lt;= len(image) - 1</code> </p>\n<p>you can write :<br>\n<code>0 &lt;= i &lt;= len(image) - 1</code></p>\n<p>I've found this helpful because  lines everything up like if it was a number line. And I frequently mix up the comparisons otherwise.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 197297737,
            "is_me_message": false,
            "last_edit_timestamp": 1589299064,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "studio@robertdelanghe.com",
            "sender_full_name": "Bobby DeLanghe (he) (F2'19)",
            "sender_id": 240584,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "May LeetCoding Challenge",
            "submessages": [],
            "timestamp": 1589298983,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/ef80dcc578c3d972e3bec8113e3cc65873e8a109?x=x&version=2",
            "client": "ZulipElectron",
            "content": "<p>@<strong>Robert James DeLanghe (he) (F2'19)</strong>  That's helpful!!!</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 197299965,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "c.sofiatti@gmail.com",
            "sender_full_name": "Caroline Sofiatti (she) (S1'15)",
            "sender_id": 232566,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "May LeetCoding Challenge",
            "submessages": [],
            "timestamp": 1589299967,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/ef80dcc578c3d972e3bec8113e3cc65873e8a109?x=x&version=2",
            "client": "ZulipElectron",
            "content": "<p>The first solution I thought up was O(n) in space and O(1) in time. I <em>think</em> the solution below is O(log(n)) in space and O(1) in time. Not entirely sure, especially in regards to space complexity. </p>\n<p><strong>Day 12: Single Element in a Sorted Array</strong><br>\nTime: <del>O(log(n))</del> O(n**2) -&gt; see messages below<br>\nSpace: <del>O(1)</del> O(n) -&gt; see messages below  </p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"k\">class</span> <span class=\"nc\">Solution</span><span class=\"p\">:</span>\n    <span class=\"k\">def</span> <span class=\"nf\">singleNonDuplicate</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">nums</span><span class=\"p\">:</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">])</span> <span class=\"o\">-&gt;</span> <span class=\"nb\">int</span><span class=\"p\">:</span>\n        <span class=\"c1\">#special case: nums has only 1 unmatched element</span>\n        <span class=\"k\">if</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">nums</span><span class=\"p\">)</span> <span class=\"o\">==</span> <span class=\"mi\">1</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"n\">nums</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span>\n        <span class=\"c1\">#compare nums[i] with nums[j], i E (0,2,4,...) and j E (1,3,5,...)</span>\n        <span class=\"c1\">#return even indexed elem for first occurance of [i] != nums[j]</span>\n        <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">nums</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">::</span><span class=\"mi\">2</span><span class=\"p\">])):</span> <span class=\"c1\">#odd indexed array is shortest</span>\n            <span class=\"k\">if</span> <span class=\"n\">nums</span><span class=\"p\">[::</span><span class=\"mi\">2</span><span class=\"p\">][</span><span class=\"n\">i</span><span class=\"p\">]</span> <span class=\"o\">!=</span> <span class=\"n\">nums</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">::</span><span class=\"mi\">2</span><span class=\"p\">][</span><span class=\"n\">i</span><span class=\"p\">]:</span>\n                <span class=\"k\">return</span> <span class=\"n\">nums</span><span class=\"p\">[::</span><span class=\"mi\">2</span><span class=\"p\">][</span><span class=\"n\">i</span><span class=\"p\">]</span>\n        <span class=\"c1\">#special case:unmatched element is the last</span>\n        <span class=\"k\">if</span> <span class=\"n\">nums</span><span class=\"p\">[</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">]</span> <span class=\"o\">!=</span> <span class=\"n\">nums</span><span class=\"p\">[</span><span class=\"o\">-</span><span class=\"mi\">2</span><span class=\"p\">]:</span>\n            <span class=\"k\">return</span> <span class=\"n\">nums</span><span class=\"p\">[</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">]</span>\n</code></pre></div>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 197308530,
            "is_me_message": false,
            "last_edit_timestamp": 1589307639,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "c.sofiatti@gmail.com",
            "sender_full_name": "Caroline Sofiatti (she) (S1'15)",
            "sender_id": 232566,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "May LeetCoding Challenge",
            "submessages": [],
            "timestamp": 1589303928,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/2a6345cc359fb9370ce011d04d4965f20e0cf051?x=x&version=2",
            "client": "website",
            "content": "<p><span class=\"user-mention\" data-user-id=\"232566\">@Caroline Sofiatti (S1'15)</span>  Your solution is O(n^2) time and O(n) space.</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">nums</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">::</span><span class=\"mi\">2</span><span class=\"p\">])</span>\n</code></pre></div>\n\n\n<p>This loops through the array n/2 times which is essentially O(n).<br>\nThen inside the loop you have nums[::2] and nums[1::2] which is another O(n).</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 197309061,
            "is_me_message": false,
            "last_edit_timestamp": 1589304480,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "ljeng@icloud.com",
            "sender_full_name": "Lareine Jeng (S2'16)",
            "sender_id": 9516,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "May LeetCoding Challenge",
            "submessages": [],
            "timestamp": 1589304166,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/ef80dcc578c3d972e3bec8113e3cc65873e8a109?x=x&version=2",
            "client": "ZulipElectron",
            "content": "<p><span class=\"user-mention\" data-user-id=\"9516\">@Lareine Jeng (S2'16)</span> for time: that's right! The for loop goes through n/2 operations (which is still O(n)). Not half at every step!!! Let me try that again.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 197309554,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "c.sofiatti@gmail.com",
            "sender_full_name": "Caroline Sofiatti (she) (S1'15)",
            "sender_id": 232566,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "May LeetCoding Challenge",
            "submessages": [],
            "timestamp": 1589304377,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/ef80dcc578c3d972e3bec8113e3cc65873e8a109?x=x&version=2",
            "client": "ZulipElectron",
            "content": "<p><span class=\"user-mention\" data-user-id=\"9516\">@Lareine Jeng (S2'16)</span> I'm confused - I thought list slicing takes constant time</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 197310175,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "c.sofiatti@gmail.com",
            "sender_full_name": "Caroline Sofiatti (she) (S1'15)",
            "sender_id": 232566,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "May LeetCoding Challenge",
            "submessages": [],
            "timestamp": 1589304608,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/ef80dcc578c3d972e3bec8113e3cc65873e8a109?x=x&version=2",
            "client": "ZulipElectron",
            "content": "<p>And I'm not convinced that space is O(n)</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 197310273,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "c.sofiatti@gmail.com",
            "sender_full_name": "Caroline Sofiatti (she) (S1'15)",
            "sender_id": 232566,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "May LeetCoding Challenge",
            "submessages": [],
            "timestamp": 1589304647,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/ef80dcc578c3d972e3bec8113e3cc65873e8a109?x=x&version=2",
            "client": "ZulipElectron",
            "content": "<p><a href=\"https://wiki.python.org/moin/TimeComplexity\">https://wiki.python.org/moin/TimeComplexity</a></p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 197310360,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "c.sofiatti@gmail.com",
            "sender_full_name": "Caroline Sofiatti (she) (S1'15)",
            "sender_id": 232566,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "May LeetCoding Challenge",
            "submessages": [],
            "timestamp": 1589304677,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/2a6345cc359fb9370ce011d04d4965f20e0cf051?x=x&version=2",
            "client": "website",
            "content": "<p><span class=\"user-mention silent\" data-user-id=\"232566\">Caroline Sofiatti (S1'15)</span> <a href=\"#narrow/stream/21502-algorithms/topic/May.20LeetCoding.20Challenge/near/197310175\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"9516\">Lareine Jeng (S2'16)</span> I'm confused - I thought list slicing takes constant time</p>\n</blockquote>\n<p><a href=\"https://wiki.python.org/moin/TimeComplexity\">List slicing takes O(k) time</a>, where k is the length of the sublist. It makes sense too, because if you're slicing a list you're essentially creating a new list of length k, and you have to look at each element so it's linear. It's also constant space because the new list takes O(k) space.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 197310853,
            "is_me_message": false,
            "last_edit_timestamp": 1589304981,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "ljeng@icloud.com",
            "sender_full_name": "Lareine Jeng (S2'16)",
            "sender_id": 9516,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "May LeetCoding Challenge",
            "submessages": [],
            "timestamp": 1589304881,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/ef80dcc578c3d972e3bec8113e3cc65873e8a109?x=x&version=2",
            "client": "ZulipElectron",
            "content": "<p>Got it - it would be the slice size</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 197311056,
            "is_me_message": false,
            "reactions": [
                {
                    "emoji_code": "1f44d",
                    "emoji_name": "+1",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "ljeng@icloud.com",
                        "full_name": "Lareine Jeng (S2'16)",
                        "id": 9516
                    },
                    "user_id": 9516
                }
            ],
            "recipient_id": 24954,
            "sender_email": "c.sofiatti@gmail.com",
            "sender_full_name": "Caroline Sofiatti (she) (S1'15)",
            "sender_id": 232566,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "May LeetCoding Challenge",
            "submessages": [],
            "timestamp": 1589304986,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/ef80dcc578c3d972e3bec8113e3cc65873e8a109?x=x&version=2",
            "client": "ZulipElectron",
            "content": "<p>Thank you!!!</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 197311064,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "c.sofiatti@gmail.com",
            "sender_full_name": "Caroline Sofiatti (she) (S1'15)",
            "sender_id": 232566,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "May LeetCoding Challenge",
            "submessages": [],
            "timestamp": 1589304991,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/ef80dcc578c3d972e3bec8113e3cc65873e8a109?x=x&version=2",
            "client": "ZulipElectron",
            "content": "<p>Attempt #2! </p>\n<p><strong>Day 12: Single Element in a Sorted Array</strong><br>\nTime: O(log(n)) <br>\nSpace: O(1)</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"k\">class</span> <span class=\"nc\">Solution</span><span class=\"p\">:</span>\n    <span class=\"k\">def</span> <span class=\"nf\">singleNonDuplicate</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">nums</span><span class=\"p\">:</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">])</span> <span class=\"o\">-&gt;</span> <span class=\"nb\">int</span><span class=\"p\">:</span>\n        <span class=\"n\">start</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>\n        <span class=\"n\">mid</span> <span class=\"o\">=</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">nums</span><span class=\"p\">)</span><span class=\"o\">//</span><span class=\"mi\">2</span>\n        <span class=\"n\">end</span> <span class=\"o\">=</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">nums</span><span class=\"p\">)</span> <span class=\"o\">-</span> <span class=\"mi\">1</span>\n\n        <span class=\"k\">while</span> <span class=\"n\">start</span> <span class=\"o\">&lt;</span> <span class=\"n\">end</span><span class=\"p\">:</span>\n            <span class=\"k\">if</span> <span class=\"n\">nums</span><span class=\"p\">[</span><span class=\"n\">mid</span><span class=\"p\">]</span> <span class=\"o\">==</span> <span class=\"n\">nums</span><span class=\"p\">[</span><span class=\"n\">mid</span> <span class=\"o\">-</span> <span class=\"mi\">1</span><span class=\"p\">]:</span>\n                <span class=\"k\">if</span> <span class=\"n\">mid</span><span class=\"o\">%</span><span class=\"mi\">2</span> <span class=\"o\">==</span> <span class=\"mi\">1</span><span class=\"p\">:</span> <span class=\"c1\">#odd index case</span>\n                    <span class=\"n\">start</span> <span class=\"o\">=</span> <span class=\"n\">mid</span> <span class=\"o\">+</span> <span class=\"mi\">1</span> <span class=\"c1\">#lonely number is to the right</span>\n                <span class=\"k\">else</span><span class=\"p\">:</span> <span class=\"c1\">#even index case</span>\n                    <span class=\"n\">end</span> <span class=\"o\">=</span> <span class=\"n\">mid</span> <span class=\"o\">-</span> <span class=\"mi\">1</span> <span class=\"c1\">#lonely number is to the left</span>\n            <span class=\"k\">else</span><span class=\"p\">:</span>\n                <span class=\"k\">if</span> <span class=\"n\">nums</span><span class=\"p\">[</span><span class=\"n\">mid</span><span class=\"p\">]</span> <span class=\"o\">!=</span> <span class=\"n\">nums</span><span class=\"p\">[</span><span class=\"n\">mid</span> <span class=\"o\">+</span> <span class=\"mi\">1</span><span class=\"p\">]:</span> <span class=\"c1\">#found lonely number!</span>\n                    <span class=\"k\">return</span> <span class=\"n\">nums</span><span class=\"p\">[</span><span class=\"n\">mid</span><span class=\"p\">]</span>\n                <span class=\"k\">if</span> <span class=\"n\">mid</span><span class=\"o\">%</span><span class=\"mi\">2</span> <span class=\"o\">==</span> <span class=\"mi\">1</span><span class=\"p\">:</span> <span class=\"c1\">#odd index case</span>\n                    <span class=\"n\">end</span> <span class=\"o\">=</span> <span class=\"n\">mid</span> <span class=\"o\">-</span> <span class=\"mi\">1</span> <span class=\"c1\">#lonely number is to the left</span>\n                <span class=\"k\">else</span><span class=\"p\">:</span> <span class=\"c1\">#even index case</span>\n                    <span class=\"n\">start</span> <span class=\"o\">=</span> <span class=\"n\">mid</span> <span class=\"o\">+</span> <span class=\"mi\">1</span>\n            <span class=\"n\">mid</span> <span class=\"o\">=</span> <span class=\"n\">start</span> <span class=\"o\">+</span> <span class=\"p\">(</span><span class=\"n\">end</span> <span class=\"o\">-</span> <span class=\"n\">start</span><span class=\"p\">)</span><span class=\"o\">//</span><span class=\"mi\">2</span>\n        <span class=\"k\">return</span> <span class=\"n\">nums</span><span class=\"p\">[</span><span class=\"n\">mid</span><span class=\"p\">]</span> <span class=\"c1\">#only number left</span>\n</code></pre></div>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 197316651,
            "is_me_message": false,
            "last_edit_timestamp": 1589307542,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "c.sofiatti@gmail.com",
            "sender_full_name": "Caroline Sofiatti (she) (S1'15)",
            "sender_id": 232566,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "May LeetCoding Challenge",
            "submessages": [],
            "timestamp": 1589307448,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/6948faab4e5ab8c9d107dba94c9f00e0?d=identicon&version=1",
            "client": "ZulipElectron",
            "content": "<p>Day 12 (did NOT come up with this solution, just saw it before).<br>\n<code>class Solution:\n    def singleNonDuplicate(self, nums: List[int]) -&gt; int:\n        result = 0\n        for i in nums:\n            result ^= i\n        return result</code></p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 197322512,
            "is_me_message": false,
            "last_edit_timestamp": 1589310118,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "asa@cottageclass.com",
            "sender_full_name": "Asa Needle (he/they) (S1'20)",
            "sender_id": 263510,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "May LeetCoding Challenge",
            "submessages": [],
            "timestamp": 1589310104,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/700775c1b9679bb74bd97d4ced91fadf9cc2ed17?x=x&version=2",
            "client": "website",
            "content": "<p>haha yep that was the first one in the april challenge! but it's not O(log n)</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 197322700,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "roland@rolandcrosby.com",
            "sender_full_name": "Roland Crosby (he) (SP2'20)",
            "sender_id": 276197,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "May LeetCoding Challenge",
            "submessages": [],
            "timestamp": 1589310180,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/700775c1b9679bb74bd97d4ced91fadf9cc2ed17?x=x&version=2",
            "client": "website",
            "content": "<p>(but the april one wasn't sorted)</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 197322729,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "roland@rolandcrosby.com",
            "sender_full_name": "Roland Crosby (he) (SP2'20)",
            "sender_id": 276197,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "May LeetCoding Challenge",
            "submessages": [],
            "timestamp": 1589310192,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/6948faab4e5ab8c9d107dba94c9f00e0?d=identicon&version=1",
            "client": "ZulipElectron",
            "content": "<p>ooh that's right</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 197322787,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "asa@cottageclass.com",
            "sender_full_name": "Asa Needle (he/they) (S1'20)",
            "sender_id": 263510,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "May LeetCoding Challenge",
            "submessages": [],
            "timestamp": 1589310217,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/ef80dcc578c3d972e3bec8113e3cc65873e8a109?x=x&version=2",
            "client": "ZulipElectron",
            "content": "<p>I'd love help with time and space complexity of the algo below! I think it's O(n) time and O(n) space. </p>\n<p>For time: The algo does use min(slice) inside a loop, but the slice is constant size <code>k+1</code>. The while loop runs at most <code>n</code> times. </p>\n<p><strong>Day 13: Remove K Elements</strong><br>\nTime: O(n)<br>\nSpace: O(n) </p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"k\">class</span> <span class=\"nc\">Solution</span><span class=\"p\">:</span>\n    <span class=\"k\">def</span> <span class=\"nf\">removeKdigits</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">num</span><span class=\"p\">:</span> <span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">k</span><span class=\"p\">:</span> <span class=\"nb\">int</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"nb\">str</span><span class=\"p\">:</span>\n        <span class=\"k\">if</span> <span class=\"n\">k</span> <span class=\"o\">==</span> <span class=\"mi\">0</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"n\">num</span>\n        <span class=\"k\">if</span> <span class=\"n\">k</span> <span class=\"o\">&gt;=</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">num</span><span class=\"p\">):</span>\n            <span class=\"k\">return</span> <span class=\"s1\">&#39;0&#39;</span>\n\n        <span class=\"n\">num</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">(</span><span class=\"n\">i</span><span class=\"p\">)</span> <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"n\">num</span><span class=\"p\">]</span>\n        <span class=\"n\">start</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>\n        <span class=\"n\">end</span> <span class=\"o\">=</span> <span class=\"n\">k</span>\n\n        <span class=\"k\">while</span> <span class=\"n\">start</span> <span class=\"o\">&lt;</span> <span class=\"n\">end</span> <span class=\"o\">&lt;</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">num</span><span class=\"p\">):</span>\n            <span class=\"n\">window</span> <span class=\"o\">=</span> <span class=\"n\">num</span><span class=\"p\">[</span><span class=\"n\">start</span><span class=\"p\">:</span><span class=\"n\">end</span> <span class=\"o\">+</span> <span class=\"mi\">1</span><span class=\"p\">]</span>\n            <span class=\"n\">best</span> <span class=\"o\">=</span> <span class=\"n\">window</span><span class=\"o\">.</span><span class=\"n\">index</span><span class=\"p\">(</span><span class=\"nb\">min</span><span class=\"p\">(</span><span class=\"n\">window</span><span class=\"p\">))</span>\n            <span class=\"k\">if</span> <span class=\"n\">best</span> <span class=\"o\">==</span> <span class=\"mi\">0</span><span class=\"p\">:</span>\n                <span class=\"n\">start</span> <span class=\"o\">+=</span> <span class=\"mi\">1</span>\n            <span class=\"k\">else</span><span class=\"p\">:</span>\n                <span class=\"n\">k</span> <span class=\"o\">-=</span> <span class=\"n\">best</span>\n                <span class=\"n\">num</span> <span class=\"o\">=</span> <span class=\"n\">num</span><span class=\"p\">[:</span><span class=\"n\">start</span><span class=\"p\">]</span> <span class=\"o\">+</span> <span class=\"n\">num</span><span class=\"p\">[</span><span class=\"n\">start</span> <span class=\"o\">+</span> <span class=\"n\">best</span><span class=\"p\">:]</span>\n                <span class=\"n\">start</span> <span class=\"o\">+=</span> <span class=\"mi\">1</span>\n                <span class=\"k\">if</span> <span class=\"n\">k</span> <span class=\"o\">==</span> <span class=\"mi\">0</span><span class=\"p\">:</span>\n                    <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">format_answ</span><span class=\"p\">(</span><span class=\"n\">num</span><span class=\"p\">)</span>\n            <span class=\"n\">end</span> <span class=\"o\">=</span> <span class=\"n\">start</span> <span class=\"o\">+</span> <span class=\"n\">k</span>\n        <span class=\"c1\">#delete last k digits</span>\n        <span class=\"n\">num</span> <span class=\"o\">=</span> <span class=\"n\">num</span><span class=\"p\">[:</span><span class=\"o\">-</span><span class=\"n\">k</span><span class=\"p\">]</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">format_answ</span><span class=\"p\">(</span><span class=\"n\">num</span><span class=\"p\">)</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">format_answ</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">num</span><span class=\"p\">:</span> <span class=\"nb\">str</span><span class=\"p\">):</span>\n        <span class=\"n\">answ</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"s1\">&#39;&#39;</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">([</span><span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">i</span><span class=\"p\">)</span> <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"n\">num</span><span class=\"p\">]))</span>\n        <span class=\"n\">answ</span> <span class=\"o\">=</span> <span class=\"nb\">int</span><span class=\"p\">(</span><span class=\"n\">answ</span><span class=\"p\">)</span> <span class=\"c1\">#remove leading zeros</span>\n        <span class=\"k\">return</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">answ</span><span class=\"p\">)</span>\n</code></pre></div>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 197458952,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "c.sofiatti@gmail.com",
            "sender_full_name": "Caroline Sofiatti (she) (S1'15)",
            "sender_id": 232566,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "May LeetCoding Challenge",
            "submessages": [],
            "timestamp": 1589395817,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/2a6345cc359fb9370ce011d04d4965f20e0cf051?x=x&version=2",
            "client": "website",
            "content": "<p><span class=\"user-mention\" data-user-id=\"232566\">@Caroline Sofiatti (S1'15)</span>  Your time complexity is O(n^2 / k) and space complexity is O(n). This is because you have the outer while loop which would take n/k. Inside that you're doing index and slicing, which takes another n iterations. The slicing makes a new substring which takes linear space.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 197472080,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "ljeng@icloud.com",
            "sender_full_name": "Lareine Jeng (S2'16)",
            "sender_id": 9516,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "May LeetCoding Challenge",
            "submessages": [],
            "timestamp": 1589401313,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/ef80dcc578c3d972e3bec8113e3cc65873e8a109?x=x&version=2",
            "client": "ZulipElectron",
            "content": "<p>Thank you <span class=\"user-mention\" data-user-id=\"9516\">@Lareine Jeng (S2'16)</span> ! I really appreciate it!!!</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 197483105,
            "is_me_message": false,
            "reactions": [
                {
                    "emoji_code": "2764",
                    "emoji_name": "heart",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "ljeng@icloud.com",
                        "full_name": "Lareine Jeng (S2'16)",
                        "id": 9516
                    },
                    "user_id": 9516
                }
            ],
            "recipient_id": 24954,
            "sender_email": "c.sofiatti@gmail.com",
            "sender_full_name": "Caroline Sofiatti (she) (S1'15)",
            "sender_id": 232566,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "May LeetCoding Challenge",
            "submessages": [],
            "timestamp": 1589407298,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/e622b23d56ce1dbfd935c38e071636c4a40935e8?x=x&version=2",
            "client": "website",
            "content": "<p>To elaborate on <span class=\"user-mention\" data-user-id=\"263547\">@Aditya Athalye (he) (SP1'20)</span> excellent summary, it might be worth mentioning that there's a folklore trick to handle tail recursion using exceptions. A nice exposition is given by <a href=\"https://chrispenner.ca/posts/python-tail-recursion\">Chris Penner</a> (2016), which I'll summarize here. (However, I wouldn't attribute this trick to him; see my remarks below.)</p>\n<p>The basic idea is this: Just as <code>StopIteration</code> signals the end of iteration, you can use an ad hoc exception to signal a tail-recursive call, and a decorator to handle that signal. For example, the factorial function could be written thusly:</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"nd\">@recursively</span>\n<span class=\"k\">def</span> <span class=\"nf\">factorial</span><span class=\"p\">(</span><span class=\"n\">n</span><span class=\"p\">,</span> <span class=\"n\">acc</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">):</span>\n    <span class=\"k\">if</span> <span class=\"n\">n</span> <span class=\"o\">==</span> <span class=\"mi\">0</span><span class=\"p\">:</span>\n        <span class=\"k\">return</span> <span class=\"n\">acc</span>\n    <span class=\"k\">raise</span> <span class=\"n\">Recall</span><span class=\"p\">(</span><span class=\"n\">n</span> <span class=\"o\">-</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"n\">n</span> <span class=\"o\">*</span> <span class=\"n\">acc</span><span class=\"p\">)</span>  <span class=\"c1\"># NB. raise not return</span>\n</code></pre></div>\n\n\n<p>The decorator <code>@recursively</code> transforms <code>factorial()</code> so that it simply passes on the transformed arguments rather than calling itself, until there are no more tail calls:</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"k\">def</span> <span class=\"nf\">recursively</span><span class=\"p\">(</span><span class=\"n\">f</span><span class=\"p\">):</span>\n    <span class=\"k\">def</span> <span class=\"nf\">recurse</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">):</span>\n        <span class=\"k\">while</span> <span class=\"kc\">True</span><span class=\"p\">:</span>\n            <span class=\"k\">try</span><span class=\"p\">:</span>\n                <span class=\"k\">return</span> <span class=\"n\">f</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">)</span>\n            <span class=\"k\">except</span> <span class=\"n\">Recall</span> <span class=\"k\">as</span> <span class=\"n\">r</span><span class=\"p\">:</span>\n                <span class=\"n\">args</span> <span class=\"o\">=</span> <span class=\"n\">r</span><span class=\"o\">.</span><span class=\"n\">args</span>\n                <span class=\"n\">kwargs</span> <span class=\"o\">=</span> <span class=\"n\">r</span><span class=\"o\">.</span><span class=\"n\">kwargs</span>\n    <span class=\"k\">return</span> <span class=\"n\">recurse</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">Recall</span><span class=\"p\">(</span><span class=\"ne\">Exception</span><span class=\"p\">):</span>\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">args</span> <span class=\"o\">=</span> <span class=\"n\">args</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">kwargs</span> <span class=\"o\">=</span> <span class=\"n\">kwargs</span>\n</code></pre></div>\n\n\n<p>To see that this circumvents Python's recursion depth limit, try computing 10,000!:</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">factorial</span><span class=\"p\">(</span><span class=\"mi\">10_000</span><span class=\"p\">)</span>\n<span class=\"mi\">284625968091705451890641321</span> <span class=\"o\">...</span> <span class=\"c1\"># approx. 10^35660</span>\n</code></pre></div>\n\n\n<p>In contrast, there are \"only\" 10^80 particles in the universe, according to <a href=\"https://youtu.be/lpj0E0a0mlU\">Numberphile</a>.</p>\n<p>This seems to me to be a folklore trick. <a href=\"http://www.cs.cmu.edu/~rjsimmon/random/bovik2010case.pdf\">Simmons\u2013Beckman\u2013Murphy</a> (2010) had the same idea, and surely others have as well, considering how normal it is in Python to use exceptions for flow control (which is an old idea indeed, cf. Christopher Marlin's thesis on coroutines, Sec. 2.4, 1979).</p>\n<div class=\"youtube-video message_inline_image\"><a data-id=\"lpj0E0a0mlU\" href=\"https://youtu.be/lpj0E0a0mlU\"><img src=\"https://i.ytimg.com/vi/lpj0E0a0mlU/default.jpg\"></a></div>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 197933528,
            "is_me_message": false,
            "last_edit_timestamp": 1589808611,
            "reactions": [
                {
                    "emoji_code": "1f419",
                    "emoji_name": "octopus",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "c.sofiatti@gmail.com",
                        "full_name": "Caroline Sofiatti (she) (S1'15)",
                        "id": 232566
                    },
                    "user_id": 232566
                },
                {
                    "emoji_code": "2764",
                    "emoji_name": "heart",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "c.sofiatti@gmail.com",
                        "full_name": "Caroline Sofiatti (she) (S1'15)",
                        "id": 232566
                    },
                    "user_id": 232566
                },
                {
                    "emoji_code": "2764",
                    "emoji_name": "heart",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "andrew.montalenti@gmail.com",
                        "full_name": "Andrew Montalenti (he) (m7'19)",
                        "id": 247727
                    },
                    "user_id": 247727
                },
                {
                    "emoji_code": "2764",
                    "emoji_name": "heart",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "jimmy@skelios.com",
                        "full_name": "James Byess (he) (F1'19)",
                        "id": 234072
                    },
                    "user_id": 234072
                },
                {
                    "emoji_code": "1f419",
                    "emoji_name": "octopus",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "jimmy@skelios.com",
                        "full_name": "James Byess (he) (F1'19)",
                        "id": 234072
                    },
                    "user_id": 234072
                },
                {
                    "emoji_code": "1f419",
                    "emoji_name": "octopus",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "jkrippy@gmail.com",
                        "full_name": "Jonathan Rippy (he) (m6'19)",
                        "id": 240597
                    },
                    "user_id": 240597
                },
                {
                    "emoji_code": "1f419",
                    "emoji_name": "octopus",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "aditya.athalye@gmail.com",
                        "full_name": "Aditya Athalye (he) (SP1'20)",
                        "id": 263547
                    },
                    "user_id": 263547
                },
                {
                    "emoji_code": "2764",
                    "emoji_name": "heart",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "jkrippy@gmail.com",
                        "full_name": "Jonathan Rippy (he) (m6'19)",
                        "id": 240597
                    },
                    "user_id": 240597
                }
            ],
            "recipient_id": 24954,
            "sender_email": "eha@posteo.de",
            "sender_full_name": "Eugene Ha (he) (S1'18)",
            "sender_id": 116366,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Recursive-Like?",
            "submessages": [],
            "timestamp": 1589808280,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/51c7e3813e992d0a4e45cda57334d8a29aed680c?x=x&version=2",
            "client": "ZulipElectron",
            "content": "<p><span class=\"user-mention silent\" data-user-id=\"116366\">Eugene Ha (he) (S1'18)</span> This is really cool! The Recall Exception saves states during a nested call. But each while loop doesn't return until the try succeeds?</p>\n<p>So it's similar to a generator, but the return condition is inverted?</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 197959581,
            "is_me_message": false,
            "last_edit_timestamp": 1589819388,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "studio@robertdelanghe.com",
            "sender_full_name": "Bobby DeLanghe (he) (F2'19)",
            "sender_id": 240584,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Recursive-Like?",
            "submessages": [],
            "timestamp": 1589819119,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/8ef0cc9607b07f392f70560a43dbbb2d0efd6328?x=x&version=1",
            "client": "website",
            "content": "<p>that's pretty hilarious. You can make it a full TCO impl by passing the function to be called, instead of hardcoding <code>f</code> to be called on each iteartion</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 198021318,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "brian.kihoon.lee@gmail.com",
            "sender_full_name": "Brian Lee (F1'16)",
            "sender_id": 100043,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Recursive-Like?",
            "submessages": [],
            "timestamp": 1589862644,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/e622b23d56ce1dbfd935c38e071636c4a40935e8?x=x&version=2",
            "client": "website",
            "content": "<p><span class=\"user-mention\" data-user-id=\"240584\">@Bobby DeLanghe (he) (F2'19)</span>, you're right about the way it works, but there doesn't seem to be much similarity to generators (assuming I haven't missed your point). Incidentally, the fact that <code>Recall</code> is an exception is inessential; what's needed is <em>some</em> sentinel type to signal tail recursion. Making <code>Recall</code> an exception allows you to exploit the <code>try</code>-<code>except</code> mechanism; otherwise you have to resort to a bunch of <code>isinstance()</code> checks.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 198030442,
            "is_me_message": false,
            "last_edit_timestamp": 1589874718,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "eha@posteo.de",
            "sender_full_name": "Eugene Ha (he) (S1'18)",
            "sender_id": 116366,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Recursive-Like?",
            "submessages": [],
            "timestamp": 1589873631,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/e622b23d56ce1dbfd935c38e071636c4a40935e8?x=x&version=2",
            "client": "website",
            "content": "<p><span class=\"user-mention\" data-user-id=\"100043\">@Brian Lee (F1'16)</span>, good point: the decorator is not essential. Its only purpose is to bind the function to a local name, which allows you to TCO anonymous functions as well. For example:</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"n\">recursively</span><span class=\"p\">(</span><span class=\"k\">lambda</span> <span class=\"n\">n</span><span class=\"p\">,</span> <span class=\"n\">acc</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">:</span> <span class=\"n\">acc</span> <span class=\"k\">if</span> <span class=\"n\">n</span> <span class=\"o\">==</span> <span class=\"mi\">0</span> <span class=\"k\">else</span> <span class=\"n\">recall</span><span class=\"p\">(</span><span class=\"n\">n</span> <span class=\"o\">-</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"n\">n</span> <span class=\"o\">*</span> <span class=\"n\">acc</span><span class=\"p\">))(</span><span class=\"mi\">10_000</span><span class=\"p\">)</span>  <span class=\"c1\"># ~35k digits</span>\n</code></pre></div>\n\n\n<p>Here <code>recall(...)</code> simply raises <code>Recall(...)</code>.</p>\n<p>Being able to tail-recurse anonymous functions is a minor benefit of using a TCO decorator. A more practical one (still not huge) is that it makes your code slightly more robust to refactoring: you can change the name of the function without having to change its body as well.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 198031686,
            "is_me_message": false,
            "last_edit_timestamp": 1589875614,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "eha@posteo.de",
            "sender_full_name": "Eugene Ha (he) (S1'18)",
            "sender_id": 116366,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Recursive-Like?",
            "submessages": [],
            "timestamp": 1589874601,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/8ef0cc9607b07f392f70560a43dbbb2d0efd6328?x=x&version=1",
            "client": "ZulipMobile",
            "content": "<p>Ah wait a moment, I have seen this before - it's called trampolining?</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 198051784,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "brian.kihoon.lee@gmail.com",
            "sender_full_name": "Brian Lee (F1'16)",
            "sender_id": 100043,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Recursive-Like?",
            "submessages": [],
            "timestamp": 1589887821,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/8ef0cc9607b07f392f70560a43dbbb2d0efd6328?x=x&version=1",
            "client": "ZulipMobile",
            "content": "<p>It never clicked for me before</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 198052116,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "brian.kihoon.lee@gmail.com",
            "sender_full_name": "Brian Lee (F1'16)",
            "sender_id": 100043,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Recursive-Like?",
            "submessages": [],
            "timestamp": 1589888062,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/51c7e3813e992d0a4e45cda57334d8a29aed680c?x=x&version=2",
            "client": "ZulipElectron",
            "content": "<p><span class=\"user-mention\" data-user-id=\"116366\">@Eugene Ha (he) (S1'18)</span>  Exceptions are a really cool hack. My feeling was that both TCO and generators iteratively call a function recursively. The base case is returned in TCO but all but the base case is yielded in a generator. I'm not sure this is the correct intuition. It feels like the big difference is the local binding in TCO, where as a generator is partially evaluated function that is called multiple times?</p>\n<p>PS. thanks to <span class=\"user-mention\" data-user-id=\"100043\">@Brian Lee (F1'16)</span>  for the name drop. I was able to find this: <br>\n<a href=\"http://www.usrsb.in/blog/blog/2012/08/12/bouncing-pythons-generators-with-a-trampoline/\">Bouncing Python's Generators With a Trampoline - Alex Beal</a></p>\n<hr>\n<p><em>update</em>: the similarity I was seeing is because they were opposites. Generators are an example of <a href=\"https://en.wikipedia.org/wiki/Corecursion\">Corecursion</a> which builds from the base case. I was confusing base case with break out case above.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 198103477,
            "is_me_message": false,
            "last_edit_timestamp": 1589915689,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "studio@robertdelanghe.com",
            "sender_full_name": "Bobby DeLanghe (he) (F2'19)",
            "sender_id": 240584,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Recursive-Like?",
            "submessages": [],
            "timestamp": 1589910845,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/8ef0cc9607b07f392f70560a43dbbb2d0efd6328?x=x&version=1",
            "client": "ZulipMobile",
            "content": "<p>It never clicked for me before</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 198103959,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "brian.kihoon.lee@gmail.com",
            "sender_full_name": "Brian Lee (F1'16)",
            "sender_id": 100043,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Recursive-Like?",
            "submessages": [],
            "timestamp": 1589911068,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/c6a4682e6a46285de64c97c77b771481?d=identicon&version=1",
            "client": "website",
            "content": "<p>For extra fun, I think this would allow you to do first-class returns.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 198104913,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "ori@eigenstate.org",
            "sender_full_name": "Ori Dean Bernstein (he) (W2'20)",
            "sender_id": 255045,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Recursive-Like?",
            "submessages": [],
            "timestamp": 1589911456,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/c6a4682e6a46285de64c97c77b771481?d=identicon&version=1",
            "client": "website",
            "content": "<div class=\"codehilite\"><pre><span></span><code>   def ret(rv) raise Recall(rv)\n   def returnToSomewhereElse(val, ret): ret(compute(val))\n</code></pre></div>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 198105072,
            "is_me_message": false,
            "last_edit_timestamp": 1589911538,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "ori@eigenstate.org",
            "sender_full_name": "Ori Dean Bernstein (he) (W2'20)",
            "sender_id": 255045,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Recursive-Like?",
            "submessages": [],
            "timestamp": 1589911531,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/51c7e3813e992d0a4e45cda57334d8a29aed680c?x=x&version=2",
            "client": "ZulipElectron",
            "content": "<p><span class=\"user-mention\" data-user-id=\"116366\">@Eugene Ha (he) (S1'18)</span>  Just finished reading the paper you linked to. I love this part:</p>\n<blockquote>\n<p>Because of the pun on \u201cFunctional Pearl\u201d we really wanted to implement this in Perl, but none of the co-authors really wanted to learn Perl and we couldn\u2019t find Jason [4].</p>\n</blockquote>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 198116345,
            "is_me_message": false,
            "last_edit_timestamp": 1589917247,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "studio@robertdelanghe.com",
            "sender_full_name": "Bobby DeLanghe (he) (F2'19)",
            "sender_id": 240584,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Recursive-Like?",
            "submessages": [],
            "timestamp": 1589917204,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/096bee6351ba6927af83e84c635be5f5?d=identicon&version=1",
            "client": "ZulipElectron",
            "content": "<p><span class=\"user-group-mention\" data-user-group-id=\"41\">@Currently at RC</span>  Would anyone like to present on a topic tomorrow?</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 198172051,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "unnati97@gmail.com",
            "sender_full_name": "Unnati Niraj Patel (she) (S2'20)",
            "sender_id": 277193,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Study Group",
            "submessages": [],
            "timestamp": 1589965999,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/e622b23d56ce1dbfd935c38e071636c4a40935e8?x=x&version=2",
            "client": "website",
            "content": "<p><span class=\"user-mention\" data-user-id=\"240584\">@Bobby DeLanghe (he) (F2'19)</span>, thanks for sharing the Alex Beal article. Now I get what you meant by the connection with generators. I hadn't thought of it that way.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 198172985,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "eha@posteo.de",
            "sender_full_name": "Eugene Ha (he) (S1'18)",
            "sender_id": 116366,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Recursive-Like?",
            "submessages": [],
            "timestamp": 1589966648,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/096bee6351ba6927af83e84c635be5f5?d=identicon&version=1",
            "client": "ZulipElectron",
            "content": "<p><span class=\"user-group-mention\" data-user-group-id=\"41\">@Currently at RC</span>  <span class=\"user-mention\" data-user-id=\"276302\">@Anthony Anabila Abeo (he) (SP2'20)</span>  is going to present on graphs and it's various implemnetation!</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 199027084,
            "is_me_message": false,
            "reactions": [
                {
                    "emoji_code": "1f419",
                    "emoji_name": "octopus",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "talyian@gmail.com",
                        "full_name": "Jimmy Tang (he) (SP2'20)",
                        "id": 276140
                    },
                    "user_id": 276140
                },
                {
                    "emoji_code": "1f419",
                    "emoji_name": "octopus",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "anthonyabeo@gmail.com",
                        "full_name": "Anthony Anabila Abeo (he) (SP2'20)",
                        "id": 276302
                    },
                    "user_id": 276302
                },
                {
                    "emoji_code": "1f419",
                    "emoji_name": "octopus",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "jana.zeller@googlemail.com",
                        "full_name": "Jana Zeller (she) (SP2'20)",
                        "id": 276328
                    },
                    "user_id": 276328
                }
            ],
            "recipient_id": 24954,
            "sender_email": "unnati97@gmail.com",
            "sender_full_name": "Unnati Niraj Patel (she) (S2'20)",
            "sender_id": 277193,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Study Group",
            "submessages": [],
            "timestamp": 1590675004,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/a2193d0d44d3a89de9a2c14dbf38302a2320b022?x=x&version=2",
            "client": "ZulipElectron",
            "content": "<p>Hi, I have a somewhat fun problem to think about. I implemented this paper:<br>\n<a href=\"http://www.cemyuksel.com/research/sampleelimination/\">http://www.cemyuksel.com/research/sampleelimination/</a><br>\nand I'm thinking of ways to parallelize it. it's not a requirement, just some idle thoughts because it feels like an algorithm that should be able to run in parallel. so let me explain how it works.</p>\n<p>at the core of it you have a bunch of points and each point has a \"weight\". the \"weight\" is a sum of \"contributions\" of nearby points, where the \"contribution\" is a measure of how close another point is. so the total \"weight\" is a count of how many other points are nearby and how close they are. this part is easy to parallelize because each point can be summed independently.</p>\n<p>after you have calculated the \"weight\" for each point, you simply remove the point with the highest weight in a loop. after you remove a point you update all other points nearby and reduce their weight by whatever the removed point contributed. then you do the next iteration of the loop and remove the next highest-weighted point.</p>\n<p>this second half is what I want to parallelize. right now I just store all the points in a top-heap, so the point with the highest point is always the first item in the array. updating the nearby points is also easy because I remember their position in the heap. and they can only move down the heap, because their weight only goes down. (I also have a data structure that makes it fast to find nearby points)</p>\n<p>what makes it hard to parallelize is that each weight potentially influences each other weight. so lets say you want to run that second loop 10000 times, then you might say \"one way to parallelize that is to not just remove one point per iteration, but remove the top 16 points at once, in parallel\". the problem with that is that if you have two points with really high weights, maybe they just have really high weights because they're very close to each other. and once you remove one, the weight of the second one drops by a lot. maybe it drops far enough that that point shouldn't have been removed.</p>\n<p>to make this easier, I actually changed one thing relative to the original paper: my weights start off negative (say at -1) and contributions of nearby points can make them positive. I run the second loop until all the weights are negative again. so if a point is far away from other points, its weight will always be negative and it won't get removed. if a bunch of points are close together, their weight will be positive, but after a few have been removed, the remaining ones will be negative and can stay. once again this is easy to do with a top-heap, and this is how I define when I stop running the second loop: I stop when the largest remaining weight is zero or negative. I think it might also make parallelization easier because each point can reason about how many other nearby points would still have to be removed for it to stay around.</p>\n<p>anyway it feels like an algorithm that should be possible to parallelize since we're just doing really simple operations, subtracting contributions from weights. (maybe it's equivalent to some known graph problem that's already parallelized...) if anyone is interested in thinking about it, let me know</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 199208368,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "malteskarupke@fastmail.fm",
            "sender_full_name": "Malte Skarupke (he) (W2'20)",
            "sender_id": 255130,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Parallelizing an algorithm",
            "submessages": [],
            "timestamp": 1590784346,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/21b9cce736cbbe8e0761bbb33863c7d3112d0136?x=x&version=2",
            "client": "website",
            "content": "<p>I don't think this is easy to parallelize because you are always operating on the element with the highest weight. Since removing a single element can change the weight of all the other elements, a single modification can affect everything. A few ideas:</p>\n<ul>\n<li>For you idea around removing the top 16 points at once in parallel, if you can determine an element depends on none of the previous elements, you could safely process it.</li>\n<li>If you use a thread safe heap, you can parallelize the step where you update all the weights after removing a point.</li>\n</ul>\n<p>If you only need a \"best-effort\" solution, there are a number of different options. For example, you could segment the points into different regions and process each region independently without regard for the other regions.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 199239079,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "michaelmalis2@gmail.com",
            "sender_full_name": "Michael Malis (SP2'19)",
            "sender_id": 8099,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Parallelizing an algorithm",
            "submessages": [],
            "timestamp": 1590815103,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/a2193d0d44d3a89de9a2c14dbf38302a2320b022?x=x&version=2",
            "client": "ZulipElectron",
            "content": "<p>that last one is also what I was thinking about: operate on points that are far away from each other in parallel. I have a cutoff distance after which points no longer influence each other. it's not entirely safe to use that, because if I have three points, A, B and C, where A contributes nothing to C, but B is close enough to both A and C to contribute to both, A could still have an indirect influence: if it causes B to be eliminated, then the weights in C might change.</p>\n<p>maybe that won't be too much of a problem though. or maybe there is a way to fix things up later: if I removed too many points, maybe there is a way to reason about which points can be re-added...</p>\n<p>another approach might be to try to figure out if there is a unique best solution to the problem. like which points do I have to remove to get all the remaining weights as close as possible to zero? (but not positive) if there is a solution to that problem then maybe there is a different algorithm to arrive at that solution. maybe as a first approximation we can remove the constraint that the leftover weights may not be positive. then it feels like a generic math problem. I don't know the terms though. I want to say it might be related to a \"least squares\" fit, but I don't know enough about that area...</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 199261233,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "malteskarupke@fastmail.fm",
            "sender_full_name": "Malte Skarupke (he) (W2'20)",
            "sender_id": 255130,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Parallelizing an algorithm",
            "submessages": [],
            "timestamp": 1590851634,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/0789f8732b00c0952a58c7e4de8ae016e1bfbe20?x=x&version=2",
            "client": "website",
            "content": "<p>I agree with <span class=\"user-mention\" data-user-id=\"8099\">@Michael Malis (SP2'19)</span>  that this algorithm is not easy to parallelize because of the dependency between points. However, I do think you  can get an approximation of the greedy algorithm using the different region strategy suggested.</p>\n<p>Here's a proposed algorithm that seems in line with the current ideas. I suggest looking into spectral clustering since it aims to minimize the normalized cut between the segments.</p>\n<p>Let the total number of points in the set be N and the number of threads you want to run be P. </p>\n<ol>\n<li>Run a spectral clustering on the graph for M clusters where M is a large number (maybe M = floor(N / 30)).</li>\n<li>Select P clusters such that the graph cut between any two clusters is below a threshold. This requires some search but I would imagine this wouldn't be a huge problem with M being a large number.</li>\n<li>Run the greedy weight contraction algorithm on each of the clusters in parallel and do the update on the main graph.</li>\n<li>Every couple of iterations, rerun the spectral clustering to obtain some new clusters.</li>\n</ol>\n<p>There are some optimizations to step 2 (eg. each thread finding which cluster to operate on and locking adjacent clusters) that could work as well.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 199322062,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "neil.liu16@gmail.com",
            "sender_full_name": "Neil Liu (he) (SP2'20)",
            "sender_id": 276158,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Parallelizing an algorithm",
            "submessages": [],
            "timestamp": 1590960947,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/c6a4682e6a46285de64c97c77b771481?d=identicon&version=1",
            "client": "website",
            "content": "<p>The far-away point removal is sounding a lot like Barnes-Hut.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 199335853,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "ori@eigenstate.org",
            "sender_full_name": "Ori Dean Bernstein (he) (W2'20)",
            "sender_id": 255045,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Parallelizing an algorithm",
            "submessages": [],
            "timestamp": 1590985489,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/a2193d0d44d3a89de9a2c14dbf38302a2320b022?x=x&version=2",
            "client": "ZulipElectron",
            "content": "<p>I looked up Barnes-Hut, and yeah that looks very relevant. I actually made another change relative to the original paper: I replaced their custom formula for the weight contribution with a simple inverse square falloff. which makes it very similar to physics simulations. so don't know why I hadn't thought of looking into those before...</p>\n<p>I don't know right away how to use their data structure to parallelize my problem since I'm not sure how it helps me with removing points. but their data structure would allow me to get rid of the distance cutoff since far-away points can be grouped and then treated as if they were a single point. I'll think about it some more. I'm sure that same grouping also will make reasoning about the problem easier.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 199370365,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "malteskarupke@fastmail.fm",
            "sender_full_name": "Malte Skarupke (he) (W2'20)",
            "sender_id": 255130,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Parallelizing an algorithm",
            "submessages": [],
            "timestamp": 1591018980,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/096bee6351ba6927af83e84c635be5f5?d=identicon&version=1",
            "client": "ZulipElectron",
            "content": "<p><span class=\"user-group-mention\" data-user-group-id=\"41\">@Currently at RC</span>  Algorithms group is going to meet in 20 minutes!</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 199761258,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "unnati97@gmail.com",
            "sender_full_name": "Unnati Niraj Patel (she) (S2'20)",
            "sender_id": 277193,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Study Group",
            "submessages": [],
            "timestamp": 1591283464,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/096bee6351ba6927af83e84c635be5f5?d=identicon&version=1",
            "client": "ZulipElectron",
            "content": "<p><span class=\"user-group-mention\" data-user-group-id=\"41\">@Currently at RC</span>  Algorithms group meet happening now!</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 199764522,
            "is_me_message": false,
            "last_edit_timestamp": 1591284714,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "unnati97@gmail.com",
            "sender_full_name": "Unnati Niraj Patel (she) (S2'20)",
            "sender_id": 277193,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Study Group",
            "submessages": [],
            "timestamp": 1591284700,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/ceb708929a4de3f96fd6d0f656889359b857964e?x=x&version=2",
            "client": "website",
            "content": "<p>I've been troubled by this problem for quite a while now, and haven't had the time to sit down and do any actual thinking on it yet; I'm posting here in case anyone is interested or has already solved it, in which case, hints at a solution is appreciated. <br>\nHere's a recursive algorithm for merging two sorted sections A[1...n] and A[n+1...2n]. It is based on the observation that all pairs of entries between A[i] and A[j] for some i&lt;=n and j&gt;=n+1 are inversions; we can do a right circular shift to swap them in time linear in j-i, and the resulting array gives rise to two subproblems which we can recursively merge. For the code below, we assume the array consists of numbers and the ordering is '&lt;'.<br>\nRecMerge(A, n):<br>\n   1) Initialize two index variables i:=n-1 and j:=+1.<br>\n   2) while(A[i] &gt; A[j]) { i++; j--; } // find the boundary of the two adjacent subarrays whose elements form pairwise inversions<br>\n   3) Do a right circular shift to swap A[i+1...n] with A[n+1...j-1] in place. <br>\n   4) Observe on the modified array A, A[1...i] and A[i+1...i+j-n] are sorted, but need to be merged; A[i+j-n...2i+j-n] and A[j...2n] are also two sorted subarrays that need to be merged. We recursively call RecMerge on A[1...n] and A[n+1...2n] to merge them. </p>\n<p>I may very well have made some mistakes in typing up this algorithm (sorry, it's a bit late, and I'm feeling a bit weary). In case you're still confused, this webpage does a better explanation (<a href=\"https://xinok.wordpress.com/2014/08/17/in-place-merge-sort-demystified-2/\">https://xinok.wordpress.com/2014/08/17/in-place-merge-sort-demystified-2/</a>) but does not mention its worst-case runtime. We can, of course, look at some extreme cases: if the array consists of a single sorted chunk of size 2n, then our two subproblems will have size n, BUT we'll do O(1) work on each level; hence the runtime boils down to T(n)=2T(n/2)+1, which is O(n). In the other extreme, we consider two size-n chunks with each element in the first chunk forming a pairwise inversion with every element in the second chunk. In this case, we do O(n) work BUT our two subproblems will have size 0! The algorithm does not recurse, and the runtime stays at O(n). </p>\n<p>Another relevant property of this algorithm is that 1) it resolves a fixed number of inversions at each level 2) once an inversion is resolved, it is never inverted again, so the number of inversions monotonically decrease as the algorithm merges the array. But we know there are O(n^2) inversions at worst (although that worst-case example with O(n^2) inversions we just constructed runs in O(n) time), so this property is of no help.</p>\n<p>A bit of practical experimentation suggests that this algorithm runs quite well (with linear-time behavior) on most inputs, which suggests a hard case is nontrivial to construct. A potentially fruitful idea is to construct a few hard cases via brute-force, and try inductively construct larger hard cases. Haven't had time to try that yet.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 200008211,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "ruijief@princeton.edu",
            "sender_full_name": "Ruijie Fang (he) (S1'20)",
            "sender_id": 301019,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Worst-case analysis of a recursive in-place merge algorithm",
            "submessages": [],
            "timestamp": 1591506254,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/ceb708929a4de3f96fd6d0f656889359b857964e?x=x&version=2",
            "client": "website",
            "content": "<p>I would also like to mention that here \"in-place\" is in the most naive sense possible --- it only means \"not having to explicitly allocate another array\" and does not imply that this algorithm uses O(1) space. In fact, one of our examples we just constructed needs O(n) recursion depth.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 200008295,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "ruijief@princeton.edu",
            "sender_full_name": "Ruijie Fang (he) (S1'20)",
            "sender_id": 301019,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Worst-case analysis of a recursive in-place merge algorithm",
            "submessages": [],
            "timestamp": 1591506444,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/ceb708929a4de3f96fd6d0f656889359b857964e?x=x&version=2",
            "client": "website",
            "content": "<p>More and more convinced that the worst-case runtime is something like O(n log n). Think about an index k between n and j (n, j as defined in the algorithm). The maximum number of recursions k can incur is j-k, not accounting for the current level. This suggests a case where that we place inversions evenly at (n+n/2,n-n/2) , (n+n/4,n-n/4), (n+n/8, n-n/8), ... Seems like in this case where we have rather even splits, the runtime is on the level of n log n. This seems to be the worst possible intuitively since there's a trade off between number of recursion levels and the work done at each level.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 200009559,
            "is_me_message": false,
            "last_edit_timestamp": 1591509288,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "ruijief@princeton.edu",
            "sender_full_name": "Ruijie Fang (he) (S1'20)",
            "sender_id": 301019,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Worst-case analysis of a recursive in-place merge algorithm",
            "submessages": [],
            "timestamp": 1591509229,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/21b9cce736cbbe8e0761bbb33863c7d3112d0136?x=x&version=2",
            "client": "website",
            "content": "<p>I'm pretty sure the worst run time is at least <code>O(n log n)</code>. As an example, you for the two input arrays you can subdivide them each of them into two:</p>\n<div class=\"codehilite\"><pre><span></span><code>a = [&lt;a0&gt; &lt;a1&gt;]\nb = {&lt;b0&gt; &lt;b1&gt;]\n</code></pre></div>\n\n\n<p>You can construct the arrays so that all elements in <code>a1</code> are inversions with all the elements with <code>b0</code>, but not with <code>b1</code>. You swap <code>a1</code> with <code>b0</code> in <code>O(n)</code> time. Then you do the two recursive merges. This gives a runtime of <code>T(n) = 2T(n/2) + O(n)</code>. This is the same as merge sort so it's <code>O(n log n)</code>.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 200044055,
            "is_me_message": false,
            "last_edit_timestamp": 1591566398,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "michaelmalis2@gmail.com",
            "sender_full_name": "Michael Malis (SP2'19)",
            "sender_id": 8099,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Worst-case analysis of a recursive in-place merge algorithm",
            "submessages": [],
            "timestamp": 1591566348,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/21b9cce736cbbe8e0761bbb33863c7d3112d0136?x=x&version=2",
            "client": "website",
            "content": "<p>I'm not sure if this is right, since I'm assuming that you can recursively construct this scenario, but I haven't thought it through enough to see if you can.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 200044248,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "michaelmalis2@gmail.com",
            "sender_full_name": "Michael Malis (SP2'19)",
            "sender_id": 8099,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Worst-case analysis of a recursive in-place merge algorithm",
            "submessages": [],
            "timestamp": 1591566604,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/21b9cce736cbbe8e0761bbb33863c7d3112d0136?x=x&version=2",
            "client": "website",
            "content": "<p><span class=\"user-mention\" data-user-id=\"301019\">@Ruijie Fang (he) (S1'20)</span> It looks like the algorithm you are thinking of is referred to as <a href=\"http://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.102.4612&amp;rep=rep1&amp;type=pdf\">Symmerge</a>. It looks like it is <code>O((m + n) log m)</code> in the sizes of the two arrays you are merging.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 200044505,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "michaelmalis2@gmail.com",
            "sender_full_name": "Michael Malis (SP2'19)",
            "sender_id": 8099,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Worst-case analysis of a recursive in-place merge algorithm",
            "submessages": [],
            "timestamp": 1591567061,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/21b9cce736cbbe8e0761bbb33863c7d3112d0136?x=x&version=2",
            "client": "website",
            "content": "<p>It also looks like what you refer to as \"in-place\" is what's known as \"minimum storage\". For a \"minimum storage\" algorithm, you are allowed to make use of a stack that is limited to <code>O(log(m + n))</code> size.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 200044664,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "michaelmalis2@gmail.com",
            "sender_full_name": "Michael Malis (SP2'19)",
            "sender_id": 8099,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Worst-case analysis of a recursive in-place merge algorithm",
            "submessages": [],
            "timestamp": 1591567286,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/ceb708929a4de3f96fd6d0f656889359b857964e?x=x&version=2",
            "client": "website",
            "content": "<p>Michael, thanks for your reply! Yes, it does look like Symmerge is the same algorithm. Earlier today I also did some frantic searching, and found it was first proposed by Dudzinski and Dydek in a paper published in the early 80s in Information Processing Letters. It was later on referred to by many different names (also referred to as \"Merging by Decomposition\"). And in our case, where the two halves of the arrays to be merged both have length n, the runtime is indeed O(n log n).</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 200057962,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "ruijief@princeton.edu",
            "sender_full_name": "Ruijie Fang (he) (S1'20)",
            "sender_id": 301019,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Worst-case analysis of a recursive in-place merge algorithm",
            "submessages": [],
            "timestamp": 1591591342,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/700775c1b9679bb74bd97d4ced91fadf9cc2ed17?x=x&version=2",
            "client": "website",
            "content": "<p>so I'm still keeping up with the Leetcode challenges in Python...<a href=\"https://leetcode.com/explore/challenge/card/june-leetcoding-challenge/540/week-2-june-8th-june-14th/3356/\">today's problem</a> seems to be a straightforward binary search problem, but my solutions (both handwritten and using <code>bisect.bisect_left()</code>), while correct, are showing very slow performance relative to the rest of the pack. am i missing something? is there a much faster way to do this? my code is <a href=\"https://github.com/rolandcrosby/leetcode/blob/master/20200610-searchinsertposition.py\">here</a> if anyone's willing to take a look.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 200453554,
            "is_me_message": false,
            "last_edit_timestamp": 1591812310,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "roland@rolandcrosby.com",
            "sender_full_name": "Roland Crosby (he) (SP2'20)",
            "sender_id": 276197,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "May LeetCoding Challenge",
            "submessages": [],
            "timestamp": 1591812197,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/1bd49962ff0f7e7f3ee603f8243a1015bb6690bd?x=x&version=7",
            "client": "website",
            "content": "<p>Hi Roland, on my machine, and on my test Leetcode run <a href=\"/user_uploads/13/gYiJ2EZlwQLTIZSOgHCeTjym/image.png\">image.png</a> , <code>return bisect.bisect_left(num, target)</code> is about middle-of-the-pack in terms of timing.</p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/13/gYiJ2EZlwQLTIZSOgHCeTjym/image.png\" title=\"image.png\"><img src=\"/user_uploads/13/gYiJ2EZlwQLTIZSOgHCeTjym/image.png\"></a></div><p>When I copy-paste the <a href=\"https://github.com/python/cpython/blob/master/Lib/bisect.py#L50-L70\">reference code from /usr/lib/python3.#/bisect.py</a>, it performs very similarly to your implementation. the builtin version is faster because <a href=\"https://github.com/python/cpython/blob/master/Lib/bisect.py#L74\">they import an optimized C version of the algorithm</a></p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 200464283,
            "is_me_message": false,
            "last_edit_timestamp": 1591817080,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "talyian@gmail.com",
            "sender_full_name": "Jimmy Tang (he) (SP2'20)",
            "sender_id": 276140,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "May LeetCoding Challenge",
            "submessages": [],
            "timestamp": 1591817023,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/700775c1b9679bb74bd97d4ced91fadf9cc2ed17?x=x&version=2",
            "client": "website",
            "content": "<p>thanks jimmy! weird, i tried submitting that exact code myself a few times and it was always toward the low end. guess it's just leetcode being weird, glad i wasn't missing anything</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 200464466,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "roland@rolandcrosby.com",
            "sender_full_name": "Roland Crosby (he) (SP2'20)",
            "sender_id": 276197,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "May LeetCoding Challenge",
            "submessages": [],
            "timestamp": 1591817111,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/89ca9a012749d846c25306ce17aebb57?d=identicon&version=1",
            "client": "website",
            "content": "<p>the runtime is so low here (48ms) that i tell people not to worry about where their solution falls. once you start hitting problems that take hundreds of ms, it is worth optimizing and worrying about where your solution falls. its likely that there are two things going on: 1) time of day / work load variance in submission runtime and 2) lack of precise timing mechanisms.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 200488918,
            "is_me_message": false,
            "reactions": [
                {
                    "emoji_code": "1f44d",
                    "emoji_name": "+1",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "nathanisom27@gmail.com",
                        "full_name": "Nathan Isom (he) (W2'20)",
                        "id": 255190
                    },
                    "user_id": 255190
                },
                {
                    "emoji_code": "1f44d",
                    "emoji_name": "+1",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "roland@rolandcrosby.com",
                        "full_name": "Roland Crosby (he) (SP2'20)",
                        "id": 276197
                    },
                    "user_id": 276197
                }
            ],
            "recipient_id": 24954,
            "sender_email": "okay.zed@gmail.com",
            "sender_full_name": "okay zed (S1'18)",
            "sender_id": 117513,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "May LeetCoding Challenge",
            "submessages": [],
            "timestamp": 1591830090,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/2a6345cc359fb9370ce011d04d4965f20e0cf051?x=x&version=2",
            "client": "website",
            "content": "<p>June 6 - Queue Reconstruction by Height - Most concise O(n log n) time and O(n) space<br>\nTo understand this solution, you must first understand the standard O(n^2) solution where you sort the heights in reverse order and then insert them into the queue. This solution is just like it, except we use a SortedList for O(log n) insert. For each height, we also have a <code>rank</code> that tells you where to insert it.</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"kn\">from</span> <span class=\"nn\">sortedcontainers</span> <span class=\"kn\">import</span> <span class=\"n\">SortedList</span>\n\n\n<span class=\"k\">def</span> <span class=\"nf\">reconstructQueue</span><span class=\"p\">(</span><span class=\"n\">people</span><span class=\"p\">):</span>\n    <span class=\"n\">d</span> <span class=\"o\">=</span> <span class=\"n\">collections</span><span class=\"o\">.</span><span class=\"n\">defaultdict</span><span class=\"p\">(</span><span class=\"n\">SortedList</span><span class=\"p\">)</span>\n    <span class=\"k\">for</span> <span class=\"n\">h</span><span class=\"p\">,</span> <span class=\"n\">k</span> <span class=\"ow\">in</span> <span class=\"n\">people</span><span class=\"p\">:</span>\n        <span class=\"n\">d</span><span class=\"p\">[</span><span class=\"n\">h</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">add</span><span class=\"p\">(</span><span class=\"n\">k</span><span class=\"p\">)</span>\n    <span class=\"n\">sl</span> <span class=\"o\">=</span> <span class=\"n\">SortedList</span><span class=\"p\">()</span>\n    <span class=\"k\">for</span> <span class=\"n\">h</span> <span class=\"ow\">in</span> <span class=\"nb\">sorted</span><span class=\"p\">(</span><span class=\"n\">d</span><span class=\"p\">,</span> <span class=\"n\">reverse</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">):</span>\n        <span class=\"k\">for</span> <span class=\"n\">k</span> <span class=\"ow\">in</span> <span class=\"n\">d</span><span class=\"p\">[</span><span class=\"n\">h</span><span class=\"p\">]:</span>\n            <span class=\"k\">if</span> <span class=\"n\">sl</span><span class=\"p\">:</span>\n                <span class=\"k\">if</span> <span class=\"n\">k</span> <span class=\"o\">==</span> <span class=\"mi\">0</span><span class=\"p\">:</span>\n                    <span class=\"n\">rank</span> <span class=\"o\">=</span> <span class=\"n\">sl</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">][</span><span class=\"mi\">0</span><span class=\"p\">]</span>\n                <span class=\"k\">elif</span> <span class=\"n\">k</span> <span class=\"o\">==</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">sl</span><span class=\"p\">):</span>\n                    <span class=\"n\">rank</span> <span class=\"o\">=</span> <span class=\"n\">sl</span><span class=\"p\">[</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">][</span><span class=\"mi\">0</span><span class=\"p\">]</span> <span class=\"o\">+</span> <span class=\"mi\">1</span>\n                <span class=\"k\">else</span><span class=\"p\">:</span>\n                    <span class=\"n\">rank</span> <span class=\"o\">=</span> <span class=\"n\">sl</span><span class=\"p\">[</span><span class=\"n\">k</span> <span class=\"o\">-</span> <span class=\"mi\">1</span><span class=\"p\">][</span><span class=\"mi\">0</span><span class=\"p\">]</span> <span class=\"o\">+</span> <span class=\"n\">sl</span><span class=\"p\">[</span><span class=\"n\">k</span><span class=\"p\">][</span><span class=\"mi\">0</span><span class=\"p\">]</span>\n            <span class=\"k\">else</span><span class=\"p\">:</span>\n                <span class=\"n\">rank</span> <span class=\"o\">=</span> <span class=\"mi\">1</span>\n            <span class=\"n\">sl</span><span class=\"o\">.</span><span class=\"n\">add</span><span class=\"p\">((</span><span class=\"n\">rank</span><span class=\"o\">/</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"n\">h</span><span class=\"p\">,</span> <span class=\"n\">k</span><span class=\"p\">))</span>\n    <span class=\"k\">return</span> <span class=\"p\">[[</span><span class=\"n\">h</span><span class=\"p\">,</span> <span class=\"n\">k</span><span class=\"p\">]</span> <span class=\"k\">for</span> <span class=\"n\">rank</span><span class=\"p\">,</span> <span class=\"n\">h</span><span class=\"p\">,</span> <span class=\"n\">k</span><span class=\"p\">]</span>\n</code></pre></div>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 200510642,
            "is_me_message": false,
            "last_edit_timestamp": 1591858558,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "ljeng@icloud.com",
            "sender_full_name": "Lareine Jeng (S2'16)",
            "sender_id": 9516,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "May LeetCoding Challenge",
            "submessages": [],
            "timestamp": 1591858509,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/096bee6351ba6927af83e84c635be5f5?d=identicon&version=1",
            "client": "ZulipElectron",
            "content": "<p><span class=\"user-group-mention\" data-user-group-id=\"41\">@Currently at RC</span>  Algorithms group happening in 7 minutes!</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 200559371,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "unnati97@gmail.com",
            "sender_full_name": "Unnati Niraj Patel (she) (S2'20)",
            "sender_id": 277193,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Study Group",
            "submessages": [],
            "timestamp": 1591889021,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/096bee6351ba6927af83e84c635be5f5?d=identicon&version=1",
            "client": "ZulipElectron",
            "content": "<p><span class=\"user-group-mention\" data-user-group-id=\"41\">@Currently at RC</span>  Algorithms group meeting up right now!</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 200560581,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "unnati97@gmail.com",
            "sender_full_name": "Unnati Niraj Patel (she) (S2'20)",
            "sender_id": 277193,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Study Group",
            "submessages": [],
            "timestamp": 1591889485,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/a5990ea1928ad47ec4fc3b7998607178?d=identicon&version=1",
            "client": "website",
            "content": "<p>I'm trying to implement a character-by-character string search---like in one of those interfaces where you have a list of strings, and when you start typing it shows you the things that match what you're typing until you narrow it down.  But I'm hitting a wall (oh hay person who has never had a data structures/algorithms class).  Can someone talk me through it a little? </p>\n<p>My thought was to implement this as a graph where each node has an array of letters + a set of child nodes, and a node is hashable based on its letter array so that I can match nodes in constant time.  So, like, a tree with the words 'cat' and 'car' would have five nodes in it: (1) root node (letter=\"\", children=c), (2) c node (letter=c, children=a); (3) a node (letter=a, children = [t,r], (4) t node (letter=t, children=[]), (5) r node you can probably guess); and typing \"ca\" would show cat and car. </p>\n<p>And then searching for a word would be start at the root of the tree, see if the root node contains the first letter, if so, go to the node representing that letter and see if it contains the second letter, and so on, and so forth.  But I'm running into a wall with my data structures.  If I just use set operations to match nodes, and nodes are hashed based on their constituent letters, but not their children, then I can match in constant time, but I can't actually access the children of the matched node.  I can't search for words at all if the hash function for existing nodes is based on a word and its children. I could store children as an array, but then I couldn't search it in constant time.   For example (in swift): </p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"kd\">struct</span> <span class=\"nc\">Graph</span> <span class=\"p\">{</span>\n    <span class=\"kd\">let</span> <span class=\"nv\">root</span><span class=\"p\">:</span> <span class=\"n\">Node</span>\n    <span class=\"kd\">init</span><span class=\"p\">()</span> <span class=\"p\">{</span>\n        <span class=\"n\">root</span> <span class=\"p\">=</span> <span class=\"n\">Node</span><span class=\"p\">([])</span>\n    <span class=\"p\">}</span>\n    <span class=\"kd\">func</span> <span class=\"nf\">search</span><span class=\"p\">(</span><span class=\"kc\">_</span> <span class=\"n\">target</span><span class=\"p\">:</span> <span class=\"n\">Node</span><span class=\"p\">)</span> <span class=\"p\">-&gt;</span> <span class=\"nb\">Bool</span> <span class=\"p\">{</span>\n        <span class=\"kd\">let</span> <span class=\"nv\">letters</span> <span class=\"p\">=</span> <span class=\"nb\">Array</span><span class=\"p\">(</span><span class=\"n\">target</span><span class=\"p\">.</span><span class=\"n\">word</span><span class=\"p\">)</span>\n        <span class=\"kd\">var</span> <span class=\"nv\">curnode</span> <span class=\"p\">=</span> <span class=\"n\">root</span>\n        <span class=\"k\">for</span> <span class=\"n\">letter</span> <span class=\"k\">in</span> <span class=\"n\">letters</span> <span class=\"p\">{</span>\n            <span class=\"k\">if</span> <span class=\"o\">!</span><span class=\"n\">curnode</span><span class=\"p\">.</span><span class=\"n\">children</span><span class=\"p\">.</span><span class=\"bp\">contains</span><span class=\"p\">(</span><span class=\"n\">Node</span><span class=\"p\">([</span><span class=\"n\">letter</span><span class=\"p\">]))</span> <span class=\"p\">{</span>\n                <span class=\"k\">return</span> <span class=\"kc\">false</span>\n            <span class=\"p\">}</span>\n            <span class=\"k\">else</span> <span class=\"p\">{</span>\n                <span class=\"c1\">// GAH!  I want to set curnode to the existing child that matched the test... but I don&#39;t have access to it.</span>\n            <span class=\"p\">}</span>\n        <span class=\"p\">}</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n\n<span class=\"kd\">class</span> <span class=\"nc\">Node</span><span class=\"p\">:</span> <span class=\"nb\">Hashable</span> <span class=\"p\">{</span>\n    <span class=\"kd\">static</span> <span class=\"kd\">func</span> <span class=\"p\">==</span> <span class=\"p\">(</span><span class=\"n\">lhs</span><span class=\"p\">:</span> <span class=\"n\">Node</span><span class=\"p\">,</span> <span class=\"n\">rhs</span><span class=\"p\">:</span> <span class=\"n\">Node</span><span class=\"p\">)</span> <span class=\"p\">-&gt;</span> <span class=\"nb\">Bool</span> <span class=\"p\">{</span>\n        <span class=\"k\">return</span> <span class=\"n\">lhs</span><span class=\"p\">.</span><span class=\"n\">word</span> <span class=\"p\">==</span> <span class=\"n\">rhs</span><span class=\"p\">.</span><span class=\"n\">word</span>\n    <span class=\"p\">}</span>\n    <span class=\"kd\">func</span> <span class=\"nf\">hash</span><span class=\"p\">(</span><span class=\"n\">into</span> <span class=\"n\">hasher</span><span class=\"p\">:</span> <span class=\"kr\">inout</span> <span class=\"n\">Hasher</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n        <span class=\"n\">hasher</span><span class=\"p\">.</span><span class=\"n\">combine</span><span class=\"p\">(</span><span class=\"kc\">self</span><span class=\"p\">.</span><span class=\"n\">word</span><span class=\"p\">)</span>\n    <span class=\"p\">}</span>\n    <span class=\"kd\">var</span> <span class=\"nv\">word</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"nb\">Character</span><span class=\"p\">]</span>\n    <span class=\"kd\">var</span> <span class=\"nv\">children</span><span class=\"p\">:</span> <span class=\"n\">Set</span><span class=\"p\">&lt;</span><span class=\"n\">Node</span><span class=\"p\">&gt;</span>\n    <span class=\"kd\">init</span><span class=\"p\">(</span><span class=\"kc\">_</span> <span class=\"n\">w</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"nb\">Character</span><span class=\"p\">])</span> <span class=\"p\">{</span>\n        <span class=\"n\">word</span> <span class=\"p\">=</span> <span class=\"n\">w</span>\n        <span class=\"n\">children</span> <span class=\"p\">=</span> <span class=\"p\">[]</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n</code></pre></div>\n\n\n<p>Can someone drop me a hint about how I'm thinking about this wrong? Because I'm doing this in Swift, and that language lets you do truly unholy kinds of things with extensions on built-in types, so, if I really wanted to, I could just monkey-patch <code>Character</code> to have a children property consisting of other characters.  But that seems all kinds of shady.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 200968329,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "paul.gowder@gmail.com",
            "sender_full_name": "Paul Gowder (S2'17)",
            "sender_id": 101322,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "algo-zulip will you be my rubber ducky?",
            "submessages": [],
            "timestamp": 1592275949,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/a5990ea1928ad47ec4fc3b7998607178?d=identicon&version=1",
            "client": "website",
            "content": "<p>and come to think of it, that still wouldn't solve the fundamental problem, which is that I've got some kind of entity (be it a node or a twisted, monkey-patched, character) with two properties: (a) the thing that I care about when searching (what character it is), and (b) the thing that has the information about where the next thing to be searched is.  And if I want constant time matches, I need a hash function, and for searching for data outside the existing graph that hash function needs to just depend on (a)...</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 200968545,
            "is_me_message": false,
            "last_edit_timestamp": 1592276431,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "paul.gowder@gmail.com",
            "sender_full_name": "Paul Gowder (S2'17)",
            "sender_id": 101322,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "algo-zulip will you be my rubber ducky?",
            "submessages": [],
            "timestamp": 1592276344,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/c6a4682e6a46285de64c97c77b771481?d=identicon&version=1",
            "client": "website",
            "content": "<blockquote>\n<p>My thought was to implement this as a graph where each node has an array of letters + a set of child nodes, and a node is hashable based on its letter array so that I can match nodes in constant time. So, like, a tree with the words 'cat' and 'car' would have five nodes in it: (1) root node (letter=\"\", children=c), (2) c node (letter=c, children=a); (3) a node (letter=a, children = [t,r], (4) t node (letter=t, children=[]), (5) r node you can probably guess); and typing \"ca\" would show cat and car.</p>\n</blockquote>\n<p>Congratulations, you've invented a trie :)</p>\n<p>One thing you'll need to tweak: You need a flag for whether a node ends a word, or you'll lose track of prefixes: \"cat\", \"caterpillar\". Other than that, it seems like you're on the right track, you'll just need a hash table for the children instead of a set.</p>\n<p>I'd get rid of the 'word', and just store the character that nodes represent: your path through the graph lets you recover the words.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 201030448,
            "is_me_message": false,
            "last_edit_timestamp": 1592321564,
            "reactions": [
                {
                    "emoji_code": "1f333",
                    "emoji_name": "deciduous_tree",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "studio@robertdelanghe.com",
                        "full_name": "Bobby DeLanghe (he) (F2'19)",
                        "id": 240584
                    },
                    "user_id": 240584
                },
                {
                    "emoji_code": "2764",
                    "emoji_name": "heart",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "paul.gowder@gmail.com",
                        "full_name": "Paul Gowder (S2'17)",
                        "id": 101322
                    },
                    "user_id": 101322
                }
            ],
            "recipient_id": 24954,
            "sender_email": "ori@eigenstate.org",
            "sender_full_name": "Ori Dean Bernstein (he) (W2'20)",
            "sender_id": 255045,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "algo-zulip will you be my rubber ducky?",
            "submessages": [],
            "timestamp": 1592320571,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/a5990ea1928ad47ec4fc3b7998607178?d=identicon&version=1",
            "client": "website",
            "content": "<p>ooh, that seems like it might be simpler.  And now I know the term to google, thanks <span class=\"user-mention\" data-user-id=\"255045\">@Ori Dean Bernstein (he) (W2'20)</span>  :-)</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 201036258,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "paul.gowder@gmail.com",
            "sender_full_name": "Paul Gowder (S2'17)",
            "sender_id": 101322,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "algo-zulip will you be my rubber ducky?",
            "submessages": [],
            "timestamp": 1592322993,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/a5990ea1928ad47ec4fc3b7998607178?d=identicon&version=1",
            "client": "website",
            "content": "<p>Yay, that was what I needed to figure it out!  </p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"kd\">struct</span> <span class=\"nc\">Graph</span> <span class=\"p\">{</span>\n    <span class=\"kd\">let</span> <span class=\"nv\">root</span><span class=\"p\">:</span> <span class=\"n\">Node</span>\n    <span class=\"kd\">init</span><span class=\"p\">()</span> <span class=\"p\">{</span>\n        <span class=\"n\">root</span> <span class=\"p\">=</span> <span class=\"n\">Node</span><span class=\"p\">()</span>\n    <span class=\"p\">}</span>\n    <span class=\"kd\">init</span><span class=\"p\">(</span><span class=\"n\">testnode</span><span class=\"p\">:</span> <span class=\"n\">Node</span><span class=\"p\">){</span>\n        <span class=\"n\">root</span> <span class=\"p\">=</span> <span class=\"n\">Node</span><span class=\"p\">(</span><span class=\"n\">testnode</span><span class=\"p\">:</span> <span class=\"n\">testnode</span><span class=\"p\">)</span>\n    <span class=\"p\">}</span>\n    <span class=\"kd\">func</span> <span class=\"nf\">search</span><span class=\"p\">(</span><span class=\"kc\">_</span> <span class=\"n\">word</span><span class=\"p\">:</span> <span class=\"nb\">String</span><span class=\"p\">)</span> <span class=\"p\">-&gt;</span> <span class=\"nb\">Bool</span> <span class=\"p\">{</span>\n        <span class=\"kd\">let</span> <span class=\"nv\">letters</span> <span class=\"p\">=</span> <span class=\"nb\">Array</span><span class=\"p\">(</span><span class=\"n\">word</span><span class=\"p\">)</span>\n        <span class=\"bp\">print</span><span class=\"p\">(</span><span class=\"n\">letters</span><span class=\"p\">)</span>\n        <span class=\"kd\">var</span> <span class=\"nv\">curnode</span> <span class=\"p\">=</span> <span class=\"n\">root</span>\n        <span class=\"k\">for</span> <span class=\"n\">letter</span> <span class=\"k\">in</span> <span class=\"n\">letters</span> <span class=\"p\">{</span>\n            <span class=\"k\">guard</span> <span class=\"kd\">let</span> <span class=\"nv\">match</span> <span class=\"p\">=</span> <span class=\"n\">curnode</span><span class=\"p\">.</span><span class=\"n\">children</span><span class=\"p\">.</span><span class=\"bp\">first</span><span class=\"p\">(</span><span class=\"k\">where</span><span class=\"p\">:</span> <span class=\"p\">{(</span><span class=\"n\">key</span><span class=\"p\">,</span> <span class=\"kc\">_</span><span class=\"p\">)</span> <span class=\"k\">in</span>\n                <span class=\"n\">key</span> <span class=\"p\">==</span> <span class=\"n\">letter</span>\n            <span class=\"p\">})</span>\n                <span class=\"k\">else</span> <span class=\"p\">{</span>\n                    <span class=\"k\">return</span> <span class=\"kc\">false</span>\n            <span class=\"p\">}</span>\n            <span class=\"n\">curnode</span> <span class=\"p\">=</span> <span class=\"n\">match</span><span class=\"p\">.</span><span class=\"n\">value</span>\n        <span class=\"p\">}</span>\n        <span class=\"k\">if</span> <span class=\"n\">curnode</span><span class=\"p\">.</span><span class=\"n\">contained</span> <span class=\"p\">{</span>\n            <span class=\"k\">return</span> <span class=\"kc\">true</span>\n        <span class=\"p\">}</span>\n        <span class=\"k\">return</span> <span class=\"kc\">false</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n\n<span class=\"kd\">class</span> <span class=\"nc\">Node</span> <span class=\"p\">{</span>\n    <span class=\"kd\">var</span> <span class=\"nv\">char</span><span class=\"p\">:</span> <span class=\"nb\">Character</span><span class=\"p\">?</span>\n    <span class=\"kd\">var</span> <span class=\"nv\">children</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"nb\">Character</span><span class=\"p\">:</span><span class=\"n\">Node</span><span class=\"p\">]</span>\n    <span class=\"kd\">var</span> <span class=\"nv\">contained</span><span class=\"p\">:</span> <span class=\"nb\">Bool</span>\n    <span class=\"kd\">init</span><span class=\"p\">()</span> <span class=\"p\">{</span>\n        <span class=\"n\">char</span> <span class=\"p\">=</span> <span class=\"kc\">nil</span>\n        <span class=\"n\">children</span> <span class=\"p\">=</span> <span class=\"p\">[:]</span>\n        <span class=\"n\">contained</span> <span class=\"p\">=</span> <span class=\"kc\">false</span>\n    <span class=\"p\">}</span>\n    <span class=\"kd\">init</span><span class=\"p\">(</span><span class=\"kc\">_</span> <span class=\"n\">c</span><span class=\"p\">:</span> <span class=\"nb\">Character</span><span class=\"p\">,</span> <span class=\"kr\">final</span><span class=\"p\">:</span> <span class=\"nb\">Bool</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n        <span class=\"n\">children</span> <span class=\"p\">=</span> <span class=\"p\">[:]</span>\n        <span class=\"n\">contained</span> <span class=\"p\">=</span> <span class=\"kr\">final</span>\n        <span class=\"n\">char</span> <span class=\"p\">=</span> <span class=\"n\">c</span>\n    <span class=\"p\">}</span>\n    <span class=\"kd\">init</span><span class=\"p\">(</span><span class=\"kc\">_</span> <span class=\"n\">c</span><span class=\"p\">:</span> <span class=\"nb\">Character</span><span class=\"p\">,</span> <span class=\"kr\">final</span><span class=\"p\">:</span> <span class=\"nb\">Bool</span><span class=\"p\">,</span> <span class=\"n\">kids</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"nb\">Character</span><span class=\"p\">:</span><span class=\"n\">Node</span><span class=\"p\">])</span> <span class=\"p\">{</span>\n        <span class=\"n\">children</span> <span class=\"p\">=</span> <span class=\"n\">kids</span>\n        <span class=\"n\">contained</span> <span class=\"p\">=</span> <span class=\"kr\">final</span>\n        <span class=\"n\">char</span> <span class=\"p\">=</span> <span class=\"n\">c</span>\n    <span class=\"p\">}</span>\n    <span class=\"kd\">init</span><span class=\"p\">(</span><span class=\"n\">testnode</span><span class=\"p\">:</span> <span class=\"n\">Node</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n        <span class=\"n\">char</span> <span class=\"p\">=</span> <span class=\"kc\">nil</span>\n        <span class=\"n\">children</span> <span class=\"p\">=</span> <span class=\"p\">[</span><span class=\"n\">testnode</span><span class=\"p\">.</span><span class=\"n\">char</span><span class=\"p\">!:</span> <span class=\"n\">testnode</span><span class=\"p\">]</span>\n        <span class=\"n\">contained</span> <span class=\"p\">=</span> <span class=\"kc\">false</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n\n<span class=\"kd\">let</span> <span class=\"nv\">test_t</span> <span class=\"p\">=</span> <span class=\"n\">Node</span><span class=\"p\">(</span><span class=\"nb\">Character</span><span class=\"p\">(</span><span class=\"s\">&quot;t&quot;</span><span class=\"p\">),</span> <span class=\"kr\">final</span><span class=\"p\">:</span> <span class=\"kc\">true</span><span class=\"p\">)</span>\n<span class=\"kd\">let</span> <span class=\"nv\">test_a</span> <span class=\"p\">=</span> <span class=\"n\">Node</span><span class=\"p\">(</span><span class=\"nb\">Character</span><span class=\"p\">(</span><span class=\"s\">&quot;a&quot;</span><span class=\"p\">),</span> <span class=\"kr\">final</span><span class=\"p\">:</span> <span class=\"kc\">false</span><span class=\"p\">,</span> <span class=\"n\">kids</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"nb\">Character</span><span class=\"p\">(</span><span class=\"s\">&quot;t&quot;</span><span class=\"p\">):</span> <span class=\"n\">test_t</span><span class=\"p\">])</span>\n<span class=\"kd\">let</span> <span class=\"nv\">test_c</span> <span class=\"p\">=</span> <span class=\"n\">Node</span><span class=\"p\">(</span><span class=\"nb\">Character</span><span class=\"p\">(</span><span class=\"s\">&quot;c&quot;</span><span class=\"p\">),</span> <span class=\"kr\">final</span><span class=\"p\">:</span> <span class=\"kc\">false</span><span class=\"p\">,</span> <span class=\"n\">kids</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"nb\">Character</span><span class=\"p\">(</span><span class=\"s\">&quot;a&quot;</span><span class=\"p\">):</span> <span class=\"n\">test_a</span><span class=\"p\">])</span>\n<span class=\"kd\">let</span> <span class=\"nv\">testTrie</span> <span class=\"p\">=</span> <span class=\"n\">Graph</span><span class=\"p\">(</span><span class=\"n\">testnode</span><span class=\"p\">:</span> <span class=\"n\">test_c</span><span class=\"p\">)</span>\n<span class=\"n\">testTrie</span><span class=\"p\">.</span><span class=\"n\">search</span><span class=\"p\">(</span><span class=\"s\">&quot;cat&quot;</span><span class=\"p\">)</span> <span class=\"c1\">// true, yay!</span>\n<span class=\"n\">testTrie</span><span class=\"p\">.</span><span class=\"n\">search</span><span class=\"p\">(</span><span class=\"s\">&quot;ca&quot;</span><span class=\"p\">)</span> <span class=\"c1\">// false, also yay!</span>\n<span class=\"n\">testTrie</span><span class=\"p\">.</span><span class=\"n\">search</span><span class=\"p\">(</span><span class=\"s\">&quot;dog&quot;</span><span class=\"p\">)</span> <span class=\"c1\">// still false, yaaaayy!</span>\n</code></pre></div>\n\n\n<p>now to figure out how to add stuff...</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 201048753,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "paul.gowder@gmail.com",
            "sender_full_name": "Paul Gowder (S2'17)",
            "sender_id": 101322,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "algo-zulip will you be my rubber ducky?",
            "submessages": [],
            "timestamp": 1592328703,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/51c7e3813e992d0a4e45cda57334d8a29aed680c?x=x&version=2",
            "client": "ZulipElectron",
            "content": "<p>I just started reading <em>Structure and Interpretation of Computer Programs</em>. It's <br>\na great book for talking about algorithms as procedures in Lisp. It teaches you how to read a lisp, so no worries if you're not familiar with them.</p>\n<p>If you are interested in reading it or joining the Friday study group go to my post in the zulip thread: </p>\n<p><a href=\"#narrow/stream/18964-sicp-study.20group/topic/Study.20Group.3A.20Summer.20'20/near/201056134\">sicp study group</a></p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 201057095,
            "is_me_message": false,
            "last_edit_timestamp": 1592332842,
            "reactions": [
                {
                    "emoji_code": "1f6e0",
                    "emoji_name": "working_on_it",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "aditya.athalye@gmail.com",
                        "full_name": "Aditya Athalye (he) (SP1'20)",
                        "id": 263547
                    },
                    "user_id": 263547
                },
                {
                    "emoji_code": "1f6e0",
                    "emoji_name": "working_on_it",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "me@captnemo.in",
                        "full_name": "Nemo (he) (S1'20)",
                        "id": 301256
                    },
                    "user_id": 301256
                }
            ],
            "recipient_id": 24954,
            "sender_email": "studio@robertdelanghe.com",
            "sender_full_name": "Bobby DeLanghe (he) (F2'19)",
            "sender_id": 240584,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "x post: SICP Study Group",
            "submessages": [],
            "timestamp": 1592332788,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/096bee6351ba6927af83e84c635be5f5?d=identicon&version=1",
            "client": "ZulipElectron",
            "content": "<p><span class=\"user-group-mention\" data-user-group-id=\"41\">@Currently at RC</span>  Algorithms group us going to meet in 20 minutes! <span class=\"user-mention\" data-user-id=\"7642\">@Serena Peruzzo (she) (SP2'20)</span>  and <span class=\"user-mention\" data-user-id=\"276205\">@John Earnest (he) (SP2'20)</span>  are going to present today.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 201281361,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "unnati97@gmail.com",
            "sender_full_name": "Unnati Niraj Patel (she) (S2'20)",
            "sender_id": 277193,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Study Group",
            "submessages": [],
            "timestamp": 1592493015,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/096bee6351ba6927af83e84c635be5f5?d=identicon&version=1",
            "client": "ZulipElectron",
            "content": "<p><span class=\"user-group-mention\" data-user-group-id=\"41\">@Currently at RC</span>  Starting now!</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 201284367,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "unnati97@gmail.com",
            "sender_full_name": "Unnati Niraj Patel (she) (S2'20)",
            "sender_id": 277193,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Study Group",
            "submessages": [],
            "timestamp": 1592494201,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/6ae811d40ff8600863755aa510198b5144ebff2c?x=x&version=2",
            "client": "website",
            "content": "<p>New month new algos! Who wants to join in this month? I just started here: </p>\n<p><a href=\"https://github.com/johanndiedrick/july_2020_leetcoding_challenge\">https://github.com/johanndiedrick/july_2020_leetcoding_challenge</a></p>\n<p>For more info: <a href=\"https://leetcode.com/explore/featured/card/july-leetcoding-challenge/\">https://leetcode.com/explore/featured/card/july-leetcoding-challenge/</a></p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 202630761,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "jo@johanndiedrick.com",
            "sender_full_name": "Johann Diedrick (he) (W2'20)",
            "sender_id": 255042,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "July Leetcoding Challenge",
            "submessages": [],
            "timestamp": 1593642082,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/6b283009bf4375b73d9628bb245367165da5c360?x=x&version=2",
            "client": "ZulipElectron",
            "content": "<p>(deleted)</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 202751145,
            "is_me_message": false,
            "last_edit_timestamp": 1593793641,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "anthonyabeo@gmail.com",
            "sender_full_name": "Anthony Anabila Abeo (he) (SP2'20)",
            "sender_id": 276302,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "July Leetcoding Challenge",
            "submessages": [],
            "timestamp": 1593728751,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/51c7e3813e992d0a4e45cda57334d8a29aed680c?x=x&version=2",
            "client": "ZulipElectron",
            "content": "<p>Just finished todays leet code challenge with only generator syntax.. </p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"k\">class</span> <span class=\"nc\">Solution</span><span class=\"p\">:</span>\n    <span class=\"k\">def</span> <span class=\"nf\">plusOne</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">digits</span><span class=\"p\">:</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">])</span> <span class=\"o\">-&gt;</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">]:</span>\n        <span class=\"k\">return</span> <span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"p\">(</span>\n            <span class=\"n\">l</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n            <span class=\"ow\">or</span> <span class=\"n\">l</span><span class=\"p\">[::</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">]</span>\n            <span class=\"k\">if</span> <span class=\"n\">l</span><span class=\"p\">[</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">]</span> <span class=\"o\">==</span> <span class=\"mi\">0</span>\n            <span class=\"k\">else</span> <span class=\"n\">l</span><span class=\"p\">[::</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">]</span>\n            <span class=\"k\">for</span> <span class=\"n\">l</span> <span class=\"ow\">in</span>\n            <span class=\"p\">[[</span>\n                <span class=\"n\">carry</span><span class=\"o\">.</span><span class=\"n\">update</span><span class=\"p\">(</span><span class=\"n\">add</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span> <span class=\"ow\">or</span> <span class=\"mi\">0</span>\n                <span class=\"k\">if</span> <span class=\"n\">d</span> <span class=\"o\">==</span> <span class=\"mi\">9</span> <span class=\"ow\">and</span> <span class=\"n\">carry</span><span class=\"p\">[</span><span class=\"s2\">&quot;add&quot;</span><span class=\"p\">]</span>\n                <span class=\"k\">else</span> <span class=\"n\">d</span> <span class=\"o\">+</span> <span class=\"mi\">1</span> <span class=\"o\">*</span> <span class=\"p\">(</span><span class=\"n\">carry</span><span class=\"p\">[</span><span class=\"s2\">&quot;add&quot;</span><span class=\"p\">]</span> <span class=\"ow\">and</span> <span class=\"p\">(</span><span class=\"n\">carry</span><span class=\"o\">.</span><span class=\"n\">update</span><span class=\"p\">(</span><span class=\"n\">add</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">)</span> <span class=\"ow\">or</span> <span class=\"kc\">True</span><span class=\"p\">))</span>\n                <span class=\"k\">for</span> <span class=\"n\">carry</span> <span class=\"ow\">in</span>\n                    <span class=\"p\">[{</span><span class=\"s2\">&quot;add&quot;</span><span class=\"p\">:</span><span class=\"kc\">True</span><span class=\"p\">}]</span>\n                <span class=\"k\">for</span> <span class=\"n\">d</span> <span class=\"ow\">in</span>\n                    <span class=\"n\">digits</span><span class=\"p\">[::</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">]</span>\n            <span class=\"p\">]]))</span>\n</code></pre></div>\n\n\n<p>It was more challenging and less satisfying then anticipated.. Also performance is not great..</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 203015302,
            "is_me_message": false,
            "reactions": [
                {
                    "emoji_code": "1f419",
                    "emoji_name": "octopus",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "ofbennett@gmail.com",
                        "full_name": "Oscar Bennett (he) (F2'19)",
                        "id": 240644
                    },
                    "user_id": 240644
                },
                {
                    "emoji_code": "1f643",
                    "emoji_name": "upside_down",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "me@captnemo.in",
                        "full_name": "Nemo (he) (S1'20)",
                        "id": 301256
                    },
                    "user_id": 301256
                },
                {
                    "emoji_code": "1f643",
                    "emoji_name": "upside_down",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "c@chirag.io",
                        "full_name": "Chirag Dav\u00e9 (he) (F1'19)",
                        "id": 234049
                    },
                    "user_id": 234049
                }
            ],
            "recipient_id": 24954,
            "sender_email": "studio@robertdelanghe.com",
            "sender_full_name": "Bobby DeLanghe (he) (F2'19)",
            "sender_id": 240584,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "July Leetcoding Challenge",
            "submessages": [],
            "timestamp": 1594055156,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/1bd49962ff0f7e7f3ee603f8243a1015bb6690bd?x=x&version=7",
            "client": "website",
            "content": "<p>If you're willing to use modulus operations, you can reduce the amount of code for the conditional. Also, you can fold the extra leading digit logic into the inner generator if you use a conditional before the innermost loop:</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"k\">def</span> <span class=\"nf\">plusOne</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">digits</span><span class=\"p\">):</span>\n    <span class=\"k\">return</span> <span class=\"p\">[</span>\n        <span class=\"n\">carry</span><span class=\"o\">.</span><span class=\"n\">update</span><span class=\"p\">(</span><span class=\"n\">add</span><span class=\"o\">=</span><span class=\"n\">val</span><span class=\"o\">//</span><span class=\"mi\">10</span><span class=\"p\">)</span> <span class=\"ow\">or</span> <span class=\"n\">val</span> <span class=\"o\">%</span> <span class=\"mi\">10</span>\n        <span class=\"k\">for</span> <span class=\"n\">carry</span> <span class=\"ow\">in</span> <span class=\"p\">[{</span><span class=\"s1\">&#39;add&#39;</span><span class=\"p\">:</span> <span class=\"mi\">1</span><span class=\"p\">}]</span>\n        <span class=\"k\">for</span> <span class=\"n\">digit</span> <span class=\"ow\">in</span> <span class=\"n\">digits</span><span class=\"p\">[::</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">]</span> <span class=\"o\">+</span> <span class=\"p\">[</span><span class=\"kc\">None</span><span class=\"p\">]</span>\n        <span class=\"k\">if</span> <span class=\"n\">digit</span> <span class=\"ow\">is</span> <span class=\"ow\">not</span> <span class=\"kc\">None</span> <span class=\"ow\">or</span> <span class=\"n\">carry</span><span class=\"p\">[</span><span class=\"s1\">&#39;add&#39;</span><span class=\"p\">]</span>\n        <span class=\"k\">for</span> <span class=\"n\">val</span> <span class=\"ow\">in</span> <span class=\"p\">[</span><span class=\"n\">carry</span><span class=\"p\">[</span><span class=\"s1\">&#39;add&#39;</span><span class=\"p\">]</span> <span class=\"o\">+</span> <span class=\"p\">(</span><span class=\"n\">digit</span> <span class=\"ow\">or</span> <span class=\"mi\">0</span><span class=\"p\">)]</span>\n    <span class=\"p\">][::</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">]</span>\n</code></pre></div>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 203041421,
            "is_me_message": false,
            "last_edit_timestamp": 1594070057,
            "reactions": [
                {
                    "emoji_code": "1f419",
                    "emoji_name": "octopus",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "studio@robertdelanghe.com",
                        "full_name": "Bobby DeLanghe (he) (F2'19)",
                        "id": 240584
                    },
                    "user_id": 240584
                },
                {
                    "emoji_code": "1f419",
                    "emoji_name": "octopus",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "c@chirag.io",
                        "full_name": "Chirag Dav\u00e9 (he) (F1'19)",
                        "id": 234049
                    },
                    "user_id": 234049
                }
            ],
            "recipient_id": 24954,
            "sender_email": "talyian@gmail.com",
            "sender_full_name": "Jimmy Tang (he) (SP2'20)",
            "sender_id": 276140,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "July Leetcoding Challenge",
            "submessages": [],
            "timestamp": 1594070023,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/5c76b2c555785c8a87577bc81fe538bc03a8b463?x=x&version=2",
            "client": "website",
            "content": "<p>?</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 203227922,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "c@chirag.io",
            "sender_full_name": "Chirag Dav\u00e9 (he) (F1'19)",
            "sender_id": 234049,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Any hot new data structures?",
            "submessages": [],
            "timestamp": 1594179069,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/4d074af6cc341ef51b25bb2f738cdb11?d=identicon&version=1",
            "client": "website",
            "content": "<p>How new is new? I find succinct data structures pretty interesting, but I haven't found a lot of good resources about them. Here is one: <a href=\"https://alexbowe.com/rrr/\">https://alexbowe.com/rrr/</a></p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 203233032,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "vaibhavsagar@gmail.com",
            "sender_full_name": "Vaibhav Sagar (he) (F1'16)",
            "sender_id": 100041,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Any hot new data structures?",
            "submessages": [],
            "timestamp": 1594186572,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/5c76b2c555785c8a87577bc81fe538bc03a8b463?x=x&version=2",
            "client": "website",
            "content": "<p>Ooh cool. As long as the data structure is hot and spicy. What do you like about succinct data structures?</p>\n<p>Some data structures I'm thinking about right now, are ones that have to do with encoding changes to data over time. I was skimming some lectures for the advanced data structures course at MIT yesterday and it came to mind. <a href=\"https://courses.csail.mit.edu/6.851/fall17/\">https://courses.csail.mit.edu/6.851/fall17/</a></p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 203273005,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "c@chirag.io",
            "sender_full_name": "Chirag Dav\u00e9 (he) (F1'19)",
            "sender_id": 234049,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Any hot new data structures?",
            "submessages": [],
            "timestamp": 1594218076,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/4d074af6cc341ef51b25bb2f738cdb11?d=identicon&version=1",
            "client": "website",
            "content": "<p>I like that there's a focus on representing data as efficiently as possible, and that this means working at the level of arrays of 1s and 0s</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 203275039,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "vaibhavsagar@gmail.com",
            "sender_full_name": "Vaibhav Sagar (he) (F1'16)",
            "sender_id": 100041,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Any hot new data structures?",
            "submessages": [],
            "timestamp": 1594219040,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/8776bd2d19cdb1399c4e9589d9397d57290e5729?x=x&version=2",
            "client": "ZulipMobile",
            "content": "<p>What about hash array mapped tries? Maybe hyper log log? Cuckoo hash? Monte Carlo tree search? Reservoir sampling? I like amortized algorithms but I think they're rarely known.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 203875032,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "shae.erisson@gmail.com",
            "sender_full_name": "Shae Matijs Erisson (he) (F1'19)",
            "sender_id": 221819,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Any hot new data structures?",
            "submessages": [],
            "timestamp": 1594754263,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/c6a4682e6a46285de64c97c77b771481?d=identicon&version=1",
            "client": "website",
            "content": "<p><a href=\"https://dl.acm.org/doi/abs/10.1145/3318464.3389711\">https://dl.acm.org/doi/abs/10.1145/3318464.3389711</a></p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 203879858,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "ori@eigenstate.org",
            "sender_full_name": "Ori Dean Bernstein (he) (W2'20)",
            "sender_id": 255045,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Any hot new data structures?",
            "submessages": [],
            "timestamp": 1594756688,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/661412d42ecbf0c0bd354116859a5af3562f8e5f?x=x&version=4",
            "client": "website",
            "content": "<p>hello algo peeps!</p>\n<p>today i\u2019ve run into what i believe to be a classic graph optimization problem in networking. basically, we have a network, and we have sources of traffic (through peerings etc.) and sinks. the sources are always partial, so 50% of the traffic to sink A comes from source B, 30% from source C, etc. i can move the sources around freely in the network, and i\u2019d like to find optimal solutions (or somewhat optimal, since i believe this is NP hard? so heuristics are okay) given some constraints (like the sum of traffic \u201ccosts\u201d is lowest, the max cost is lowest, and so on).</p>\n<p>i thought about modelling this in <a href=\"http://eclipseclp.org/\">eclipseCPS</a> (basically prolog with domains and constraint solvers), because i have some experience with that system. before i dust off my prolog, though, i\u2019d like to see whether there are any prefab solutions that i might be able to leverage, or any clever algorithms that might avoid me messing with obscure crowbar-style tools that you might know of!</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 203939113,
            "is_me_message": false,
            "last_edit_timestamp": 1594810288,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "veit@veitheller.de",
            "sender_full_name": "Veit Heller (he) (S1'17)",
            "sender_id": 101103,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "graph optimization",
            "submessages": [],
            "timestamp": 1594809951,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/89ca9a012749d846c25306ce17aebb57?d=identicon&version=1",
            "client": "website",
            "content": "<p>max cost lowest: This sounds like it is related to Min Cut  / Max Flow as an optimization problem, but in max flow you usually can't re-arrange the graph in max flow, so you'd construct a graph that is a superset of your current graph and prune it down, maybe (see <a href=\"https://en.wikipedia.org/wiki/Minimum-cost_flow_problem\">https://en.wikipedia.org/wiki/Minimum-cost_flow_problem</a>).</p>\n<p>For the lowest sum of traffic: I feel like Minimum Spanning Tree might work here. Add all sources and sinks, create edges between ALL of them (not just the already connected source/sinks) and then run MST and the tree should be minimum sum of edges across all nodes. (NOTE: this isn't guaranteeing all shortest paths in the graph between every node, but it is guaranteeing total sum of paths between nodes is lowest, iirc)</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 203956363,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "okay.zed@gmail.com",
            "sender_full_name": "okay zed (S1'18)",
            "sender_id": 117513,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "graph optimization",
            "submessages": [],
            "timestamp": 1594820504,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/661412d42ecbf0c0bd354116859a5af3562f8e5f?x=x&version=4",
            "client": "website",
            "content": "<p><span class=\"user-mention\" data-user-id=\"117513\">@okay zed (S1'18)</span> thanks for all the pointers! do you know of a lib that encodes this or would i write the solver/algo myself? i don\u2019t think that\u2019d be much of a problem, but if i don\u2019t have to do the leg work myself i don\u2019t necessarily want to</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 203957295,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "veit@veitheller.de",
            "sender_full_name": "Veit Heller (he) (S1'17)",
            "sender_id": 101103,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "graph optimization",
            "submessages": [],
            "timestamp": 1594820941,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/661412d42ecbf0c0bd354116859a5af3562f8e5f?x=x&version=4",
            "client": "website",
            "content": "<p>(a graph optimization toolkit as a lib sounds sick if it exists)</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 203958104,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "veit@veitheller.de",
            "sender_full_name": "Veit Heller (he) (S1'17)",
            "sender_id": 101103,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "graph optimization",
            "submessages": [],
            "timestamp": 1594821350,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/89ca9a012749d846c25306ce17aebb57?d=identicon&version=1",
            "client": "website",
            "content": "<p>I don't know of any libraries for these algos because I'm usually writing them from scratch (both algos are standard and not too much code), but libraries probably exist</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 203958868,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "okay.zed@gmail.com",
            "sender_full_name": "okay zed (S1'18)",
            "sender_id": 117513,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "graph optimization",
            "submessages": [],
            "timestamp": 1594821715,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/661412d42ecbf0c0bd354116859a5af3562f8e5f?x=x&version=4",
            "client": "website",
            "content": "<p>i\u2019m currently looking at <a href=\"https://lemon.cs.elte.hu/trac/lemon\">lemon</a>, which looks promising. i don\u2019t particularly enjoy writing c++, but i also don\u2019t hate it and might go for that (unless anyone else comes along with a killer tool). will tell you how it goes.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 203959066,
            "is_me_message": false,
            "reactions": [
                {
                    "emoji_code": "1f44d",
                    "emoji_name": "+1",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "okay.zed@gmail.com",
                        "full_name": "okay zed (S1'18)",
                        "id": 117513
                    },
                    "user_id": 117513
                }
            ],
            "recipient_id": 24954,
            "sender_email": "veit@veitheller.de",
            "sender_full_name": "Veit Heller (he) (S1'17)",
            "sender_id": 101103,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "graph optimization",
            "submessages": [],
            "timestamp": 1594821795,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/89ca9a012749d846c25306ce17aebb57?d=identicon&version=1",
            "client": "website",
            "content": "<p>I think constraint programming is an interesting way of modeling your problem and makes sense to me (f.e.  you can modify your cost function without having to use a new algorithm to solve the problem), I'm curious how fast it will solve and how big your networks are</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 203959920,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "okay.zed@gmail.com",
            "sender_full_name": "okay zed (S1'18)",
            "sender_id": 117513,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "graph optimization",
            "submessages": [],
            "timestamp": 1594822238,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/4d074af6cc341ef51b25bb2f738cdb11?d=identicon&version=1",
            "client": "website",
            "content": "<p>I was reading this pretty approachable (to me) paper about implementing minimal perfect hashing: <a href=\"https://arxiv.org/abs/1702.03154\">https://arxiv.org/abs/1702.03154</a></p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 204046318,
            "is_me_message": false,
            "reactions": [
                {
                    "emoji_code": "1f419",
                    "emoji_name": "octopus",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "jeremiejost@gmail.com",
                        "full_name": "J\u00e9r\u00e9mie Jost (he) (m5'20)",
                        "id": 9326
                    },
                    "user_id": 9326
                },
                {
                    "emoji_code": "1f419",
                    "emoji_name": "octopus",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "c@chirag.io",
                        "full_name": "Chirag Dav\u00e9 (he) (F1'19)",
                        "id": 234049
                    },
                    "user_id": 234049
                }
            ],
            "recipient_id": 24954,
            "sender_email": "vaibhavsagar@gmail.com",
            "sender_full_name": "Vaibhav Sagar (he) (F1'16)",
            "sender_id": 100041,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Any hot new data structures?",
            "submessages": [],
            "timestamp": 1594876880,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/89ca9a012749d846c25306ce17aebb57?d=identicon&version=1",
            "client": "website",
            "content": "<p><span class=\"user-mention\" data-user-id=\"234049\">@Chirag Dav\u00e9 (he) (F1'19)</span>  : a year or so ago, I went through <a href=\"http://web.stanford.edu/class/cs168/index.html\">http://web.stanford.edu/class/cs168/index.html</a> which had a lot of interesting algorithms and applications in modern engineering</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 204078115,
            "is_me_message": false,
            "reactions": [
                {
                    "emoji_code": "1f642",
                    "emoji_name": "slight_smile",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "c@chirag.io",
                        "full_name": "Chirag Dav\u00e9 (he) (F1'19)",
                        "id": 234049
                    },
                    "user_id": 234049
                }
            ],
            "recipient_id": 24954,
            "sender_email": "okay.zed@gmail.com",
            "sender_full_name": "okay zed (S1'18)",
            "sender_id": 117513,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Any hot new data structures?",
            "submessages": [],
            "timestamp": 1594903886,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/5c76b2c555785c8a87577bc81fe538bc03a8b463?x=x&version=2",
            "client": "website",
            "content": "<p>oh cool, thanks!</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 204099157,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "c@chirag.io",
            "sender_full_name": "Chirag Dav\u00e9 (he) (F1'19)",
            "sender_id": 234049,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Any hot new data structures?",
            "submessages": [],
            "timestamp": 1594913091,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/51c7e3813e992d0a4e45cda57334d8a29aed680c?x=x&version=2",
            "client": "ZulipMobile",
            "content": "<p><span class=\"user-mention\" data-user-id=\"276140\">@Jimmy Tang (he) (SP2'20)</span> I love this.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 204612687,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "studio@robertdelanghe.com",
            "sender_full_name": "Bobby DeLanghe (he) (F2'19)",
            "sender_id": 240584,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "July Leetcoding Challenge",
            "submessages": [],
            "timestamp": 1595372380,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/927039f8a9a749e3be410a6969f8e2e8175cedf4?x=x&version=2",
            "client": "website",
            "content": "<p>I've been having fun doing these. Would someone be interested in pairing with me on some of the ones from earlier this week, looking at complexity analysis/optimization? I have code that was accepted but in one case I think it shouldn't have been. PM me if interested.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 204736324,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "gretchen.m.wright@gmail.com",
            "sender_full_name": "Gretchen Wright (she) (F2'18)",
            "sender_id": 130181,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Leetcoding challenges",
            "submessages": [],
            "timestamp": 1595461854,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/2a6345cc359fb9370ce011d04d4965f20e0cf051?x=x&version=2",
            "client": "website",
            "content": "<p>8/8: Path Sum III<br>\nIterative solution<br>\n<code>postorder</code> is the postorder traversal of the input tree.<br>\n<code>memo</code> is a memo dictionary with each node <code>u</code> of the input tree as a key and <code>memo[(u, s)]</code> is the count of how many subtrees rooted at <code>u</code> add up to <code>s</code>.<br>\nThe answer is the sum of all <code>(u, sum)</code> for each node <code>u</code> in the input tree.</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"k\">def</span> <span class=\"nf\">pathSum</span><span class=\"p\">(</span><span class=\"n\">root</span><span class=\"p\">,</span> <span class=\"nb\">sum</span><span class=\"p\">):</span>\n    <span class=\"k\">if</span> <span class=\"n\">root</span><span class=\"p\">:</span>\n        <span class=\"n\">stack</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">root</span><span class=\"p\">]</span>\n        <span class=\"n\">postorder</span> <span class=\"o\">=</span> <span class=\"n\">collections</span><span class=\"o\">.</span><span class=\"n\">deque</span><span class=\"p\">()</span>\n        <span class=\"n\">children</span> <span class=\"o\">=</span> <span class=\"k\">lambda</span> <span class=\"n\">x</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"n\">child</span> <span class=\"k\">for</span> <span class=\"n\">child</span> <span class=\"ow\">in</span> <span class=\"p\">(</span><span class=\"n\">x</span><span class=\"o\">.</span><span class=\"n\">left</span><span class=\"p\">,</span> <span class=\"n\">x</span><span class=\"o\">.</span><span class=\"n\">right</span><span class=\"p\">)</span> <span class=\"k\">if</span> <span class=\"n\">child</span><span class=\"p\">]</span>\n        <span class=\"k\">while</span> <span class=\"n\">stack</span><span class=\"p\">:</span>\n            <span class=\"n\">u</span> <span class=\"o\">=</span> <span class=\"n\">stack</span><span class=\"o\">.</span><span class=\"n\">pop</span><span class=\"p\">()</span>\n            <span class=\"n\">postorder</span><span class=\"o\">.</span><span class=\"n\">appendleft</span><span class=\"p\">(</span><span class=\"n\">u</span><span class=\"p\">)</span>\n            <span class=\"k\">for</span> <span class=\"n\">v</span> <span class=\"ow\">in</span> <span class=\"n\">children</span><span class=\"p\">(</span><span class=\"n\">u</span><span class=\"p\">):</span>\n                <span class=\"n\">stack</span> <span class=\"o\">+=</span> <span class=\"n\">v</span><span class=\"p\">,</span>\n        <span class=\"n\">stack</span> <span class=\"o\">=</span> <span class=\"p\">[(</span><span class=\"n\">u</span><span class=\"p\">,</span> <span class=\"nb\">sum</span><span class=\"p\">)</span> <span class=\"k\">for</span> <span class=\"n\">u</span> <span class=\"ow\">in</span> <span class=\"n\">postorder</span><span class=\"p\">]</span>\n        <span class=\"n\">memo</span> <span class=\"o\">=</span> <span class=\"n\">collections</span><span class=\"o\">.</span><span class=\"n\">OrderedDict</span><span class=\"p\">()</span>\n        <span class=\"k\">while</span> <span class=\"n\">stack</span><span class=\"p\">:</span>\n            <span class=\"n\">u</span><span class=\"p\">,</span> <span class=\"n\">s</span> <span class=\"o\">=</span> <span class=\"n\">stack</span><span class=\"o\">.</span><span class=\"n\">pop</span><span class=\"p\">()</span>\n            <span class=\"n\">memo</span><span class=\"p\">[(</span><span class=\"n\">u</span><span class=\"p\">,</span> <span class=\"n\">s</span><span class=\"p\">)]</span> <span class=\"o\">=</span> <span class=\"nb\">int</span><span class=\"p\">(</span><span class=\"n\">u</span><span class=\"o\">.</span><span class=\"n\">val</span> <span class=\"o\">==</span> <span class=\"n\">s</span><span class=\"p\">)</span>\n            <span class=\"n\">t</span> <span class=\"o\">=</span> <span class=\"n\">s</span> <span class=\"o\">-</span> <span class=\"n\">u</span><span class=\"o\">.</span><span class=\"n\">val</span>\n            <span class=\"k\">for</span> <span class=\"n\">v</span> <span class=\"ow\">in</span> <span class=\"n\">children</span><span class=\"p\">(</span><span class=\"n\">u</span><span class=\"p\">):</span>\n                <span class=\"n\">stack</span> <span class=\"o\">+=</span> <span class=\"p\">(</span><span class=\"n\">v</span><span class=\"p\">,</span> <span class=\"n\">t</span><span class=\"p\">),</span>\n        <span class=\"k\">for</span> <span class=\"n\">u</span><span class=\"p\">,</span> <span class=\"n\">s</span> <span class=\"ow\">in</span> <span class=\"nb\">reversed</span><span class=\"p\">(</span><span class=\"n\">memo</span><span class=\"p\">):</span>\n            <span class=\"n\">t</span> <span class=\"o\">=</span> <span class=\"n\">s</span> <span class=\"o\">-</span> <span class=\"n\">u</span><span class=\"o\">.</span><span class=\"n\">val</span>\n            <span class=\"k\">for</span> <span class=\"n\">v</span> <span class=\"ow\">in</span> <span class=\"n\">children</span><span class=\"p\">(</span><span class=\"n\">u</span><span class=\"p\">):</span>\n                <span class=\"n\">memo</span><span class=\"p\">[(</span><span class=\"n\">u</span><span class=\"p\">,</span> <span class=\"n\">s</span><span class=\"p\">)]</span> <span class=\"o\">+=</span> <span class=\"n\">memo</span><span class=\"p\">[(</span><span class=\"n\">v</span><span class=\"p\">,</span> <span class=\"n\">t</span><span class=\"p\">)]</span>\n        <span class=\"n\">counter</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>\n        <span class=\"k\">for</span> <span class=\"n\">u</span><span class=\"p\">,</span> <span class=\"n\">s</span> <span class=\"ow\">in</span> <span class=\"n\">memo</span><span class=\"p\">:</span>\n            <span class=\"k\">if</span> <span class=\"n\">s</span> <span class=\"o\">==</span> <span class=\"nb\">sum</span><span class=\"p\">:</span>\n                <span class=\"n\">counter</span> <span class=\"o\">+=</span> <span class=\"n\">memo</span><span class=\"p\">[(</span><span class=\"n\">u</span><span class=\"p\">,</span> <span class=\"n\">s</span><span class=\"p\">)]</span>\n        <span class=\"k\">return</span> <span class=\"n\">counter</span>\n    <span class=\"k\">return</span> <span class=\"mi\">0</span>\n</code></pre></div>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 206364127,
            "is_me_message": false,
            "last_edit_timestamp": 1596924552,
            "reactions": [
                {
                    "emoji_code": "1f44d",
                    "emoji_name": "+1",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "okay.zed@gmail.com",
                        "full_name": "okay zed (S1'18)",
                        "id": 117513
                    },
                    "user_id": 117513
                }
            ],
            "recipient_id": 24954,
            "sender_email": "ljeng@icloud.com",
            "sender_full_name": "Lareine Jeng (S2'16)",
            "sender_id": 9516,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Leetcoding challenges",
            "submessages": [],
            "timestamp": 1596920984,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/2a6345cc359fb9370ce011d04d4965f20e0cf051?x=x&version=2",
            "client": "website",
            "content": "<p>8/13<br>\nIterator for Combination</p>\n<p>You're probably familiar with the O(n! / k! / (n-k)!) brute-force approach as seen on <a href=\"https://leetcode.com/explore/featured/card/august-leetcoding-challenge/550/week-2-august-8th-august-14th/3422/discuss\">LeetCode Discuss</a> that generates all combinations upon initialization. I want to try something new and more efficient using the concept of a Fenwick tree.</p>\n<p>init: O(<code>combinationLength</code>) time, constant space<br>\nnext: O(<code>characters.length</code>) time, O(<code>combinationLength</code>) space<br>\nhasNext: constant time and space</p>\n<p>Test case:<br>\n<code>characters = bvwz</code></p>\n<p>Init:<br>\nStart off with the highest number <code>self.i</code> of <code>characters.length</code> bits, where <code>combinationLength</code> of those bits are set. In this case <code>self.i</code> is <code>1100</code> in binary. A set bit at index <code>k</code> means <code>characters[k]</code> is included in the combination, and an unset bit means <code>characters[k]</code> is excluded. So, the first combination is <code>bv</code>.</p>\n<p>Next:<br>\nEach time you call <code>next</code> you want to set <code>self.i</code> to the next lower number of <code>characters.length</code> bits, where <code>combinationsLength</code> of those bits are set. So it goes <code>1100</code>, <code>1010</code>, <code>1001</code>, and so forth. Let's create a variable <code>j</code> which is 1 more than <code>self.i</code> and the <code>child</code> node of the Fenwick tree that corresponds to <code>self.i</code> is <code>self.i &amp; j</code>. The last set bit is <code>child &amp; -child</code>. So, the next <code>self.i</code> is <code>child - last_set_bit // ((self.i^j) + 1)</code>.</p>\n<p>hasNext:<br>\nAs long as <code>self.i</code> is a positive number, that means there's a next combination.</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"k\">class</span> <span class=\"nc\">CombinationIterator</span><span class=\"p\">:</span>\n\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">characters</span><span class=\"p\">:</span> <span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">combinationLength</span><span class=\"p\">:</span> <span class=\"nb\">int</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">characters</span> <span class=\"o\">=</span> <span class=\"n\">characters</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">n</span> <span class=\"o\">=</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">characters</span><span class=\"p\">)</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">i</span> <span class=\"o\">=</span> <span class=\"nb\">sum</span><span class=\"p\">(</span>\n            <span class=\"mi\">2</span><span class=\"o\">**</span><span class=\"n\">x</span> <span class=\"k\">for</span> <span class=\"n\">x</span> <span class=\"ow\">in</span> <span class=\"nb\">reversed</span><span class=\"p\">(</span><span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">n</span> <span class=\"o\">-</span> <span class=\"n\">combinationLength</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">n</span><span class=\"p\">))</span>\n        <span class=\"p\">)</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">next</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"nb\">str</span><span class=\"p\">:</span>\n        <span class=\"n\">combination</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;&#39;</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">(</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">characters</span><span class=\"p\">[</span><span class=\"n\">x</span><span class=\"p\">]</span> <span class=\"k\">for</span> <span class=\"n\">x</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">n</span><span class=\"p\">)</span>\n            <span class=\"k\">if</span> <span class=\"mi\">2</span><span class=\"o\">**</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">n</span> <span class=\"o\">-</span> <span class=\"n\">x</span> <span class=\"o\">-</span> <span class=\"mi\">1</span><span class=\"p\">)</span> <span class=\"o\">&amp;</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">i</span>\n        <span class=\"p\">)</span>\n        <span class=\"n\">j</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">i</span> <span class=\"o\">+</span> <span class=\"mi\">1</span>\n        <span class=\"n\">child</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">i</span> <span class=\"o\">&amp;</span> <span class=\"n\">j</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">i</span> <span class=\"o\">=</span> <span class=\"n\">child</span> <span class=\"o\">-</span> <span class=\"p\">(</span><span class=\"n\">child</span> <span class=\"o\">&amp;</span> <span class=\"o\">-</span><span class=\"n\">child</span><span class=\"p\">)</span> <span class=\"o\">//</span> <span class=\"p\">((</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">i</span><span class=\"o\">^</span><span class=\"n\">j</span><span class=\"p\">)</span> <span class=\"o\">+</span> <span class=\"mi\">1</span><span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"n\">combination</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">hasNext</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"nb\">bool</span><span class=\"p\">:</span>\n        <span class=\"k\">return</span> <span class=\"mi\">0</span> <span class=\"o\">&lt;</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">i</span>\n</code></pre></div>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 206844136,
            "is_me_message": false,
            "last_edit_timestamp": 1597357742,
            "reactions": [
                {
                    "emoji_code": "1f44d",
                    "emoji_name": "+1",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "robert@schuessler.org",
                        "full_name": "Robert Schuessler (W1'17)",
                        "id": 103047
                    },
                    "user_id": 103047
                }
            ],
            "recipient_id": 24954,
            "sender_email": "ljeng@icloud.com",
            "sender_full_name": "Lareine Jeng (S2'16)",
            "sender_id": 9516,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Leetcoding challenges",
            "submessages": [],
            "timestamp": 1597339504,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/89ca9a012749d846c25306ce17aebb57?d=identicon&version=1",
            "client": "website",
            "content": "<p>this is cool! what is the big O here in total? if the output size  is <code>n C k</code>, I don't see how the fenwick approach can do better than the brute force's <code>n C k</code> (but I do understand that it can be more efficient or not require the front-loading)</p>\n<p>this approach reminds me of next_permutation (<a href=\"http://www.cplusplus.com/reference/algorithm/next_permutation/\">http://www.cplusplus.com/reference/algorithm/next_permutation/</a>)</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 206889408,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "okay.zed@gmail.com",
            "sender_full_name": "okay zed (S1'18)",
            "sender_id": 117513,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Leetcoding challenges",
            "submessages": [],
            "timestamp": 1597367530,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/c52df4d54166ed7db0141bdb21c7935e502d6ddc?x=x&version=1",
            "client": "website",
            "content": "<p>This reminds me of <a href=\"https://en.wikipedia.org/wiki/The_Art_of_Computer_Programming#Volume_4A_%E2%80%93_Combinatorial_Algorithms,_Part_1\">Knuth volume 4</a> -- I only glanced over most of it, and I don't follow all of your logic, but section 7.2.1.3 would be the place to look.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 207193187,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "darius@wry.me",
            "sender_full_name": "Darius Bacon (W1'16)",
            "sender_id": 902,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Leetcoding challenges",
            "submessages": [],
            "timestamp": 1597696033,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/2a6345cc359fb9370ce011d04d4965f20e0cf051?x=x&version=2",
            "client": "website",
            "content": "<p><span class=\"user-mention\" data-user-id=\"117513\">@okay zed (S1'18)</span> The big O in total is the same as the brute force solution if you run through all combinations. But this faster solution comes in handy if you have a very large <code>combinationLength</code> and <code>characters.length</code> is approximately half of <code>combinationLength</code> but you only want the first few combinations. This saves you from having to precompute all combinations.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 208929209,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "ljeng@icloud.com",
            "sender_full_name": "Lareine Jeng (S2'16)",
            "sender_id": 9516,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Leetcoding challenges",
            "submessages": [],
            "timestamp": 1599117802,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/2a6345cc359fb9370ce011d04d4965f20e0cf051?x=x&version=2",
            "client": "website",
            "content": "<p>Hi everyone, my four students will be heading to the 2020 IOI from September 13-19. I am happy to answer questions about my unique experience teaching and training them for this competition.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 209058918,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "ljeng@icloud.com",
            "sender_full_name": "Lareine Jeng (S2'16)",
            "sender_id": 9516,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "2020 IOI",
            "submessages": [],
            "timestamp": 1599200907,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/8ef0cc9607b07f392f70560a43dbbb2d0efd6328?x=x&version=1",
            "client": "website",
            "content": "<p>cool! I taught for the chemistry camp a number of years ago, would love to swap notes with you :)</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 209105555,
            "is_me_message": false,
            "reactions": [
                {
                    "emoji_code": "2764",
                    "emoji_name": "heart",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "ljeng@icloud.com",
                        "full_name": "Lareine Jeng (S2'16)",
                        "id": 9516
                    },
                    "user_id": 9516
                }
            ],
            "recipient_id": 24954,
            "sender_email": "brian.kihoon.lee@gmail.com",
            "sender_full_name": "Brian Lee (F1'16)",
            "sender_id": 100043,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "2020 IOI",
            "submessages": [],
            "timestamp": 1599232363,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/2a6345cc359fb9370ce011d04d4965f20e0cf051?x=x&version=2",
            "client": "website",
            "content": "<p>Did you teach for USA team? If not then what country?</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 209107147,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "ljeng@icloud.com",
            "sender_full_name": "Lareine Jeng (S2'16)",
            "sender_id": 9516,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "2020 IOI",
            "submessages": [],
            "timestamp": 1599233050,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/81c6c8040fc0263607edd05c09dacf6b?d=identicon&version=1",
            "client": "ZulipElectron",
            "content": "<p>The IOI!  Congrats!  Could you expand on practice approaches you felt were especially effective or ineffective?  Did you do anything specific to help them deal with stress during competition?  (This is what did me in when I did some competitions back in the day.  Did not make the IOI team.)</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 209150363,
            "is_me_message": false,
            "last_edit_timestamp": 1599262737,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "julian@cipht.net",
            "sender_full_name": "Julian Squires (he) (F2'17)",
            "sender_id": 101992,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "2020 IOI",
            "submessages": [],
            "timestamp": 1599262712,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/2a6345cc359fb9370ce011d04d4965f20e0cf051?x=x&version=2",
            "client": "website",
            "content": "<p><span class=\"user-mention\" data-user-id=\"101992\">@Julian Squires (he) (F2'17)</span> <br>\nIneffective: On my first day I was a bit inexperienced. I asked questions from CodeForces/SPOJ and had the students answer them and then code them up as if it were a technical interview. They'd start off with a suboptimal solution and then move on to the optimal solution. The mistake here is that coaching is very expensive so you don't want to waste class time having the students do tasks that they could do at home, like coding. You also don't want to spend too much time on the suboptimal solution.</p>\n<p>Effective: You want to let them explain their suboptimal solution very briefly and then show them the optimal solution. The optimal solution usually has a trick that the students would rather spend class time learning. Then assign the coding tasks for homework. The class should be focused more on algorithmic concepts instead of coding.</p>\n<p>Stress management: I don't put any pressure on my students to do well. They're motivated to do well enough without any pushing. Instead of conveying the idea, \"If you don't get a medal that's bad,\" I convey the idea that any medal is just a bonus.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 209152947,
            "is_me_message": false,
            "last_edit_timestamp": 1599266371,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "ljeng@icloud.com",
            "sender_full_name": "Lareine Jeng (S2'16)",
            "sender_id": 9516,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "2020 IOI",
            "submessages": [],
            "timestamp": 1599266358,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/81c6c8040fc0263607edd05c09dacf6b?d=identicon&version=1",
            "client": "ZulipElectron",
            "content": "<p>That's very interesting.  Did you spend much time on code review?</p>\n<p>What I mean about stress is that, I would perform well outside of competitions, or locally, then go to the nationals and totally freeze up.  I always wondered if practicing in simulated situations similar to the final competition would have helped (timed, unfamiliar computing environment).  It turned out a lot of the people I competed against, especially those who went on to the IOI, had extensive competition experience, especially math olympiad.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 209154624,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "julian@cipht.net",
            "sender_full_name": "Julian Squires (he) (F2'17)",
            "sender_id": 101992,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "2020 IOI",
            "submessages": [],
            "timestamp": 1599268758,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/2a6345cc359fb9370ce011d04d4965f20e0cf051?x=x&version=2",
            "client": "website",
            "content": "<p>I don't spend any time on code review. The students are fluent enough in coding that code quality isn't an issue. Coding is the easy part. Algorithmic problem solving is the hard part.</p>\n<p>I think practicing in simulated situations will help but doing the real thing is more important because there's something at stake so you have the pressure to do well. You have to get top 4 in the country's national Olympiad to qualify for IOI and all of them did. Three of them did IOI last year, and one did IOI in 2018. And they regularly do CodeForces contests, although the stakes are not as high - here only their CodeForces rating is at stake. I hope they've done enough contests for the IOI to be \"just another contest\" for them.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 209157095,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "ljeng@icloud.com",
            "sender_full_name": "Lareine Jeng (S2'16)",
            "sender_id": 9516,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "2020 IOI",
            "submessages": [],
            "timestamp": 1599272967,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/2a6345cc359fb9370ce011d04d4965f20e0cf051?x=x&version=2",
            "client": "website",
            "content": "<p>There's this website called <a href=\"https://vjudge.net/\">Virtual Judge</a> where you can create a custom contest. You can choose problems from CodeForces, SPOJ, Peking Online Judge for ACM-ICPC, HackerRank, Topcoder, AtCoder, CodeChef, and many more platforms. I like to pick three CEOI, IOI, or Balkan Olympiad in Informatics -style problems and give them five hours to do the contest to simulate the IOI environment. Then the next day during class we discuss the problems.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 209204537,
            "is_me_message": false,
            "last_edit_timestamp": 1599357976,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "ljeng@icloud.com",
            "sender_full_name": "Lareine Jeng (S2'16)",
            "sender_id": 9516,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "2020 IOI",
            "submessages": [],
            "timestamp": 1599357908,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/89ca9a012749d846c25306ce17aebb57?d=identicon&version=1",
            "client": "website",
            "content": "<p>what was your general syllabus you used in terms of problem solving topics and ordering? and how long did your students prepare? it sounds like it was a multi-month endeavor</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 209205131,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "okay.zed@gmail.com",
            "sender_full_name": "okay zed (S1'18)",
            "sender_id": 117513,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "2020 IOI",
            "submessages": [],
            "timestamp": 1599359125,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/2a6345cc359fb9370ce011d04d4965f20e0cf051?x=x&version=2",
            "client": "website",
            "content": "<p>The problems I choose are completely random and in no particular order. I don't take into account the topic when choosing a problem.</p>\n<p>Some problems can be solved in more than one way. <a href=\"https://www.spoj.com/problems/EPALIN\">EPALIN</a> can be solved by KMP or Z algorithm. I let them use whichever way they feel comfortable with - usually KMP, since Z algorithm is less commonly known - and then I show them the other way.</p>\n<p>Some problems have non-obvious optimizations. The naive solution to <a href=\"https://codeforces.com/problemset/problem/391/F1\">Stock Trading</a> is in O(kn) by dynamic programming. It can be improved to O(n + k log n) using a stack and heap. Then there's an O(n) solution that is explained in the solution to a very similar problem <a href=\"https://ioinformatics.org/files/ioi2016solutions.pdf#page=14\">Aliens</a>. I have them start with the naive solution and then optimize. The Aliens trick is very advanced and most students wouldn't know it. But I did have one student who saw Aliens before, so he knew what to do.</p>\n<p>My students have been competing in Olympiads for years. The IOI team is selected after national Olympiads (equivalent to USACO in the US) - they just take the top 4 contestants from nationals, and IOI training starts right after selection.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 209210230,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "ljeng@icloud.com",
            "sender_full_name": "Lareine Jeng (S2'16)",
            "sender_id": 9516,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "2020 IOI",
            "submessages": [],
            "timestamp": 1599369788,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/8ef0cc9607b07f392f70560a43dbbb2d0efd6328?x=x&version=1",
            "client": "website",
            "content": "<p>to what extent is computer reality taken into account? (e.g. is somebody who knows the intricacies of C compilers and how to optimize for cache lines at any advantage?)</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 209246668,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "brian.kihoon.lee@gmail.com",
            "sender_full_name": "Brian Lee (F1'16)",
            "sender_id": 100043,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "2020 IOI",
            "submessages": [],
            "timestamp": 1599435457,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/8ef0cc9607b07f392f70560a43dbbb2d0efd6328?x=x&version=1",
            "client": "website",
            "content": "<p>or is the big-O scaling prominent enough that the constant factors never matter?</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 209246670,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "brian.kihoon.lee@gmail.com",
            "sender_full_name": "Brian Lee (F1'16)",
            "sender_id": 100043,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "2020 IOI",
            "submessages": [],
            "timestamp": 1599435468,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/2a6345cc359fb9370ce011d04d4965f20e0cf051?x=x&version=2",
            "client": "website",
            "content": "<p>There is a time limit in seconds. You can use anything you want to optimize your code. Constant factors do matter - that's why nearly everyone doing this uses C++ instead of Java. Java is relatively fast compared to most languages but in the rare case you can't get Java to meet the time limit, you're kind of stuck. In practice, there are problems where they are looking for an O(n) solution. With C++ an O(n log n) solution may barely squeak by, but if you use Java and O(n log n) you're not going to pass.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 209246861,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "ljeng@icloud.com",
            "sender_full_name": "Lareine Jeng (S2'16)",
            "sender_id": 9516,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "2020 IOI",
            "submessages": [],
            "timestamp": 1599435726,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/2a6345cc359fb9370ce011d04d4965f20e0cf051?x=x&version=2",
            "client": "website",
            "content": "<p>September 3: Repeated Substring Pattern<br>\nShort 1-liner with regex</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"k\">def</span> <span class=\"nf\">repeatedSubstringPattern</span><span class=\"p\">(</span><span class=\"n\">s</span><span class=\"p\">):</span>\n    <span class=\"k\">return</span> <span class=\"n\">re</span><span class=\"o\">.</span><span class=\"n\">fullmatch</span><span class=\"p\">(</span><span class=\"sa\">r</span><span class=\"s1\">&#39;(\\w+)\\1+&#39;</span><span class=\"p\">,</span> <span class=\"n\">s</span><span class=\"p\">)</span>\n</code></pre></div>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 209354682,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "ljeng@icloud.com",
            "sender_full_name": "Lareine Jeng (S2'16)",
            "sender_id": 9516,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Leetcoding challenges",
            "submessages": [],
            "timestamp": 1599551094,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/89ca9a012749d846c25306ce17aebb57?d=identicon&version=1",
            "client": "website",
            "content": "<p>Agree about topics being solveable in more than one way. For some context, I did ICPC 10+ years ago, more recently I did codechef longs (div1) in 2017 - 2018. </p>\n<p>Some resources that I've liked are laaksonen's handbook (<a href=\"http://cses.fi/book\">cses.fi/book</a>), but i've also wondered about mustafa ibrahim's junior training guide: <a href=\"https://goo.gl/unDETI\">https://goo.gl/unDETI</a> (which would be more appropriate for IOI contestant level)</p>\n<p>For EPALIN: yes, there's quite a few methods here it seems. i'm wondering if i can mangle rolling hash into solving it ;) </p>\n<p>Thanks for all the updates, I really like seeing competitive coding discussion (btw - are you / your students on Competitive Coding discord?)</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 209590652,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "okay.zed@gmail.com",
            "sender_full_name": "okay zed (S1'18)",
            "sender_id": 117513,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "2020 IOI",
            "submessages": [],
            "timestamp": 1599705474,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/2a6345cc359fb9370ce011d04d4965f20e0cf051?x=x&version=2",
            "client": "ZulipMobile",
            "content": "<p>I\u2019m in a competitive programming Discord but am not at all active. As far as I know (which is not very far), my students are not on Discord.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 209626721,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "ljeng@icloud.com",
            "sender_full_name": "Lareine Jeng (S2'16)",
            "sender_id": 9516,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "2020 IOI",
            "submessages": [],
            "timestamp": 1599738457,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/2a6345cc359fb9370ce011d04d4965f20e0cf051?x=x&version=2",
            "client": "website",
            "content": "<p>Update: One of my students, Blagojche Pavleski, is on track to a bronze medal. Another one, Andrej Velichkovski, is 7 points from being on track to bronze. If we win two bronzes it will be the third-best performance in Macedonian history. Let's wish them good luck the rest of the way. You can track the live rankings here: <a href=\"https://ranking.ioi2020.sg/\">https://ranking.ioi2020.sg/</a></p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 210410953,
            "is_me_message": false,
            "reactions": [
                {
                    "emoji_code": "1f389",
                    "emoji_name": "tada",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "okay.zed@gmail.com",
                        "full_name": "okay zed (S1'18)",
                        "id": 117513
                    },
                    "user_id": 117513
                },
                {
                    "emoji_code": "1f389",
                    "emoji_name": "tada",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "robert@schuessler.org",
                        "full_name": "Robert Schuessler (W1'17)",
                        "id": 103047
                    },
                    "user_id": 103047
                },
                {
                    "emoji_code": "1f389",
                    "emoji_name": "tada",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "unnati97@gmail.com",
                        "full_name": "Unnati Niraj Patel (she) (S2'20)",
                        "id": 277193
                    },
                    "user_id": 277193
                },
                {
                    "emoji_code": "1f389",
                    "emoji_name": "tada",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "lukeadba@gmail.com",
                        "full_name": "Luke Barone-Adesi (he) (F'13)",
                        "id": 2903
                    },
                    "user_id": 2903
                }
            ],
            "recipient_id": 24954,
            "sender_email": "ljeng@icloud.com",
            "sender_full_name": "Lareine Jeng (S2'16)",
            "sender_id": 9516,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "2020 IOI",
            "submessages": [],
            "timestamp": 1600358483,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/2a6345cc359fb9370ce011d04d4965f20e0cf051?x=x&version=2",
            "client": "website",
            "content": "<p>Update: We won 3x bronze, better than expected! This is the second-best performance in Macedonian history.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 210634892,
            "is_me_message": false,
            "reactions": [
                {
                    "emoji_code": "1f389",
                    "emoji_name": "tada",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "stanley@zheng.nyc",
                        "full_name": "Stanley Zheng (they) (W1'19)",
                        "id": 100315
                    },
                    "user_id": 100315
                },
                {
                    "emoji_code": "1f389",
                    "emoji_name": "tada",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "pmmhy4@mst.edu",
                        "full_name": "Patrick McCarver (they/he) (SP1'19)",
                        "id": 134599
                    },
                    "user_id": 134599
                },
                {
                    "emoji_code": "1f389",
                    "emoji_name": "tada",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "clample@crimson.ua.edu",
                        "full_name": "Chris Lample (he) (W2'17)",
                        "id": 100452
                    },
                    "user_id": 100452
                },
                {
                    "emoji_code": "1f389",
                    "emoji_name": "tada",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "robert@schuessler.org",
                        "full_name": "Robert Schuessler (W1'17)",
                        "id": 103047
                    },
                    "user_id": 103047
                },
                {
                    "emoji_code": "1f389",
                    "emoji_name": "tada",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "ori@eigenstate.org",
                        "full_name": "Ori Dean Bernstein (he) (W2'20)",
                        "id": 255045
                    },
                    "user_id": 255045
                },
                {
                    "emoji_code": "1f389",
                    "emoji_name": "tada",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "bradyf@hey.com",
                        "full_name": "Brady Fontenot (he) (F2'20)",
                        "id": 342266
                    },
                    "user_id": 342266
                },
                {
                    "emoji_code": "1f389",
                    "emoji_name": "tada",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "unnati97@gmail.com",
                        "full_name": "Unnati Niraj Patel (she) (S2'20)",
                        "id": 277193
                    },
                    "user_id": 277193
                },
                {
                    "emoji_code": "1f389",
                    "emoji_name": "tada",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "okay.zed@gmail.com",
                        "full_name": "okay zed (S1'18)",
                        "id": 117513
                    },
                    "user_id": 117513
                },
                {
                    "emoji_code": "1f389",
                    "emoji_name": "tada",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "sara@farquharson.dev",
                        "full_name": "Sara Farquharson (she) (m6'20)",
                        "id": 327751
                    },
                    "user_id": 327751
                },
                {
                    "emoji_code": "1f389",
                    "emoji_name": "tada",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "ertysdl@gmail.com",
                        "full_name": "Erty Seidohl (he) (S'13)",
                        "id": 2154
                    },
                    "user_id": 2154
                },
                {
                    "emoji_code": "1f389",
                    "emoji_name": "tada",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "recurse@ardent.nebcorp.com",
                        "full_name": "Joe Ardent (he) (SP1'17)",
                        "id": 9097
                    },
                    "user_id": 9097
                }
            ],
            "recipient_id": 24954,
            "sender_email": "ljeng@icloud.com",
            "sender_full_name": "Lareine Jeng (S2'16)",
            "sender_id": 9516,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "2020 IOI",
            "submessages": [],
            "timestamp": 1600548966,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/89ca9a012749d846c25306ce17aebb57?d=identicon&version=1",
            "client": "website",
            "content": "<p>wow, congratulations - awesome performance!!</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 210684661,
            "is_me_message": false,
            "reactions": [
                {
                    "emoji_code": "2764",
                    "emoji_name": "heart",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "ljeng@icloud.com",
                        "full_name": "Lareine Jeng (S2'16)",
                        "id": 9516
                    },
                    "user_id": 9516
                }
            ],
            "recipient_id": 24954,
            "sender_email": "okay.zed@gmail.com",
            "sender_full_name": "okay zed (S1'18)",
            "sender_id": 117513,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "2020 IOI",
            "submessages": [],
            "timestamp": 1600634853,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/71e1c5c9d32bdce5ab4ce166c7f35520cbfd3d56?x=x&version=2",
            "client": "ZulipElectron",
            "content": "<p>FYI,  Steve Skienna(The Algorithm Design Manual) has been putting his lectures for this Fall20 semester on his youtube channel.  He has some old lectures from 2016 up already but the audio is really messed so this is nice.  <a href=\"https://www.youtube.com/watch?v=22hwcnXIGgk&amp;list=PLOtl7M3yp-DX6ic0HGT0PUX_wiNmkWkXx\">Skienna Lectures</a></p>\n<div class=\"youtube-video message_inline_image\"><a data-id=\"22hwcnXIGgk\" href=\"https://www.youtube.com/watch?v=22hwcnXIGgk&amp;list=PLOtl7M3yp-DX6ic0HGT0PUX_wiNmkWkXx\"><img src=\"https://i.ytimg.com/vi/22hwcnXIGgk/default.jpg\"></a></div>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 211210277,
            "is_me_message": false,
            "last_edit_timestamp": 1600998325,
            "reactions": [
                {
                    "emoji_code": "2764",
                    "emoji_name": "heart",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "anthonyabeo@gmail.com",
                        "full_name": "Anthony Anabila Abeo (he) (SP2'20)",
                        "id": 276302
                    },
                    "user_id": 276302
                }
            ],
            "recipient_id": 24954,
            "sender_email": "bradyf@hey.com",
            "sender_full_name": "Brady Fontenot (he) (F2'20)",
            "sender_id": 342266,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Steve Skienna Lectures",
            "submessages": [],
            "timestamp": 1600998283,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/b6389a3870b2757624fefd85d08b75b08f6dc815?x=x&version=2",
            "client": "website",
            "content": "<p>I was thinking about BFS for binary trees yesterday, and then I woke up in the middle of the night with this algorithm for level-order traversal in my head:</p>\n<div class=\"codehilite\"><pre><span></span><code># Level-Order Traversal, Recursive\ndef lotr(level):\n    if not level:\n        return []\n\n    values = [[n.val for n in level]]\n    nodes = [c for n in level for c in [n.left, n.right] if c]\n    return values + lotr(nodes)\n</code></pre></div>\n\n\n<p>I've seen DFS recursive solutions for level-order traversal where you keep track of the level as you go, but I don't think I've seen a level-wise recursive solution anywhere before (that's not saying much, since I'm not an expert).</p>\n<p>Is this a common thing that I've never seen? Is there something wrong with this approach?</p>\n<p>I treated each level as an array of nodes, so just called it  with the root node in an array: <code>lotr([root])</code></p>\n<div class=\"spoiler-block\"><div class=\"spoiler-header\">\n\n<p>setup code</p>\n</div><div class=\"spoiler-content\" aria-hidden=\"true\">\n\n<p>class Node:<br>\n    def __init__(self, val=0):<br>\n        self.val = val<br>\n        self.left = None<br>\n        self.right = None</p>\n<div class=\"codehilite\"><pre><span></span><code>def __repr__(self):\n    return f&quot;Node({self.val})&quot;\n</code></pre></div>\n\n\n<p>def setup():<br>\n    root = Node(2)</p>\n<div class=\"codehilite\"><pre><span></span><code>root.left = Node(0)\nroot.left.left = Node(-3)\nroot.left.right = Node(1)\n\nroot.right = Node(7)\nroot.right.left = Node(6)\nroot.right.right = Node(12)\n\nreturn root\n</code></pre></div>\n\n\n</div></div>\n\n<div class=\"codehilite\"><pre><span></span><code>\n</code></pre></div>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 214981191,
            "is_me_message": false,
            "last_edit_timestamp": 1603984959,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "robert@schuessler.org",
            "sender_full_name": "Robert Schuessler (W1'17)",
            "sender_id": 103047,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Level-Order Traversal",
            "submessages": [],
            "timestamp": 1603984657,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/81c6c8040fc0263607edd05c09dacf6b?d=identicon&version=1",
            "client": "ZulipElectron",
            "content": "<p>This seems reasonable if you want to expose the level structure of a tree.  If you look at APL implementations of BFS (like the parallel one in <a href=\"https://dfns.dyalog.com/n_bfs.htm\">Dyalog dfns</a>) they're often like this.</p>\n<p>I guess that one rarely sees this approach since it doesn't work for cyclic graphs, and you often see BFS in contexts where there's a non-unit cost to edges, so the usual formulation with an explicit queue is easier to adapt to these cases.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 215079787,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "julian@cipht.net",
            "sender_full_name": "Julian Squires (he) (F2'17)",
            "sender_id": 101992,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Level-Order Traversal",
            "submessages": [],
            "timestamp": 1604055637,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/b6389a3870b2757624fefd85d08b75b08f6dc815?x=x&version=2",
            "client": "website",
            "content": "<p>Thanks, Julian \u2014 sticking with the queue for adaptability makes a lot of sense.</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read",
                "historical"
            ],
            "id": 215100623,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "robert@schuessler.org",
            "sender_full_name": "Robert Schuessler (W1'17)",
            "sender_id": 103047,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Level-Order Traversal",
            "submessages": [],
            "timestamp": 1604067672,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/eeab050877ffb4fd12bfd948bba562c9fb1caf2a?x=x&version=4",
            "client": "website",
            "content": "<p>Does anyone know intuitive explanations/intros to wireless/mobile ad hoc network routing algorithms such as OLSR or BATMAN?</p>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read"
            ],
            "id": 217265757,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "arndtschnabel@freenet.de",
            "sender_full_name": "Arndt Schnabel (F2'18)",
            "sender_id": 129989,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Routing algorithms",
            "submessages": [],
            "timestamp": 1605791142,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/eeab050877ffb4fd12bfd948bba562c9fb1caf2a?x=x&version=4",
            "client": "website",
            "content": "<p>As a sidenote, I'm building my own toy network simulation tool to experiment with algorithms and see how well they work in such an environment: <a href=\"https://www.youtube.com/watch?v=Y8MvSAZ-YMk\">https://www.youtube.com/watch?v=Y8MvSAZ-YMk</a></p>\n<div class=\"youtube-video message_inline_image\"><a data-id=\"Y8MvSAZ-YMk\" href=\"https://www.youtube.com/watch?v=Y8MvSAZ-YMk\"><img src=\"https://i.ytimg.com/vi/Y8MvSAZ-YMk/default.jpg\"></a></div>",
            "content_type": "text/html",
            "display_recipient": "algorithms",
            "flags": [
                "read"
            ],
            "id": 217393204,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 24954,
            "sender_email": "arndtschnabel@freenet.de",
            "sender_full_name": "Arndt Schnabel (F2'18)",
            "sender_id": 129989,
            "sender_realm_str": "recurse",
            "stream_id": 21502,
            "subject": "Routing algorithms",
            "submessages": [],
            "timestamp": 1605874502,
            "topic_links": [],
            "type": "stream"
        }
    ],
    "msg": "",
    "result": "success"
}
