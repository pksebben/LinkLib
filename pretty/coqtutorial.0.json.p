{
    "anchor": 0,
    "found_anchor": false,
    "found_newest": true,
    "found_oldest": true,
    "history_limited": false,
    "messages": [
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/29c07e18de7841a470c83fe1272049e8fe5643a7?x=x&version=1",
            "client": "website",
            "content": "<p><a href=\"https://olabini.com/blog/2009/12/path-problem-with-emacs-on-mac-os-x/\" target=\"_blank\" title=\"https://olabini.com/blog/2009/12/path-problem-with-emacs-on-mac-os-x/\">https://olabini.com/blog/2009/12/path-problem-with-emacs-on-mac-os-x/</a></p>",
            "content_type": "text/html",
            "display_recipient": "coq tutorial",
            "flags": [
                "read",
                "historical"
            ],
            "id": 8817548,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 23596,
            "sender_email": "michael.david.lauria@gmail.com",
            "sender_full_name": "Michael Lauria (he) (S'13)",
            "sender_id": 2115,
            "sender_realm_str": "recurse",
            "stream_id": 20656,
            "subject": "emacs gui path issue",
            "submessages": [],
            "timestamp": 1375815094,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/29c07e18de7841a470c83fe1272049e8fe5643a7?x=x&version=1",
            "client": "website",
            "content": "<p><a href=\"http://perso.ens-lyon.fr/jeanmarie.madiot/coq100/\" target=\"_blank\" title=\"http://perso.ens-lyon.fr/jeanmarie.madiot/coq100/\">http://perso.ens-lyon.fr/jeanmarie.madiot/coq100/</a></p>",
            "content_type": "text/html",
            "display_recipient": "coq tutorial",
            "flags": [
                "read",
                "historical"
            ],
            "id": 8818506,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 23596,
            "sender_email": "michael.david.lauria@gmail.com",
            "sender_full_name": "Michael Lauria (he) (S'13)",
            "sender_id": 2115,
            "sender_realm_str": "recurse",
            "stream_id": 20656,
            "subject": "theorems",
            "submessages": [],
            "timestamp": 1375816752,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/e91990a05dae45146efabc2920ea4e98?d=identicon&version=1",
            "client": "website",
            "content": "<p>I'm having a bit of trouble proving the following in Coq.</p>\n<div class=\"codehilite\"><pre>Lemma andb_implies_orb : \n  forall (x y : bool), \n  andb x y = true -&gt; orb x y = true.\n</pre></div>\n\n\n<p>I'm working on<code>andb_eq_orb</code> and I'm going to use this lemma in it.</p>",
            "content_type": "text/html",
            "display_recipient": "coq tutorial",
            "flags": [
                "read",
                "historical"
            ],
            "id": 8831573,
            "is_me_message": false,
            "last_edit_timestamp": 1375844972,
            "reactions": [],
            "recipient_id": 23596,
            "sender_email": "recurse@fezrev.com",
            "sender_full_name": "Muhaimin Ahsan (S'13)",
            "sender_id": 2135,
            "sender_realm_str": "recurse",
            "stream_id": 20656,
            "subject": "sf",
            "submessages": [],
            "timestamp": 1375843854,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/e91990a05dae45146efabc2920ea4e98?d=identicon&version=1",
            "client": "website",
            "content": "<div class=\"codehilite\"><pre>Lemma andb_implies_orb :\n  forall (x y : bool),\n  andb x y = true -&gt; orb x y = true.\nProof.\n  intros.\n  induction x, y.\n    reflexivity.\n    reflexivity.\n    reflexivity.\n    rewrite &lt;- H.\n    reflexivity.\nQed.\n</pre></div>\n\n\n<p>Seems like this works, but I have no idea what running induction on x and y does and why it works the way it does. Also, it seems to me that this could be simplified...</p>",
            "content_type": "text/html",
            "display_recipient": "coq tutorial",
            "flags": [
                "read",
                "historical"
            ],
            "id": 8832014,
            "is_me_message": false,
            "last_edit_timestamp": 1375845067,
            "reactions": [],
            "recipient_id": 23596,
            "sender_email": "recurse@fezrev.com",
            "sender_full_name": "Muhaimin Ahsan (S'13)",
            "sender_id": 2135,
            "sender_realm_str": "recurse",
            "stream_id": 20656,
            "subject": "sf",
            "submessages": [],
            "timestamp": 1375845010,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/e91990a05dae45146efabc2920ea4e98?d=identicon&version=1",
            "client": "website",
            "content": "<p>Well, got to this so far. <a href=\"https://gist.github.com/leroux/6171397\" target=\"_blank\" title=\"https://gist.github.com/leroux/6171397\">https://gist.github.com/leroux/6171397</a> </p>",
            "content_type": "text/html",
            "display_recipient": "coq tutorial",
            "flags": [
                "read",
                "historical"
            ],
            "id": 8835322,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 23596,
            "sender_email": "recurse@fezrev.com",
            "sender_full_name": "Muhaimin Ahsan (S'13)",
            "sender_id": 2135,
            "sender_realm_str": "recurse",
            "stream_id": 20656,
            "subject": "sf",
            "submessages": [],
            "timestamp": 1375853839,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/282da691709f4715fc3e0ff6bebd278b?d=identicon&version=1",
            "client": "website",
            "content": "<p><span class=\"user-mention\" data-user-email=\"leroux@fezrev.com\">@Muhaimin Ahsan</span>, here's a simpler way to think about <code>andb_eq_orb</code>, in words. You get to translate it into Coq :)</p>\n<div class=\"codehilite\"><pre><span class=\"nc\">Theorem</span> <span class=\"n\">andb_eq_orb</span> <span class=\"o\">:</span> \n  <span class=\"n\">forall</span> <span class=\"o\">(</span><span class=\"n\">b</span> <span class=\"n\">c</span> <span class=\"o\">:</span> <span class=\"kt\">bool</span><span class=\"o\">),</span>\n  <span class=\"o\">(</span><span class=\"n\">andb</span> <span class=\"n\">b</span> <span class=\"n\">c</span> <span class=\"o\">=</span> <span class=\"n\">orb</span> <span class=\"n\">b</span> <span class=\"n\">c</span><span class=\"o\">)</span> <span class=\"o\">-&gt;</span>\n  <span class=\"n\">b</span> <span class=\"o\">=</span> <span class=\"n\">c</span><span class=\"o\">.</span>\n<span class=\"nn\">Proof</span><span class=\"p\">.</span>\n  <span class=\"p\">...</span>\n<span class=\"nn\">Qed</span><span class=\"p\">.</span>\n</pre></div>\n\n\n<p>If <code>b</code> is true, then <code>andb b c</code> simplifies to <code>c</code> and <code>orb b c</code> simplifies to <code>true</code>; evidently when <code>b</code> is true then <code>c</code> is true too.</p>\n<p>Similarly, if <code>b</code> is false, then <code>andb b c</code> simplifies to <code>false</code> and <code>orb b c</code> simplifies to <code>c</code>; evidently when <code>b</code> is false then <code>c</code> is false too.</p>\n<p>So, we've shown in either case that <code>b = c</code>.</p>",
            "content_type": "text/html",
            "display_recipient": "coq tutorial",
            "flags": [
                "read",
                "historical"
            ],
            "id": 8845119,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 23596,
            "sender_email": "alan.m.odonnell@gmail.com",
            "sender_full_name": "Alan O'Donnell (he) (S1'19)",
            "sender_id": 813,
            "sender_realm_str": "recurse",
            "stream_id": 20656,
            "subject": "sf",
            "submessages": [],
            "timestamp": 1375880578,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/e91990a05dae45146efabc2920ea4e98?d=identicon&version=1",
            "client": "website",
            "content": "<div class=\"codehilite\"><pre><span class=\"kn\">Theorem</span> <span class=\"n\">andb_eq_orb</span> <span class=\"o\">:</span> \n  <span class=\"k\">forall</span> <span class=\"o\">(</span><span class=\"n\">b</span> <span class=\"n\">c</span> <span class=\"o\">:</span> <span class=\"kt\">bool</span><span class=\"o\">),</span>\n  <span class=\"o\">(</span><span class=\"n\">andb</span> <span class=\"n\">b</span> <span class=\"n\">c</span> <span class=\"o\">=</span> <span class=\"n\">orb</span> <span class=\"n\">b</span> <span class=\"n\">c</span><span class=\"o\">)</span> <span class=\"o\">-&gt;</span>\n  <span class=\"n\">b</span> <span class=\"o\">=</span> <span class=\"n\">c</span><span class=\"o\">.</span>\n<span class=\"kn\">Proof</span><span class=\"o\">.</span>\n  <span class=\"k\">intros</span> <span class=\"n\">b</span> <span class=\"n\">c</span><span class=\"o\">.</span>\n  <span class=\"k\">destruct</span> <span class=\"n\">b</span><span class=\"o\">,</span> <span class=\"n\">c</span><span class=\"o\">.</span>\n  <span class=\"kp\">reflexivity</span><span class=\"o\">.</span>\n  <span class=\"kp\">discriminate</span><span class=\"o\">.</span>\n  <span class=\"kp\">discriminate</span><span class=\"o\">.</span>\n  <span class=\"kp\">reflexivity</span><span class=\"o\">.</span>\n<span class=\"kn\">Qed</span><span class=\"o\">.</span>\n</pre></div>",
            "content_type": "text/html",
            "display_recipient": "coq tutorial",
            "flags": [
                "read",
                "historical"
            ],
            "id": 8845723,
            "is_me_message": false,
            "last_edit_timestamp": 1375882182,
            "reactions": [],
            "recipient_id": 23596,
            "sender_email": "recurse@fezrev.com",
            "sender_full_name": "Muhaimin Ahsan (S'13)",
            "sender_id": 2135,
            "sender_realm_str": "recurse",
            "stream_id": 20656,
            "subject": "sf",
            "submessages": [],
            "timestamp": 1375882067,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/282da691709f4715fc3e0ff6bebd278b?d=identicon&version=1",
            "client": "website",
            "content": "<p>What does <code>discriminate</code> do? I just used <code>rewrite</code>.</p>",
            "content_type": "text/html",
            "display_recipient": "coq tutorial",
            "flags": [
                "read",
                "historical"
            ],
            "id": 8845821,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 23596,
            "sender_email": "alan.m.odonnell@gmail.com",
            "sender_full_name": "Alan O'Donnell (he) (S1'19)",
            "sender_id": 813,
            "sender_realm_str": "recurse",
            "stream_id": 20656,
            "subject": "sf",
            "submessages": [],
            "timestamp": 1375882286,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/e91990a05dae45146efabc2920ea4e98?d=identicon&version=1",
            "client": "website",
            "content": "<p><span class=\"user-mention\" data-user-email=\"alan@hackerschool.com\">@Alan O'Donnell</span>: Does that look correct? I feel like you can use many different tactics that make no sense to the proof at hand and make it work... Like intros and rewrites for every case.</p>",
            "content_type": "text/html",
            "display_recipient": "coq tutorial",
            "flags": [
                "read",
                "historical"
            ],
            "id": 8845822,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 23596,
            "sender_email": "recurse@fezrev.com",
            "sender_full_name": "Muhaimin Ahsan (S'13)",
            "sender_id": 2135,
            "sender_realm_str": "recurse",
            "stream_id": 20656,
            "subject": "sf",
            "submessages": [],
            "timestamp": 1375882287,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/282da691709f4715fc3e0ff6bebd278b?d=identicon&version=1",
            "client": "website",
            "content": "<p>I also only destructed on b, not both.</p>",
            "content_type": "text/html",
            "display_recipient": "coq tutorial",
            "flags": [
                "read",
                "historical"
            ],
            "id": 8845824,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 23596,
            "sender_email": "alan.m.odonnell@gmail.com",
            "sender_full_name": "Alan O'Donnell (he) (S1'19)",
            "sender_id": 813,
            "sender_realm_str": "recurse",
            "stream_id": 20656,
            "subject": "sf",
            "submessages": [],
            "timestamp": 1375882311,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/e91990a05dae45146efabc2920ea4e98?d=identicon&version=1",
            "client": "website",
            "content": "<p>This behaves like discriminate ident if ident is the name of an hypothesis to which discriminate is applicable; if the current goal is of the form term1 &lt;&gt; term2, this behaves as intro ident; injection ident.</p>",
            "content_type": "text/html",
            "display_recipient": "coq tutorial",
            "flags": [
                "read",
                "historical"
            ],
            "id": 8845860,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 23596,
            "sender_email": "recurse@fezrev.com",
            "sender_full_name": "Muhaimin Ahsan (S'13)",
            "sender_id": 2135,
            "sender_realm_str": "recurse",
            "stream_id": 20656,
            "subject": "sf",
            "submessages": [],
            "timestamp": 1375882342,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/e91990a05dae45146efabc2920ea4e98?d=identicon&version=1",
            "client": "website",
            "content": "<p>Ahh, okay. I was thinking about destructing only on b.</p>",
            "content_type": "text/html",
            "display_recipient": "coq tutorial",
            "flags": [
                "read",
                "historical"
            ],
            "id": 8845862,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 23596,
            "sender_email": "recurse@fezrev.com",
            "sender_full_name": "Muhaimin Ahsan (S'13)",
            "sender_id": 2135,
            "sender_realm_str": "recurse",
            "stream_id": 20656,
            "subject": "sf",
            "submessages": [],
            "timestamp": 1375882353,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/e91990a05dae45146efabc2920ea4e98?d=identicon&version=1",
            "client": "website",
            "content": "<p>Let me try this again then.</p>",
            "content_type": "text/html",
            "display_recipient": "coq tutorial",
            "flags": [
                "read",
                "historical"
            ],
            "id": 8845864,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 23596,
            "sender_email": "recurse@fezrev.com",
            "sender_full_name": "Muhaimin Ahsan (S'13)",
            "sender_id": 2135,
            "sender_realm_str": "recurse",
            "stream_id": 20656,
            "subject": "sf",
            "submessages": [],
            "timestamp": 1375882360,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/282da691709f4715fc3e0ff6bebd278b?d=identicon&version=1",
            "client": "website",
            "content": "<p>Yeah, I just used destruct, rewrite, intro etc.</p>",
            "content_type": "text/html",
            "display_recipient": "coq tutorial",
            "flags": [
                "read",
                "historical"
            ],
            "id": 8845913,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 23596,
            "sender_email": "alan.m.odonnell@gmail.com",
            "sender_full_name": "Alan O'Donnell (he) (S1'19)",
            "sender_id": 813,
            "sender_realm_str": "recurse",
            "stream_id": 20656,
            "subject": "sf",
            "submessages": [],
            "timestamp": 1375882490,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/282da691709f4715fc3e0ff6bebd278b?d=identicon&version=1",
            "client": "website",
            "content": "<p>Ok, heading in to Hacker School, offline for a bit.</p>",
            "content_type": "text/html",
            "display_recipient": "coq tutorial",
            "flags": [
                "read",
                "historical"
            ],
            "id": 8845916,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 23596,
            "sender_email": "alan.m.odonnell@gmail.com",
            "sender_full_name": "Alan O'Donnell (he) (S1'19)",
            "sender_id": 813,
            "sender_realm_str": "recurse",
            "stream_id": 20656,
            "subject": "sf",
            "submessages": [],
            "timestamp": 1375882512,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/e91990a05dae45146efabc2920ea4e98?d=identicon&version=1",
            "client": "website",
            "content": "<p>Alright.</p>",
            "content_type": "text/html",
            "display_recipient": "coq tutorial",
            "flags": [
                "read",
                "historical"
            ],
            "id": 8845965,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 23596,
            "sender_email": "recurse@fezrev.com",
            "sender_full_name": "Muhaimin Ahsan (S'13)",
            "sender_id": 2135,
            "sender_realm_str": "recurse",
            "stream_id": 20656,
            "subject": "sf",
            "submessages": [],
            "timestamp": 1375882617,
            "topic_links": [],
            "type": "stream"
        }
    ],
    "msg": "",
    "result": "success"
}
