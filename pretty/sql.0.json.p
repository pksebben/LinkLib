{
    "anchor": 0,
    "found_anchor": false,
    "found_newest": true,
    "found_oldest": true,
    "history_limited": false,
    "messages": [
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/f2766cd4c5417d85c23324f34c3532b9b5d6c7b2?x=x&version=1",
            "client": "desktop app Mac 0.4.4",
            "content": "<p>cool!</p>",
            "content_type": "text/html",
            "display_recipient": "sql",
            "flags": [
                "read",
                "historical"
            ],
            "id": 47758127,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 43311,
            "sender_email": "sherminn@piratefsh.net",
            "sender_full_name": "Sher Minn Chong (m1'19)",
            "sender_id": 8475,
            "sender_realm_str": "recurse",
            "stream_id": 27683,
            "subject": "hey!",
            "submessages": [],
            "timestamp": 1443640180,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/7434fb7a6fe0a9c13487d68ac5a38e1c?d=identicon&version=1",
            "client": "website",
            "content": "<p>Can't believe this didn't exist already!</p>",
            "content_type": "text/html",
            "display_recipient": "sql",
            "flags": [
                "read",
                "historical"
            ],
            "id": 47758131,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 43311,
            "sender_email": "davidnmfarrell@gmail.com",
            "sender_full_name": "David Farrell (F2'15)",
            "sender_id": 8679,
            "sender_realm_str": "recurse",
            "stream_id": 27683,
            "subject": "New channel for SQL ...",
            "submessages": [],
            "timestamp": 1443640183,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/f2766cd4c5417d85c23324f34c3532b9b5d6c7b2?x=x&version=1",
            "client": "desktop app Mac 0.4.4",
            "content": "<p>was wondering if this would be better as a topic under programming?</p>",
            "content_type": "text/html",
            "display_recipient": "sql",
            "flags": [
                "read",
                "historical"
            ],
            "id": 47758133,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 43311,
            "sender_email": "sherminn@piratefsh.net",
            "sender_full_name": "Sher Minn Chong (m1'19)",
            "sender_id": 8475,
            "sender_realm_str": "recurse",
            "stream_id": 27683,
            "subject": "hey!",
            "submessages": [],
            "timestamp": 1443640191,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/7434fb7a6fe0a9c13487d68ac5a38e1c?d=identicon&version=1",
            "client": "website",
            "content": "<p>weeeell that depends, I mean there are channels for most other langs right?</p>",
            "content_type": "text/html",
            "display_recipient": "sql",
            "flags": [
                "read",
                "historical"
            ],
            "id": 47758197,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 43311,
            "sender_email": "davidnmfarrell@gmail.com",
            "sender_full_name": "David Farrell (F2'15)",
            "sender_id": 8679,
            "sender_realm_str": "recurse",
            "stream_id": 27683,
            "subject": "hey!",
            "submessages": [],
            "timestamp": 1443640222,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/28427e9335cecebc2d8cadc90c1bd46516bd589f?x=x&version=3",
            "client": "desktop app Mac 0.4.4",
            "content": "<p>hi thar</p>",
            "content_type": "text/html",
            "display_recipient": "sql",
            "flags": [
                "read",
                "historical"
            ],
            "id": 47758205,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 43311,
            "sender_email": "darthmincho@gmail.com",
            "sender_full_name": "Carlos Rey (SP2'15)",
            "sender_id": 7875,
            "sender_realm_str": "recurse",
            "stream_id": 27683,
            "subject": "hey!",
            "submessages": [],
            "timestamp": 1443640229,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/7434fb7a6fe0a9c13487d68ac5a38e1c?d=identicon&version=1",
            "client": "website",
            "content": "<p>heya</p>",
            "content_type": "text/html",
            "display_recipient": "sql",
            "flags": [
                "read",
                "historical"
            ],
            "id": 47758216,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 43311,
            "sender_email": "davidnmfarrell@gmail.com",
            "sender_full_name": "David Farrell (F2'15)",
            "sender_id": 8679,
            "sender_realm_str": "recurse",
            "stream_id": 27683,
            "subject": "hey!",
            "submessages": [],
            "timestamp": 1443640240,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/28427e9335cecebc2d8cadc90c1bd46516bd589f?x=x&version=3",
            "client": "desktop app Mac 0.4.4",
            "content": "<p>SELECT * FROM zulip_channels WHERE name = 'sql';</p>",
            "content_type": "text/html",
            "display_recipient": "sql",
            "flags": [
                "read",
                "historical"
            ],
            "id": 47758226,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 43311,
            "sender_email": "darthmincho@gmail.com",
            "sender_full_name": "Carlos Rey (SP2'15)",
            "sender_id": 7875,
            "sender_realm_str": "recurse",
            "stream_id": 27683,
            "subject": "hey!",
            "submessages": [],
            "timestamp": 1443640253,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/7434fb7a6fe0a9c13487d68ac5a38e1c?d=identicon&version=1",
            "client": "website",
            "content": "<p>I guess whether SQL deserves its own stream will be answered by how busy it is!</p>",
            "content_type": "text/html",
            "display_recipient": "sql",
            "flags": [
                "read",
                "historical"
            ],
            "id": 47758238,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 43311,
            "sender_email": "davidnmfarrell@gmail.com",
            "sender_full_name": "David Farrell (F2'15)",
            "sender_id": 8679,
            "sender_realm_str": "recurse",
            "stream_id": 27683,
            "subject": "hey!",
            "submessages": [],
            "timestamp": 1443640274,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/7434fb7a6fe0a9c13487d68ac5a38e1c?d=identicon&version=1",
            "client": "website",
            "content": "<p>let's see ...</p>",
            "content_type": "text/html",
            "display_recipient": "sql",
            "flags": [
                "read",
                "historical"
            ],
            "id": 47758249,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 43311,
            "sender_email": "davidnmfarrell@gmail.com",
            "sender_full_name": "David Farrell (F2'15)",
            "sender_id": 8679,
            "sender_realm_str": "recurse",
            "stream_id": 27683,
            "subject": "hey!",
            "submessages": [],
            "timestamp": 1443640290,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/f2766cd4c5417d85c23324f34c3532b9b5d6c7b2?x=x&version=1",
            "client": "desktop app Mac 0.4.4",
            "content": "<p>huh, i never noticed languages had their own streams! had always assumed they were just topics</p>",
            "content_type": "text/html",
            "display_recipient": "sql",
            "flags": [
                "read",
                "historical"
            ],
            "id": 47758264,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 43311,
            "sender_email": "sherminn@piratefsh.net",
            "sender_full_name": "Sher Minn Chong (m1'19)",
            "sender_id": 8475,
            "sender_realm_str": "recurse",
            "stream_id": 27683,
            "subject": "hey!",
            "submessages": [],
            "timestamp": 1443640315,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/28427e9335cecebc2d8cadc90c1bd46516bd589f?x=x&version=3",
            "client": "desktop app Mac 0.4.4",
            "content": "<p>The problem with most zulip streams is that they're hard to find. If you actively promote it and invite people to use it for SQL conversations you can form a community around it</p>",
            "content_type": "text/html",
            "display_recipient": "sql",
            "flags": [
                "read",
                "historical"
            ],
            "id": 47758280,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 43311,
            "sender_email": "darthmincho@gmail.com",
            "sender_full_name": "Carlos Rey (SP2'15)",
            "sender_id": 7875,
            "sender_realm_str": "recurse",
            "stream_id": 27683,
            "subject": "hey!",
            "submessages": [],
            "timestamp": 1443640324,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/f2766cd4c5417d85c23324f34c3532b9b5d6c7b2?x=x&version=1",
            "client": "desktop app Mac 0.4.4",
            "content": "<p>true dat</p>",
            "content_type": "text/html",
            "display_recipient": "sql",
            "flags": [
                "read",
                "historical"
            ],
            "id": 47758311,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 43311,
            "sender_email": "sherminn@piratefsh.net",
            "sender_full_name": "Sher Minn Chong (m1'19)",
            "sender_id": 8475,
            "sender_realm_str": "recurse",
            "stream_id": 27683,
            "subject": "hey!",
            "submessages": [],
            "timestamp": 1443640343,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/7434fb7a6fe0a9c13487d68ac5a38e1c?d=identicon&version=1",
            "client": "website",
            "content": "<p><span class=\"user-mention\" data-user-email=\"darthmincho@gmail.com\">@Carlos Flores (SP2'15)</span> ++</p>",
            "content_type": "text/html",
            "display_recipient": "sql",
            "flags": [
                "read",
                "historical"
            ],
            "id": 47758335,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 43311,
            "sender_email": "davidnmfarrell@gmail.com",
            "sender_full_name": "David Farrell (F2'15)",
            "sender_id": 8679,
            "sender_realm_str": "recurse",
            "stream_id": 27683,
            "subject": "hey!",
            "submessages": [],
            "timestamp": 1443640397,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/fcd59db6d86365a6fba1ce0f9c7b8102?d=identicon&version=1",
            "client": "website",
            "content": "<p>The following is valid in vertica: <code>(select * from query_events) limit 100</code>. Has anybody ever seen this before? An extra clause that limits the results of a subquery? </p>",
            "content_type": "text/html",
            "display_recipient": "sql",
            "flags": [
                "read",
                "historical"
            ],
            "id": 50889407,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 43311,
            "sender_email": "zack@zacharymaril.com",
            "sender_full_name": "Zack Maril (S'13)",
            "sender_id": 2130,
            "sender_realm_str": "recurse",
            "stream_id": 27683,
            "subject": "Weird sql syntax",
            "submessages": [],
            "timestamp": 1450127328,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/fcd59db6d86365a6fba1ce0f9c7b8102?d=identicon&version=1",
            "client": "website",
            "content": "<p>The explain for it is exactly the same as if the parens weren't there and it was just a regular ol' select statement. </p>",
            "content_type": "text/html",
            "display_recipient": "sql",
            "flags": [
                "read",
                "historical"
            ],
            "id": 50889418,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 43311,
            "sender_email": "zack@zacharymaril.com",
            "sender_full_name": "Zack Maril (S'13)",
            "sender_id": 2130,
            "sender_realm_str": "recurse",
            "stream_id": 27683,
            "subject": "Weird sql syntax",
            "submessages": [],
            "timestamp": 1450127361,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/076b6e734f9b1efdde135ce04ccc75567b8377bc?x=x&version=1",
            "client": "website",
            "content": "<p>Looking to build a user db that stores user info such as login info and daily nutritional intake data. Anybody have an suggestions as to how to get started or resources for learning SQL in general?</p>",
            "content_type": "text/html",
            "display_recipient": "sql",
            "flags": [
                "read",
                "historical"
            ],
            "id": 100017415,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 43311,
            "sender_email": "jeni.gooley.42@gmail.com",
            "sender_full_name": "Jeni Gooley (F1'16)",
            "sender_id": 100036,
            "sender_realm_str": "recurse",
            "stream_id": 27683,
            "subject": "fav into tutorial",
            "submessages": [],
            "timestamp": 1471295484,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/2b3883a91e0e0a59f3998bcc07ca66d2e9e760a6?x=x&version=1",
            "client": "website",
            "content": "<p>I wasn't new to SQL when I found the site, but I've used this in the past: <a href=\"http://use-the-index-luke.com/\" target=\"_blank\" title=\"http://use-the-index-luke.com/\">http://use-the-index-luke.com/</a><br>\n*Edit*: Oh, it only covers indexing. Not what you're looking for I don't think.</p>",
            "content_type": "text/html",
            "display_recipient": "sql",
            "flags": [
                "read",
                "historical"
            ],
            "id": 100017462,
            "is_me_message": false,
            "last_edit_timestamp": 1471295695,
            "reactions": [],
            "recipient_id": 43311,
            "sender_email": "platt.nicholas@gmail.com",
            "sender_full_name": "Nick Platt (F1'16)",
            "sender_id": 100031,
            "sender_realm_str": "recurse",
            "stream_id": 27683,
            "subject": "fav into tutorial",
            "submessages": [],
            "timestamp": 1471295645,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/076b6e734f9b1efdde135ce04ccc75567b8377bc?x=x&version=1",
            "client": "website",
            "content": "<p>not exactly what I need but definitely bookmarked for later in the process. thanks</p>",
            "content_type": "text/html",
            "display_recipient": "sql",
            "flags": [
                "read",
                "historical"
            ],
            "id": 100017499,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 43311,
            "sender_email": "jeni.gooley.42@gmail.com",
            "sender_full_name": "Jeni Gooley (F1'16)",
            "sender_id": 100036,
            "sender_realm_str": "recurse",
            "stream_id": 27683,
            "subject": "fav into tutorial",
            "submessages": [],
            "timestamp": 1471295847,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/6d5e5a94fd7ae55388dd64dbf4da7b2732b8348e?x=x&version=1",
            "client": "website",
            "content": "<p><span class=\"user-mention\" data-user-email=\"jeni.gooley.42@gmail.com\">@Jennifer Gooley</span> there's this tutorial: <a href=\"https://www.sqlteaching.com/\" target=\"_blank\" title=\"https://www.sqlteaching.com/\">https://www.sqlteaching.com/</a> which takes your through the data selection commands, but it doesn't show you how to create your own database =[</p>",
            "content_type": "text/html",
            "display_recipient": "sql",
            "flags": [
                "read",
                "historical"
            ],
            "id": 100017511,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 43311,
            "sender_email": "juliano.solanho@gmail.com",
            "sender_full_name": "Juliano Bortolozzo Solanho (he) (F1'16)",
            "sender_id": 100035,
            "sender_realm_str": "recurse",
            "stream_id": 27683,
            "subject": "fav into tutorial",
            "submessages": [],
            "timestamp": 1471295899,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/6d5e5a94fd7ae55388dd64dbf4da7b2732b8348e?x=x&version=1",
            "client": "website",
            "content": "<p><span class=\"user-mention\" data-user-email=\"jeni.gooley.42@gmail.com\">@Jennifer Gooley</span> there's <a href=\"http://sql.learncodethehardway.org/\" target=\"_blank\" title=\"http://sql.learncodethehardway.org/\">http://sql.learncodethehardway.org/</a> (don't get disencouraged by \"the hard way\" in the titled!) which covers everything from creating a table to querying, updating, etc,  step by step with small exercises on sqlite, which is easy to setup</p>",
            "content_type": "text/html",
            "display_recipient": "sql",
            "flags": [
                "read",
                "historical"
            ],
            "id": 100017534,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 43311,
            "sender_email": "juliano.solanho@gmail.com",
            "sender_full_name": "Juliano Bortolozzo Solanho (he) (F1'16)",
            "sender_id": 100035,
            "sender_realm_str": "recurse",
            "stream_id": 27683,
            "subject": "fav into tutorial",
            "submessages": [],
            "timestamp": 1471295987,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/076b6e734f9b1efdde135ce04ccc75567b8377bc?x=x&version=1",
            "client": "website",
            "content": "<p>ah yes thank you <span class=\"user-mention\" data-user-email=\"juliano.solanho@gmail.com\">@Juliano Bortolozzo Solanho</span> ... I used python the hardware a last year. perfect!</p>",
            "content_type": "text/html",
            "display_recipient": "sql",
            "flags": [
                "read",
                "historical"
            ],
            "id": 100017746,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 43311,
            "sender_email": "jeni.gooley.42@gmail.com",
            "sender_full_name": "Jeni Gooley (F1'16)",
            "sender_id": 100036,
            "sender_realm_str": "recurse",
            "stream_id": 27683,
            "subject": "fav into tutorial",
            "submessages": [],
            "timestamp": 1471296589,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/ab7ac8d0421135a2615ee68497efe480de3a293b?x=x&version=1",
            "client": "website",
            "content": "<p>HI, I'm implemented a postgres db with a many to one relationship... something like <code>REFERENCES</code> etc. And It kinda works I guess, but I'm not sure if it isn't partially incomplete or something; so i was hoping someone could come take a look at my schemas to double check for me</p>",
            "content_type": "text/html",
            "display_recipient": "sql",
            "flags": [
                "read",
                "historical"
            ],
            "id": 102453114,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 43311,
            "sender_email": "fenimoreplove@gmail.com",
            "sender_full_name": "Fenimore Love (he) (F2'16)",
            "sender_id": 100182,
            "sender_realm_str": "recurse",
            "stream_id": 27683,
            "subject": "Postgres Many to One",
            "submessages": [],
            "timestamp": 1476967205,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/70292d91a79cfd0fb1c8ad4f650480d631a56e9e?x=x&version=1",
            "client": "website",
            "content": "<p>I can take a look if no one else has</p>",
            "content_type": "text/html",
            "display_recipient": "sql",
            "flags": [
                "read",
                "historical"
            ],
            "id": 102461478,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 43311,
            "sender_email": "lawrence.trey@gmail.com",
            "sender_full_name": "Trey Lawrence (F1'16)",
            "sender_id": 911,
            "sender_realm_str": "recurse",
            "stream_id": 27683,
            "subject": "Postgres Many to One",
            "submessages": [],
            "timestamp": 1476982891,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/a04b9dcd66595ebe5cdaa7a28411daae?d=identicon&version=1",
            "client": "website",
            "content": "<p><span class=\"user-mention\" data-user-email=\"george.w.king@gmail.com\">@George King (S'14)</span> and i were having a great discussion about sql design and we would love some additional input!</p>",
            "content_type": "text/html",
            "display_recipient": "sql",
            "flags": [
                "read",
                "historical"
            ],
            "id": 102643956,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 43311,
            "sender_email": "tom@buchok.com",
            "sender_full_name": "Tom Buchok (S'13)",
            "sender_id": 2112,
            "sender_realm_str": "recurse",
            "stream_id": 27683,
            "subject": "relational design to denormalized",
            "submessages": [],
            "timestamp": 1477401284,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/a04b9dcd66595ebe5cdaa7a28411daae?d=identicon&version=1",
            "client": "website",
            "content": "<p>the issue with the following two options is that <code>free agent</code> isn't really a team:</p>\n<p><a href=\"https://gist.github.com/tbuchok/aed11180704e4af77c4905afe48482ae\" target=\"_blank\" title=\"https://gist.github.com/tbuchok/aed11180704e4af77c4905afe48482ae\">https://gist.github.com/tbuchok/aed11180704e4af77c4905afe48482ae</a></p>",
            "content_type": "text/html",
            "display_recipient": "sql",
            "flags": [
                "read",
                "historical"
            ],
            "id": 102643977,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 43311,
            "sender_email": "tom@buchok.com",
            "sender_full_name": "Tom Buchok (S'13)",
            "sender_id": 2112,
            "sender_realm_str": "recurse",
            "stream_id": 27683,
            "subject": "relational design to denormalized",
            "submessages": [],
            "timestamp": 1477401328,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/a04b9dcd66595ebe5cdaa7a28411daae?d=identicon&version=1",
            "client": "website",
            "content": "<p>but looking the other way, \"which players are on the chicago bulls\" becomes a little different:</p>\n<p><a href=\"https://gist.github.com/tbuchok/c5b7452951100f7ece6857df5263dd5c\" target=\"_blank\" title=\"https://gist.github.com/tbuchok/c5b7452951100f7ece6857df5263dd5c\">https://gist.github.com/tbuchok/c5b7452951100f7ece6857df5263dd5c</a></p>",
            "content_type": "text/html",
            "display_recipient": "sql",
            "flags": [
                "read",
                "historical"
            ],
            "id": 102644176,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 43311,
            "sender_email": "tom@buchok.com",
            "sender_full_name": "Tom Buchok (S'13)",
            "sender_id": 2112,
            "sender_realm_str": "recurse",
            "stream_id": 27683,
            "subject": "relational design to denormalized",
            "submessages": [],
            "timestamp": 1477401762,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/a04b9dcd66595ebe5cdaa7a28411daae?d=identicon&version=1",
            "client": "website",
            "content": "<p>ultimately if i think about this an object / document, i'm trying to avoid something like this:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"p\">{</span>\n   <span class=\"nx\">players</span><span class=\"o\">:</span> <span class=\"p\">[</span>\n     <span class=\"p\">{</span> <span class=\"nx\">id</span><span class=\"o\">:</span> <span class=\"mi\">23</span><span class=\"p\">,</span> <span class=\"nx\">name</span><span class=\"o\">:</span> <span class=\"s1\">&#39;michael jordan&#39;</span><span class=\"p\">,</span> <span class=\"nx\">free_agent</span><span class=\"o\">:</span> <span class=\"kc\">false</span><span class=\"p\">,</span> <span class=\"nx\">team_name</span><span class=\"o\">:</span> <span class=\"s1\">&#39;chicago bulls&#39;</span> <span class=\"p\">},</span>\n     <span class=\"p\">{</span> <span class=\"nx\">id</span><span class=\"o\">:</span> <span class=\"mi\">33</span><span class=\"p\">,</span> <span class=\"nx\">name</span><span class=\"o\">:</span> <span class=\"s1\">&#39;scottie pippen&#39;</span><span class=\"p\">,</span> <span class=\"nx\">free_agent</span><span class=\"o\">:</span> <span class=\"kc\">false</span><span class=\"p\">,</span> <span class=\"nx\">team_name</span><span class=\"o\">:</span> <span class=\"s1\">&#39;chicago bulls&#39;</span> <span class=\"p\">}</span>\n     <span class=\"p\">{</span> <span class=\"nx\">id</span><span class=\"o\">:</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"nx\">name</span><span class=\"o\">:</span> <span class=\"s1\">&#39;tom buchok&#39;</span><span class=\"p\">,</span> <span class=\"nx\">free_agent</span><span class=\"o\">:</span> <span class=\"kc\">true</span><span class=\"p\">,</span> <span class=\"nx\">team_name</span><span class=\"o\">:</span> <span class=\"kc\">null</span> <span class=\"p\">}</span> <span class=\"c1\">// do we just leave team_name out?</span>\n  <span class=\"p\">]</span>\n<span class=\"p\">}</span>\n</pre></div>",
            "content_type": "text/html",
            "display_recipient": "sql",
            "flags": [
                "read",
                "historical"
            ],
            "id": 102644301,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 43311,
            "sender_email": "tom@buchok.com",
            "sender_full_name": "Tom Buchok (S'13)",
            "sender_id": 2112,
            "sender_realm_str": "recurse",
            "stream_id": 27683,
            "subject": "relational design to denormalized",
            "submessages": [],
            "timestamp": 1477401976,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/d84e3106fff0d257cc5a95ca9ea44405?d=identicon&version=1",
            "client": "website",
            "content": "<p>After looking some more I wonder if I misunderstand your problem. Are you just trying to avoid NULLs? If so, why?</p>",
            "content_type": "text/html",
            "display_recipient": "sql",
            "flags": [
                "read",
                "historical"
            ],
            "id": 102644521,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 43311,
            "sender_email": "george.w.king@gmail.com",
            "sender_full_name": "George King (he) (S'13)",
            "sender_id": 2153,
            "sender_realm_str": "recurse",
            "stream_id": 27683,
            "subject": "relational design to denormalized",
            "submessages": [],
            "timestamp": 1477402421,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/a04b9dcd66595ebe5cdaa7a28411daae?d=identicon&version=1",
            "client": "website",
            "content": "<p>i guess because of symmetry?</p>",
            "content_type": "text/html",
            "display_recipient": "sql",
            "flags": [
                "read",
                "historical"
            ],
            "id": 102644729,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 43311,
            "sender_email": "tom@buchok.com",
            "sender_full_name": "Tom Buchok (S'13)",
            "sender_id": 2112,
            "sender_realm_str": "recurse",
            "stream_id": 27683,
            "subject": "relational design to denormalized",
            "submessages": [],
            "timestamp": 1477402788,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/a04b9dcd66595ebe5cdaa7a28411daae?d=identicon&version=1",
            "client": "website",
            "content": "<p><a href=\"/user_uploads/13/2UO7PUT8RJ2rT-LdHDronxkW/example\" target=\"_blank\" title=\"example\">example</a> </p>",
            "content_type": "text/html",
            "display_recipient": "sql",
            "flags": [
                "read",
                "historical"
            ],
            "id": 102644833,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 43311,
            "sender_email": "tom@buchok.com",
            "sender_full_name": "Tom Buchok (S'13)",
            "sender_id": 2112,
            "sender_realm_str": "recurse",
            "stream_id": 27683,
            "subject": "relational design to denormalized",
            "submessages": [],
            "timestamp": 1477402948,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/a04b9dcd66595ebe5cdaa7a28411daae?d=identicon&version=1",
            "client": "website",
            "content": "<p>that's a SQL Lite database.  you'd run the following for public documents:</p>\n<p><code>SELECT documents.name, owners.public FROM documents JOIN owners ON documents.owner_id = owners.rowid WHERE public = 1;</code></p>",
            "content_type": "text/html",
            "display_recipient": "sql",
            "flags": [
                "read",
                "historical"
            ],
            "id": 102644835,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 43311,
            "sender_email": "tom@buchok.com",
            "sender_full_name": "Tom Buchok (S'13)",
            "sender_id": 2112,
            "sender_realm_str": "recurse",
            "stream_id": 27683,
            "subject": "relational design to denormalized",
            "submessages": [],
            "timestamp": 1477402978,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/a04b9dcd66595ebe5cdaa7a28411daae?d=identicon&version=1",
            "client": "website",
            "content": "<p>so if you look at the <code>owners</code> table:</p>\n<div class=\"codehilite\"><pre><span></span>sqlite&gt; SELECT * FROM owners;\nname|public\nopen source person|1\nsecret mean person|0\n</pre></div>",
            "content_type": "text/html",
            "display_recipient": "sql",
            "flags": [
                "read",
                "historical"
            ],
            "id": 102644880,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 43311,
            "sender_email": "tom@buchok.com",
            "sender_full_name": "Tom Buchok (S'13)",
            "sender_id": 2112,
            "sender_realm_str": "recurse",
            "stream_id": 27683,
            "subject": "relational design to denormalized",
            "submessages": [],
            "timestamp": 1477403051,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/a04b9dcd66595ebe5cdaa7a28411daae?d=identicon&version=1",
            "client": "website",
            "content": "<p>if secret mean person was auth'd and looking for all documents it could access -- it'd do this:</p>\n<p><code>SELECT documents.name, owners.public FROM documents JOIN owners ON documents.owner_id = owners.rowid WHERE public = 1 OR owners.rowid = 2;</code></p>",
            "content_type": "text/html",
            "display_recipient": "sql",
            "flags": [
                "read",
                "historical"
            ],
            "id": 102644887,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 43311,
            "sender_email": "tom@buchok.com",
            "sender_full_name": "Tom Buchok (S'13)",
            "sender_id": 2112,
            "sender_realm_str": "recurse",
            "stream_id": 27683,
            "subject": "relational design to denormalized",
            "submessages": [],
            "timestamp": 1477403088,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/a04b9dcd66595ebe5cdaa7a28411daae?d=identicon&version=1",
            "client": "website",
            "content": "<p>and the object version of <code>documents</code> is then symmetrical:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"p\">{</span>\n  <span class=\"nx\">documents</span><span class=\"o\">:</span> <span class=\"p\">[</span>\n     <span class=\"p\">{</span> <span class=\"nx\">name</span><span class=\"o\">:</span> <span class=\"s1\">&#39;how to build a website&#39;</span><span class=\"p\">,</span> <span class=\"kr\">public</span><span class=\"o\">:</span> <span class=\"kc\">true</span><span class=\"p\">,</span> <span class=\"nx\">owner_id</span><span class=\"o\">:</span> <span class=\"mi\">1</span> <span class=\"p\">},</span>\n     <span class=\"p\">{</span> <span class=\"nx\">name</span><span class=\"o\">:</span> <span class=\"s1\">&#39;how to swindle people&#39;</span><span class=\"p\">,</span> <span class=\"kr\">public</span><span class=\"o\">:</span> <span class=\"kc\">false</span><span class=\"p\">,</span> <span class=\"nx\">owner_id</span><span class=\"o\">:</span> <span class=\"mi\">2</span> <span class=\"p\">},</span>\n  <span class=\"p\">]</span>\n<span class=\"p\">}</span>\n</pre></div>\n\n\n<p>so you could <code>GET</code> that document in a psuedo-fetch like:</p>\n<div class=\"codehilite\"><pre><span></span>https://database.endpoint/documents?public=true&amp;owner_id=2\n</pre></div>",
            "content_type": "text/html",
            "display_recipient": "sql",
            "flags": [
                "read",
                "historical"
            ],
            "id": 102644946,
            "is_me_message": false,
            "last_edit_timestamp": 1477403261,
            "reactions": [],
            "recipient_id": 43311,
            "sender_email": "tom@buchok.com",
            "sender_full_name": "Tom Buchok (S'13)",
            "sender_id": 2112,
            "sender_realm_str": "recurse",
            "stream_id": 27683,
            "subject": "relational design to denormalized",
            "submessages": [],
            "timestamp": 1477403237,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/a04b9dcd66595ebe5cdaa7a28411daae?d=identicon&version=1",
            "client": "website",
            "content": "<p>totally forgot about SQL Lite -- i also forgot you love that project.</p>",
            "content_type": "text/html",
            "display_recipient": "sql",
            "flags": [
                "read",
                "historical"
            ],
            "id": 102644991,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 43311,
            "sender_email": "tom@buchok.com",
            "sender_full_name": "Tom Buchok (S'13)",
            "sender_id": 2112,
            "sender_realm_str": "recurse",
            "stream_id": 27683,
            "subject": "relational design to denormalized",
            "submessages": [],
            "timestamp": 1477403307,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/799a43673071f234d4cbe95fb84089dc365b67ae?x=x&version=1",
            "client": "website",
            "content": "<p>Hi,</p>",
            "content_type": "text/html",
            "display_recipient": "sql",
            "flags": [
                "read",
                "historical"
            ],
            "id": 103706802,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 43311,
            "sender_email": "aaron.poser@gmail.com",
            "sender_full_name": "Aaron Poser (W1'16)",
            "sender_id": 100317,
            "sender_realm_str": "recurse",
            "stream_id": 27683,
            "subject": "db design",
            "submessages": [],
            "timestamp": 1479737317,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/799a43673071f234d4cbe95fb84089dc365b67ae?x=x&version=1",
            "client": "website",
            "content": "<p>Does anyone have a few to to spend with me on discussing database design? I'm building my first db, though I've used a few and I want to get to know the basics on what to consider and how future proof it a bit. Thanks!</p>",
            "content_type": "text/html",
            "display_recipient": "sql",
            "flags": [
                "read",
                "historical"
            ],
            "id": 103706811,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 43311,
            "sender_email": "aaron.poser@gmail.com",
            "sender_full_name": "Aaron Poser (W1'16)",
            "sender_id": 100317,
            "sender_realm_str": "recurse",
            "stream_id": 27683,
            "subject": "db design",
            "submessages": [],
            "timestamp": 1479737374,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/f2793e7c0de9bb00c6c88c585bc865c5?d=identicon&version=1",
            "client": "website",
            "content": "<p>Hi, If this is still oscillating in your mind, I am happy to talk to you.</p>",
            "content_type": "text/html",
            "display_recipient": "sql",
            "flags": [
                "read",
                "historical"
            ],
            "id": 103717133,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 43311,
            "sender_email": "me@kracekumar.com",
            "sender_full_name": "Kracekumar R (F2'16)",
            "sender_id": 100188,
            "sender_realm_str": "recurse",
            "stream_id": 27683,
            "subject": "db design",
            "submessages": [],
            "timestamp": 1479754960,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/799a43673071f234d4cbe95fb84089dc365b67ae?x=x&version=1",
            "client": "website",
            "content": "<p><span class=\"user-mention\" data-user-email=\"me@kracekumar.com\">@Kracekumar R (F2'16)</span> Thanks! I'm going to keep grinding my gears, but maybe I can chew you ear on my nubism in like an hour?</p>",
            "content_type": "text/html",
            "display_recipient": "sql",
            "flags": [
                "read",
                "historical"
            ],
            "id": 103720504,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 43311,
            "sender_email": "aaron.poser@gmail.com",
            "sender_full_name": "Aaron Poser (W1'16)",
            "sender_id": 100317,
            "sender_realm_str": "recurse",
            "stream_id": 27683,
            "subject": "db design",
            "submessages": [],
            "timestamp": 1479759896,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/f2793e7c0de9bb00c6c88c585bc865c5?d=identicon&version=1",
            "client": "website",
            "content": "<p><span class=\"user-mention\" data-user-email=\"aaron.poser@gmail.com\">@Aaron Poser (W1'16)</span> That time works for me.</p>",
            "content_type": "text/html",
            "display_recipient": "sql",
            "flags": [
                "read",
                "historical"
            ],
            "id": 103720594,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 43311,
            "sender_email": "me@kracekumar.com",
            "sender_full_name": "Kracekumar R (F2'16)",
            "sender_id": 100188,
            "sender_realm_str": "recurse",
            "stream_id": 27683,
            "subject": "db design",
            "submessages": [],
            "timestamp": 1479760026,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/799a43673071f234d4cbe95fb84089dc365b67ae?x=x&version=1",
            "client": "website",
            "content": "<p><span class=\"user-mention\" data-user-email=\"me@kracekumar.com\">@Kracekumar R (F2'16)</span> I'm ready when you are. I'm sitting outside Lovelace in a plaid shirt. </p>",
            "content_type": "text/html",
            "display_recipient": "sql",
            "flags": [
                "read",
                "historical"
            ],
            "id": 103722706,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 43311,
            "sender_email": "aaron.poser@gmail.com",
            "sender_full_name": "Aaron Poser (W1'16)",
            "sender_id": 100317,
            "sender_realm_str": "recurse",
            "stream_id": 27683,
            "subject": "db design",
            "submessages": [],
            "timestamp": 1479763591,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/e6e77919840032b8fd930a06bcfdc3f9?d=identicon&version=1",
            "client": "website",
            "content": "<p>hi!  i am having trouble w/ a simple query; can anyone help? I'm trying to convert 3 separate columns to a date so that I can calculate the age (using datediff) for each person in my table.  any suggestions?</p>",
            "content_type": "text/html",
            "display_recipient": "sql",
            "flags": [
                "read",
                "historical"
            ],
            "id": 107646179,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 43311,
            "sender_email": "charlyetran@gmail.com",
            "sender_full_name": "Charlye Delgado (SP1'17)",
            "sender_id": 100547,
            "sender_realm_str": "recurse",
            "stream_id": 27683,
            "subject": "convert multiple columns to date",
            "submessages": [],
            "timestamp": 1488154225,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/e6e77919840032b8fd930a06bcfdc3f9?d=identicon&version=1",
            "client": "website",
            "content": "<p>i have separate columns for birthyear, birthmonth, birthday and i would like to make a new column in the date YYYY-MM-DD format.</p>",
            "content_type": "text/html",
            "display_recipient": "sql",
            "flags": [
                "read",
                "historical"
            ],
            "id": 107646221,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 43311,
            "sender_email": "charlyetran@gmail.com",
            "sender_full_name": "Charlye Delgado (SP1'17)",
            "sender_id": 100547,
            "sender_realm_str": "recurse",
            "stream_id": 27683,
            "subject": "convert multiple columns to date",
            "submessages": [],
            "timestamp": 1488154324,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/26fa664d693a3fa50e6b1431b777a8d27015fbdc?x=x&version=2",
            "client": "website",
            "content": "<p>are the 3 columns currently varchar? what about <code>SELECT DATE(BIRTHYEAR + \"-\" + BIRTHMONTH + \"-\" BIRTHDAY) AS FULLBIRTHDAY</code></p>",
            "content_type": "text/html",
            "display_recipient": "sql",
            "flags": [
                "read",
                "historical"
            ],
            "id": 107646297,
            "is_me_message": false,
            "last_edit_timestamp": 1488154662,
            "reactions": [],
            "recipient_id": 43311,
            "sender_email": "alecbarrett@gmail.com",
            "sender_full_name": "Alec Barrett (he) (W2'17)",
            "sender_id": 100451,
            "sender_realm_str": "recurse",
            "stream_id": 27683,
            "subject": "convert multiple columns to date",
            "submessages": [],
            "timestamp": 1488154553,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/e6e77919840032b8fd930a06bcfdc3f9?d=identicon&version=1",
            "client": "website",
            "content": "<p><span class=\"user-mention\" data-user-email=\"alex@strugee.net\" data-user-id=\"100461\">@AJ Jordan (W2'17)</span> let me try that!</p>",
            "content_type": "text/html",
            "display_recipient": "sql",
            "flags": [
                "read",
                "historical"
            ],
            "id": 107646353,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 43311,
            "sender_email": "charlyetran@gmail.com",
            "sender_full_name": "Charlye Delgado (SP1'17)",
            "sender_id": 100547,
            "sender_realm_str": "recurse",
            "stream_id": 27683,
            "subject": "convert multiple columns to date",
            "submessages": [],
            "timestamp": 1488154661,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/e6e77919840032b8fd930a06bcfdc3f9?d=identicon&version=1",
            "client": "website",
            "content": "<p><span class=\"user-mention\" data-user-email=\"alex@strugee.net\" data-user-id=\"100461\">@AJ Jordan (W2'17)</span> that's not working.  i'm getting nulls.  the columns are currently strings.</p>",
            "content_type": "text/html",
            "display_recipient": "sql",
            "flags": [
                "read",
                "historical"
            ],
            "id": 107646708,
            "is_me_message": false,
            "reactions": [
                {
                    "emoji_code": "1f606",
                    "emoji_name": "laughing",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "alex@strugee.net",
                        "full_name": "AJ Jordan (he/they) (SP2'17)",
                        "id": 100461
                    },
                    "user_id": 100461
                }
            ],
            "recipient_id": 43311,
            "sender_email": "charlyetran@gmail.com",
            "sender_full_name": "Charlye Delgado (SP1'17)",
            "sender_id": 100547,
            "sender_realm_str": "recurse",
            "stream_id": 27683,
            "subject": "convert multiple columns to date",
            "submessages": [],
            "timestamp": 1488155461,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/8f076e5e03c30a36d598445308926598?d=identicon&version=1",
            "client": "website",
            "content": "<p><span class=\"user-mention\" data-user-email=\"alecbarrett@gmail.com\" data-user-id=\"100451\">@Alec Barrett (W2'17)</span> ^^^</p>",
            "content_type": "text/html",
            "display_recipient": "sql",
            "flags": [
                "read",
                "historical"
            ],
            "id": 107646715,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 43311,
            "sender_email": "alex@strugee.net",
            "sender_full_name": "AJ Jordan (he/they) (SP2'17)",
            "sender_id": 100461,
            "sender_realm_str": "recurse",
            "stream_id": 27683,
            "subject": "convert multiple columns to date",
            "submessages": [],
            "timestamp": 1488155501,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/e6e77919840032b8fd930a06bcfdc3f9?d=identicon&version=1",
            "client": "website",
            "content": "<p><span class=\"user-mention\" data-user-email=\"alex@strugee.net\" data-user-id=\"100461\">@AJ Jordan (W2'17)</span> sorry!</p>",
            "content_type": "text/html",
            "display_recipient": "sql",
            "flags": [
                "read",
                "historical"
            ],
            "id": 107646805,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 43311,
            "sender_email": "charlyetran@gmail.com",
            "sender_full_name": "Charlye Delgado (SP1'17)",
            "sender_id": 100547,
            "sender_realm_str": "recurse",
            "stream_id": 27683,
            "subject": "convert multiple columns to date",
            "submessages": [],
            "timestamp": 1488155679,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/8f076e5e03c30a36d598445308926598?d=identicon&version=1",
            "client": "website",
            "content": "<p>heh, no problem <span class=\"user-mention\" data-user-email=\"charlyetran@gmail.com\" data-user-id=\"100547\">@Charlye Delgado (SP1'17)</span>! I got a good laugh out of it :D</p>",
            "content_type": "text/html",
            "display_recipient": "sql",
            "flags": [
                "read",
                "historical"
            ],
            "id": 107646814,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 43311,
            "sender_email": "alex@strugee.net",
            "sender_full_name": "AJ Jordan (he/they) (SP2'17)",
            "sender_id": 100461,
            "sender_realm_str": "recurse",
            "stream_id": 27683,
            "subject": "convert multiple columns to date",
            "submessages": [],
            "timestamp": 1488155719,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/8f076e5e03c30a36d598445308926598?d=identicon&version=1",
            "client": "website",
            "content": "<p>cheers</p>",
            "content_type": "text/html",
            "display_recipient": "sql",
            "flags": [
                "read",
                "historical"
            ],
            "id": 107646815,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 43311,
            "sender_email": "alex@strugee.net",
            "sender_full_name": "AJ Jordan (he/they) (SP2'17)",
            "sender_id": 100461,
            "sender_realm_str": "recurse",
            "stream_id": 27683,
            "subject": "convert multiple columns to date",
            "submessages": [],
            "timestamp": 1488155726,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/15cc6e65f5cb0faac87d0b88dae865281ba57899?x=x&version=2",
            "client": "desktop app Linux 0.5.1",
            "content": "<p><span class=\"user-mention\" data-user-email=\"charlyetran@gmail.com\" data-user-id=\"100547\">@Charlye Delgado (SP1'17)</span>  which SQL DB are you using? I think the \"+\" is not a string concatenation for every SQL dialect. For Postgres it would be <a href=\"https://www.postgresql.org/docs/current/static/functions-string.html\" target=\"_blank\" title=\"https://www.postgresql.org/docs/current/static/functions-string.html\">||</a> for example</p>",
            "content_type": "text/html",
            "display_recipient": "sql",
            "flags": [
                "read",
                "historical"
            ],
            "id": 107647063,
            "is_me_message": false,
            "last_edit_timestamp": 1488156391,
            "reactions": [],
            "recipient_id": 43311,
            "sender_email": "moritz.neeb@posteo.net",
            "sender_full_name": "Moritz Neeb (he) (SP1'17)",
            "sender_id": 100515,
            "sender_realm_str": "recurse",
            "stream_id": 27683,
            "subject": "convert multiple columns to date",
            "submessages": [],
            "timestamp": 1488156283,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/e6e77919840032b8fd930a06bcfdc3f9?d=identicon&version=1",
            "client": "website",
            "content": "<p><span class=\"user-mention\" data-user-email=\"moritz.neeb@posteo.net\" data-user-id=\"100515\">@Moritz Neeb (SP1'17)</span> i'm actually working in HIVE so its similar to SQL queries.  I think i have to use concat().</p>",
            "content_type": "text/html",
            "display_recipient": "sql",
            "flags": [
                "read",
                "historical"
            ],
            "id": 107647114,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 43311,
            "sender_email": "charlyetran@gmail.com",
            "sender_full_name": "Charlye Delgado (SP1'17)",
            "sender_id": 100547,
            "sender_realm_str": "recurse",
            "stream_id": 27683,
            "subject": "convert multiple columns to date",
            "submessages": [],
            "timestamp": 1488156404,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/26fa664d693a3fa50e6b1431b777a8d27015fbdc?x=x&version=2",
            "client": "website",
            "content": "<p>interesting. never actually used hive before. let us know what syntax ends up working out!</p>",
            "content_type": "text/html",
            "display_recipient": "sql",
            "flags": [
                "read",
                "historical"
            ],
            "id": 107647849,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 43311,
            "sender_email": "alecbarrett@gmail.com",
            "sender_full_name": "Alec Barrett (he) (W2'17)",
            "sender_id": 100451,
            "sender_realm_str": "recurse",
            "stream_id": 27683,
            "subject": "convert multiple columns to date",
            "submessages": [],
            "timestamp": 1488158070,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/e6e77919840032b8fd930a06bcfdc3f9?d=identicon&version=1",
            "client": "website",
            "content": "<p><span class=\"user-mention\" data-user-email=\"alecbarrett@gmail.com\" data-user-id=\"100451\">@Alec Barrett (W2'17)</span> <span class=\"user-mention\" data-user-email=\"moritz.neeb@posteo.net\" data-user-id=\"100515\">@Moritz Neeb (SP1'17)</span> thanks for the suggestions!  i found the magic combo and was able to calculate the birthdate.<br>\nSELECT namefirst,namelast, </p>\n<p>cast((DATEDIFF(current_date(),<br>\n    CONCAT(<br>\n    cast(cast(birthyear as int) as string),<br>\n    \"-\",<br>\n    cast(cast(birthmonth as int) as string),<br>\n    \"-\",<br>\n    cast(cast(birthmonth as int) as string)<br>\n    )<br>\n)/365) as int)<br>\nfrom master;</p>",
            "content_type": "text/html",
            "display_recipient": "sql",
            "flags": [
                "read",
                "historical"
            ],
            "id": 107648707,
            "is_me_message": false,
            "reactions": [
                {
                    "emoji_code": "1f44d",
                    "emoji_name": "+1",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "alecbarrett@gmail.com",
                        "full_name": "Alec Barrett (he) (W2'17)",
                        "id": 100451
                    },
                    "user_id": 100451
                }
            ],
            "recipient_id": 43311,
            "sender_email": "charlyetran@gmail.com",
            "sender_full_name": "Charlye Delgado (SP1'17)",
            "sender_id": 100547,
            "sender_realm_str": "recurse",
            "stream_id": 27683,
            "subject": "convert multiple columns to date",
            "submessages": [],
            "timestamp": 1488160141,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/8756446588cfc2014859f5f1fa68c850?d=identicon&version=1",
            "client": "website",
            "content": "<p><span class=\"user-mention\" data-user-email=\"charlyetran@gmail.com\" data-user-id=\"100547\">@Charlye Delgado (SP1'17)</span> it looks like there is support in Hive for <a href=\"https://cwiki.apache.org/confluence/display/Hive/LanguageManual+Types#LanguageManualTypes-Date/TimeTypes\" target=\"_blank\" title=\"https://cwiki.apache.org/confluence/display/Hive/LanguageManual+Types#LanguageManualTypes-Date/TimeTypes\">time/date data types</a>; if you can change your schema it should make this query easier by not needing to do any string manipulation</p>",
            "content_type": "text/html",
            "display_recipient": "sql",
            "flags": [
                "read",
                "historical"
            ],
            "id": 107673100,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 43311,
            "sender_email": "jason.a.owen@gmail.com",
            "sender_full_name": "Jason Owen (SP2'19)",
            "sender_id": 100450,
            "sender_realm_str": "recurse",
            "stream_id": 27683,
            "subject": "convert multiple columns to date",
            "submessages": [],
            "timestamp": 1488213839,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/e6e77919840032b8fd930a06bcfdc3f9?d=identicon&version=1",
            "client": "website",
            "content": "<p><span class=\"user-mention\" data-user-email=\"jason.a.owen@gmail.com\" data-user-id=\"100450\">@Jason Owen (W2'17)</span> thanks for the tip! i'll look into this for future uploads to HIVE</p>",
            "content_type": "text/html",
            "display_recipient": "sql",
            "flags": [
                "read",
                "historical"
            ],
            "id": 107673191,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 43311,
            "sender_email": "charlyetran@gmail.com",
            "sender_full_name": "Charlye Delgado (SP1'17)",
            "sender_id": 100547,
            "sender_realm_str": "recurse",
            "stream_id": 27683,
            "subject": "convert multiple columns to date",
            "submessages": [],
            "timestamp": 1488213961,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/612c7c2a108d7850c62d1d2293a481aa42855408?x=x&version=2",
            "client": "website",
            "content": "<p>\"what's our smallest biggest cluster?\"<br>\ni asked a question in work chat and then thought people would be unkind about it since i have access to the database so i deleted it and wrote a query</p>\n<div class=\"codehilite\"><pre><span></span>select clusters.name, count(*) from nodes, clusters where nodes.cluster_id = clusters.id group by clusters.name order by count desc;\n</pre></div>\n\n\n<p>i haven't had to write a query in forever, and it's usually super hard for me, but for some reason this one felt natural</p>",
            "content_type": "text/html",
            "display_recipient": "sql",
            "flags": [
                "read",
                "historical"
            ],
            "id": 109625586,
            "is_me_message": false,
            "reactions": [
                {
                    "emoji_code": "1f44d",
                    "emoji_name": "+1",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "jason.a.owen@gmail.com",
                        "full_name": "Jason Owen (SP2'19)",
                        "id": 100450
                    },
                    "user_id": 100450
                },
                {
                    "emoji_code": "1f44d",
                    "emoji_name": "+1",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "botwhytho@gmail.com",
                        "full_name": "Alberto Torres (SP1'17)",
                        "id": 100545
                    },
                    "user_id": 100545
                }
            ],
            "recipient_id": 43311,
            "sender_email": "PLRedmond@gmail.com",
            "sender_full_name": "Patrick Redmond (W'14)",
            "sender_id": 5014,
            "sender_realm_str": "recurse",
            "stream_id": 27683,
            "subject": "can i feel proud of this?",
            "submessages": [],
            "timestamp": 1492224917,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/2a1032f74c12ac6d1c69988bae9ebd2efcd05835?x=x&version=2",
            "client": "website",
            "content": "<p>Not sure whether this is the right channel to ask this question, but I'm looking for suggestions of a good Linux SQL client.</p>\n<p>My requirements are fairly simple:<br>\n- connect to a MySQL database hosted on AWS RDS<br>\n- connect to a PostgreSQL (optional, but nice to have)<br>\n- view and sort records -- I don't need to edit records, nor modify tables/metadata<br>\n- easily installable in Ubuntu, ideally through apt<br>\n- GUI client preferred</p>\n<p>Thanks in advance for any suggestions -- I'd poked around a bit and wasn't having much success with finding something that I could get to install properly.</p>",
            "content_type": "text/html",
            "display_recipient": "sql",
            "flags": [
                "read",
                "historical"
            ],
            "id": 115859400,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 43311,
            "sender_email": "seth+recurse@schori.org",
            "sender_full_name": "Seth Schori (he) (SP2'17)",
            "sender_id": 100786,
            "sender_realm_str": "recurse",
            "stream_id": 27683,
            "subject": "Linux SQL client",
            "submessages": [],
            "timestamp": 1505408869,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/840b0106bf4b64a91f222c05f43054358db93f2d?x=x&version=2",
            "client": "website",
            "content": "<p>Hey Seth, how about a MySQL client in VisiData? :D</p>",
            "content_type": "text/html",
            "display_recipient": "sql",
            "flags": [
                "read",
                "historical"
            ],
            "id": 115860235,
            "is_me_message": false,
            "reactions": [
                {
                    "emoji_code": "1f600",
                    "emoji_name": "grinning",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "jaseemabid@gmail.com",
                        "full_name": "Jaseem Abid (he) (S1'17)",
                        "id": 101128
                    },
                    "user_id": 101128
                },
                {
                    "emoji_code": "1f4ca",
                    "emoji_name": "bar_chart",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "hello@kate.io",
                        "full_name": "Kate Murphy (she) (W1'17)",
                        "id": 2867
                    },
                    "user_id": 2867
                },
                {
                    "emoji_code": "1f600",
                    "emoji_name": "grinning",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "hello@kate.io",
                        "full_name": "Kate Murphy (she) (W1'17)",
                        "id": 2867
                    },
                    "user_id": 2867
                },
                {
                    "emoji_code": "1f600",
                    "emoji_name": "grinning",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "carl.douglas@gmail.com",
                        "full_name": "Carl Douglas (S1'17)",
                        "id": 101092
                    },
                    "user_id": 101092
                },
                {
                    "emoji_code": "1f600",
                    "emoji_name": "grinning",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "seth+recurse@schori.org",
                        "full_name": "Seth Schori (he) (SP2'17)",
                        "id": 100786
                    },
                    "user_id": 100786
                },
                {
                    "emoji_code": "1f914",
                    "emoji_name": "thinking_face",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "seth+recurse@schori.org",
                        "full_name": "Seth Schori (he) (SP2'17)",
                        "id": 100786
                    },
                    "user_id": 100786
                },
                {
                    "emoji_code": "1f4ca",
                    "emoji_name": "bar_chart",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "james@recurse.com",
                        "full_name": "James J. Porter (he) (S'13)",
                        "id": 2113
                    },
                    "user_id": 2113
                },
                {
                    "emoji_code": "1f600",
                    "emoji_name": "grinning",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "james@recurse.com",
                        "full_name": "James J. Porter (he) (S'13)",
                        "id": 2113
                    },
                    "user_id": 2113
                }
            ],
            "recipient_id": 43311,
            "sender_email": "code@saul.pw",
            "sender_full_name": "Saul Pwanson (SP2'17)",
            "sender_id": 100791,
            "sender_realm_str": "recurse",
            "stream_id": 27683,
            "subject": "Linux SQL client",
            "submessages": [],
            "timestamp": 1505410025,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/2a1032f74c12ac6d1c69988bae9ebd2efcd05835?x=x&version=2",
            "client": "website",
            "content": "<p>Hey <span class=\"user-mention\" data-user-email=\"code@saul.pw\" data-user-id=\"100791\">@Saul Pwanson (SP2'17)</span>, does VisiData already connect to MySQL or would I have to build the client first?</p>",
            "content_type": "text/html",
            "display_recipient": "sql",
            "flags": [
                "read",
                "historical"
            ],
            "id": 115865663,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 43311,
            "sender_email": "seth+recurse@schori.org",
            "sender_full_name": "Seth Schori (he) (SP2'17)",
            "sender_id": 100786,
            "sender_realm_str": "recurse",
            "stream_id": 27683,
            "subject": "Linux SQL client",
            "submessages": [],
            "timestamp": 1505418112,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/840b0106bf4b64a91f222c05f43054358db93f2d?x=x&version=2",
            "client": "website",
            "content": "<p><span class=\"user-mention\" data-user-email=\"seth+recurse@schori.org\" data-user-id=\"100786\">@Seth Schori (SP2'17)</span> The client would have to be built, but there's already a <a href=\"https://github.com/saulpw/visidata/blob/develop/visidata/loaders/sqlite.py\" target=\"_blank\" title=\"https://github.com/saulpw/visidata/blob/develop/visidata/loaders/sqlite.py\">sqlite loader</a> which is about 50 lines of code.  I'd love for VisiData to have basic MySQL and Postgres support though, and it shouldn't take more than a couple hours to get basic functionality up and working.  The only caveat is that the current loader architecture just does a <code>SELECT * FROM table</code> and so it won't be great for attaching to a large database (100k rows is fine though).  I want to improve that architecture though and this might be a great chance/excuse to do so!</p>",
            "content_type": "text/html",
            "display_recipient": "sql",
            "flags": [
                "read",
                "historical"
            ],
            "id": 115865982,
            "is_me_message": false,
            "reactions": [
                {
                    "emoji_code": "1f44d",
                    "emoji_name": "thumbs_up",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "seth+recurse@schori.org",
                        "full_name": "Seth Schori (he) (SP2'17)",
                        "id": 100786
                    },
                    "user_id": 100786
                }
            ],
            "recipient_id": 43311,
            "sender_email": "code@saul.pw",
            "sender_full_name": "Saul Pwanson (SP2'17)",
            "sender_id": 100791,
            "sender_realm_str": "recurse",
            "stream_id": 27683,
            "subject": "Linux SQL client",
            "submessages": [],
            "timestamp": 1505418610,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/2a1032f74c12ac6d1c69988bae9ebd2efcd05835?x=x&version=2",
            "client": "website",
            "content": "<p>Thanks for the back story <span class=\"user-mention\" data-user-email=\"code@saul.pw\" data-user-id=\"100791\">@Saul Pwanson (SP2'17)</span>. This sounds like it could be an interesting project if I was at RC now. Unfortunately, I just need a quick solution because this is a small part of some testing that I need to do for the main project I'm working on.</p>\n<p>If anyone else reads this and gets inspired to make a MySQL/Postgres client for VisiData that would be most excellent!</p>",
            "content_type": "text/html",
            "display_recipient": "sql",
            "flags": [
                "read",
                "historical"
            ],
            "id": 115867016,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 43311,
            "sender_email": "seth+recurse@schori.org",
            "sender_full_name": "Seth Schori (he) (SP2'17)",
            "sender_id": 100786,
            "sender_realm_str": "recurse",
            "stream_id": 27683,
            "subject": "Linux SQL client",
            "submessages": [],
            "timestamp": 1505420389,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/c81c482e643f5be47a556e309be8be72?d=identicon&version=1",
            "client": "website",
            "content": "<p>Hi SQL stream!  I am a newbie preparing to do an SQL take home assignment. I was wondering if there was anyone in the NYC area who might be willing to get together tomorrow (Saturday) afternoon and show me a few tricks and answer a few questions. I've been looking for good online resources (and would welcome recs if you have any), but there are some things I'd like to talk over with a human.</p>",
            "content_type": "text/html",
            "display_recipient": "sql",
            "flags": [
                "read",
                "historical"
            ],
            "id": 120377598,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 43311,
            "sender_email": "elly.kuhlman@gmail.com",
            "sender_full_name": "Elly Kuhlman (F1'17)",
            "sender_id": 101697,
            "sender_realm_str": "recurse",
            "stream_id": 27683,
            "subject": "SQL Beginner",
            "submessages": [],
            "timestamp": 1514556478,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/47cdb42d5b80601f2957b6bbf20a52102fd6a013?x=x&version=2",
            "client": "website",
            "content": "<p>I'll be at RC tomorrow afternoon and would be happy to answer questions</p>",
            "content_type": "text/html",
            "display_recipient": "sql",
            "flags": [
                "read",
                "historical"
            ],
            "id": 120380523,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 43311,
            "sender_email": "\"#!$%&'*+-/=?^_`{}|~\"@tomyumcorp.com",
            "sender_full_name": "Cameron Finucane (they) (SP1'18)",
            "sender_id": 103055,
            "sender_realm_str": "recurse",
            "stream_id": 27683,
            "subject": "SQL Beginner",
            "submessages": [],
            "timestamp": 1514563018,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/e30b9e7d531d60960da4c58b24cf7e7c5aff03f0?x=x&version=5",
            "client": "ZulipElectron",
            "content": "<p>I'm not in NYC anymore but it might be good to scan through the <a href=\"https://recurse.zulipchat.com/#narrow/stream/databases/subject/SQL.20and.20DB.20basics.20study.20group\" target=\"_blank\" title=\"https://recurse.zulipchat.com/#narrow/stream/databases/subject/SQL.20and.20DB.20basics.20study.20group\">SQL study group</a> topic as we posted many links in there last batch.</p>",
            "content_type": "text/html",
            "display_recipient": "sql",
            "flags": [
                "read",
                "historical"
            ],
            "id": 120381386,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 43311,
            "sender_email": "pete@peterlyons.com",
            "sender_full_name": "Peter Lyons (he) (W1'17)",
            "sender_id": 103052,
            "sender_realm_str": "recurse",
            "stream_id": 27683,
            "subject": "SQL Beginner",
            "submessages": [],
            "timestamp": 1514564852,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/672c1f0cf0a13ae7b227632c0d3e6ea4?d=identicon&version=1",
            "client": "website",
            "content": "<p>Any folks in the space who are proficient in SQL and might be able to talk through a tricky query?</p>",
            "content_type": "text/html",
            "display_recipient": "sql",
            "flags": [
                "read",
                "historical"
            ],
            "id": 120835489,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 43311,
            "sender_email": "ian.j.darrow@gmail.com",
            "sender_full_name": "Ian Darrow (he) (W2'18)",
            "sender_id": 105155,
            "sender_realm_str": "recurse",
            "stream_id": 27683,
            "subject": "Help with tricky query",
            "submessages": [],
            "timestamp": 1515523137,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/b6389a3870b2757624fefd85d08b75b08f6dc815?x=x&version=2",
            "client": "website",
            "content": "<p>I might be able to</p>",
            "content_type": "text/html",
            "display_recipient": "sql",
            "flags": [
                "read",
                "historical"
            ],
            "id": 120835628,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 43311,
            "sender_email": "robert@schuessler.org",
            "sender_full_name": "Robert Schuessler (W1'17)",
            "sender_id": 103047,
            "sender_realm_str": "recurse",
            "stream_id": 27683,
            "subject": "Help with tricky query",
            "submessages": [],
            "timestamp": 1515523331,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/672c1f0cf0a13ae7b227632c0d3e6ea4?d=identicon&version=1",
            "client": "website",
            "content": "<p>He was indeed, with ease \u2013\u00a0thanks, <span class=\"user-mention\" data-user-email=\"robert@schuessler.org\" data-user-id=\"103047\">@Robert Schuessler (W1'17)</span></p>",
            "content_type": "text/html",
            "display_recipient": "sql",
            "flags": [
                "read",
                "historical"
            ],
            "id": 120836574,
            "is_me_message": false,
            "reactions": [
                {
                    "emoji_code": "1f389",
                    "emoji_name": "tada",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "csbobbe@gmail.com",
                        "full_name": "Chris Bobbe (he) (S2'17)",
                        "id": 101327
                    },
                    "user_id": 101327
                },
                {
                    "emoji_code": "1f389",
                    "emoji_name": "tada",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "jason.a.owen@gmail.com",
                        "full_name": "Jason Owen (SP2'19)",
                        "id": 100450
                    },
                    "user_id": 100450
                }
            ],
            "recipient_id": 43311,
            "sender_email": "ian.j.darrow@gmail.com",
            "sender_full_name": "Ian Darrow (he) (W2'18)",
            "sender_id": 105155,
            "sender_realm_str": "recurse",
            "stream_id": 27683,
            "subject": "Help with tricky query",
            "submessages": [],
            "timestamp": 1515524699,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/ab772058030721ef1c85f4d7692609dc?d=identicon&version=1",
            "client": "website",
            "content": "<p>Sorry for bringing back this old thread, but I think this resource can help anyone with the same question, is a set of questions and exercises to practice sql with a real database and had really good explanations.</p>\n<p><a href=\"https://pgexercises.com\" target=\"_blank\" title=\"https://pgexercises.com\">https://pgexercises.com</a></p>",
            "content_type": "text/html",
            "display_recipient": "sql",
            "flags": [
                "read",
                "historical"
            ],
            "id": 158658303,
            "is_me_message": false,
            "last_edit_timestamp": 1550272684,
            "reactions": [
                {
                    "emoji_code": "1f44d",
                    "emoji_name": "+1",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "eileenm@gmail.com",
                        "full_name": "Eileen McFarland (she) (SP1'19)",
                        "id": 203637
                    },
                    "user_id": 203637
                },
                {
                    "emoji_code": "1f44d",
                    "emoji_name": "+1",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "recurse@ardent.nebcorp.com",
                        "full_name": "Joe Ardent (he) (SP1'17)",
                        "id": 9097
                    },
                    "user_id": 9097
                }
            ],
            "recipient_id": 43311,
            "sender_email": "hola@michelletorres.mx",
            "sender_full_name": "Michelle Torres (she) (W2'19)",
            "sender_id": 198461,
            "sender_realm_str": "recurse",
            "stream_id": 27683,
            "subject": "fav into tutorial",
            "submessages": [],
            "timestamp": 1550272465,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/8f3e3f13689ac077fe4ae537e33bde345a57cb22?x=x&version=2",
            "client": "website",
            "content": "<p>This was pretty incredible, both in terms of being a pretty decent intro, and also for the dataset and presentation (a database of state executions in the US): <a href=\"https://selectstarsql.com/\" target=\"_blank\" title=\"https://selectstarsql.com/\">https://selectstarsql.com/</a></p>",
            "content_type": "text/html",
            "display_recipient": "sql",
            "flags": [
                "read",
                "historical"
            ],
            "id": 158658527,
            "is_me_message": false,
            "reactions": [
                {
                    "emoji_code": "1f44d",
                    "emoji_name": "+1",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "justin.c.kao@gmail.com",
                        "full_name": "Justin Kao (he) (W1'18)",
                        "id": 134205
                    },
                    "user_id": 134205
                },
                {
                    "emoji_code": "1f44d",
                    "emoji_name": "+1",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "jabronson@gmail.com",
                        "full_name": "Josh Bronson (he) (m1'17)",
                        "id": 910
                    },
                    "user_id": 910
                },
                {
                    "emoji_code": "1f44d",
                    "emoji_name": "+1",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "mattg@leema.org",
                        "full_name": "Matthew Graham (he) (F1'18)",
                        "id": 125276
                    },
                    "user_id": 125276
                },
                {
                    "emoji_code": "1f44d",
                    "emoji_name": "+1",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "aatigar@gmail.com",
                        "full_name": "Adam Avery Tigar (he) (F2'18)",
                        "id": 130218
                    },
                    "user_id": 130218
                },
                {
                    "emoji_code": "1f44d",
                    "emoji_name": "+1",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "hola@michelletorres.mx",
                        "full_name": "Michelle Torres (she) (W2'19)",
                        "id": 198461
                    },
                    "user_id": 198461
                }
            ],
            "recipient_id": 43311,
            "sender_email": "recurse@ardent.nebcorp.com",
            "sender_full_name": "Joe Ardent (he) (SP1'17)",
            "sender_id": 9097,
            "sender_realm_str": "recurse",
            "stream_id": 27683,
            "subject": "fav into tutorial",
            "submessages": [],
            "timestamp": 1550272694,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/7becb5bc5504919827409f72f5d193c5?d=identicon&version=1",
            "client": "ZulipMobile",
            "content": "<p>^ that excellent resource is made by RC alum <span class=\"user-mention\" data-user-id=\"125310\">@Zi Chong Kao (F1'18)</span></p>",
            "content_type": "text/html",
            "display_recipient": "sql",
            "flags": [
                "read",
                "historical"
            ],
            "id": 158664608,
            "is_me_message": false,
            "reactions": [
                {
                    "emoji_code": "1f44d",
                    "emoji_name": "+1",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "recurse@ardent.nebcorp.com",
                        "full_name": "Joe Ardent (he) (SP1'17)",
                        "id": 9097
                    },
                    "user_id": 9097
                }
            ],
            "recipient_id": 43311,
            "sender_email": "hi@charlietran.com",
            "sender_full_name": "Charlie Tran (he) (F1'18)",
            "sender_id": 124995,
            "sender_realm_str": "recurse",
            "stream_id": 27683,
            "subject": "fav into tutorial",
            "submessages": [],
            "timestamp": 1550278705,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/588ed93f75988b1639513ccd77a2f1930ed980a1?x=x&version=4",
            "client": "ZulipMobile",
            "content": "<p>One of the most poignantly crafted learning experiences I\u2019ve ever come across</p>",
            "content_type": "text/html",
            "display_recipient": "sql",
            "flags": [
                "read",
                "historical"
            ],
            "id": 164599088,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 43311,
            "sender_email": "jabronson@gmail.com",
            "sender_full_name": "Josh Bronson (he) (m1'17)",
            "sender_id": 910,
            "sender_realm_str": "recurse",
            "stream_id": 27683,
            "subject": "fav into tutorial",
            "submessages": [],
            "timestamp": 1556684708,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/0aac726e8ce27b55809824e7f6de77e7?d=identicon&version=1",
            "client": "website",
            "content": "<p>Because I have to vent somewhere.</p>\n<p>Guesses on what this will produce, in your database of choice:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"k\">create</span> <span class=\"k\">table</span> <span class=\"n\">foo</span><span class=\"p\">(</span><span class=\"n\">a</span> <span class=\"nb\">integer</span><span class=\"p\">,</span> <span class=\"n\">b</span> <span class=\"nb\">integer</span><span class=\"p\">);</span>\n<span class=\"k\">insert</span> <span class=\"k\">into</span> <span class=\"n\">foo</span> <span class=\"k\">values</span> <span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">2</span><span class=\"p\">),</span> <span class=\"p\">(</span><span class=\"mi\">3</span><span class=\"p\">,</span><span class=\"mi\">4</span><span class=\"p\">);</span>\n<span class=\"k\">create</span> <span class=\"k\">table</span> <span class=\"n\">bar</span><span class=\"p\">(</span><span class=\"n\">a</span> <span class=\"nb\">integer</span><span class=\"p\">,</span> <span class=\"n\">b</span> <span class=\"nb\">integer</span><span class=\"p\">);</span>\n<span class=\"k\">insert</span> <span class=\"k\">into</span> <span class=\"n\">bar</span> <span class=\"k\">values</span> <span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"o\">-</span><span class=\"mi\">2</span><span class=\"p\">),</span> <span class=\"p\">(</span><span class=\"o\">-</span><span class=\"mi\">3</span><span class=\"p\">,</span><span class=\"o\">-</span><span class=\"mi\">4</span><span class=\"p\">);</span>\n<span class=\"k\">select</span> <span class=\"o\">*</span> <span class=\"k\">from</span> <span class=\"n\">foo</span> <span class=\"k\">full</span> <span class=\"k\">outer</span> <span class=\"k\">join</span> <span class=\"n\">bar</span> <span class=\"k\">using</span> <span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">);</span>\n<span class=\"k\">select</span> <span class=\"n\">a</span> <span class=\"k\">from</span> <span class=\"n\">foo</span> <span class=\"k\">full</span> <span class=\"k\">outer</span> <span class=\"k\">join</span> <span class=\"n\">bar</span> <span class=\"k\">using</span> <span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">);</span>\n<span class=\"k\">select</span> <span class=\"n\">foo</span><span class=\"p\">.</span><span class=\"n\">a</span> <span class=\"k\">from</span> <span class=\"n\">foo</span> <span class=\"k\">full</span> <span class=\"k\">outer</span> <span class=\"k\">join</span> <span class=\"n\">bar</span> <span class=\"k\">using</span> <span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">);</span>\n<span class=\"k\">select</span> <span class=\"n\">bar</span><span class=\"p\">.</span><span class=\"n\">a</span> <span class=\"k\">from</span> <span class=\"n\">foo</span> <span class=\"k\">full</span> <span class=\"k\">outer</span> <span class=\"k\">join</span> <span class=\"n\">bar</span> <span class=\"k\">using</span> <span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">);</span>\n</pre></div>",
            "content_type": "text/html",
            "display_recipient": "sql",
            "flags": [
                "read",
                "historical"
            ],
            "id": 168515916,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 43311,
            "sender_email": "jamie@scattered-thoughts.net",
            "sender_full_name": "Jamie Brandon (he) (W1'20)",
            "sender_id": 863,
            "sender_realm_str": "recurse",
            "stream_id": 27683,
            "subject": "sql is insane",
            "submessages": [],
            "timestamp": 1560957292,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/21b9cce736cbbe8e0761bbb33863c7d3112d0136?x=x&version=2",
            "client": "website",
            "content": "<p>For readers, here's the output:</p>\n<div class=\"codehilite\"><pre><span></span># select * from foo full outer join bar using (a);\n a  | b | b\n----+---+----\n -3 |   | -4\n  1 | 2 | -2\n  3 | 4 |\n\n\n# select a from foo full outer join bar using (a);\n a\n----\n -3\n  1\n  3\n\n# select foo.a from foo full outer join bar using (a);\n a\n---\n\n 1\n 3\n\n\n# select bar.a from foo full outer join bar using (a);\n a\n----\n -3\n\n  1\n</pre></div>\n\n\n<p>The confusing bit is that selecting <code>foo.a</code> is different than selecting just <code>a</code>. This is due to the specific behavior of <a href=\"https://www.postgresql.org/docs/current/queries-table-expressions.html\" target=\"_blank\" title=\"https://www.postgresql.org/docs/current/queries-table-expressions.html\">using</a>:</p>\n<blockquote>\n<p>the output of JOIN USING suppresses redundant columns: there is no need to print both of the matched columns, since they must have equal values.</p>\n</blockquote>\n<p>(The last bit about they must have equal values is not true when there's a full outer join. I don't know if this is a typo or design mistake.)</p>\n<p>The behavior where it coalesces the two <code>a</code> columns together is a bit weird. Personally, I've never used <code>using</code>. If you rewrite the same query without <code>using</code>, you get:</p>\n<div class=\"codehilite\"><pre><span></span># select * from foo full outer join bar on foo.a = bar.a;\n a | b | a  | b\n---+---+----+----\n   |   | -3 | -4\n 1 | 2 |  1 | -2\n 3 | 4 |    |\n\n# select a from foo full outer join bar on foo.a = bar.a;\nERROR:  column reference &quot;a&quot; is ambiguous\n</pre></div>\n\n\n<p>which is more intuitive behavior.</p>",
            "content_type": "text/html",
            "display_recipient": "sql",
            "flags": [
                "read",
                "historical"
            ],
            "id": 168531387,
            "is_me_message": false,
            "last_edit_timestamp": 1560968140,
            "reactions": [],
            "recipient_id": 43311,
            "sender_email": "michaelmalis2@gmail.com",
            "sender_full_name": "Michael Malis (SP2'19)",
            "sender_id": 8099,
            "sender_realm_str": "recurse",
            "stream_id": 27683,
            "subject": "sql is insane",
            "submessages": [],
            "timestamp": 1560968006,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/0aac726e8ce27b55809824e7f6de77e7?d=identicon&version=1",
            "client": "website",
            "content": "<p>The coalesce is in the ANSI spec. But the spec also says that <code>foo.a</code> and <code>bar.a</code> shouldn't be in scope, so <img alt=\":shruggies:\" class=\"emoji\" src=\"https://zulip-avatars.s3.amazonaws.com/13/emoji/images/1179.png\" title=\"shruggies\"></p>",
            "content_type": "text/html",
            "display_recipient": "sql",
            "flags": [
                "read",
                "historical"
            ],
            "id": 168536094,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 43311,
            "sender_email": "jamie@scattered-thoughts.net",
            "sender_full_name": "Jamie Brandon (he) (W1'20)",
            "sender_id": 863,
            "sender_realm_str": "recurse",
            "stream_id": 27683,
            "subject": "sql is insane",
            "submessages": [],
            "timestamp": 1560970911,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/0aac726e8ce27b55809824e7f6de77e7?d=identicon&version=1",
            "client": "website",
            "content": "<p>Some more:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"k\">create</span> <span class=\"k\">table</span> <span class=\"n\">foo</span> <span class=\"p\">(</span><span class=\"n\">a</span> <span class=\"nb\">integer</span><span class=\"p\">);</span>\n<span class=\"k\">select</span> <span class=\"k\">count</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">)</span> <span class=\"k\">from</span> <span class=\"n\">foo</span><span class=\"p\">;</span>\n<span class=\"k\">select</span> <span class=\"k\">count</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">)</span> <span class=\"k\">from</span> <span class=\"n\">foo</span> <span class=\"k\">group</span> <span class=\"k\">by</span> <span class=\"mi\">1</span><span class=\"p\">;</span>\n<span class=\"k\">select</span> <span class=\"k\">count</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">)</span> <span class=\"k\">from</span> <span class=\"n\">foo</span> <span class=\"k\">group</span> <span class=\"k\">by</span> <span class=\"mi\">1</span><span class=\"o\">+</span><span class=\"mi\">1</span><span class=\"p\">;</span>\n\n<span class=\"k\">insert</span> <span class=\"k\">into</span> <span class=\"n\">foo</span> <span class=\"k\">values</span> <span class=\"p\">(</span><span class=\"mi\">37</span><span class=\"p\">),</span> <span class=\"p\">(</span><span class=\"k\">null</span><span class=\"p\">);</span>\n<span class=\"k\">select</span> <span class=\"k\">count</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"p\">)</span> <span class=\"k\">from</span> <span class=\"n\">foo</span><span class=\"p\">;</span>\n<span class=\"k\">select</span> <span class=\"k\">count</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">)</span> <span class=\"k\">from</span> <span class=\"n\">foo</span><span class=\"p\">;</span>\n\n<span class=\"k\">select</span> <span class=\"mi\">1</span> <span class=\"k\">from</span> <span class=\"n\">foo</span><span class=\"p\">;</span>\n<span class=\"k\">select</span> <span class=\"mi\">1</span> <span class=\"k\">from</span> <span class=\"n\">foo</span> <span class=\"k\">having</span> <span class=\"k\">true</span><span class=\"p\">;</span>\n\n<span class=\"k\">select</span> <span class=\"n\">foo</span><span class=\"p\">.</span><span class=\"n\">a</span> <span class=\"k\">from</span> <span class=\"n\">foo</span> <span class=\"k\">group</span> <span class=\"k\">by</span> <span class=\"n\">a</span><span class=\"o\">+</span><span class=\"mi\">1</span><span class=\"p\">;</span>\n<span class=\"k\">select</span> <span class=\"n\">foo</span><span class=\"p\">.</span><span class=\"n\">a</span><span class=\"o\">+</span><span class=\"mi\">1</span> <span class=\"k\">from</span> <span class=\"n\">foo</span> <span class=\"k\">group</span> <span class=\"k\">by</span> <span class=\"n\">a</span><span class=\"o\">+</span><span class=\"mi\">1</span><span class=\"p\">;</span>\n<span class=\"k\">select</span> <span class=\"n\">foo</span><span class=\"p\">.</span><span class=\"n\">a</span><span class=\"o\">+</span><span class=\"mi\">2</span> <span class=\"k\">from</span> <span class=\"n\">foo</span> <span class=\"k\">group</span> <span class=\"k\">by</span> <span class=\"n\">a</span><span class=\"o\">+</span><span class=\"mi\">1</span><span class=\"p\">;</span>\n<span class=\"k\">select</span> <span class=\"n\">foo</span><span class=\"p\">.</span><span class=\"n\">a</span><span class=\"o\">+</span><span class=\"mi\">1</span><span class=\"o\">+</span><span class=\"mi\">1</span> <span class=\"k\">from</span> <span class=\"n\">foo</span> <span class=\"k\">group</span> <span class=\"k\">by</span> <span class=\"n\">a</span><span class=\"o\">+</span><span class=\"mi\">1</span><span class=\"p\">;</span>\n</pre></div>",
            "content_type": "text/html",
            "display_recipient": "sql",
            "flags": [
                "read",
                "historical"
            ],
            "id": 168536957,
            "is_me_message": false,
            "last_edit_timestamp": 1561028085,
            "reactions": [],
            "recipient_id": 43311,
            "sender_email": "jamie@scattered-thoughts.net",
            "sender_full_name": "Jamie Brandon (he) (W1'20)",
            "sender_id": 863,
            "sender_realm_str": "recurse",
            "stream_id": 27683,
            "subject": "sql is insane",
            "submessages": [],
            "timestamp": 1560971537,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/0aac726e8ce27b55809824e7f6de77e7?d=identicon&version=1",
            "client": "website",
            "content": "<p>The last one there is also not in the spec, but it seems common.</p>",
            "content_type": "text/html",
            "display_recipient": "sql",
            "flags": [
                "read",
                "historical"
            ],
            "id": 168536989,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 43311,
            "sender_email": "jamie@scattered-thoughts.net",
            "sender_full_name": "Jamie Brandon (he) (W1'20)",
            "sender_id": 863,
            "sender_realm_str": "recurse",
            "stream_id": 27683,
            "subject": "sql is insane",
            "submessages": [],
            "timestamp": 1560971553,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/e1d8087dadd0d99f440cba10b607b533?d=identicon&version=1",
            "client": "website",
            "content": "<p>Hi All,</p>\n<p>I'm having trouble optimizing what I think is a reasonable / straightforward query in MySQL. After spending a few late nights on this, I thought I'd post my question here in case the solution is obvious to one of you.</p>\n<p>Here are the columns in a simplified version of my table <strong>T</strong>:</p>\n<ul>\n<li><strong>id</strong>: varchar(32) not null (primary key)</li>\n<li><strong>timestamp</strong>: bigint(20) unsigned not null</li>\n<li><strong>family</strong>: char(32) not null</li>\n<li><strong>size</strong>: bigint(20) unsigned not null</li>\n</ul>\n<p>And here's the query that I need to optimize:</p>\n<div class=\"codehilite\"><pre><span></span><code>select\n  id\nfrom\n  T\nwhere\n  family = &#39;some constant&#39;\nand\n  timestamp between T1 and T2\norder by\n  size desc\nlimit\n  5\n</code></pre></div>\n\n\n<p>My table is fairly large (~630M rows) so I'm hoping that an index can do most of the work for me... but I'm having trouble picking the right columns for my index.</p>\n<p>It seems that in order for MySQL to use an index to answer a range query (like what I'm doing w/ the timestamp), that column must be the last column in the index. But then there's the \"order by\", which is on a different column.</p>\n<p>It's not clear to me which one of these columns should be last in my index, so I've tried creating the following indices:</p>\n<ul>\n<li><strong>i1</strong>, on (<strong>family</strong>, <strong>timestamp</strong>, <strong>size</strong>)</li>\n<li><strong>i2</strong>, on (<strong>family</strong>, <strong>size</strong>, <strong>timestamp</strong>)</li>\n</ul>\n<p>... but neither of these seems to help.</p>\n<p>Any idea what I'm doing wrong?</p>\n<p>(BTW I'm running MySQL 8 in Amazon RDS, in case that makes a difference.) </p>\n<p>Thanks in advance for any helpful suggestions you may have!</p>\n<p>Best,<br>\nAlex</p>\n<p>p.s. I hope all of you are safe and healthy, especially those of you in NYC. Hugs.</p>\n<p>p.p.s. If any of you know a great DBA who has lots of experience w/ MySQL in Amazon RDS and is looking to do some consulting, I'd appreciate an intro! Thanks.</p>",
            "content_type": "text/html",
            "display_recipient": "sql",
            "flags": [
                "read",
                "historical"
            ],
            "id": 196724279,
            "is_me_message": false,
            "last_edit_timestamp": 1588822910,
            "reactions": [],
            "recipient_id": 43311,
            "sender_email": "alexwarth@gmail.com",
            "sender_full_name": "Alessandro Warth (m1'18)",
            "sender_id": 105604,
            "sender_realm_str": "recurse",
            "stream_id": 27683,
            "subject": "need help optimizing a \"simple\" query in MySQL",
            "submessages": [],
            "timestamp": 1588822603,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/387835e71cae8ffc38a86624de2c74fe59a06ce5?x=x&version=2",
            "client": "website",
            "content": "<p>sorry you never got an answer... I'm more knowledgeable in postgres, but here's my intuition:</p>\n<ul>\n<li>\n<p>I'm not sure how familiar you are with it, but since you didn't mention it... The way to debug this is by using EXPLAIN a lot. By prepending <code>explain</code>(or even better <code>explain analyze</code>)  on your query, you would see where the DB thinks the bottlenecks are (it's often right), and if it's going to use an index or not. So you can create the candidate indexes, and then run the explain and see how the plan changes. Also with mysql I think you can  add <code>USE INDEX (i1)</code> and <code>USE INDEX(i2)</code> to force it to use the indexes and see how the plans/timings change.</p>\n</li>\n<li>\n<p>I would first try to find the index that speeds up the data fetching, then work on adding the <code>size</code> column to it to speed up the sorting.(Or just keep a separate index for size if you're ok with the extra storage penalty). I would first try <code>(family, timestamp)</code> first and see if that changes the data fetching part of the query plan.</p>\n</li>\n<li>\n<p>If you put <code>size</code> back in the index, you may have to make your index <code>desc</code> on size. Mysql's docs say: \" Descending indexes also make it possible for the optimizer to use multiple-column indexes when the most efficient scan order mixes ascending order for some columns and descending order for others.\" so this may have been why i2 didn't help. <a href=\"https://dev.mysql.com/doc/refman/8.0/en/descending-indexes.html\">https://dev.mysql.com/doc/refman/8.0/en/descending-indexes.html</a><br>\nA quick way to check if this the behaviour tripping you up is to remove the <code>desc</code>after <code>order by size</code>  in your query see if it uses your already created i2.</p>\n</li>\n<li>\n<p>Another option (my guess,, check what the query planner says), is that the DB thinks doing an index scan through <code>size</code> in i2 is not worth it, and so doesn't use it.</p>\n</li>\n<li>\n<p>If mysql has the condition that a range query has to be last column in the index, and it doesn't want to index scan through <code>size</code>, then that might fundamentally contradict your adding size to it, and you might need separate indexes (family, timestamp) and (size).</p>\n</li>\n<li>\n<p>Use The Index Luke is my only resource for reasoning about indexes, here are some of their pages on this: <a href=\"https://use-the-index-luke.com/sql/where-clause/searching-for-ranges/greater-less-between-tuning-sql-access-filter-predicates\">https://use-the-index-luke.com/sql/where-clause/searching-for-ranges/greater-less-between-tuning-sql-access-filter-predicates</a> , and on sorting in multi column indexes: <a href=\"https://use-the-index-luke.com/sql/sorting-grouping/order-by-asc-desc-nulls-last\">https://use-the-index-luke.com/sql/sorting-grouping/order-by-asc-desc-nulls-last</a></p>\n</li>\n</ul>\n<p>Good luck!</p>",
            "content_type": "text/html",
            "display_recipient": "sql",
            "flags": [
                "read",
                "historical"
            ],
            "id": 201031651,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 43311,
            "sender_email": "amedee.daboville@gmail.com",
            "sender_full_name": "Am\u00e9d\u00e9e d'Aboville (they) (W2'20)",
            "sender_id": 256969,
            "sender_realm_str": "recurse",
            "stream_id": 27683,
            "subject": "need help optimizing a \"simple\" query in MySQL",
            "submessages": [],
            "timestamp": 1592321048,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/753274cbd3bb05b5be08f0eb9f095074b75a8b3b?x=x&version=3",
            "client": "website",
            "content": "<p>Hey all, has anybody ever dealt with their database being locked when trying to create a new table? I'm using Python and SQLite, and am getting an error message saying my database is locked when executing \"create table if not exists\"</p>",
            "content_type": "text/html",
            "display_recipient": "sql",
            "flags": [
                "read",
                "historical"
            ],
            "id": 202992881,
            "is_me_message": false,
            "last_edit_timestamp": 1594043949,
            "reactions": [],
            "recipient_id": 43311,
            "sender_email": "joshkn@protonmail.com",
            "sender_full_name": "Josh Kean (he) (F1'19)",
            "sender_id": 234089,
            "sender_realm_str": "recurse",
            "stream_id": 27683,
            "subject": "SQL Database is locked",
            "submessages": [],
            "timestamp": 1594043858,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/7dc1374e8307c45a20af92a81bd15fc1?d=identicon&version=1",
            "client": "website",
            "content": "<p>Could another process or thread be hogging the DB maybe?</p>",
            "content_type": "text/html",
            "display_recipient": "sql",
            "flags": [
                "read",
                "historical"
            ],
            "id": 203014266,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 43311,
            "sender_email": "ivan.savov@gmail.com",
            "sender_full_name": "Ivan Savov (SP2'17)",
            "sender_id": 100772,
            "sender_realm_str": "recurse",
            "stream_id": 27683,
            "subject": "SQL Database is locked",
            "submessages": [],
            "timestamp": 1594054606,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/7dc1374e8307c45a20af92a81bd15fc1?d=identicon&version=1",
            "client": "website",
            "content": "<p>I ran into similar problem recently with a sqlite3 on mac OS laptop. The same code was working for all my colleagues but I kept getting DB locked errors, and I haven't been able to resolve that since. Are you on a mac too?</p>",
            "content_type": "text/html",
            "display_recipient": "sql",
            "flags": [
                "read",
                "historical"
            ],
            "id": 203014458,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 43311,
            "sender_email": "ivan.savov@gmail.com",
            "sender_full_name": "Ivan Savov (SP2'17)",
            "sender_id": 100772,
            "sender_realm_str": "recurse",
            "stream_id": 27683,
            "subject": "SQL Database is locked",
            "submessages": [],
            "timestamp": 1594054708,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/753274cbd3bb05b5be08f0eb9f095074b75a8b3b?x=x&version=3",
            "client": "website",
            "content": "<p>Hey Ivan, I'm on Ubuntu 18.04<br>\nI just solved this error actually! I had 2 functions, one called \"get_states\" and another called \"create_counties\". \"get_states\" was called first to give me a list, but I never closed the connection to the db in \"get_states\" prior to executing \"create_counties\"; \"create_counties\" created a new table.</p>\n<p>I might have some time today to screen share with ya and see if we had a similar issue</p>",
            "content_type": "text/html",
            "display_recipient": "sql",
            "flags": [
                "read",
                "historical"
            ],
            "id": 203017269,
            "is_me_message": false,
            "reactions": [
                {
                    "emoji_code": "1f389",
                    "emoji_name": "tada",
                    "reaction_type": "unicode_emoji",
                    "user": {
                        "email": "ivan.savov@gmail.com",
                        "full_name": "Ivan Savov (SP2'17)",
                        "id": 100772
                    },
                    "user_id": 100772
                }
            ],
            "recipient_id": 43311,
            "sender_email": "joshkn@protonmail.com",
            "sender_full_name": "Josh Kean (he) (F1'19)",
            "sender_id": 234089,
            "sender_realm_str": "recurse",
            "stream_id": 27683,
            "subject": "SQL Database is locked",
            "submessages": [],
            "timestamp": 1594056216,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://secure.gravatar.com/avatar/7dc1374e8307c45a20af92a81bd15fc1?d=identicon&version=1",
            "client": "website",
            "content": "<p>Glad you got it fixed!</p>\n<p>Thx for the offer to scheenshare, but I've given up on debugging the issue on my side. It's deeply nested code in an application I don't work on (I'm on a different team), so I'm letting colleagues figure it out.</p>",
            "content_type": "text/html",
            "display_recipient": "sql",
            "flags": [
                "read",
                "historical"
            ],
            "id": 203023400,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 43311,
            "sender_email": "ivan.savov@gmail.com",
            "sender_full_name": "Ivan Savov (SP2'17)",
            "sender_id": 100772,
            "sender_realm_str": "recurse",
            "stream_id": 27683,
            "subject": "SQL Database is locked",
            "submessages": [],
            "timestamp": 1594059654,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/eaad13845e2df483ebef65495bdd46a7b7a91312?x=x&version=2",
            "client": "website",
            "content": "<p>Hi all,</p>\n<p>At my job at the NYC Census office we had a great consultant who helped us turn a lot of our horrible spreadsheet-based workflows into a repo of python scripts to update a MySQL database running on google cloud. Unfortunately the city is now broke and we weren't able to renew his contract, so now I am the point person. I know I could ping him and he'd SSH in and fix it... but I'd like to actually understand what's going on. Forgive me if I'm heavily overexplaining, I've never worked with SQL before so I'm not sure which information is relevant.</p>\n<p>The situation is: <br>\nEvery day the script runs at 6am and checks the APIs for a few different services we use for updates-- the short version is the data represent contact attempts and their results. Texting and phonecalls. Last week the VAN API was down for a few days so the script failed.  Now that the API is back up I was able to request and receive the data for those dates. Inserted those data into the proper basic tables, which took only a few minutes. The next step is to create some more complex tables, for instance a table with a row for calls made to each neighborhood for each day. This step usually takes a few minutes per table, but yesterday on repeated attempts the script hung on the first query for hours. I also attempted connecting with HeidiSQL and entering the SQL queries manually-- this also hung for an hour before I gave up. I initially thought more new data -&gt; taking longer, but examining the code I find that each day it truncates the old table and rebuilds it from scratch. So if it were simply about the data growing larger, I'd expect the time taken to grow over time, not abruptly go from finishing in 4 minutes to running for 4 hours without completion. Any ideas? Is there something I need to reset, like to free up RAM or close open connections?</p>",
            "content_type": "text/html",
            "display_recipient": "sql",
            "flags": [
                "read",
                "historical"
            ],
            "id": 203846815,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 43311,
            "sender_email": "daniel.r.burton@gmail.com",
            "sender_full_name": "Daniel Burton (he) (W2'19)",
            "sender_id": 158552,
            "sender_realm_str": "recurse",
            "stream_id": 27683,
            "subject": "insert into table running... forever",
            "submessages": [],
            "timestamp": 1594740224,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/eaad13845e2df483ebef65495bdd46a7b7a91312?x=x&version=2",
            "client": "website",
            "content": "<p>update: I -think- I found the issue. I killed the python processes but the SQL processes were still running.</p>",
            "content_type": "text/html",
            "display_recipient": "sql",
            "flags": [
                "read",
                "historical"
            ],
            "id": 203852941,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 43311,
            "sender_email": "daniel.r.burton@gmail.com",
            "sender_full_name": "Daniel Burton (he) (W2'19)",
            "sender_id": 158552,
            "sender_realm_str": "recurse",
            "stream_id": 27683,
            "subject": "insert into table running... forever",
            "submessages": [],
            "timestamp": 1594743154,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/70201dad8f30b376c8e9f8ede010e43b63266850?x=x&version=6",
            "client": "website",
            "content": "<p>.</p>",
            "content_type": "text/html",
            "display_recipient": "sql",
            "flags": [
                "read",
                "historical"
            ],
            "id": 203897449,
            "is_me_message": false,
            "last_edit_timestamp": 1605721903,
            "reactions": [],
            "recipient_id": 43311,
            "sender_email": "stanley@zheng.nyc",
            "sender_full_name": "Stanley Zheng (they) (W1'19)",
            "sender_id": 100315,
            "sender_realm_str": "recurse",
            "stream_id": 27683,
            "subject": "insert into table running... forever",
            "submessages": [],
            "timestamp": 1594766751,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/d16cd71b27dfd2af0f84e16276c00b61314db772?x=x&version=3",
            "client": "ZulipElectron",
            "content": "<p>the VAN API like NGPVAN? the VAN API is the worst</p>",
            "content_type": "text/html",
            "display_recipient": "sql",
            "flags": [
                "read",
                "historical"
            ],
            "id": 203908749,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 43311,
            "sender_email": "to@akiva.email",
            "sender_full_name": "Akiva Leffert (he) (W2'19)",
            "sender_id": 198444,
            "sender_realm_str": "recurse",
            "stream_id": 27683,
            "subject": "insert into table running... forever",
            "submessages": [],
            "timestamp": 1594777280,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/eaad13845e2df483ebef65495bdd46a7b7a91312?x=x&version=2",
            "client": "website",
            "content": "<p>YUP the NGP VAN API has been torturing me for months <span class=\"user-mention\" data-user-id=\"198444\">@Akiva Leffert (he) (W2'19)</span> ! It makes it even worse that we're using it for something it's not really built for so we're using lots of custom fields etc.  <span class=\"user-mention\" data-user-id=\"100315\">@Stanley Zheng (they) (W1'19)</span> yes, I'm not sure how I had started all these simultaneous processes but they were blocking each other</p>",
            "content_type": "text/html",
            "display_recipient": "sql",
            "flags": [
                "read",
                "historical"
            ],
            "id": 204093460,
            "is_me_message": false,
            "last_edit_timestamp": 1594910843,
            "reactions": [],
            "recipient_id": 43311,
            "sender_email": "daniel.r.burton@gmail.com",
            "sender_full_name": "Daniel Burton (he) (W2'19)",
            "sender_id": 158552,
            "sender_realm_str": "recurse",
            "stream_id": 27683,
            "subject": "insert into table running... forever",
            "submessages": [],
            "timestamp": 1594910774,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/d16cd71b27dfd2af0f84e16276c00b61314db772?x=x&version=3",
            "client": "ZulipElectron",
            "content": "<p>ughhh, that's horrifying. Hillary for America built multiple services just to route around the fact that the API is slow garbage that goes down all the time</p>",
            "content_type": "text/html",
            "display_recipient": "sql",
            "flags": [
                "read",
                "historical"
            ],
            "id": 204093783,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 43311,
            "sender_email": "to@akiva.email",
            "sender_full_name": "Akiva Leffert (he) (W2'19)",
            "sender_id": 198444,
            "sender_realm_str": "recurse",
            "stream_id": 27683,
            "subject": "insert into table running... forever",
            "submessages": [],
            "timestamp": 1594910923,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/70201dad8f30b376c8e9f8ede010e43b63266850?x=x&version=6",
            "client": "website",
            "content": "<p>.</p>",
            "content_type": "text/html",
            "display_recipient": "sql",
            "flags": [
                "read",
                "historical"
            ],
            "id": 204097879,
            "is_me_message": false,
            "last_edit_timestamp": 1605721903,
            "reactions": [],
            "recipient_id": 43311,
            "sender_email": "stanley@zheng.nyc",
            "sender_full_name": "Stanley Zheng (they) (W1'19)",
            "sender_id": 100315,
            "sender_realm_str": "recurse",
            "stream_id": 27683,
            "subject": "insert into table running... forever",
            "submessages": [],
            "timestamp": 1594912577,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/eaad13845e2df483ebef65495bdd46a7b7a91312?x=x&version=2",
            "client": "website",
            "content": "<p><span class=\"user-mention\" data-user-id=\"100315\">@Stanley Zheng (they) (W1'19)</span> crontab just runs the python script once a day. I am looking at running it with <code>timeout -k 2h</code> so it won't just let itself run forever... is there a way to tell crontab to retry if it times out? Also considering building it into the python script somehow, it's a small number of complex queries that take 6 hours instead of 10 minutes sometimes (for unclear reasons). So maybe only that section needs a timeout/retry, not the initial part</p>",
            "content_type": "text/html",
            "display_recipient": "sql",
            "flags": [
                "read",
                "historical"
            ],
            "id": 204567943,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 43311,
            "sender_email": "daniel.r.burton@gmail.com",
            "sender_full_name": "Daniel Burton (he) (W2'19)",
            "sender_id": 158552,
            "sender_realm_str": "recurse",
            "stream_id": 27683,
            "subject": "insert into table running... forever",
            "submessages": [],
            "timestamp": 1595347797,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/eaad13845e2df483ebef65495bdd46a7b7a91312?x=x&version=2",
            "client": "website",
            "content": "<p>looks like I can do something like <br>\n<code>while timeout -k 45m -- (the python script); [$? = 124]; do echo \"timed out, retrying...\" &gt;&gt; (the log file); done;</code>. So if it doesn't complete in 45 minutes it will stop and retry.</p>",
            "content_type": "text/html",
            "display_recipient": "sql",
            "flags": [
                "read",
                "historical"
            ],
            "id": 204579470,
            "is_me_message": false,
            "last_edit_timestamp": 1595363876,
            "reactions": [],
            "recipient_id": 43311,
            "sender_email": "daniel.r.burton@gmail.com",
            "sender_full_name": "Daniel Burton (he) (W2'19)",
            "sender_id": 158552,
            "sender_realm_str": "recurse",
            "stream_id": 27683,
            "subject": "insert into table running... forever",
            "submessages": [],
            "timestamp": 1595353622,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/eaad13845e2df483ebef65495bdd46a7b7a91312?x=x&version=2",
            "client": "website",
            "content": "<p>OK, 1. this gives me a syntax error</p>\n<ol start=\"2\">\n<li>killing the python script does not solve the problem, because the SQL query process is still running, which is the thing that ends up blocking subsequent queries</li>\n</ol>",
            "content_type": "text/html",
            "display_recipient": "sql",
            "flags": [
                "read",
                "historical"
            ],
            "id": 204595349,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 43311,
            "sender_email": "daniel.r.burton@gmail.com",
            "sender_full_name": "Daniel Burton (he) (W2'19)",
            "sender_id": 158552,
            "sender_realm_str": "recurse",
            "stream_id": 27683,
            "subject": "insert into table running... forever",
            "submessages": [],
            "timestamp": 1595361246,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/eaad13845e2df483ebef65495bdd46a7b7a91312?x=x&version=2",
            "client": "website",
            "content": "<p>Wrote a new python function that checks whether another process from that user (the script has its own \"user\") is running, and if so, ends it. Still not sure where the old process is coming from though.</p>",
            "content_type": "text/html",
            "display_recipient": "sql",
            "flags": [
                "read",
                "historical"
            ],
            "id": 204681556,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 43311,
            "sender_email": "daniel.r.burton@gmail.com",
            "sender_full_name": "Daniel Burton (he) (W2'19)",
            "sender_id": 158552,
            "sender_realm_str": "recurse",
            "stream_id": 27683,
            "subject": "insert into table running... forever",
            "submessages": [],
            "timestamp": 1595431796,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/cb53cab6d39356a824254196194524a4fb9e18f5?x=x&version=2",
            "client": "website",
            "content": "<p><span class=\"user-mention\" data-user-id=\"158552\">@Daniel Burton (he) (W2'19)</span> How did it go after that? Did the cron jobs become more reliable?</p>",
            "content_type": "text/html",
            "display_recipient": "sql",
            "flags": [
                "read",
                "historical"
            ],
            "id": 207003033,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 43311,
            "sender_email": "anna.leuchtenberger@gmail.com",
            "sender_full_name": "Anna Dunne Leuchtenberger (she/they) (F2'19)",
            "sender_id": 226663,
            "sender_realm_str": "recurse",
            "stream_id": 27683,
            "subject": "insert into table running... forever",
            "submessages": [],
            "timestamp": 1597462396,
            "topic_links": [],
            "type": "stream"
        },
        {
            "avatar_url": "https://zulip-avatars.s3.amazonaws.com/13/eaad13845e2df483ebef65495bdd46a7b7a91312?x=x&version=2",
            "client": "website",
            "content": "<p><span class=\"user-mention\" data-user-id=\"226663\">@Anna Dunne Leuchtenberger (she/they) (F2'19)</span>  They seem to be working!  Still unclear why sometimes the query never ends, but now if it's still running it gets ended before the next day's process starts.</p>",
            "content_type": "text/html",
            "display_recipient": "sql",
            "flags": [
                "read",
                "historical"
            ],
            "id": 207458708,
            "is_me_message": false,
            "reactions": [],
            "recipient_id": 43311,
            "sender_email": "daniel.r.burton@gmail.com",
            "sender_full_name": "Daniel Burton (he) (W2'19)",
            "sender_id": 158552,
            "sender_realm_str": "recurse",
            "stream_id": 27683,
            "subject": "insert into table running... forever",
            "submessages": [],
            "timestamp": 1597869349,
            "topic_links": [],
            "type": "stream"
        }
    ],
    "msg": "",
    "result": "success"
}
